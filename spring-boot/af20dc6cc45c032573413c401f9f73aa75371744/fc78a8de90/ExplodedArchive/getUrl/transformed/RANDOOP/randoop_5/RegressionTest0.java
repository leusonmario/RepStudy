import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        java.io.File file0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive(file0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.Class<?> wildcardClass1 = explodedArchive0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("hi!", "hi!", "hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry1 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("", "", (int) (short) 100, "", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("", "exploded archive", 0, "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        java.net.URLStreamHandlerFactory uRLStreamHandlerFactory0 = null;
        java.net.URL.setURLStreamHandlerFactory(uRLStreamHandlerFactory0);
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        java.net.URL uRL0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL2 = new java.net.URL(uRL0, "exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL1 = new java.net.URL("");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("exploded archive", "", (int) (short) 0, "", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("", "exploded archive", (int) 'a', "exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.Class<?> wildcardClass1 = fileEntry0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList2 = explodedArchive0.getNestedArchives(entryFilter1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        boolean boolean3 = fileEntryIterator0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.lang.Class<?> wildcardClass2 = fileItorQueue1.getClass();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.util.Comparator<java.io.File> fileComparator2 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.util.Comparator<java.io.File> fileComparator9 = fileComparator5.thenComparing(fileComparator8);
        fileEntryIterator0.entryComparator = fileComparator5;
        java.io.File file11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<java.io.File> fileItor12 = fileEntryIterator0.listFiles(file11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNotNull(fileComparator9);
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.util.Comparator<java.io.File> fileComparator2 = fileEntryIterator0.entryComparator;
        java.io.File file3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<java.io.File> fileItor4 = fileEntryIterator0.listFiles(file3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator2);
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.util.Comparator<java.io.File> fileComparator2 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.util.Comparator<java.io.File> fileComparator9 = fileComparator5.thenComparing(fileComparator8);
        fileEntryIterator0.entryComparator = fileComparator5;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator12 = fileComparator5.thenComparing((java.util.Comparator<java.io.File>) entryComparator11);
        java.io.File file13 = null;
        java.io.File file14 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int15 = entryComparator11.compare(file13, file14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileComparator12);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL(uRL0, "", uRLStreamHandler2);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        java.io.File file0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive0.getNestedArchives(entryFilter5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL(uRL0, "hi!", uRLStreamHandler2);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        java.net.URL uRL0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL2 = new java.net.URL(uRL0, "hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("", "exploded archive", (int) (short) 1, "exploded archive", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.manifestFile;
        java.io.File file3 = explodedArchive1.manifestFile;
        java.io.File file4 = null;
        java.io.File file5 = explodedArchive1.getManifestFile(file4);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.manifestFile;
        java.io.File file8 = explodedArchive6.manifestFile;
        java.io.File file9 = null;
        java.io.File file10 = explodedArchive6.getManifestFile(file9);
        // The following exception was thrown during execution in test generation
        try {
            int int11 = entryComparator0.compare(file4, file10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("exploded archive", "exploded archive", "hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("", "", (int) (byte) 0, "hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = null;
        explodedArchive0.manifestFile = file2;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator4 = explodedArchive0.spliterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive(file3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator5 = explodedArchive0.spliterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.util.Comparator<java.io.File> fileComparator2 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.util.Comparator<java.io.File> fileComparator9 = fileComparator5.thenComparing(fileComparator8);
        fileEntryIterator0.entryComparator = fileComparator5;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNotNull(fileComparator9);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL(uRL0, "exploded archive", uRLStreamHandler2);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("hi!", "", 1, "exploded archive", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("exploded archive", "", "hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("", "exploded archive", "exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("exploded archive", "hi!", (int) (byte) 1, "exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.util.jar.Manifest manifest4 = explodedArchive0.manifest;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file7 = fileEntry6.getFile();
        java.lang.String str8 = fileEntry6.name;
        java.io.File file9 = null;
        fileEntry6.file = file9;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive11 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        fileEntryIterator3.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator3.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        fileEntryIterator3.root = file28;
        explodedArchive0.manifestFile = file28;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL1 = new java.net.URL("exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("exploded archive", "", "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("hi!", "hi!", (int) '4', "hi!", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.util.Comparator<java.io.File> fileComparator2 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.util.Comparator<java.io.File> fileComparator9 = fileComparator5.thenComparing(fileComparator8);
        fileEntryIterator0.entryComparator = fileComparator5;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator5.thenComparing(fileComparator13);
        java.util.Comparator<java.io.File> fileComparator15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Comparator<java.io.File> fileComparator16 = fileComparator13.thenComparing(fileComparator15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file5);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("", "", (int) (short) 1, "exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        java.net.URL uRL0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL2 = new java.net.URL(uRL0, "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str1 = fileEntry0.name;
        java.lang.String str2 = fileEntry0.name;
        java.lang.Class<?> wildcardClass3 = fileEntry0.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("exploded archive", "", 10, "", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        java.io.File file3 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "exploded archive" + "'", str1, "exploded archive");
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator2.stack;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator2.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        java.util.Comparator<java.io.File> fileComparator11 = fileComparator7.thenComparing(fileComparator10);
        fileEntryIterator2.entryComparator = fileComparator7;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator7.thenComparing(fileComparator15);
        fileEntryIterator0.entryComparator = fileComparator16;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry18 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor6 = explodedArchive0.iterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.io.File file9 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        fileEntryIterator6.current = file14;
        explodedArchive0.root = file14;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file14, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.util.jar.Manifest manifest4 = null;
        explodedArchive0.manifest = manifest4;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator6 = explodedArchive0.spliterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.util.Comparator<java.io.File> fileComparator2 = fileEntryIterator0.entryComparator;
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.manifestFile;
        java.io.File file6 = explodedArchive4.manifestFile;
        java.io.File file7 = null;
        java.io.File file8 = explodedArchive4.getManifestFile(file7);
        fileEntryIterator0.current = file8;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("exploded archive", "exploded archive", (int) (byte) 0, "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        boolean boolean4 = fileEntryIterator0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry5 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.lang.String str4 = explodedArchive0.toString();
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.Archive.Entry entry6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive7 = explodedArchive0.getNestedArchive(entry6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("hi!", "", "exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("hi!", "", "hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        fileEntryIterator3.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator3.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        fileEntryIterator3.root = file28;
        explodedArchive0.manifestFile = file28;
        java.util.jar.Manifest manifest31 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive0.getNestedArchives(entryFilter32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest31);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.name;
        java.io.File file3 = fileEntry0.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        boolean boolean6 = fileEntryIterator4.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.manifestFile;
        java.io.File file9 = explodedArchive7.manifestFile;
        java.io.File file10 = null;
        java.io.File file11 = explodedArchive7.getManifestFile(file10);
        boolean boolean12 = explodedArchive7.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        fileEntryIterator13.recursive = true;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator23.thenComparing(fileComparator26);
        fileEntryIterator18.entryComparator = fileComparator23;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator23.thenComparing(fileComparator31);
        fileEntryIterator13.entryComparator = fileComparator32;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file35 = explodedArchive34.manifestFile;
        java.io.File file36 = explodedArchive34.manifestFile;
        java.io.File file37 = null;
        java.io.File file38 = explodedArchive34.getManifestFile(file37);
        fileEntryIterator13.root = file38;
        explodedArchive7.root = file38;
        java.util.Iterator<java.io.File> fileItor41 = fileEntryIterator4.listFiles(file38);
        fileEntry0.file = file38;
        java.lang.Class<?> wildcardClass43 = fileEntry0.getClass();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor41);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("hi!", "", (int) (short) 100, "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.lang.String str4 = explodedArchive0.toString();
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file37 = fileEntry36.getFile();
        java.lang.String str38 = fileEntry36.getName();
        java.lang.String str39 = fileEntry36.getName();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive40 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        boolean boolean2 = explodedArchive0.recursive;
        java.lang.Class<?> wildcardClass3 = explodedArchive0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "exploded archive" + "'", str1, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("", "hi!", (int) (short) 100, "hi!", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("exploded archive", "", (int) '#', "exploded archive", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("exploded archive", "hi!", (int) (byte) 10, "exploded archive", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.manifestFile;
        java.io.File file4 = explodedArchive2.manifestFile;
        java.io.File file5 = null;
        java.io.File file6 = explodedArchive2.getManifestFile(file5);
        fileEntryIterator0.current = file5;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry8 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("exploded archive", "hi!", "exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator3.entryComparator;
        fileEntryIterator0.entryComparator = fileComparator5;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator5);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.io.File file6 = fileEntryIterator4.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.manifestFile;
        java.io.File file9 = explodedArchive7.manifestFile;
        java.io.File file10 = null;
        java.io.File file11 = explodedArchive7.getManifestFile(file10);
        fileEntryIterator4.root = file10;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        java.util.Iterator<java.io.File> fileItor18 = fileEntryIterator4.listFiles(file17);
        explodedArchive0.manifestFile = file17;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor18);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("exploded archive", "", "exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL1 = new java.net.URL("hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = null;
        explodedArchive0.manifestFile = file2;
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator15);
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator3.thenComparing((java.util.Comparator<java.io.File>) entryComparator15);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.manifestFile;
        java.io.File file20 = explodedArchive18.manifestFile;
        java.io.File file21 = null;
        java.io.File file22 = explodedArchive18.getManifestFile(file21);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file24 = fileEntryIterator23.current;
        java.io.File file25 = fileEntryIterator23.poll();
        java.io.File file26 = fileEntryIterator23.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        java.util.Comparator<java.io.File> fileComparator36 = fileComparator32.thenComparing(fileComparator35);
        fileEntryIterator27.entryComparator = fileComparator32;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator39 = fileComparator32.thenComparing((java.util.Comparator<java.io.File>) entryComparator38);
        fileEntryIterator23.entryComparator = entryComparator38;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        fileEntryIterator41.recursive = true;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator41.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator52.entryComparator;
        java.util.Comparator<java.io.File> fileComparator55 = fileComparator51.thenComparing(fileComparator54);
        fileEntryIterator46.entryComparator = fileComparator51;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        java.util.Comparator<java.io.File> fileComparator60 = fileComparator51.thenComparing(fileComparator59);
        fileEntryIterator41.entryComparator = fileComparator60;
        java.util.Comparator<java.io.File> fileComparator62 = entryComparator38.thenComparing(fileComparator60);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file64 = explodedArchive63.manifestFile;
        java.io.File file65 = explodedArchive63.manifestFile;
        java.io.File file66 = null;
        java.io.File file67 = explodedArchive63.getManifestFile(file66);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean69 = fileEntryIterator68.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean71 = explodedArchive70.recursive;
        java.io.File file72 = explodedArchive70.manifestFile;
        java.util.jar.Manifest manifest73 = null;
        explodedArchive70.manifest = manifest73;
        java.io.File file75 = explodedArchive70.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator76 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue77 = fileEntryIterator76.stack;
        java.util.Comparator<java.io.File> fileComparator78 = fileEntryIterator76.entryComparator;
        java.io.File file79 = fileEntryIterator76.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive80 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file81 = explodedArchive80.manifestFile;
        java.io.File file82 = explodedArchive80.manifestFile;
        java.io.File file83 = null;
        java.io.File file84 = explodedArchive80.getManifestFile(file83);
        fileEntryIterator76.current = file84;
        explodedArchive70.root = file84;
        fileEntryIterator68.root = file84;
        int int88 = entryComparator38.compare(file67, file84);
        // The following exception was thrown during execution in test generation
        try {
            int int89 = entryComparator15.compare(file21, file84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fileComparator3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file67.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNotNull(fileItorQueue77);
        org.junit.Assert.assertNotNull(fileComparator78);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file84.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        fileEntryIterator0.recursive = true;
        fileEntryIterator0.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator0.stack;
        java.lang.Class<?> wildcardClass26 = fileEntryIterator0.getClass();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        boolean boolean3 = fileEntryIterator0.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean6 = explodedArchive5.recursive;
        boolean boolean7 = explodedArchive5.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive8.getManifestFile(file11);
        explodedArchive5.root = file12;
        fileEntryIterator0.root = file12;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj4 = uRL3.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        boolean boolean8 = explodedArchive3.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        fileEntryIterator9.recursive = true;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator19.thenComparing(fileComparator22);
        fileEntryIterator14.entryComparator = fileComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator19.thenComparing(fileComparator27);
        fileEntryIterator9.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.manifestFile;
        java.io.File file32 = explodedArchive30.manifestFile;
        java.io.File file33 = null;
        java.io.File file34 = explodedArchive30.getManifestFile(file33);
        fileEntryIterator9.root = file34;
        explodedArchive3.root = file34;
        java.util.Iterator<java.io.File> fileItor37 = fileEntryIterator0.listFiles(file34);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file34, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor37);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getRef();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream8 = uRL3.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        explodedArchive0.root = file7;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream6 = uRL3.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", (int) (byte) 100, "exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/manifest.mf");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.recursive;
        boolean boolean2 = fileEntryIterator0.recursive;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("exploded archive", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.lang.String str6 = uRL3.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean8 = fileEntryIterator7.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file10 = fileEntryIterator9.current;
        java.io.File file11 = fileEntryIterator9.poll();
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator18.thenComparing(fileComparator21);
        fileEntryIterator13.entryComparator = fileComparator18;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator18.thenComparing((java.util.Comparator<java.io.File>) entryComparator24);
        fileEntryIterator9.entryComparator = entryComparator24;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        fileEntryIterator27.recursive = true;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator27.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator35.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        java.util.Comparator<java.io.File> fileComparator41 = fileComparator37.thenComparing(fileComparator40);
        fileEntryIterator32.entryComparator = fileComparator37;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        java.util.Comparator<java.io.File> fileComparator46 = fileComparator37.thenComparing(fileComparator45);
        fileEntryIterator27.entryComparator = fileComparator46;
        java.util.Comparator<java.io.File> fileComparator48 = entryComparator24.thenComparing(fileComparator46);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file50 = explodedArchive49.manifestFile;
        java.io.File file51 = explodedArchive49.manifestFile;
        java.io.File file52 = null;
        java.io.File file53 = explodedArchive49.getManifestFile(file52);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean55 = fileEntryIterator54.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean57 = explodedArchive56.recursive;
        java.io.File file58 = explodedArchive56.manifestFile;
        java.util.jar.Manifest manifest59 = null;
        explodedArchive56.manifest = manifest59;
        java.io.File file61 = explodedArchive56.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator62.entryComparator;
        java.io.File file65 = fileEntryIterator62.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file67 = explodedArchive66.manifestFile;
        java.io.File file68 = explodedArchive66.manifestFile;
        java.io.File file69 = null;
        java.io.File file70 = explodedArchive66.getManifestFile(file69);
        fileEntryIterator62.current = file70;
        explodedArchive56.root = file70;
        fileEntryIterator54.root = file70;
        int int74 = entryComparator24.compare(file53, file70);
        java.util.Iterator<java.io.File> fileItor75 = fileEntryIterator7.listFiles(file53);
        boolean boolean76 = uRL3.equals((java.lang.Object) fileEntryIterator7);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file" + "'", str6, "file");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file70.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(fileItor75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator0.stack;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry4 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue3);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("file", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: Illegal character found in host: '/'");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.Class<?> wildcardClass7 = fileEntry6.getClass();
        java.lang.Class[] classArray8 = new java.lang.Class[] { wildcardClass7 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = uRL3.getContent(classArray8);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(classArray8);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        int int11 = uRL9.getPort();
        java.net.URL uRL12 = null;
        java.net.URLStreamHandler uRLStreamHandler14 = null;
        java.net.URL uRL15 = new java.net.URL(uRL12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler14);
        java.lang.String str16 = uRL15.getHost();
        java.lang.String str17 = uRL15.getAuthority();
        java.lang.String str18 = uRL15.getQuery();
        int int19 = uRL15.getDefaultPort();
        boolean boolean20 = uRL9.sameFile(uRL15);
        boolean boolean21 = uRL3.sameFile(uRL9);
        int int22 = uRL3.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        boolean boolean25 = fileEntryIterator23.hasNext();
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator23.entryComparator;
        fileEntryIterator23.recursive = true;
        boolean boolean29 = uRL3.equals((java.lang.Object) true);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        boolean boolean5 = explodedArchive0.recursive;
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest6 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.net.URI uRI4 = uRL3.toURI();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        fileEntryIterator5.recursive = true;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator15.thenComparing(fileComparator18);
        fileEntryIterator10.entryComparator = fileComparator15;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator15.thenComparing(fileComparator23);
        fileEntryIterator5.entryComparator = fileComparator24;
        fileEntryIterator5.recursive = true;
        fileEntryIterator5.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator5.stack;
        java.lang.Class<?> wildcardClass31 = fileEntryIterator5.getClass();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file33 = fileEntry32.getFile();
        java.lang.String str34 = fileEntry32.name;
        java.io.File file35 = fileEntry32.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        boolean boolean38 = fileEntryIterator36.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file40 = explodedArchive39.manifestFile;
        java.io.File file41 = explodedArchive39.manifestFile;
        java.io.File file42 = null;
        java.io.File file43 = explodedArchive39.getManifestFile(file42);
        boolean boolean44 = explodedArchive39.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        fileEntryIterator45.recursive = true;
        java.util.Comparator<java.io.File> fileComparator49 = fileEntryIterator45.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        java.util.Comparator<java.io.File> fileComparator52 = fileEntryIterator50.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        java.util.Comparator<java.io.File> fileComparator59 = fileComparator55.thenComparing(fileComparator58);
        fileEntryIterator50.entryComparator = fileComparator55;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        java.util.Comparator<java.io.File> fileComparator64 = fileComparator55.thenComparing(fileComparator63);
        fileEntryIterator45.entryComparator = fileComparator64;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file67 = explodedArchive66.manifestFile;
        java.io.File file68 = explodedArchive66.manifestFile;
        java.io.File file69 = null;
        java.io.File file70 = explodedArchive66.getManifestFile(file69);
        fileEntryIterator45.root = file70;
        explodedArchive39.root = file70;
        java.util.Iterator<java.io.File> fileItor73 = fileEntryIterator36.listFiles(file70);
        fileEntry32.file = file70;
        java.lang.Class<?> wildcardClass75 = fileEntry32.getClass();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.Class<?> wildcardClass77 = explodedArchive76.getClass();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator78 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file79 = fileEntryIterator78.current;
        boolean boolean80 = fileEntryIterator78.hasNext();
        java.util.Comparator<java.io.File> fileComparator81 = fileEntryIterator78.entryComparator;
        java.lang.Class<?> wildcardClass82 = fileEntryIterator78.getClass();
        java.lang.Class[] classArray83 = new java.lang.Class[] { wildcardClass31, wildcardClass75, wildcardClass77, wildcardClass82 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj84 = uRL3.getContent(classArray83);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file43.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file70.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(fileComparator81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(classArray83);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = uRL3.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getRef();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = uRL3.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("exploded archive", "exploded archive", 100, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getFile();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = uRL3.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.getFile();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream13 = uRL11.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.io.File file6 = fileEntryIterator4.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.manifestFile;
        java.io.File file9 = explodedArchive7.manifestFile;
        java.io.File file10 = null;
        java.io.File file11 = explodedArchive7.getManifestFile(file10);
        fileEntryIterator4.root = file10;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        java.util.Iterator<java.io.File> fileItor18 = fileEntryIterator4.listFiles(file17);
        explodedArchive0.manifestFile = file17;
        java.lang.Class<?> wildcardClass20 = explodedArchive0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor18);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "exploded archive", 10, "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/manifest.mf");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL1 = new java.net.URL("file");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: file");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getRef();
        java.net.URLConnection uRLConnection8 = uRL3.openConnection();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream9 = uRL3.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(uRLConnection8);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean7 = explodedArchive6.recursive;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive6.manifest = manifest8;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.io.File file12 = fileEntryIterator10.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator10.root = file16;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.manifestFile;
        java.io.File file21 = explodedArchive19.manifestFile;
        java.io.File file22 = null;
        java.io.File file23 = explodedArchive19.getManifestFile(file22);
        java.util.Iterator<java.io.File> fileItor24 = fileEntryIterator10.listFiles(file23);
        explodedArchive6.manifestFile = file23;
        java.lang.Class<?> wildcardClass26 = explodedArchive6.getClass();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.lang.Class<?> wildcardClass29 = fileItorQueue28.getClass();
        java.lang.Class[] classArray30 = new java.lang.Class[] { wildcardClass26, wildcardClass29 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj31 = uRL3.getContent(classArray30);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray30);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.util.jar.Manifest manifest4 = null;
        explodedArchive0.manifest = manifest4;
        java.lang.String str6 = explodedArchive0.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest7 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "exploded archive" + "'", str6, "exploded archive");
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        explodedArchive0.root = file6;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor9 = explodedArchive0.iterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        java.io.File file0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.toExternalForm();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file8 = fileEntry7.getFile();
        java.lang.String str9 = fileEntry7.name;
        java.io.File file10 = fileEntry7.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        boolean boolean13 = fileEntryIterator11.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.manifestFile;
        java.io.File file16 = explodedArchive14.manifestFile;
        java.io.File file17 = null;
        java.io.File file18 = explodedArchive14.getManifestFile(file17);
        boolean boolean19 = explodedArchive14.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        fileEntryIterator20.recursive = true;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator20.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator31.entryComparator;
        java.util.Comparator<java.io.File> fileComparator34 = fileComparator30.thenComparing(fileComparator33);
        fileEntryIterator25.entryComparator = fileComparator30;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        java.util.Comparator<java.io.File> fileComparator39 = fileComparator30.thenComparing(fileComparator38);
        fileEntryIterator20.entryComparator = fileComparator39;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file42 = explodedArchive41.manifestFile;
        java.io.File file43 = explodedArchive41.manifestFile;
        java.io.File file44 = null;
        java.io.File file45 = explodedArchive41.getManifestFile(file44);
        fileEntryIterator20.root = file45;
        explodedArchive14.root = file45;
        java.util.Iterator<java.io.File> fileItor48 = fileEntryIterator11.listFiles(file45);
        fileEntry7.file = file45;
        java.lang.Class<?> wildcardClass50 = fileEntry7.getClass();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.lang.Class<?> wildcardClass53 = fileItorQueue52.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[] { wildcardClass50, wildcardClass53 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj55 = uRL3.getContent(classArray54);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray54);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("exploded archive", "file", (int) ' ', "", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", (int) (byte) 1, "", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator15);
        fileEntryIterator0.entryComparator = entryComparator15;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        fileEntryIterator18.recursive = true;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator28.thenComparing(fileComparator31);
        fileEntryIterator23.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator28.thenComparing(fileComparator36);
        fileEntryIterator18.entryComparator = fileComparator37;
        java.util.Comparator<java.io.File> fileComparator39 = entryComparator15.thenComparing(fileComparator37);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.manifestFile;
        java.io.File file42 = explodedArchive40.manifestFile;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive40.getManifestFile(file43);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean46 = fileEntryIterator45.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean48 = explodedArchive47.recursive;
        java.io.File file49 = explodedArchive47.manifestFile;
        java.util.jar.Manifest manifest50 = null;
        explodedArchive47.manifest = manifest50;
        java.io.File file52 = explodedArchive47.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        java.io.File file56 = fileEntryIterator53.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.manifestFile;
        java.io.File file59 = explodedArchive57.manifestFile;
        java.io.File file60 = null;
        java.io.File file61 = explodedArchive57.getManifestFile(file60);
        fileEntryIterator53.current = file61;
        explodedArchive47.root = file61;
        fileEntryIterator45.root = file61;
        int int65 = entryComparator15.compare(file44, file61);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive(file44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file6 = fileEntry5.getFile();
        java.lang.String str7 = fileEntry5.name;
        java.io.File file8 = fileEntry5.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        boolean boolean11 = fileEntryIterator9.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.manifestFile;
        java.io.File file14 = explodedArchive12.manifestFile;
        java.io.File file15 = null;
        java.io.File file16 = explodedArchive12.getManifestFile(file15);
        boolean boolean17 = explodedArchive12.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        fileEntryIterator18.recursive = true;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator28.thenComparing(fileComparator31);
        fileEntryIterator23.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator28.thenComparing(fileComparator36);
        fileEntryIterator18.entryComparator = fileComparator37;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file40 = explodedArchive39.manifestFile;
        java.io.File file41 = explodedArchive39.manifestFile;
        java.io.File file42 = null;
        java.io.File file43 = explodedArchive39.getManifestFile(file42);
        fileEntryIterator18.root = file43;
        explodedArchive12.root = file43;
        java.util.Iterator<java.io.File> fileItor46 = fileEntryIterator9.listFiles(file43);
        fileEntry5.file = file43;
        explodedArchive0.manifestFile = file43;
        java.io.File file49 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter50 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList51 = explodedArchive0.getNestedArchives(entryFilter50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file16.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file43.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor46);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file13 = fileEntryIterator12.current;
        boolean boolean14 = fileEntryIterator12.hasNext();
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator12.entryComparator;
        java.lang.Class<?> wildcardClass16 = fileEntryIterator12.getClass();
        boolean boolean17 = uRL11.equals((java.lang.Object) wildcardClass16);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.lang.String str9 = uRL3.getPath();
        java.lang.String str10 = uRL3.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file22 = explodedArchive21.manifestFile;
        java.io.File file23 = explodedArchive21.manifestFile;
        java.io.File file24 = null;
        java.io.File file25 = explodedArchive21.getManifestFile(file24);
        fileEntryIterator0.root = file25;
        boolean boolean27 = fileEntryIterator0.recursive;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry28 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file25.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        int int11 = uRL9.getPort();
        java.net.URL uRL12 = null;
        java.net.URLStreamHandler uRLStreamHandler14 = null;
        java.net.URL uRL15 = new java.net.URL(uRL12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler14);
        java.lang.String str16 = uRL15.getHost();
        java.lang.String str17 = uRL15.getAuthority();
        java.lang.String str18 = uRL15.getQuery();
        int int19 = uRL15.getDefaultPort();
        boolean boolean20 = uRL9.sameFile(uRL15);
        boolean boolean21 = uRL3.sameFile(uRL9);
        java.lang.Class[] classArray22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj23 = uRL3.getContent(classArray22);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.getRef();
        int int7 = uRL3.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler9 = null;
        java.net.URL uRL10 = new java.net.URL(uRL3, "", uRLStreamHandler9);
        java.lang.String str11 = uRL10.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals(uRL10.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.getName();
        java.lang.String str3 = fileEntry0.getName();
        fileEntry0.name = "";
        java.io.File file6 = fileEntry0.getFile();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = file6.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(file6);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.util.jar.Manifest manifest38 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file40 = explodedArchive39.manifestFile;
        java.io.File file41 = explodedArchive39.manifestFile;
        java.io.File file42 = null;
        java.io.File file43 = explodedArchive39.getManifestFile(file42);
        boolean boolean44 = explodedArchive39.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        fileEntryIterator45.recursive = true;
        java.util.Comparator<java.io.File> fileComparator49 = fileEntryIterator45.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        java.util.Comparator<java.io.File> fileComparator52 = fileEntryIterator50.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        java.util.Comparator<java.io.File> fileComparator59 = fileComparator55.thenComparing(fileComparator58);
        fileEntryIterator50.entryComparator = fileComparator55;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        java.util.Comparator<java.io.File> fileComparator64 = fileComparator55.thenComparing(fileComparator63);
        fileEntryIterator45.entryComparator = fileComparator64;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file67 = explodedArchive66.manifestFile;
        java.io.File file68 = explodedArchive66.manifestFile;
        java.io.File file69 = null;
        java.io.File file70 = explodedArchive66.getManifestFile(file69);
        fileEntryIterator45.root = file70;
        explodedArchive39.root = file70;
        explodedArchive39.recursive = false;
        java.util.jar.Manifest manifest75 = null;
        explodedArchive39.manifest = manifest75;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator77 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file78 = fileEntryIterator77.current;
        java.io.File file79 = fileEntryIterator77.poll();
        java.io.File file80 = fileEntryIterator77.poll();
        java.io.File file81 = fileEntryIterator77.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator82 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue83 = fileEntryIterator82.stack;
        java.io.File file84 = fileEntryIterator82.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive85 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file86 = explodedArchive85.manifestFile;
        java.io.File file87 = explodedArchive85.manifestFile;
        java.io.File file88 = null;
        java.io.File file89 = explodedArchive85.getManifestFile(file88);
        fileEntryIterator82.root = file88;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive91 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file92 = explodedArchive91.manifestFile;
        java.io.File file93 = explodedArchive91.manifestFile;
        java.io.File file94 = null;
        java.io.File file95 = explodedArchive91.getManifestFile(file94);
        java.util.Iterator<java.io.File> fileItor96 = fileEntryIterator82.listFiles(file95);
        fileEntryIterator77.root = file95;
        explodedArchive39.root = file95;
        java.io.File file99 = explodedArchive0.getManifestFile(file95);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest38);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file43.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file70.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file78);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertNotNull(fileItorQueue83);
        org.junit.Assert.assertNull(file84);
        org.junit.Assert.assertNull(file86);
        org.junit.Assert.assertNull(file87);
        org.junit.Assert.assertNotNull(file89);
        org.junit.Assert.assertEquals(file89.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file89.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file92);
        org.junit.Assert.assertNull(file93);
        org.junit.Assert.assertNotNull(file95);
        org.junit.Assert.assertEquals(file95.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file95.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor96);
        org.junit.Assert.assertNotNull(file99);
        org.junit.Assert.assertEquals(file99.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file99.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        int int13 = uRL11.getDefaultPort();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream14 = uRL11.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.util.jar.Manifest manifest4 = null;
        explodedArchive0.manifest = manifest4;
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        boolean boolean9 = fileEntryIterator7.hasNext();
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator16.thenComparing((java.util.Comparator<java.io.File>) entryComparator22);
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator10.thenComparing((java.util.Comparator<java.io.File>) entryComparator22);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean26 = fileEntryIterator25.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean28 = explodedArchive27.recursive;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.util.jar.Manifest manifest30 = null;
        explodedArchive27.manifest = manifest30;
        java.io.File file32 = explodedArchive27.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        java.io.File file36 = fileEntryIterator33.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file38 = explodedArchive37.manifestFile;
        java.io.File file39 = explodedArchive37.manifestFile;
        java.io.File file40 = null;
        java.io.File file41 = explodedArchive37.getManifestFile(file40);
        fileEntryIterator33.current = file41;
        explodedArchive27.root = file41;
        fileEntryIterator25.root = file41;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file46 = explodedArchive45.manifestFile;
        java.io.File file47 = explodedArchive45.manifestFile;
        java.io.File file48 = null;
        java.io.File file49 = explodedArchive45.getManifestFile(file48);
        boolean boolean50 = explodedArchive45.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        fileEntryIterator51.recursive = true;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator51.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator62.entryComparator;
        java.util.Comparator<java.io.File> fileComparator65 = fileComparator61.thenComparing(fileComparator64);
        fileEntryIterator56.entryComparator = fileComparator61;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue68 = fileEntryIterator67.stack;
        java.util.Comparator<java.io.File> fileComparator69 = fileEntryIterator67.entryComparator;
        java.util.Comparator<java.io.File> fileComparator70 = fileComparator61.thenComparing(fileComparator69);
        fileEntryIterator51.entryComparator = fileComparator70;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file73 = explodedArchive72.manifestFile;
        java.io.File file74 = explodedArchive72.manifestFile;
        java.io.File file75 = null;
        java.io.File file76 = explodedArchive72.getManifestFile(file75);
        fileEntryIterator51.root = file76;
        explodedArchive45.root = file76;
        int int79 = entryComparator22.compare(file41, file76);
        java.io.File file80 = explodedArchive0.getManifestFile(file41);
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest81 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "exploded archive" + "'", str6, "exploded archive");
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileItorQueue68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file76.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(file80);
        org.junit.Assert.assertEquals(file80.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file80.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        int int11 = uRL9.getPort();
        java.net.URL uRL12 = null;
        java.net.URLStreamHandler uRLStreamHandler14 = null;
        java.net.URL uRL15 = new java.net.URL(uRL12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler14);
        java.lang.String str16 = uRL15.getHost();
        java.lang.String str17 = uRL15.getAuthority();
        java.lang.String str18 = uRL15.getQuery();
        int int19 = uRL15.getDefaultPort();
        boolean boolean20 = uRL9.sameFile(uRL15);
        boolean boolean21 = uRL3.sameFile(uRL9);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator31.entryComparator;
        java.util.Comparator<java.io.File> fileComparator34 = fileComparator30.thenComparing(fileComparator33);
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator27.thenComparing(fileComparator33);
        java.util.Comparator<java.io.File> fileComparator36 = fileComparator24.thenComparing(fileComparator33);
        boolean boolean37 = uRL9.equals((java.lang.Object) fileComparator24);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("exploded archive", "", (int) (byte) 1, "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("", "", 0, "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator15);
        fileEntryIterator0.entryComparator = entryComparator15;
        java.io.File file18 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        fileEntryIterator19.recursive = true;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator29.thenComparing(fileComparator32);
        fileEntryIterator24.entryComparator = fileComparator29;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator35.entryComparator;
        java.util.Comparator<java.io.File> fileComparator38 = fileComparator29.thenComparing(fileComparator37);
        fileEntryIterator19.entryComparator = fileComparator38;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file41 = fileEntryIterator40.current;
        java.io.File file42 = fileEntryIterator40.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file44 = fileEntryIterator43.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator45.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        java.util.Comparator<java.io.File> fileComparator54 = fileComparator50.thenComparing(fileComparator53);
        fileEntryIterator45.entryComparator = fileComparator50;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        java.util.Comparator<java.io.File> fileComparator59 = fileComparator50.thenComparing(fileComparator58);
        fileEntryIterator43.entryComparator = fileComparator59;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator43.stack;
        fileEntryIterator40.stack = fileItorQueue61;
        fileEntryIterator19.stack = fileItorQueue61;
        fileEntryIterator0.stack = fileItorQueue61;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue61);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "file", (int) (byte) 100, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/manifest.mf");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.util.Comparator<java.io.File> fileComparator2 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.util.Comparator<java.io.File> fileComparator9 = fileComparator5.thenComparing(fileComparator8);
        fileEntryIterator0.entryComparator = fileComparator5;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator12 = fileComparator5.thenComparing((java.util.Comparator<java.io.File>) entryComparator11);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file14 = fileEntryIterator13.current;
        java.io.File file15 = null;
        fileEntryIterator13.current = file15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean18 = explodedArchive17.recursive;
        java.io.File file19 = explodedArchive17.manifestFile;
        java.util.jar.Manifest manifest20 = null;
        explodedArchive17.manifest = manifest20;
        java.io.File file22 = explodedArchive17.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        java.io.File file26 = fileEntryIterator23.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator23.current = file31;
        explodedArchive17.root = file31;
        fileEntryIterator13.root = file31;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.manifestFile;
        java.io.File file37 = explodedArchive35.manifestFile;
        java.io.File file38 = null;
        java.io.File file39 = explodedArchive35.getManifestFile(file38);
        boolean boolean40 = explodedArchive35.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        fileEntryIterator41.recursive = true;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator41.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator52.entryComparator;
        java.util.Comparator<java.io.File> fileComparator55 = fileComparator51.thenComparing(fileComparator54);
        fileEntryIterator46.entryComparator = fileComparator51;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        java.util.Comparator<java.io.File> fileComparator60 = fileComparator51.thenComparing(fileComparator59);
        fileEntryIterator41.entryComparator = fileComparator60;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file63 = explodedArchive62.manifestFile;
        java.io.File file64 = explodedArchive62.manifestFile;
        java.io.File file65 = null;
        java.io.File file66 = explodedArchive62.getManifestFile(file65);
        fileEntryIterator41.root = file66;
        explodedArchive35.root = file66;
        explodedArchive35.recursive = false;
        java.util.jar.Manifest manifest71 = null;
        explodedArchive35.manifest = manifest71;
        java.lang.String str73 = explodedArchive35.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter74 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList75 = explodedArchive35.getNestedArchives(entryFilter74);
        java.io.File file76 = explodedArchive35.root;
        int int77 = entryComparator11.compare(file31, file76);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive(file76);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str73 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str73, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList75);
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file76.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", 1, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file22 = fileEntryIterator21.current;
        java.io.File file23 = fileEntryIterator21.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file25 = fileEntryIterator24.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator31.thenComparing(fileComparator34);
        fileEntryIterator26.entryComparator = fileComparator31;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator31.thenComparing(fileComparator39);
        fileEntryIterator24.entryComparator = fileComparator40;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator24.stack;
        fileEntryIterator21.stack = fileItorQueue42;
        fileEntryIterator0.stack = fileItorQueue42;
        boolean boolean45 = fileEntryIterator0.recursive;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        int int8 = uRL3.getPort();
        java.net.Proxy proxy9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection10 = uRL3.openConnection(proxy9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.net.URI uRI4 = uRL3.toURI();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream5 = uRL3.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI4);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        java.net.URL uRL8 = null;
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL8, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.getHost();
        java.net.URI uRI13 = uRL11.toURI();
        java.lang.String str14 = uRL11.toExternalForm();
        boolean boolean15 = uRL3.sameFile(uRL11);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream16 = uRL3.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(uRI13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str14, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        boolean boolean8 = explodedArchive3.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        fileEntryIterator9.recursive = true;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator19.thenComparing(fileComparator22);
        fileEntryIterator14.entryComparator = fileComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator19.thenComparing(fileComparator27);
        fileEntryIterator9.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.manifestFile;
        java.io.File file32 = explodedArchive30.manifestFile;
        java.io.File file33 = null;
        java.io.File file34 = explodedArchive30.getManifestFile(file33);
        fileEntryIterator9.root = file34;
        explodedArchive3.root = file34;
        java.util.Iterator<java.io.File> fileItor37 = fileEntryIterator0.listFiles(file34);
        java.lang.Class<?> wildcardClass38 = fileEntryIterator0.getClass();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("", "exploded archive", "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.getRef();
        int int7 = uRL3.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler9 = null;
        java.net.URL uRL10 = new java.net.URL(uRL3, "", uRLStreamHandler9);
        java.net.URI uRI11 = uRL3.toURI();
        java.lang.String str12 = uRL3.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals(uRL10.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLConnection uRLConnection7 = uRL3.openConnection();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream8 = uRL3.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection7);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        boolean boolean2 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file4 = fileEntryIterator3.current;
        java.io.File file5 = null;
        fileEntryIterator3.current = file5;
        java.io.File file7 = fileEntryIterator3.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file9 = fileEntry8.getFile();
        java.lang.String str10 = fileEntry8.name;
        java.io.File file11 = fileEntry8.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        boolean boolean14 = fileEntryIterator12.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.manifestFile;
        java.io.File file17 = explodedArchive15.manifestFile;
        java.io.File file18 = null;
        java.io.File file19 = explodedArchive15.getManifestFile(file18);
        boolean boolean20 = explodedArchive15.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        fileEntryIterator21.recursive = true;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator31.thenComparing(fileComparator34);
        fileEntryIterator26.entryComparator = fileComparator31;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator31.thenComparing(fileComparator39);
        fileEntryIterator21.entryComparator = fileComparator40;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.io.File file45 = null;
        java.io.File file46 = explodedArchive42.getManifestFile(file45);
        fileEntryIterator21.root = file46;
        explodedArchive15.root = file46;
        java.util.Iterator<java.io.File> fileItor49 = fileEntryIterator12.listFiles(file46);
        fileEntry8.file = file46;
        fileEntryIterator3.current = file46;
        explodedArchive0.root = file46;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file46, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "exploded archive" + "'", str1, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file19.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor49);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = explodedArchive0.manifest;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator37 = explodedArchive0.spliterator();
        java.net.URL uRL38 = explodedArchive0.getUrl();
        java.lang.String str39 = uRL38.toString();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNotNull(entrySpliterator37);
        org.junit.Assert.assertNotNull(uRL38);
// flaky:         org.junit.Assert.assertEquals(uRL38.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str39, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.getFile();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj13 = uRL11.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        java.io.File file3 = explodedArchive0.root;
        java.lang.String str4 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry5.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.io.File file10 = fileEntryIterator8.current;
        boolean boolean11 = fileEntryIterator8.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator8.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean14 = explodedArchive13.recursive;
        boolean boolean15 = explodedArchive13.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.manifestFile;
        java.io.File file18 = explodedArchive16.manifestFile;
        java.io.File file19 = null;
        java.io.File file20 = explodedArchive16.getManifestFile(file19);
        explodedArchive13.root = file20;
        fileEntryIterator8.root = file20;
        fileEntry5.file = file20;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive24 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: File must exist");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file20.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("hi!", "hi!", (int) (short) 1, "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        java.io.File file3 = explodedArchive0.root;
        java.lang.String str4 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive0.getNestedArchives(entryFilter5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        java.io.File file5 = explodedArchive0.manifestFile;
        java.io.File file6 = explodedArchive0.root;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor7 = explodedArchive0.iterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator0.stack;
        java.io.File file5 = fileEntryIterator0.current;
        boolean boolean6 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator12.thenComparing(fileComparator15);
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator9.thenComparing(fileComparator15);
        fileEntryIterator0.entryComparator = fileComparator15;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        boolean boolean21 = fileEntryIterator19.hasNext();
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator28.thenComparing(fileComparator31);
        fileEntryIterator23.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator28.thenComparing((java.util.Comparator<java.io.File>) entryComparator34);
        java.util.Comparator<java.io.File> fileComparator36 = fileComparator22.thenComparing((java.util.Comparator<java.io.File>) entryComparator34);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean38 = fileEntryIterator37.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean40 = explodedArchive39.recursive;
        java.io.File file41 = explodedArchive39.manifestFile;
        java.util.jar.Manifest manifest42 = null;
        explodedArchive39.manifest = manifest42;
        java.io.File file44 = explodedArchive39.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator45.entryComparator;
        java.io.File file48 = fileEntryIterator45.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file50 = explodedArchive49.manifestFile;
        java.io.File file51 = explodedArchive49.manifestFile;
        java.io.File file52 = null;
        java.io.File file53 = explodedArchive49.getManifestFile(file52);
        fileEntryIterator45.current = file53;
        explodedArchive39.root = file53;
        fileEntryIterator37.root = file53;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.manifestFile;
        java.io.File file59 = explodedArchive57.manifestFile;
        java.io.File file60 = null;
        java.io.File file61 = explodedArchive57.getManifestFile(file60);
        boolean boolean62 = explodedArchive57.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        fileEntryIterator63.recursive = true;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator63.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator71 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue72 = fileEntryIterator71.stack;
        java.util.Comparator<java.io.File> fileComparator73 = fileEntryIterator71.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator74 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue75 = fileEntryIterator74.stack;
        java.util.Comparator<java.io.File> fileComparator76 = fileEntryIterator74.entryComparator;
        java.util.Comparator<java.io.File> fileComparator77 = fileComparator73.thenComparing(fileComparator76);
        fileEntryIterator68.entryComparator = fileComparator73;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator79 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue80 = fileEntryIterator79.stack;
        java.util.Comparator<java.io.File> fileComparator81 = fileEntryIterator79.entryComparator;
        java.util.Comparator<java.io.File> fileComparator82 = fileComparator73.thenComparing(fileComparator81);
        fileEntryIterator63.entryComparator = fileComparator82;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive84 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file85 = explodedArchive84.manifestFile;
        java.io.File file86 = explodedArchive84.manifestFile;
        java.io.File file87 = null;
        java.io.File file88 = explodedArchive84.getManifestFile(file87);
        fileEntryIterator63.root = file88;
        explodedArchive57.root = file88;
        int int91 = entryComparator34.compare(file53, file88);
        fileEntryIterator0.entryComparator = entryComparator34;
        java.util.Comparator<java.io.File> fileComparator93 = entryComparator34.reversed();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileItorQueue72);
        org.junit.Assert.assertNotNull(fileComparator73);
        org.junit.Assert.assertNotNull(fileItorQueue75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNotNull(fileComparator77);
        org.junit.Assert.assertNotNull(fileItorQueue80);
        org.junit.Assert.assertNotNull(fileComparator81);
        org.junit.Assert.assertNotNull(fileComparator82);
        org.junit.Assert.assertNull(file85);
        org.junit.Assert.assertNull(file86);
        org.junit.Assert.assertNotNull(file88);
        org.junit.Assert.assertEquals(file88.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file88.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNotNull(fileComparator93);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("exploded archive", "hi!", (int) '4', "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.net.URLStreamHandler uRLStreamHandler7 = null;
        java.net.URL uRL8 = new java.net.URL(uRL3, "hi!", uRLStreamHandler7);
        java.lang.Class<?> wildcardClass9 = uRL3.getClass();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals(uRL8.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file72 = explodedArchive71.manifestFile;
        java.io.File file73 = explodedArchive71.manifestFile;
        java.lang.String str74 = explodedArchive71.toString();
        boolean boolean75 = uRL69.equals((java.lang.Object) explodedArchive71);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "exploded archive" + "'", str74, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        int int8 = uRL3.getPort();
        java.lang.String str9 = uRL3.getRef();
        java.lang.String str10 = uRL3.getAuthority();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        fileEntryIterator0.recursive = true;
        fileEntryIterator0.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean27 = explodedArchive26.recursive;
        boolean boolean28 = explodedArchive26.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file30 = explodedArchive29.manifestFile;
        java.io.File file31 = explodedArchive29.manifestFile;
        java.io.File file32 = null;
        java.io.File file33 = explodedArchive29.getManifestFile(file32);
        explodedArchive26.root = file33;
        fileEntryIterator0.root = file33;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file33, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.io.File file5 = fileEntryIterator3.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.manifestFile;
        java.io.File file8 = explodedArchive6.manifestFile;
        java.io.File file9 = null;
        java.io.File file10 = explodedArchive6.getManifestFile(file9);
        fileEntryIterator3.root = file9;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.manifestFile;
        java.io.File file14 = explodedArchive12.manifestFile;
        java.io.File file15 = null;
        java.io.File file16 = explodedArchive12.getManifestFile(file15);
        java.util.Iterator<java.io.File> fileItor17 = fileEntryIterator3.listFiles(file16);
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator3.stack;
        fileEntryIterator0.stack = fileItorQueue18;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry20 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file16.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor17);
        org.junit.Assert.assertNotNull(fileItorQueue18);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", (int) '#', "", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: Illegal character found in host: '/'");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.lang.Class<?> wildcardClass10 = uRL3.getClass();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        java.net.URL uRL5 = new java.net.URL("file", "exploded archive", (int) (byte) -1, "", uRLStreamHandler4);
        java.lang.String str6 = uRL5.getFile();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream7 = uRL5.openStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownHostException; message: exploded archive");
        } catch (java.net.UnknownHostException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL5.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLConnection uRLConnection7 = uRL3.openConnection();
        java.net.URL uRL9 = new java.net.URL(uRL3, "exploded archive");
        java.net.URL uRL10 = null;
        java.net.URLStreamHandler uRLStreamHandler12 = null;
        java.net.URL uRL13 = new java.net.URL(uRL10, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler12);
        java.lang.String str14 = uRL13.getHost();
        int int15 = uRL13.getPort();
        java.net.URL uRL16 = null;
        java.net.URLStreamHandler uRLStreamHandler18 = null;
        java.net.URL uRL19 = new java.net.URL(uRL16, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler18);
        java.lang.String str20 = uRL19.getHost();
        int int21 = uRL19.getPort();
        java.net.URL uRL22 = null;
        java.net.URLStreamHandler uRLStreamHandler24 = null;
        java.net.URL uRL25 = new java.net.URL(uRL22, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler24);
        java.lang.String str26 = uRL25.getHost();
        java.lang.String str27 = uRL25.getAuthority();
        java.lang.String str28 = uRL25.getQuery();
        int int29 = uRL25.getDefaultPort();
        boolean boolean30 = uRL19.sameFile(uRL25);
        boolean boolean31 = uRL13.sameFile(uRL19);
        int int32 = uRL13.getDefaultPort();
        boolean boolean33 = uRL9.equals((java.lang.Object) uRL13);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection7);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertEquals(uRL13.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals(uRL19.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertEquals(uRL25.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.name;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        java.io.File file5 = fileEntry0.file;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = fileEntry0.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(file5);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("hi!", "", (int) (short) 10, "", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        java.net.URL uRL5 = new java.net.URL("file", "exploded archive", (int) '4', "exploded archive", uRLStreamHandler4);
        java.net.Proxy proxy6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection7 = uRL5.openConnection(proxy6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL5.toString(), "file://exploded archive:52exploded archive");
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator2.stack;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator2.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        java.util.Comparator<java.io.File> fileComparator11 = fileComparator7.thenComparing(fileComparator10);
        fileEntryIterator2.entryComparator = fileComparator7;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator7.thenComparing(fileComparator15);
        fileEntryIterator0.entryComparator = fileComparator16;
        java.io.File file18 = fileEntryIterator0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        fileEntryIterator0.entryComparator = entryComparator19;
        java.lang.Class<?> wildcardClass21 = fileEntryIterator0.getClass();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.util.jar.Manifest manifest4 = null;
        explodedArchive0.manifest = manifest4;
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file8 = fileEntry7.getFile();
        java.lang.String str9 = fileEntry7.name;
        java.lang.String str10 = fileEntry7.getName();
        java.lang.String str11 = fileEntry7.getName();
        java.lang.String str12 = fileEntry7.name;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive13 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "exploded archive" + "'", str6, "exploded archive");
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.net.URI uRI4 = uRL3.toURI();
        java.lang.String str5 = uRL3.getFile();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = uRL3.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str5, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("", "", (int) (short) -1, "exploded archive", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getUserInfo();
        java.lang.String str14 = uRL11.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file18 = explodedArchive17.manifestFile;
        java.io.File file19 = explodedArchive17.manifestFile;
        java.io.File file20 = null;
        java.io.File file21 = explodedArchive17.getManifestFile(file20);
        fileEntryIterator15.current = file20;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        fileEntryIterator15.entryComparator = fileComparator25;
        boolean boolean27 = uRL11.equals((java.lang.Object) fileComparator25);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        boolean boolean41 = explodedArchive0.recursive;
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest42 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("", "exploded archive", (int) ' ', "", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str1 = fileEntry0.name;
        java.io.File file2 = fileEntry0.file;
        fileEntry0.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        boolean boolean7 = fileEntryIterator5.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive8.getManifestFile(file11);
        boolean boolean13 = explodedArchive8.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        fileEntryIterator14.recursive = true;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator24.thenComparing(fileComparator27);
        fileEntryIterator19.entryComparator = fileComparator24;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator24.thenComparing(fileComparator32);
        fileEntryIterator14.entryComparator = fileComparator33;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.manifestFile;
        java.io.File file37 = explodedArchive35.manifestFile;
        java.io.File file38 = null;
        java.io.File file39 = explodedArchive35.getManifestFile(file38);
        fileEntryIterator14.root = file39;
        explodedArchive8.root = file39;
        java.util.Iterator<java.io.File> fileItor42 = fileEntryIterator5.listFiles(file39);
        fileEntry0.file = file39;
        java.io.File file44 = fileEntry0.getFile();
        java.lang.String str45 = fileEntry0.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "exploded archive" + "'", str45, "exploded archive");
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.getFile();
        java.lang.String str13 = uRL11.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str13, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean20 = fileEntryIterator19.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean22 = explodedArchive21.recursive;
        java.io.File file23 = explodedArchive21.manifestFile;
        java.util.jar.Manifest manifest24 = null;
        explodedArchive21.manifest = manifest24;
        java.io.File file26 = explodedArchive21.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        java.io.File file30 = fileEntryIterator27.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.manifestFile;
        java.io.File file33 = explodedArchive31.manifestFile;
        java.io.File file34 = null;
        java.io.File file35 = explodedArchive31.getManifestFile(file34);
        fileEntryIterator27.current = file35;
        explodedArchive21.root = file35;
        fileEntryIterator19.root = file35;
        fileEntryIterator8.root = file35;
        boolean boolean40 = uRL3.equals((java.lang.Object) fileEntryIterator8);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file35.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        boolean boolean3 = fileEntryIterator0.hasNext();
        java.lang.Class<?> wildcardClass4 = fileEntryIterator0.getClass();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file7 = fileEntry6.getFile();
        java.io.File file8 = fileEntry6.file;
        fileEntry6.name = "";
        java.io.File file11 = fileEntry6.file;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive12 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file11);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        java.net.URL uRL5 = new java.net.URL("file", "exploded archive", 0, "", uRLStreamHandler4);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream6 = uRL5.openStream();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownHostException; message: exploded archive");
        } catch (java.net.UnknownHostException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL5.toString(), "file://exploded archive:0");
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file3 = fileEntry2.getFile();
        java.io.File file4 = fileEntry2.file;
        java.io.File file5 = null;
        fileEntry2.file = file5;
        java.lang.String str7 = fileEntry2.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        boolean boolean10 = fileEntryIterator8.hasNext();
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        java.util.Comparator<java.io.File> fileComparator21 = fileComparator17.thenComparing(fileComparator20);
        fileEntryIterator12.entryComparator = fileComparator17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator17.thenComparing((java.util.Comparator<java.io.File>) entryComparator23);
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator11.thenComparing((java.util.Comparator<java.io.File>) entryComparator23);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean27 = fileEntryIterator26.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean29 = explodedArchive28.recursive;
        java.io.File file30 = explodedArchive28.manifestFile;
        java.util.jar.Manifest manifest31 = null;
        explodedArchive28.manifest = manifest31;
        java.io.File file33 = explodedArchive28.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.io.File file37 = fileEntryIterator34.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        fileEntryIterator34.current = file42;
        explodedArchive28.root = file42;
        fileEntryIterator26.root = file42;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        boolean boolean51 = explodedArchive46.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        fileEntryIterator52.recursive = true;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator63.entryComparator;
        java.util.Comparator<java.io.File> fileComparator66 = fileComparator62.thenComparing(fileComparator65);
        fileEntryIterator57.entryComparator = fileComparator62;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        java.util.Comparator<java.io.File> fileComparator71 = fileComparator62.thenComparing(fileComparator70);
        fileEntryIterator52.entryComparator = fileComparator71;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file74 = explodedArchive73.manifestFile;
        java.io.File file75 = explodedArchive73.manifestFile;
        java.io.File file76 = null;
        java.io.File file77 = explodedArchive73.getManifestFile(file76);
        fileEntryIterator52.root = file77;
        explodedArchive46.root = file77;
        int int80 = entryComparator23.compare(file42, file77);
        fileEntry2.file = file77;
        explodedArchive0.manifestFile = file77;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = new org.springframework.boot.loader.archive.ExplodedArchive(file77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file77.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getUserInfo();
        java.lang.String str5 = uRL3.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str5, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("", "exploded archive", (int) (byte) 0, "", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        int int8 = uRL3.getPort();
        java.lang.String str9 = uRL3.getRef();
        java.net.URL uRL11 = new java.net.URL(uRL3, "hi!");
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "", uRLStreamHandler13);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file16 = fileEntryIterator15.current;
        java.io.File file17 = fileEntryIterator15.poll();
        java.io.File file18 = fileEntryIterator15.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator24.thenComparing(fileComparator27);
        fileEntryIterator19.entryComparator = fileComparator24;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator31 = fileComparator24.thenComparing((java.util.Comparator<java.io.File>) entryComparator30);
        fileEntryIterator15.entryComparator = entryComparator30;
        java.io.File file33 = fileEntryIterator15.current;
        boolean boolean34 = uRL14.equals((java.lang.Object) file33);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.lang.String str4 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean6 = fileEntryIterator5.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean8 = explodedArchive7.recursive;
        java.io.File file9 = explodedArchive7.manifestFile;
        java.util.jar.Manifest manifest10 = null;
        explodedArchive7.manifest = manifest10;
        java.io.File file12 = explodedArchive7.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.io.File file16 = fileEntryIterator13.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file18 = explodedArchive17.manifestFile;
        java.io.File file19 = explodedArchive17.manifestFile;
        java.io.File file20 = null;
        java.io.File file21 = explodedArchive17.getManifestFile(file20);
        fileEntryIterator13.current = file21;
        explodedArchive7.root = file21;
        fileEntryIterator5.root = file21;
        java.io.File file25 = explodedArchive0.getManifestFile(file21);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file27 = fileEntry26.getFile();
        java.lang.String str28 = fileEntry26.name;
        java.io.File file29 = null;
        fileEntry26.file = file29;
        java.io.File file31 = fileEntry26.file;
        java.lang.String str32 = fileEntry26.name;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.io.File file35 = fileEntryIterator33.current;
        java.io.File file36 = fileEntryIterator33.current;
        fileEntryIterator33.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file40 = explodedArchive39.manifestFile;
        java.io.File file41 = explodedArchive39.manifestFile;
        java.io.File file42 = null;
        java.io.File file43 = explodedArchive39.getManifestFile(file42);
        fileEntryIterator33.root = file43;
        fileEntry26.file = file43;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive46 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: File must exist");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file25.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file43.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getRef();
        java.net.URLConnection uRLConnection8 = uRL3.openConnection();
        java.lang.Class<?> wildcardClass9 = uRLConnection8.getClass();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(uRLConnection8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        java.io.File file5 = explodedArchive0.manifestFile;
        java.lang.String str6 = explodedArchive0.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest7 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "exploded archive" + "'", str6, "exploded archive");
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.lang.String str4 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean6 = fileEntryIterator5.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean8 = explodedArchive7.recursive;
        java.io.File file9 = explodedArchive7.manifestFile;
        java.util.jar.Manifest manifest10 = null;
        explodedArchive7.manifest = manifest10;
        java.io.File file12 = explodedArchive7.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.io.File file16 = fileEntryIterator13.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file18 = explodedArchive17.manifestFile;
        java.io.File file19 = explodedArchive17.manifestFile;
        java.io.File file20 = null;
        java.io.File file21 = explodedArchive17.getManifestFile(file20);
        fileEntryIterator13.current = file21;
        explodedArchive7.root = file21;
        fileEntryIterator5.root = file21;
        java.io.File file25 = explodedArchive0.getManifestFile(file21);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor26 = explodedArchive0.iterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file25.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getUserInfo();
        java.lang.String str14 = uRL11.getProtocol();
        int int15 = uRL11.getDefaultPort();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream16 = uRL11.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("", "", (int) 'a', "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.net.URI uRI4 = uRL3.toURI();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj5 = uRL3.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI4);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        int int7 = uRL3.getPort();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = uRL3.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "", (int) (short) 10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/manifest.mf");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("hi!", "exploded archive", (int) (byte) 1, "exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.Class<?> wildcardClass13 = fileEntry12.getClass();
        java.net.URL uRL14 = null;
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL14, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler16);
        java.lang.String str18 = uRL17.getHost();
        java.lang.String str19 = uRL17.getAuthority();
        java.lang.String str20 = uRL17.getHost();
        java.lang.String str21 = uRL17.getRef();
        java.net.URLConnection uRLConnection22 = uRL17.openConnection();
        java.lang.Class<?> wildcardClass23 = uRLConnection22.getClass();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.Class<?> wildcardClass25 = fileEntry24.getClass();
        java.lang.Class[] classArray26 = new java.lang.Class[] { wildcardClass13, wildcardClass23, wildcardClass25 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj27 = uRL11.getContent(classArray26);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(uRLConnection22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(classArray26);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getUserInfo();
        java.lang.String str14 = uRL11.getProtocol();
        int int15 = uRL11.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler20 = null;
        java.net.URL uRL21 = new java.net.URL("file", "exploded archive", 0, "", uRLStreamHandler20);
        boolean boolean22 = uRL11.sameFile(uRL21);
        java.lang.Class[] classArray23 = new java.lang.Class[] {};
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj24 = uRL11.getContent(classArray23);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals(uRL21.toString(), "file://exploded archive:0");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(classArray23);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL71 = null;
        java.net.URLStreamHandler uRLStreamHandler73 = null;
        java.net.URL uRL74 = new java.net.URL(uRL71, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler73);
        java.lang.String str75 = uRL74.getHost();
        java.lang.String str76 = uRL74.getAuthority();
        java.lang.String str77 = uRL74.getAuthority();
        java.lang.String str78 = uRL74.getFile();
        int int79 = uRL74.getPort();
        java.lang.String str80 = uRL74.getRef();
        java.net.URL uRL82 = new java.net.URL(uRL74, "hi!");
        boolean boolean83 = uRL69.sameFile(uRL82);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj84 = uRL82.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi! (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str78, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertEquals(uRL82.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.net.URL uRL74 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream75 = uRL74.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        java.net.URL uRL5 = new java.net.URL("file", "exploded archive", (int) (byte) -1, "", uRLStreamHandler4);
        int int6 = uRL5.getDefaultPort();
        java.lang.String str7 = uRL5.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file9 = fileEntryIterator8.current;
        java.io.File file10 = fileEntryIterator8.poll();
        java.io.File file11 = fileEntryIterator8.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        java.util.Comparator<java.io.File> fileComparator21 = fileComparator17.thenComparing(fileComparator20);
        fileEntryIterator12.entryComparator = fileComparator17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator17.thenComparing((java.util.Comparator<java.io.File>) entryComparator23);
        fileEntryIterator8.entryComparator = entryComparator23;
        java.io.File file26 = fileEntryIterator8.current;
        boolean boolean27 = uRL5.equals((java.lang.Object) file26);
        org.junit.Assert.assertEquals(uRL5.toString(), "file://exploded archive");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "exploded archive" + "'", str7, "exploded archive");
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.util.jar.Manifest manifest5 = null;
        explodedArchive0.manifest = manifest5;
        java.lang.String str7 = explodedArchive0.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor8 = explodedArchive0.iterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "exploded archive" + "'", str7, "exploded archive");
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        fileEntryIterator0.stack = fileItorQueue8;
        fileEntryIterator0.recursive = true;
        java.io.File file12 = fileEntryIterator0.current;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getUserInfo();
        java.lang.String str14 = uRL11.getProtocol();
        int int15 = uRL11.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler20 = null;
        java.net.URL uRL21 = new java.net.URL("file", "exploded archive", 0, "", uRLStreamHandler20);
        boolean boolean22 = uRL11.sameFile(uRL21);
        java.lang.String str23 = uRL11.getProtocol();
        java.net.Proxy proxy24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection25 = uRL11.openConnection(proxy24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals(uRL21.toString(), "file://exploded archive:0");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "file" + "'", str23, "file");
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("exploded archive", "hi!", "file");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor34 = explodedArchive0.iterator();
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor35 = explodedArchive0.iterator();
        java.lang.Class<?> wildcardClass36 = entryItor35.getClass();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entryItor34);
        org.junit.Assert.assertNotNull(entryItor35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getUserInfo();
        java.lang.String str14 = uRL11.getProtocol();
        int int15 = uRL11.getDefaultPort();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj16 = uRL11.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getRef();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = uRL3.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator0.stack;
        java.io.File file5 = fileEntryIterator0.current;
        boolean boolean6 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file8 = fileEntryIterator7.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        java.util.Comparator<java.io.File> fileComparator18 = fileComparator14.thenComparing(fileComparator17);
        fileEntryIterator9.entryComparator = fileComparator14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator14.thenComparing(fileComparator22);
        fileEntryIterator7.entryComparator = fileComparator23;
        java.io.File file25 = fileEntryIterator7.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean27 = fileEntryIterator26.recursive;
        boolean boolean28 = fileEntryIterator26.recursive;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator26.entryComparator;
        java.io.File file30 = fileEntryIterator26.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file32 = fileEntryIterator31.current;
        java.io.File file33 = fileEntryIterator31.poll();
        java.io.File file34 = fileEntryIterator31.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator35.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        java.util.Comparator<java.io.File> fileComparator43 = fileEntryIterator41.entryComparator;
        java.util.Comparator<java.io.File> fileComparator44 = fileComparator40.thenComparing(fileComparator43);
        fileEntryIterator35.entryComparator = fileComparator40;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator47 = fileComparator40.thenComparing((java.util.Comparator<java.io.File>) entryComparator46);
        fileEntryIterator31.entryComparator = entryComparator46;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        fileEntryIterator49.recursive = true;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator49.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        java.util.Comparator<java.io.File> fileComparator63 = fileComparator59.thenComparing(fileComparator62);
        fileEntryIterator54.entryComparator = fileComparator59;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator65.stack;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator65.entryComparator;
        java.util.Comparator<java.io.File> fileComparator68 = fileComparator59.thenComparing(fileComparator67);
        fileEntryIterator49.entryComparator = fileComparator68;
        java.util.Comparator<java.io.File> fileComparator70 = entryComparator46.thenComparing(fileComparator68);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file72 = explodedArchive71.manifestFile;
        java.io.File file73 = explodedArchive71.manifestFile;
        java.io.File file74 = null;
        java.io.File file75 = explodedArchive71.getManifestFile(file74);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator76 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean77 = fileEntryIterator76.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean79 = explodedArchive78.recursive;
        java.io.File file80 = explodedArchive78.manifestFile;
        java.util.jar.Manifest manifest81 = null;
        explodedArchive78.manifest = manifest81;
        java.io.File file83 = explodedArchive78.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator84 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue85 = fileEntryIterator84.stack;
        java.util.Comparator<java.io.File> fileComparator86 = fileEntryIterator84.entryComparator;
        java.io.File file87 = fileEntryIterator84.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive88 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file89 = explodedArchive88.manifestFile;
        java.io.File file90 = explodedArchive88.manifestFile;
        java.io.File file91 = null;
        java.io.File file92 = explodedArchive88.getManifestFile(file91);
        fileEntryIterator84.current = file92;
        explodedArchive78.root = file92;
        fileEntryIterator76.root = file92;
        int int96 = entryComparator46.compare(file75, file92);
        java.util.Iterator<java.io.File> fileItor97 = fileEntryIterator26.listFiles(file92);
        fileEntryIterator7.root = file92;
        java.util.Iterator<java.io.File> fileItor99 = fileEntryIterator0.listFiles(file92);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file75.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertNotNull(fileItorQueue85);
        org.junit.Assert.assertNotNull(fileComparator86);
        org.junit.Assert.assertNull(file87);
        org.junit.Assert.assertNull(file89);
        org.junit.Assert.assertNull(file90);
        org.junit.Assert.assertNotNull(file92);
        org.junit.Assert.assertEquals(file92.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file92.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
        org.junit.Assert.assertNotNull(fileItor97);
        org.junit.Assert.assertNotNull(fileItor99);
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("exploded archive", "exploded archive", (int) (byte) 0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.recursive;
        boolean boolean2 = fileEntryIterator0.recursive;
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        java.io.File file4 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file6 = fileEntryIterator5.current;
        java.io.File file7 = fileEntryIterator5.poll();
        java.io.File file8 = fileEntryIterator5.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        java.util.Comparator<java.io.File> fileComparator18 = fileComparator14.thenComparing(fileComparator17);
        fileEntryIterator9.entryComparator = fileComparator14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator21 = fileComparator14.thenComparing((java.util.Comparator<java.io.File>) entryComparator20);
        fileEntryIterator5.entryComparator = entryComparator20;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        fileEntryIterator23.recursive = true;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator31.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator33.thenComparing(fileComparator36);
        fileEntryIterator28.entryComparator = fileComparator33;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator39.entryComparator;
        java.util.Comparator<java.io.File> fileComparator42 = fileComparator33.thenComparing(fileComparator41);
        fileEntryIterator23.entryComparator = fileComparator42;
        java.util.Comparator<java.io.File> fileComparator44 = entryComparator20.thenComparing(fileComparator42);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file46 = explodedArchive45.manifestFile;
        java.io.File file47 = explodedArchive45.manifestFile;
        java.io.File file48 = null;
        java.io.File file49 = explodedArchive45.getManifestFile(file48);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean51 = fileEntryIterator50.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean53 = explodedArchive52.recursive;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.util.jar.Manifest manifest55 = null;
        explodedArchive52.manifest = manifest55;
        java.io.File file57 = explodedArchive52.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        java.io.File file61 = fileEntryIterator58.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file63 = explodedArchive62.manifestFile;
        java.io.File file64 = explodedArchive62.manifestFile;
        java.io.File file65 = null;
        java.io.File file66 = explodedArchive62.getManifestFile(file65);
        fileEntryIterator58.current = file66;
        explodedArchive52.root = file66;
        fileEntryIterator50.root = file66;
        int int70 = entryComparator20.compare(file49, file66);
        java.util.Iterator<java.io.File> fileItor71 = fileEntryIterator0.listFiles(file66);
        java.lang.Class<?> wildcardClass72 = fileEntryIterator0.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fileComparator3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(fileItor71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        java.net.URL uRL5 = new java.net.URL("file", "exploded archive", (int) (byte) -1, "", uRLStreamHandler4);
        java.lang.String str6 = uRL5.getFile();
        java.lang.String str7 = uRL5.toString();
        org.junit.Assert.assertEquals(uRL5.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "file://exploded archive" + "'", str7, "file://exploded archive");
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        boolean boolean4 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file6 = fileEntryIterator5.current;
        java.io.File file7 = fileEntryIterator5.poll();
        java.io.File file8 = fileEntryIterator5.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        java.util.Comparator<java.io.File> fileComparator18 = fileComparator14.thenComparing(fileComparator17);
        fileEntryIterator9.entryComparator = fileComparator14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator21 = fileComparator14.thenComparing((java.util.Comparator<java.io.File>) entryComparator20);
        fileEntryIterator5.entryComparator = entryComparator20;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        fileEntryIterator23.recursive = true;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator31.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator33.thenComparing(fileComparator36);
        fileEntryIterator28.entryComparator = fileComparator33;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator39.entryComparator;
        java.util.Comparator<java.io.File> fileComparator42 = fileComparator33.thenComparing(fileComparator41);
        fileEntryIterator23.entryComparator = fileComparator42;
        java.util.Comparator<java.io.File> fileComparator44 = entryComparator20.thenComparing(fileComparator42);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file46 = explodedArchive45.manifestFile;
        java.io.File file47 = explodedArchive45.manifestFile;
        java.io.File file48 = null;
        java.io.File file49 = explodedArchive45.getManifestFile(file48);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean51 = fileEntryIterator50.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean53 = explodedArchive52.recursive;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.util.jar.Manifest manifest55 = null;
        explodedArchive52.manifest = manifest55;
        java.io.File file57 = explodedArchive52.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        java.io.File file61 = fileEntryIterator58.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file63 = explodedArchive62.manifestFile;
        java.io.File file64 = explodedArchive62.manifestFile;
        java.io.File file65 = null;
        java.io.File file66 = explodedArchive62.getManifestFile(file65);
        fileEntryIterator58.current = file66;
        explodedArchive52.root = file66;
        fileEntryIterator50.root = file66;
        int int70 = entryComparator20.compare(file49, file66);
        java.util.Iterator<java.io.File> fileItor71 = fileEntryIterator0.listFiles(file66);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive(file66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(fileItor71);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        fileEntryIterator3.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator3.entryComparator = fileComparator22;
        fileEntryIterator3.recursive = true;
        fileEntryIterator3.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator3.stack;
        fileEntryIterator0.stack = fileItorQueue28;
        java.lang.Class<?> wildcardClass30 = fileEntryIterator0.getClass();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("", "file", (int) (byte) 10, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("hi!", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", (int) '#', "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = explodedArchive0.manifest;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator37 = explodedArchive0.spliterator();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str39 = fileEntry38.name;
        java.lang.String str40 = fileEntry38.name;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive41 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNotNull(entrySpliterator37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL71 = null;
        java.net.URLStreamHandler uRLStreamHandler73 = null;
        java.net.URL uRL74 = new java.net.URL(uRL71, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler73);
        java.lang.String str75 = uRL74.getHost();
        java.lang.String str76 = uRL74.getAuthority();
        java.lang.String str77 = uRL74.getAuthority();
        java.lang.String str78 = uRL74.getFile();
        int int79 = uRL74.getPort();
        java.lang.String str80 = uRL74.getRef();
        java.net.URL uRL82 = new java.net.URL(uRL74, "hi!");
        boolean boolean83 = uRL69.sameFile(uRL82);
        java.net.Proxy proxy84 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection85 = uRL69.openConnection(proxy84);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str78, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertEquals(uRL82.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry39.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        java.io.File file44 = fileEntryIterator42.current;
        boolean boolean45 = fileEntryIterator42.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator42.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean48 = explodedArchive47.recursive;
        boolean boolean49 = explodedArchive47.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file51 = explodedArchive50.manifestFile;
        java.io.File file52 = explodedArchive50.manifestFile;
        java.io.File file53 = null;
        java.io.File file54 = explodedArchive50.getManifestFile(file53);
        explodedArchive47.root = file54;
        fileEntryIterator42.root = file54;
        fileEntry39.file = file54;
        java.io.File file58 = fileEntry39.getFile();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive59 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: File must exist");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file58.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.lang.String str73 = uRL69.toExternalForm();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream74 = uRL69.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str73 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str73, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL71 = null;
        java.net.URLStreamHandler uRLStreamHandler73 = null;
        java.net.URL uRL74 = new java.net.URL(uRL71, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler73);
        java.lang.String str75 = uRL74.getHost();
        java.lang.String str76 = uRL74.getAuthority();
        java.lang.String str77 = uRL74.getAuthority();
        java.lang.String str78 = uRL74.getFile();
        int int79 = uRL74.getPort();
        java.lang.String str80 = uRL74.getRef();
        java.net.URL uRL82 = new java.net.URL(uRL74, "hi!");
        boolean boolean83 = uRL69.sameFile(uRL82);
        java.lang.Class<?> wildcardClass84 = uRL69.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str78, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertEquals(uRL82.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getFile();
        java.net.URLConnection uRLConnection14 = uRL11.openConnection();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.manifestFile;
        java.io.File file17 = explodedArchive15.manifestFile;
        explodedArchive15.recursive = true;
        java.util.jar.Manifest manifest20 = null;
        explodedArchive15.manifest = manifest20;
        java.lang.String str22 = explodedArchive15.toString();
        boolean boolean23 = uRL11.equals((java.lang.Object) explodedArchive15);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str13, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection14);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "exploded archive" + "'", str22, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = null;
        fileEntryIterator0.current = file2;
        java.io.File file4 = fileEntryIterator0.root;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry5 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file4);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getProtocol();
        java.net.URL uRL6 = new java.net.URL(uRL3, "file");
        java.net.Proxy proxy7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection8 = uRL6.openConnection(proxy7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "file" + "'", str4, "file");
        org.junit.Assert.assertEquals(uRL6.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.util.jar.Manifest manifest4 = explodedArchive0.manifest;
        java.io.File file5 = null;
        java.io.File file6 = explodedArchive0.getManifestFile(file5);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor7 = explodedArchive0.iterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("hi!", "exploded archive", 10, "file://exploded archive", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "file://exploded archive", (int) (short) 0, "hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/manifest.mf");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator3.entryComparator;
        fileEntryIterator0.entryComparator = fileComparator5;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.manifestFile;
        java.io.File file9 = explodedArchive7.manifestFile;
        java.io.File file10 = null;
        java.io.File file11 = explodedArchive7.getManifestFile(file10);
        fileEntryIterator0.root = file10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean14 = fileEntryIterator13.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean16 = explodedArchive15.recursive;
        java.io.File file17 = explodedArchive15.manifestFile;
        java.util.jar.Manifest manifest18 = null;
        explodedArchive15.manifest = manifest18;
        java.io.File file20 = explodedArchive15.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        java.io.File file24 = fileEntryIterator21.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.manifestFile;
        java.io.File file27 = explodedArchive25.manifestFile;
        java.io.File file28 = null;
        java.io.File file29 = explodedArchive25.getManifestFile(file28);
        fileEntryIterator21.current = file29;
        explodedArchive15.root = file29;
        fileEntryIterator13.root = file29;
        java.util.Iterator<java.io.File> fileItor33 = fileEntryIterator0.listFiles(file29);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor33);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.net.URLStreamHandler uRLStreamHandler7 = null;
        java.net.URL uRL8 = new java.net.URL(uRL3, "hi!", uRLStreamHandler7);
        java.lang.String str9 = uRL3.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals(uRL8.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str9, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.net.URI uRI4 = uRL3.toURI();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file6 = explodedArchive5.manifestFile;
        java.io.File file7 = explodedArchive5.manifestFile;
        java.lang.String str8 = explodedArchive5.toString();
        java.io.File file9 = explodedArchive5.root;
        explodedArchive5.recursive = true;
        java.io.File file12 = null;
        explodedArchive5.manifestFile = file12;
        boolean boolean14 = uRL3.equals((java.lang.Object) file12);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI4);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "exploded archive" + "'", str8, "exploded archive");
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.io.File file9 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        fileEntryIterator6.current = file14;
        explodedArchive0.root = file14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file18 = fileEntry17.getFile();
        java.io.File file19 = fileEntry17.file;
        java.io.File file20 = null;
        fileEntry17.file = file20;
        java.lang.String str22 = fileEntry17.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        boolean boolean25 = fileEntryIterator23.hasNext();
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        java.util.Comparator<java.io.File> fileComparator36 = fileComparator32.thenComparing(fileComparator35);
        fileEntryIterator27.entryComparator = fileComparator32;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator39 = fileComparator32.thenComparing((java.util.Comparator<java.io.File>) entryComparator38);
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator26.thenComparing((java.util.Comparator<java.io.File>) entryComparator38);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean42 = fileEntryIterator41.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean44 = explodedArchive43.recursive;
        java.io.File file45 = explodedArchive43.manifestFile;
        java.util.jar.Manifest manifest46 = null;
        explodedArchive43.manifest = manifest46;
        java.io.File file48 = explodedArchive43.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.io.File file52 = fileEntryIterator49.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file54 = explodedArchive53.manifestFile;
        java.io.File file55 = explodedArchive53.manifestFile;
        java.io.File file56 = null;
        java.io.File file57 = explodedArchive53.getManifestFile(file56);
        fileEntryIterator49.current = file57;
        explodedArchive43.root = file57;
        fileEntryIterator41.root = file57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file62 = explodedArchive61.manifestFile;
        java.io.File file63 = explodedArchive61.manifestFile;
        java.io.File file64 = null;
        java.io.File file65 = explodedArchive61.getManifestFile(file64);
        boolean boolean66 = explodedArchive61.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue68 = fileEntryIterator67.stack;
        fileEntryIterator67.recursive = true;
        java.util.Comparator<java.io.File> fileComparator71 = fileEntryIterator67.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator72 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue73 = fileEntryIterator72.stack;
        java.util.Comparator<java.io.File> fileComparator74 = fileEntryIterator72.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator75 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue76 = fileEntryIterator75.stack;
        java.util.Comparator<java.io.File> fileComparator77 = fileEntryIterator75.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator78 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue79 = fileEntryIterator78.stack;
        java.util.Comparator<java.io.File> fileComparator80 = fileEntryIterator78.entryComparator;
        java.util.Comparator<java.io.File> fileComparator81 = fileComparator77.thenComparing(fileComparator80);
        fileEntryIterator72.entryComparator = fileComparator77;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator83 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue84 = fileEntryIterator83.stack;
        java.util.Comparator<java.io.File> fileComparator85 = fileEntryIterator83.entryComparator;
        java.util.Comparator<java.io.File> fileComparator86 = fileComparator77.thenComparing(fileComparator85);
        fileEntryIterator67.entryComparator = fileComparator86;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive88 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file89 = explodedArchive88.manifestFile;
        java.io.File file90 = explodedArchive88.manifestFile;
        java.io.File file91 = null;
        java.io.File file92 = explodedArchive88.getManifestFile(file91);
        fileEntryIterator67.root = file92;
        explodedArchive61.root = file92;
        int int95 = entryComparator38.compare(file57, file92);
        fileEntry17.file = file92;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive97 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: File must exist");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNotNull(file57);
        org.junit.Assert.assertEquals(file57.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file57.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file65.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(fileItorQueue68);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileItorQueue73);
        org.junit.Assert.assertNotNull(fileComparator74);
        org.junit.Assert.assertNotNull(fileItorQueue76);
        org.junit.Assert.assertNotNull(fileComparator77);
        org.junit.Assert.assertNotNull(fileItorQueue79);
        org.junit.Assert.assertNotNull(fileComparator80);
        org.junit.Assert.assertNotNull(fileComparator81);
        org.junit.Assert.assertNotNull(fileItorQueue84);
        org.junit.Assert.assertNotNull(fileComparator85);
        org.junit.Assert.assertNotNull(fileComparator86);
        org.junit.Assert.assertNull(file89);
        org.junit.Assert.assertNull(file90);
        org.junit.Assert.assertNotNull(file92);
        org.junit.Assert.assertEquals(file92.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file92.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file", "file://exploded archive", (int) '#', "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: Illegal character found in host: '/'");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str2 = uRL1.getRef();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream3 = uRL1.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL71 = null;
        java.net.URLStreamHandler uRLStreamHandler73 = null;
        java.net.URL uRL74 = new java.net.URL(uRL71, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler73);
        java.lang.String str75 = uRL74.getHost();
        java.lang.String str76 = uRL74.getAuthority();
        java.lang.String str77 = uRL74.getAuthority();
        java.lang.String str78 = uRL74.getFile();
        int int79 = uRL74.getPort();
        java.lang.String str80 = uRL74.getRef();
        java.net.URL uRL82 = new java.net.URL(uRL74, "hi!");
        boolean boolean83 = uRL69.sameFile(uRL82);
        java.net.URLConnection uRLConnection84 = uRL82.openConnection();
        java.net.Proxy proxy85 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection86 = uRL82.openConnection(proxy85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str78, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertEquals(uRL82.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(uRLConnection84);
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("", "", (int) (byte) -1, "hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "file", (int) (byte) 10, "hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/manifest.mf");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getFile();
        java.lang.Class[] classArray7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = uRL3.getContent(classArray7);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "", (int) 'a', "file");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/manifest.mf");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator2.stack;
        fileEntryIterator0.stack = fileItorQueue3;
        boolean boolean5 = fileEntryIterator0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry6 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("exploded archive", "file", 0, "exploded archive", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.net.URL uRL74 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str75 = uRL69.getRef();
        int int76 = uRL69.getDefaultPort();
        java.lang.String str77 = uRL69.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
// flaky:         org.junit.Assert.assertEquals("'" + str77 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str77, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.recursive;
        boolean boolean2 = fileEntryIterator0.recursive;
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        java.io.File file4 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean7 = fileEntryIterator6.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean9 = explodedArchive8.recursive;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.util.jar.Manifest manifest11 = null;
        explodedArchive8.manifest = manifest11;
        java.io.File file13 = explodedArchive8.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.io.File file17 = fileEntryIterator14.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.manifestFile;
        java.io.File file20 = explodedArchive18.manifestFile;
        java.io.File file21 = null;
        java.io.File file22 = explodedArchive18.getManifestFile(file21);
        fileEntryIterator14.current = file22;
        explodedArchive8.root = file22;
        fileEntryIterator6.root = file22;
        explodedArchive5.root = file22;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator27 = explodedArchive5.spliterator();
        java.io.File file28 = explodedArchive5.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str30 = fileEntry29.name;
        java.io.File file31 = fileEntry29.file;
        fileEntry29.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        boolean boolean36 = fileEntryIterator34.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file38 = explodedArchive37.manifestFile;
        java.io.File file39 = explodedArchive37.manifestFile;
        java.io.File file40 = null;
        java.io.File file41 = explodedArchive37.getManifestFile(file40);
        boolean boolean42 = explodedArchive37.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        fileEntryIterator43.recursive = true;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator53.thenComparing(fileComparator56);
        fileEntryIterator48.entryComparator = fileComparator53;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        java.util.Comparator<java.io.File> fileComparator62 = fileComparator53.thenComparing(fileComparator61);
        fileEntryIterator43.entryComparator = fileComparator62;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file65 = explodedArchive64.manifestFile;
        java.io.File file66 = explodedArchive64.manifestFile;
        java.io.File file67 = null;
        java.io.File file68 = explodedArchive64.getManifestFile(file67);
        fileEntryIterator43.root = file68;
        explodedArchive37.root = file68;
        java.util.Iterator<java.io.File> fileItor71 = fileEntryIterator34.listFiles(file68);
        fileEntry29.file = file68;
        explodedArchive5.root = file68;
        java.util.Iterator<java.io.File> fileItor74 = fileEntryIterator0.listFiles(file68);
        java.io.File file75 = fileEntryIterator0.poll();
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fileComparator3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file68.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor71);
        org.junit.Assert.assertNotNull(fileItor74);
        org.junit.Assert.assertNull(file75);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.manifestFile;
        java.io.File file4 = explodedArchive2.manifestFile;
        java.io.File file5 = null;
        java.io.File file6 = explodedArchive2.getManifestFile(file5);
        fileEntryIterator0.current = file5;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        fileEntryIterator0.entryComparator = fileComparator10;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry12 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", 100, "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/manifest.mf");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator0.stack;
        java.io.File file5 = fileEntryIterator0.current;
        boolean boolean6 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator12.thenComparing(fileComparator15);
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator9.thenComparing(fileComparator15);
        fileEntryIterator0.entryComparator = fileComparator15;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        boolean boolean21 = fileEntryIterator19.hasNext();
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator28.thenComparing(fileComparator31);
        fileEntryIterator23.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator28.thenComparing((java.util.Comparator<java.io.File>) entryComparator34);
        java.util.Comparator<java.io.File> fileComparator36 = fileComparator22.thenComparing((java.util.Comparator<java.io.File>) entryComparator34);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean38 = fileEntryIterator37.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean40 = explodedArchive39.recursive;
        java.io.File file41 = explodedArchive39.manifestFile;
        java.util.jar.Manifest manifest42 = null;
        explodedArchive39.manifest = manifest42;
        java.io.File file44 = explodedArchive39.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator45.entryComparator;
        java.io.File file48 = fileEntryIterator45.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file50 = explodedArchive49.manifestFile;
        java.io.File file51 = explodedArchive49.manifestFile;
        java.io.File file52 = null;
        java.io.File file53 = explodedArchive49.getManifestFile(file52);
        fileEntryIterator45.current = file53;
        explodedArchive39.root = file53;
        fileEntryIterator37.root = file53;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.manifestFile;
        java.io.File file59 = explodedArchive57.manifestFile;
        java.io.File file60 = null;
        java.io.File file61 = explodedArchive57.getManifestFile(file60);
        boolean boolean62 = explodedArchive57.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        fileEntryIterator63.recursive = true;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator63.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator71 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue72 = fileEntryIterator71.stack;
        java.util.Comparator<java.io.File> fileComparator73 = fileEntryIterator71.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator74 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue75 = fileEntryIterator74.stack;
        java.util.Comparator<java.io.File> fileComparator76 = fileEntryIterator74.entryComparator;
        java.util.Comparator<java.io.File> fileComparator77 = fileComparator73.thenComparing(fileComparator76);
        fileEntryIterator68.entryComparator = fileComparator73;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator79 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue80 = fileEntryIterator79.stack;
        java.util.Comparator<java.io.File> fileComparator81 = fileEntryIterator79.entryComparator;
        java.util.Comparator<java.io.File> fileComparator82 = fileComparator73.thenComparing(fileComparator81);
        fileEntryIterator63.entryComparator = fileComparator82;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive84 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file85 = explodedArchive84.manifestFile;
        java.io.File file86 = explodedArchive84.manifestFile;
        java.io.File file87 = null;
        java.io.File file88 = explodedArchive84.getManifestFile(file87);
        fileEntryIterator63.root = file88;
        explodedArchive57.root = file88;
        int int91 = entryComparator34.compare(file53, file88);
        fileEntryIterator0.root = file88;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileItorQueue72);
        org.junit.Assert.assertNotNull(fileComparator73);
        org.junit.Assert.assertNotNull(fileItorQueue75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNotNull(fileComparator77);
        org.junit.Assert.assertNotNull(fileItorQueue80);
        org.junit.Assert.assertNotNull(fileComparator81);
        org.junit.Assert.assertNotNull(fileComparator82);
        org.junit.Assert.assertNull(file85);
        org.junit.Assert.assertNull(file86);
        org.junit.Assert.assertNotNull(file88);
        org.junit.Assert.assertEquals(file88.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file88.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        fileEntryIterator0.recursive = true;
        fileEntryIterator0.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean27 = explodedArchive26.recursive;
        boolean boolean28 = explodedArchive26.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file30 = explodedArchive29.manifestFile;
        java.io.File file31 = explodedArchive29.manifestFile;
        java.io.File file32 = null;
        java.io.File file33 = explodedArchive29.getManifestFile(file32);
        explodedArchive26.root = file33;
        fileEntryIterator0.root = file33;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file37 = explodedArchive36.manifestFile;
        java.io.File file38 = explodedArchive36.manifestFile;
        java.io.File file39 = null;
        java.io.File file40 = explodedArchive36.getManifestFile(file39);
        boolean boolean41 = explodedArchive36.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        fileEntryIterator42.recursive = true;
        java.util.Comparator<java.io.File> fileComparator46 = fileEntryIterator42.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue48 = fileEntryIterator47.stack;
        java.util.Comparator<java.io.File> fileComparator49 = fileEntryIterator47.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        java.util.Comparator<java.io.File> fileComparator52 = fileEntryIterator50.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        java.util.Comparator<java.io.File> fileComparator56 = fileComparator52.thenComparing(fileComparator55);
        fileEntryIterator47.entryComparator = fileComparator52;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        java.util.Comparator<java.io.File> fileComparator61 = fileComparator52.thenComparing(fileComparator60);
        fileEntryIterator42.entryComparator = fileComparator61;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file64 = explodedArchive63.manifestFile;
        java.io.File file65 = explodedArchive63.manifestFile;
        java.io.File file66 = null;
        java.io.File file67 = explodedArchive63.getManifestFile(file66);
        fileEntryIterator42.root = file67;
        explodedArchive36.root = file67;
        explodedArchive36.recursive = false;
        java.util.jar.Manifest manifest72 = null;
        explodedArchive36.manifest = manifest72;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator74 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file75 = fileEntryIterator74.current;
        java.io.File file76 = fileEntryIterator74.poll();
        java.io.File file77 = fileEntryIterator74.poll();
        java.io.File file78 = fileEntryIterator74.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator79 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue80 = fileEntryIterator79.stack;
        java.io.File file81 = fileEntryIterator79.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file83 = explodedArchive82.manifestFile;
        java.io.File file84 = explodedArchive82.manifestFile;
        java.io.File file85 = null;
        java.io.File file86 = explodedArchive82.getManifestFile(file85);
        fileEntryIterator79.root = file85;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive88 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file89 = explodedArchive88.manifestFile;
        java.io.File file90 = explodedArchive88.manifestFile;
        java.io.File file91 = null;
        java.io.File file92 = explodedArchive88.getManifestFile(file91);
        java.util.Iterator<java.io.File> fileItor93 = fileEntryIterator79.listFiles(file92);
        fileEntryIterator74.root = file92;
        explodedArchive36.root = file92;
        fileEntryIterator0.current = file92;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive98 = new org.springframework.boot.loader.archive.ExplodedArchive(file92, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file40.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNotNull(fileItorQueue48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file67.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNull(file78);
        org.junit.Assert.assertNotNull(fileItorQueue80);
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertNull(file84);
        org.junit.Assert.assertNotNull(file86);
        org.junit.Assert.assertEquals(file86.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file86.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file89);
        org.junit.Assert.assertNull(file90);
        org.junit.Assert.assertNotNull(file92);
        org.junit.Assert.assertEquals(file92.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file92.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor93);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        fileEntryIterator0.recursive = true;
        fileEntryIterator0.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator0.stack;
        boolean boolean26 = fileEntryIterator0.recursive;
        boolean boolean27 = fileEntryIterator0.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator0.stack;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry29 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(fileItorQueue28);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        int int11 = uRL9.getPort();
        java.net.URL uRL12 = null;
        java.net.URLStreamHandler uRLStreamHandler14 = null;
        java.net.URL uRL15 = new java.net.URL(uRL12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler14);
        java.lang.String str16 = uRL15.getHost();
        java.lang.String str17 = uRL15.getAuthority();
        java.lang.String str18 = uRL15.getQuery();
        int int19 = uRL15.getDefaultPort();
        boolean boolean20 = uRL9.sameFile(uRL15);
        boolean boolean21 = uRL3.sameFile(uRL9);
        int int22 = uRL3.getDefaultPort();
        java.lang.String str23 = uRL3.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str23, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", (int) (short) 1, "exploded archive", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/manifest.mf");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", 10, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.util.jar.Manifest manifest5 = null;
        explodedArchive0.manifest = manifest5;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL7 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.util.jar.Manifest manifest4 = null;
        explodedArchive0.manifest = manifest4;
        java.lang.String str6 = explodedArchive0.toString();
        java.lang.String str7 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive0.getNestedArchives(entryFilter8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "exploded archive" + "'", str6, "exploded archive");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "exploded archive" + "'", str7, "exploded archive");
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getUserInfo();
        java.lang.String str14 = uRL11.getProtocol();
        int int15 = uRL11.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler20 = null;
        java.net.URL uRL21 = new java.net.URL("file", "exploded archive", 0, "", uRLStreamHandler20);
        boolean boolean22 = uRL11.sameFile(uRL21);
        java.lang.String str23 = uRL11.getProtocol();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj24 = uRL11.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals(uRL21.toString(), "file://exploded archive:0");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "file" + "'", str23, "file");
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator15);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        java.util.Comparator<java.io.File> fileComparator26 = fileComparator22.thenComparing(fileComparator25);
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator19.thenComparing(fileComparator25);
        java.util.Comparator<java.io.File> fileComparator28 = entryComparator15.thenComparing(fileComparator27);
        java.util.Comparator<java.io.File> fileComparator29 = entryComparator15.reversed();
        fileEntryIterator0.entryComparator = fileComparator29;
        java.util.Comparator<java.io.File> fileComparator31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Comparator<java.io.File> fileComparator32 = fileComparator29.thenComparing(fileComparator31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileComparator29);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        int int8 = uRL3.getPort();
        java.lang.String str9 = uRL3.getRef();
        java.net.URL uRL11 = new java.net.URL(uRL3, "hi!");
        java.lang.String str12 = uRL11.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "hi!", (int) (byte) 100, "exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/manifest.mf");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.manifestFile;
        java.io.File file8 = explodedArchive6.manifestFile;
        java.io.File file9 = null;
        java.io.File file10 = explodedArchive6.getManifestFile(file9);
        boolean boolean11 = explodedArchive6.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        fileEntryIterator12.recursive = true;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        java.util.Comparator<java.io.File> fileComparator26 = fileComparator22.thenComparing(fileComparator25);
        fileEntryIterator17.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        java.util.Comparator<java.io.File> fileComparator31 = fileComparator22.thenComparing(fileComparator30);
        fileEntryIterator12.entryComparator = fileComparator31;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file34 = explodedArchive33.manifestFile;
        java.io.File file35 = explodedArchive33.manifestFile;
        java.io.File file36 = null;
        java.io.File file37 = explodedArchive33.getManifestFile(file36);
        fileEntryIterator12.root = file37;
        explodedArchive6.root = file37;
        explodedArchive6.recursive = false;
        java.util.jar.Manifest manifest42 = null;
        explodedArchive6.manifest = manifest42;
        java.lang.String str44 = explodedArchive6.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter45 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList46 = explodedArchive6.getNestedArchives(entryFilter45);
        java.io.File file47 = explodedArchive6.root;
        explodedArchive0.root = file47;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file50 = fileEntry49.getFile();
        java.lang.String str51 = fileEntry49.getName();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive52 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str44, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList46);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(str51);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file://exploded archive", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", (int) (short) 0, "", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file://exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", (-1), "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/manifest.mf");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getFile();
        int int14 = uRL11.getPort();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = uRL11.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str13, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        boolean boolean6 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", 100, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("", "file", (int) ' ', "exploded archive", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        fileEntryIterator0.stack = fileItorQueue8;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file11 = fileEntryIterator10.current;
        java.io.File file12 = fileEntryIterator10.poll();
        java.io.File file13 = fileEntryIterator10.poll();
        java.io.File file14 = fileEntryIterator10.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.io.File file17 = fileEntryIterator15.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.manifestFile;
        java.io.File file20 = explodedArchive18.manifestFile;
        java.io.File file21 = null;
        java.io.File file22 = explodedArchive18.getManifestFile(file21);
        fileEntryIterator15.root = file21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        java.util.Iterator<java.io.File> fileItor29 = fileEntryIterator15.listFiles(file28);
        fileEntryIterator10.root = file28;
        java.util.Iterator<java.io.File> fileItor31 = fileEntryIterator0.listFiles(file28);
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor29);
        org.junit.Assert.assertNotNull(fileItor31);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        java.util.jar.Manifest manifest24 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest25 = explodedArchive0.manifest;
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest26 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertNull(manifest25);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        int int7 = uRL3.getPort();
        java.lang.String str8 = uRL3.getPath();
        java.net.URL uRL9 = null;
        java.net.URLStreamHandler uRLStreamHandler11 = null;
        java.net.URL uRL12 = new java.net.URL(uRL9, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler11);
        java.lang.String str13 = uRL12.getHost();
        java.lang.String str14 = uRL12.getAuthority();
        java.lang.String str15 = uRL12.getQuery();
        int int16 = uRL12.getDefaultPort();
        java.lang.String str17 = uRL12.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler19 = null;
        java.net.URL uRL20 = new java.net.URL(uRL12, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler19);
        java.lang.String str21 = uRL20.toExternalForm();
        java.lang.String str22 = uRL20.getFile();
        java.net.URLConnection uRLConnection23 = uRL20.openConnection();
        java.lang.String str24 = uRL20.getAuthority();
        boolean boolean25 = uRL3.equals((java.lang.Object) uRL20);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL12.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals(uRL20.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str21, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str22, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.util.Comparator<java.io.File> fileComparator2 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.util.Comparator<java.io.File> fileComparator9 = fileComparator5.thenComparing(fileComparator8);
        fileEntryIterator0.entryComparator = fileComparator5;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator12 = fileComparator5.thenComparing((java.util.Comparator<java.io.File>) entryComparator11);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator18.thenComparing(fileComparator21);
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator15.thenComparing(fileComparator21);
        java.util.Comparator<java.io.File> fileComparator24 = entryComparator11.thenComparing(fileComparator23);
        java.util.Comparator<java.io.File> fileComparator25 = entryComparator11.reversed();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean27 = explodedArchive26.recursive;
        boolean boolean28 = explodedArchive26.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file30 = explodedArchive29.manifestFile;
        java.io.File file31 = explodedArchive29.manifestFile;
        java.io.File file32 = null;
        java.io.File file33 = explodedArchive29.getManifestFile(file32);
        explodedArchive26.root = file33;
        explodedArchive26.recursive = false;
        java.io.File file37 = explodedArchive26.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.lang.String str41 = explodedArchive38.toString();
        java.util.jar.Manifest manifest42 = explodedArchive38.manifest;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive38.getManifestFile(file43);
        // The following exception was thrown during execution in test generation
        try {
            int int45 = entryComparator11.compare(file37, file43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "exploded archive" + "'", str41, "exploded archive");
        org.junit.Assert.assertNull(manifest42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        boolean boolean3 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        java.util.Comparator<java.io.File> fileComparator18 = fileComparator9.thenComparing(fileComparator17);
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator17.reversed();
        fileEntryIterator0.entryComparator = fileComparator17;
        boolean boolean21 = fileEntryIterator0.recursive;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        java.lang.String str5 = fileEntry0.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file7 = fileEntryIterator6.current;
        java.io.File file8 = null;
        fileEntryIterator6.current = file8;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean11 = explodedArchive10.recursive;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.util.jar.Manifest manifest13 = null;
        explodedArchive10.manifest = manifest13;
        java.io.File file15 = explodedArchive10.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.io.File file19 = fileEntryIterator16.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.manifestFile;
        java.io.File file22 = explodedArchive20.manifestFile;
        java.io.File file23 = null;
        java.io.File file24 = explodedArchive20.getManifestFile(file23);
        fileEntryIterator16.current = file24;
        explodedArchive10.root = file24;
        fileEntryIterator6.root = file24;
        fileEntry0.file = file24;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        java.lang.String str5 = fileEntry0.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file7 = fileEntryIterator6.current;
        java.io.File file8 = null;
        fileEntryIterator6.current = file8;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean11 = explodedArchive10.recursive;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.util.jar.Manifest manifest13 = null;
        explodedArchive10.manifest = manifest13;
        java.io.File file15 = explodedArchive10.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.io.File file19 = fileEntryIterator16.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.manifestFile;
        java.io.File file22 = explodedArchive20.manifestFile;
        java.io.File file23 = null;
        java.io.File file24 = explodedArchive20.getManifestFile(file23);
        fileEntryIterator16.current = file24;
        explodedArchive10.root = file24;
        fileEntryIterator6.root = file24;
        fileEntry0.file = file24;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file24, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file://exploded archive", "file", 10, "", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file://exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.name;
        java.io.File file3 = fileEntry0.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        boolean boolean6 = fileEntryIterator4.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.manifestFile;
        java.io.File file9 = explodedArchive7.manifestFile;
        java.io.File file10 = null;
        java.io.File file11 = explodedArchive7.getManifestFile(file10);
        boolean boolean12 = explodedArchive7.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        fileEntryIterator13.recursive = true;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator23.thenComparing(fileComparator26);
        fileEntryIterator18.entryComparator = fileComparator23;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator23.thenComparing(fileComparator31);
        fileEntryIterator13.entryComparator = fileComparator32;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file35 = explodedArchive34.manifestFile;
        java.io.File file36 = explodedArchive34.manifestFile;
        java.io.File file37 = null;
        java.io.File file38 = explodedArchive34.getManifestFile(file37);
        fileEntryIterator13.root = file38;
        explodedArchive7.root = file38;
        java.util.Iterator<java.io.File> fileItor41 = fileEntryIterator4.listFiles(file38);
        fileEntry0.file = file38;
        fileEntry0.name = "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF";
        java.lang.Class<?> wildcardClass45 = fileEntry0.getClass();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor41);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        fileEntryIterator0.recursive = true;
        fileEntryIterator0.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator0.stack;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue25);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator2.stack;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator2.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        java.util.Comparator<java.io.File> fileComparator11 = fileComparator7.thenComparing(fileComparator10);
        fileEntryIterator2.entryComparator = fileComparator7;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator7.thenComparing(fileComparator15);
        fileEntryIterator0.entryComparator = fileComparator16;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator0.stack;
        boolean boolean19 = fileEntryIterator0.recursive;
        java.lang.Class<?> wildcardClass20 = fileEntryIterator0.getClass();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.lang.String str6 = uRL3.getProtocol();
        int int7 = uRL3.getPort();
        java.lang.String str8 = uRL3.getAuthority();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file" + "'", str6, "file");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.util.jar.Manifest manifest4 = explodedArchive0.manifest;
        java.io.File file5 = null;
        java.io.File file6 = explodedArchive0.getManifestFile(file5);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file6, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getAuthority();
        java.lang.String str9 = uRL3.getFile();
        java.lang.String str10 = uRL3.getFile();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream11 = uRL3.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getProtocol();
        java.lang.String str5 = uRL3.getUserInfo();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler16);
        boolean boolean18 = uRL3.sameFile(uRL17);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.manifestFile;
        java.io.File file21 = explodedArchive19.manifestFile;
        java.io.File file22 = null;
        java.io.File file23 = explodedArchive19.getManifestFile(file22);
        boolean boolean24 = explodedArchive19.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        fileEntryIterator25.recursive = true;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator25.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        java.util.Comparator<java.io.File> fileComparator39 = fileComparator35.thenComparing(fileComparator38);
        fileEntryIterator30.entryComparator = fileComparator35;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        java.util.Comparator<java.io.File> fileComparator43 = fileEntryIterator41.entryComparator;
        java.util.Comparator<java.io.File> fileComparator44 = fileComparator35.thenComparing(fileComparator43);
        fileEntryIterator25.entryComparator = fileComparator44;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        fileEntryIterator25.root = file50;
        explodedArchive19.root = file50;
        explodedArchive19.recursive = false;
        java.util.jar.Manifest manifest55 = null;
        explodedArchive19.manifest = manifest55;
        java.lang.String str57 = explodedArchive19.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter58 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList59 = explodedArchive19.getNestedArchives(entryFilter58);
        java.io.File file60 = explodedArchive19.root;
        explodedArchive19.recursive = true;
        java.lang.String str63 = explodedArchive19.toString();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator64 = explodedArchive19.spliterator();
        boolean boolean65 = uRL3.equals((java.lang.Object) explodedArchive19);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "file" + "'", str4, "file");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str57 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str57, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList59);
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file60.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str63 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str63, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        fileEntryIterator3.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator3.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        fileEntryIterator3.root = file28;
        explodedArchive0.manifestFile = file28;
        java.util.jar.Manifest manifest31 = explodedArchive0.manifest;
        boolean boolean32 = explodedArchive0.recursive;
        java.io.File file33 = explodedArchive0.root;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator34 = explodedArchive0.spliterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(file33);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive0.getNestedArchives(entryFilter36);
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest38 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList37);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        java.util.jar.Manifest manifest41 = null;
        explodedArchive0.manifest = manifest41;
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest43 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file6 = fileEntry5.getFile();
        java.lang.String str7 = fileEntry5.name;
        java.io.File file8 = fileEntry5.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        boolean boolean11 = fileEntryIterator9.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.manifestFile;
        java.io.File file14 = explodedArchive12.manifestFile;
        java.io.File file15 = null;
        java.io.File file16 = explodedArchive12.getManifestFile(file15);
        boolean boolean17 = explodedArchive12.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        fileEntryIterator18.recursive = true;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator28.thenComparing(fileComparator31);
        fileEntryIterator23.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator28.thenComparing(fileComparator36);
        fileEntryIterator18.entryComparator = fileComparator37;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file40 = explodedArchive39.manifestFile;
        java.io.File file41 = explodedArchive39.manifestFile;
        java.io.File file42 = null;
        java.io.File file43 = explodedArchive39.getManifestFile(file42);
        fileEntryIterator18.root = file43;
        explodedArchive12.root = file43;
        java.util.Iterator<java.io.File> fileItor46 = fileEntryIterator9.listFiles(file43);
        fileEntry5.file = file43;
        explodedArchive0.manifestFile = file43;
        java.io.File file49 = explodedArchive0.manifestFile;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive(file49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file16.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file43.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor46);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str4, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        boolean boolean4 = fileEntryIterator0.recursive;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.net.URI uRI4 = uRL3.toURI();
        java.lang.String str5 = uRL3.getFile();
        java.lang.String str6 = uRL3.getAuthority();
        int int7 = uRL3.getPort();
        java.net.Proxy proxy8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection9 = uRL3.openConnection(proxy8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str5, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        java.io.File file5 = explodedArchive0.manifestFile;
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "exploded archive" + "'", str6, "exploded archive");
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        boolean boolean4 = explodedArchive0.recursive;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor5 = explodedArchive0.iterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.net.URL uRL13 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        fileEntryIterator14.recursive = true;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator24.thenComparing(fileComparator27);
        fileEntryIterator19.entryComparator = fileComparator24;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator24.thenComparing(fileComparator32);
        fileEntryIterator14.entryComparator = fileComparator33;
        fileEntryIterator14.recursive = true;
        fileEntryIterator14.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator14.stack;
        java.lang.Class<?> wildcardClass40 = fileEntryIterator14.getClass();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str42 = fileEntry41.name;
        java.lang.String str43 = fileEntry41.name;
        java.lang.Class<?> wildcardClass44 = fileEntry41.getClass();
        java.net.URL uRL45 = null;
        java.net.URLStreamHandler uRLStreamHandler47 = null;
        java.net.URL uRL48 = new java.net.URL(uRL45, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler47);
        java.lang.String str49 = uRL48.getHost();
        java.net.URI uRI50 = uRL48.toURI();
        java.lang.String str51 = uRL48.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler53 = null;
        java.net.URL uRL54 = new java.net.URL(uRL48, "file", uRLStreamHandler53);
        java.lang.Class<?> wildcardClass55 = uRL48.getClass();
        java.lang.Class[] classArray56 = new java.lang.Class[] { wildcardClass40, wildcardClass44, wildcardClass55 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj57 = uRL3.getContent(classArray56);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL13.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals(uRL48.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(uRI50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str51, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL54.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classArray56);
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        fileEntryIterator39.recursive = true;
        java.util.Comparator<java.io.File> fileComparator43 = fileEntryIterator39.entryComparator;
        fileEntryIterator39.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        fileEntryIterator39.stack = fileItorQueue47;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file50 = fileEntryIterator49.current;
        java.io.File file51 = fileEntryIterator49.poll();
        java.io.File file52 = fileEntryIterator49.poll();
        java.io.File file53 = fileEntryIterator49.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.io.File file56 = fileEntryIterator54.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.manifestFile;
        java.io.File file59 = explodedArchive57.manifestFile;
        java.io.File file60 = null;
        java.io.File file61 = explodedArchive57.getManifestFile(file60);
        fileEntryIterator54.root = file60;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file64 = explodedArchive63.manifestFile;
        java.io.File file65 = explodedArchive63.manifestFile;
        java.io.File file66 = null;
        java.io.File file67 = explodedArchive63.getManifestFile(file66);
        java.util.Iterator<java.io.File> fileItor68 = fileEntryIterator54.listFiles(file67);
        fileEntryIterator49.root = file67;
        java.util.Iterator<java.io.File> fileItor70 = fileEntryIterator39.listFiles(file67);
        java.io.File file71 = explodedArchive0.getManifestFile(file67);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive(file71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file67.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor68);
        org.junit.Assert.assertNotNull(fileItor70);
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file71.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", "file://exploded archive", (int) (byte) -1, "file", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        int int7 = uRL3.getPort();
        java.lang.String str8 = uRL3.getPath();
        java.lang.String str9 = uRL3.getHost();
        java.lang.String str10 = uRL3.getAuthority();
        java.net.URL uRL12 = new java.net.URL(uRL3, "hi!");
        java.net.URLStreamHandler uRLStreamHandler14 = null;
        java.net.URL uRL15 = new java.net.URL(uRL12, "exploded archive", uRLStreamHandler14);
        java.net.Proxy proxy16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection17 = uRL12.openConnection(proxy16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals(uRL12.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator3.entryComparator;
        fileEntryIterator0.entryComparator = fileComparator5;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.manifestFile;
        java.io.File file9 = explodedArchive7.manifestFile;
        java.io.File file10 = null;
        java.io.File file11 = explodedArchive7.getManifestFile(file10);
        fileEntryIterator0.root = file10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean14 = fileEntryIterator13.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean16 = explodedArchive15.recursive;
        java.io.File file17 = explodedArchive15.manifestFile;
        java.util.jar.Manifest manifest18 = null;
        explodedArchive15.manifest = manifest18;
        java.io.File file20 = explodedArchive15.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        java.io.File file24 = fileEntryIterator21.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.manifestFile;
        java.io.File file27 = explodedArchive25.manifestFile;
        java.io.File file28 = null;
        java.io.File file29 = explodedArchive25.getManifestFile(file28);
        fileEntryIterator21.current = file29;
        explodedArchive15.root = file29;
        fileEntryIterator13.root = file29;
        java.util.Iterator<java.io.File> fileItor33 = fileEntryIterator0.listFiles(file29);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file29, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor33);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        fileEntryIterator3.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator3.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        fileEntryIterator3.root = file28;
        explodedArchive0.manifestFile = file28;
        java.util.jar.Manifest manifest31 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest32 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive0.getNestedArchives(entryFilter33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertNull(manifest32);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.util.jar.Manifest manifest4 = explodedArchive0.manifest;
        java.io.File file5 = null;
        java.io.File file6 = explodedArchive0.getManifestFile(file5);
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor9 = explodedArchive0.iterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        java.util.ArrayDeque<java.util.Iterator<java.io.File>> fileItorQueue3 = new java.util.ArrayDeque<java.util.Iterator<java.io.File>>();
        fileEntryIterator0.stack = fileItorQueue3;
        boolean boolean5 = fileEntryIterator0.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file8 = fileEntryIterator7.current;
        java.io.File file9 = fileEntryIterator7.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file11 = fileEntryIterator10.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        java.util.Comparator<java.io.File> fileComparator21 = fileComparator17.thenComparing(fileComparator20);
        fileEntryIterator12.entryComparator = fileComparator17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        java.util.Comparator<java.io.File> fileComparator26 = fileComparator17.thenComparing(fileComparator25);
        fileEntryIterator10.entryComparator = fileComparator26;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator10.stack;
        fileEntryIterator7.stack = fileItorQueue28;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file31 = fileEntryIterator30.current;
        java.io.File file32 = fileEntryIterator30.poll();
        java.io.File file33 = fileEntryIterator30.poll();
        java.io.File file34 = fileEntryIterator30.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        java.io.File file37 = fileEntryIterator35.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        fileEntryIterator35.root = file41;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.manifestFile;
        java.io.File file46 = explodedArchive44.manifestFile;
        java.io.File file47 = null;
        java.io.File file48 = explodedArchive44.getManifestFile(file47);
        java.util.Iterator<java.io.File> fileItor49 = fileEntryIterator35.listFiles(file48);
        fileEntryIterator30.root = file48;
        java.util.Iterator<java.io.File> fileItor51 = fileEntryIterator7.listFiles(file48);
        fileEntryIterator0.current = file48;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor49);
        org.junit.Assert.assertNotNull(fileItor51);
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.util.jar.Manifest manifest4 = null;
        explodedArchive0.manifest = manifest4;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream10 = uRL3.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.io.File file4 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.io.File file7 = fileEntryIterator5.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive8.getManifestFile(file11);
        fileEntryIterator5.root = file11;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.manifestFile;
        java.io.File file16 = explodedArchive14.manifestFile;
        java.io.File file17 = null;
        java.io.File file18 = explodedArchive14.getManifestFile(file17);
        java.util.Iterator<java.io.File> fileItor19 = fileEntryIterator5.listFiles(file18);
        fileEntryIterator0.root = file18;
        fileEntryIterator0.recursive = false;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor19);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.manifestFile;
        java.io.File file8 = explodedArchive6.manifestFile;
        java.lang.String str9 = explodedArchive6.toString();
        java.util.jar.Manifest manifest10 = explodedArchive6.manifest;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive6.getManifestFile(file11);
        explodedArchive0.manifestFile = file11;
        java.io.File file14 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive0.getNestedArchives(entryFilter15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "exploded archive" + "'", str9, "exploded archive");
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file14);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.util.jar.Manifest manifest5 = null;
        explodedArchive0.manifest = manifest5;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        fileEntryIterator7.recursive = true;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator7.entryComparator;
        fileEntryIterator7.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        fileEntryIterator7.stack = fileItorQueue15;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file18 = fileEntryIterator17.current;
        java.io.File file19 = fileEntryIterator17.poll();
        java.io.File file20 = fileEntryIterator17.poll();
        java.io.File file21 = fileEntryIterator17.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.io.File file24 = fileEntryIterator22.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.manifestFile;
        java.io.File file27 = explodedArchive25.manifestFile;
        java.io.File file28 = null;
        java.io.File file29 = explodedArchive25.getManifestFile(file28);
        fileEntryIterator22.root = file28;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.manifestFile;
        java.io.File file33 = explodedArchive31.manifestFile;
        java.io.File file34 = null;
        java.io.File file35 = explodedArchive31.getManifestFile(file34);
        java.util.Iterator<java.io.File> fileItor36 = fileEntryIterator22.listFiles(file35);
        fileEntryIterator17.root = file35;
        java.util.Iterator<java.io.File> fileItor38 = fileEntryIterator7.listFiles(file35);
        explodedArchive0.manifestFile = file35;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator40 = explodedArchive0.spliterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file35.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor36);
        org.junit.Assert.assertNotNull(fileItor38);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getHost();
        java.lang.Object obj16 = new java.lang.Object();
        boolean boolean17 = uRL14.equals(obj16);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.io.File file6 = fileEntryIterator4.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.manifestFile;
        java.io.File file9 = explodedArchive7.manifestFile;
        java.io.File file10 = null;
        java.io.File file11 = explodedArchive7.getManifestFile(file10);
        fileEntryIterator4.root = file10;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        java.util.Iterator<java.io.File> fileItor18 = fileEntryIterator4.listFiles(file17);
        explodedArchive0.manifestFile = file17;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL20 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor18);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLConnection uRLConnection7 = uRL3.openConnection();
        java.net.URL uRL9 = new java.net.URL(uRL3, "exploded archive");
        java.lang.String str10 = uRL3.getAuthority();
        int int11 = uRL3.getPort();
        java.net.Proxy proxy12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection13 = uRL3.openConnection(proxy12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection7);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        boolean boolean2 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = true;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry0.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.io.File file5 = fileEntryIterator3.current;
        boolean boolean6 = fileEntryIterator3.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator3.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean9 = explodedArchive8.recursive;
        boolean boolean10 = explodedArchive8.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.manifestFile;
        java.io.File file13 = explodedArchive11.manifestFile;
        java.io.File file14 = null;
        java.io.File file15 = explodedArchive11.getManifestFile(file14);
        explodedArchive8.root = file15;
        fileEntryIterator3.root = file15;
        fileEntry0.file = file15;
        java.lang.String str19 = fileEntry0.name;
        java.io.File file20 = fileEntry0.getFile();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file15.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "exploded archive" + "'", str19, "exploded archive");
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file20.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.net.URL uRL74 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator75 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue76 = fileEntryIterator75.stack;
        java.util.Comparator<java.io.File> fileComparator77 = fileEntryIterator75.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator78 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue79 = fileEntryIterator78.stack;
        java.util.Comparator<java.io.File> fileComparator80 = fileEntryIterator78.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator81 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue82 = fileEntryIterator81.stack;
        java.util.Comparator<java.io.File> fileComparator83 = fileEntryIterator81.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator84 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue85 = fileEntryIterator84.stack;
        java.util.Comparator<java.io.File> fileComparator86 = fileEntryIterator84.entryComparator;
        java.util.Comparator<java.io.File> fileComparator87 = fileComparator83.thenComparing(fileComparator86);
        java.util.Comparator<java.io.File> fileComparator88 = fileComparator80.thenComparing(fileComparator86);
        java.util.Comparator<java.io.File> fileComparator89 = fileComparator77.thenComparing(fileComparator86);
        boolean boolean90 = uRL69.equals((java.lang.Object) fileComparator77);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue76);
        org.junit.Assert.assertNotNull(fileComparator77);
        org.junit.Assert.assertNotNull(fileItorQueue79);
        org.junit.Assert.assertNotNull(fileComparator80);
        org.junit.Assert.assertNotNull(fileItorQueue82);
        org.junit.Assert.assertNotNull(fileComparator83);
        org.junit.Assert.assertNotNull(fileItorQueue85);
        org.junit.Assert.assertNotNull(fileComparator86);
        org.junit.Assert.assertNotNull(fileComparator87);
        org.junit.Assert.assertNotNull(fileComparator88);
        org.junit.Assert.assertNotNull(fileComparator89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.util.jar.Manifest manifest5 = null;
        explodedArchive0.manifest = manifest5;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        fileEntryIterator7.recursive = true;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator7.entryComparator;
        fileEntryIterator7.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        fileEntryIterator7.stack = fileItorQueue15;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file18 = fileEntryIterator17.current;
        java.io.File file19 = fileEntryIterator17.poll();
        java.io.File file20 = fileEntryIterator17.poll();
        java.io.File file21 = fileEntryIterator17.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.io.File file24 = fileEntryIterator22.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.manifestFile;
        java.io.File file27 = explodedArchive25.manifestFile;
        java.io.File file28 = null;
        java.io.File file29 = explodedArchive25.getManifestFile(file28);
        fileEntryIterator22.root = file28;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.manifestFile;
        java.io.File file33 = explodedArchive31.manifestFile;
        java.io.File file34 = null;
        java.io.File file35 = explodedArchive31.getManifestFile(file34);
        java.util.Iterator<java.io.File> fileItor36 = fileEntryIterator22.listFiles(file35);
        fileEntryIterator17.root = file35;
        java.util.Iterator<java.io.File> fileItor38 = fileEntryIterator7.listFiles(file35);
        explodedArchive0.manifestFile = file35;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file35.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor36);
        org.junit.Assert.assertNotNull(fileItor38);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.io.File file9 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        fileEntryIterator6.current = file14;
        explodedArchive0.root = file14;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator15);
        fileEntryIterator0.entryComparator = entryComparator15;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        fileEntryIterator18.recursive = true;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator28.thenComparing(fileComparator31);
        fileEntryIterator23.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator28.thenComparing(fileComparator36);
        fileEntryIterator18.entryComparator = fileComparator37;
        java.util.Comparator<java.io.File> fileComparator39 = entryComparator15.thenComparing(fileComparator37);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.manifestFile;
        java.io.File file42 = explodedArchive40.manifestFile;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive40.getManifestFile(file43);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean46 = fileEntryIterator45.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean48 = explodedArchive47.recursive;
        java.io.File file49 = explodedArchive47.manifestFile;
        java.util.jar.Manifest manifest50 = null;
        explodedArchive47.manifest = manifest50;
        java.io.File file52 = explodedArchive47.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        java.io.File file56 = fileEntryIterator53.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.manifestFile;
        java.io.File file59 = explodedArchive57.manifestFile;
        java.io.File file60 = null;
        java.io.File file61 = explodedArchive57.getManifestFile(file60);
        fileEntryIterator53.current = file61;
        explodedArchive47.root = file61;
        fileEntryIterator45.root = file61;
        int int65 = entryComparator15.compare(file44, file61);
        java.util.Comparator<java.io.File> fileComparator66 = entryComparator15.reversed();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(fileComparator66);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive0.getNestedArchives(entryFilter36);
        java.net.URL uRL38 = explodedArchive0.getUrl();
        java.net.URLConnection uRLConnection39 = uRL38.openConnection();
        java.lang.String str40 = uRL38.toString();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertNotNull(uRL38);
// flaky:         org.junit.Assert.assertEquals(uRL38.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection39);
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str40, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("", "file://exploded archive", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getQuery();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream16 = uRL14.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.lang.String str4 = explodedArchive0.toString();
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file7 = fileEntryIterator6.current;
        java.io.File file8 = fileEntryIterator6.poll();
        java.io.File file9 = fileEntryIterator6.poll();
        java.io.File file10 = fileEntryIterator6.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.io.File file13 = fileEntryIterator11.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.manifestFile;
        java.io.File file16 = explodedArchive14.manifestFile;
        java.io.File file17 = null;
        java.io.File file18 = explodedArchive14.getManifestFile(file17);
        fileEntryIterator11.root = file17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.manifestFile;
        java.io.File file22 = explodedArchive20.manifestFile;
        java.io.File file23 = null;
        java.io.File file24 = explodedArchive20.getManifestFile(file23);
        java.util.Iterator<java.io.File> fileItor25 = fileEntryIterator11.listFiles(file24);
        fileEntryIterator6.root = file24;
        explodedArchive0.manifestFile = file24;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor25);
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator2.stack;
        fileEntryIterator0.stack = fileItorQueue3;
        java.io.File file5 = fileEntryIterator0.poll();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry6 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertNull(file5);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLConnection uRLConnection7 = uRL3.openConnection();
        java.net.URL uRL9 = new java.net.URL(uRL3, "exploded archive");
        java.lang.String str10 = uRL3.getAuthority();
        java.lang.String str11 = uRL3.toExternalForm();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream12 = uRL3.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection7);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        explodedArchive0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file42 = fileEntry41.getFile();
        java.lang.String str43 = fileEntry41.name;
        java.io.File file44 = fileEntry41.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        boolean boolean47 = fileEntryIterator45.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file49 = explodedArchive48.manifestFile;
        java.io.File file50 = explodedArchive48.manifestFile;
        java.io.File file51 = null;
        java.io.File file52 = explodedArchive48.getManifestFile(file51);
        boolean boolean53 = explodedArchive48.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        fileEntryIterator54.recursive = true;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator54.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator62.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator65.stack;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator65.entryComparator;
        java.util.Comparator<java.io.File> fileComparator68 = fileComparator64.thenComparing(fileComparator67);
        fileEntryIterator59.entryComparator = fileComparator64;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator70 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue71 = fileEntryIterator70.stack;
        java.util.Comparator<java.io.File> fileComparator72 = fileEntryIterator70.entryComparator;
        java.util.Comparator<java.io.File> fileComparator73 = fileComparator64.thenComparing(fileComparator72);
        fileEntryIterator54.entryComparator = fileComparator73;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file76 = explodedArchive75.manifestFile;
        java.io.File file77 = explodedArchive75.manifestFile;
        java.io.File file78 = null;
        java.io.File file79 = explodedArchive75.getManifestFile(file78);
        fileEntryIterator54.root = file79;
        explodedArchive48.root = file79;
        java.util.Iterator<java.io.File> fileItor82 = fileEntryIterator45.listFiles(file79);
        fileEntry41.file = file79;
        fileEntry41.name = "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF";
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive86 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: File must exist");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileItorQueue71);
        org.junit.Assert.assertNotNull(fileComparator72);
        org.junit.Assert.assertNotNull(fileComparator73);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file79.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor82);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getAuthority();
        java.net.URL uRL71 = null;
        java.net.URLStreamHandler uRLStreamHandler73 = null;
        java.net.URL uRL74 = new java.net.URL(uRL71, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler73);
        java.lang.String str75 = uRL74.getHost();
        int int76 = uRL74.getPort();
        java.net.URL uRL77 = null;
        java.net.URLStreamHandler uRLStreamHandler79 = null;
        java.net.URL uRL80 = new java.net.URL(uRL77, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler79);
        java.lang.String str81 = uRL80.getHost();
        int int82 = uRL80.getPort();
        java.net.URL uRL83 = null;
        java.net.URLStreamHandler uRLStreamHandler85 = null;
        java.net.URL uRL86 = new java.net.URL(uRL83, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler85);
        java.lang.String str87 = uRL86.getHost();
        java.lang.String str88 = uRL86.getAuthority();
        java.lang.String str89 = uRL86.getQuery();
        int int90 = uRL86.getDefaultPort();
        boolean boolean91 = uRL80.sameFile(uRL86);
        boolean boolean92 = uRL74.sameFile(uRL80);
        boolean boolean93 = uRL69.sameFile(uRL74);
        java.lang.String str94 = uRL69.getProtocol();
        java.net.Proxy proxy95 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection96 = uRL69.openConnection(proxy95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertEquals(uRL80.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertEquals(uRL86.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "file" + "'", str94, "file");
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.lang.String str10 = uRL3.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file12 = fileEntryIterator11.current;
        boolean boolean13 = fileEntryIterator11.hasNext();
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator11.entryComparator;
        java.lang.Class<?> wildcardClass15 = fileEntryIterator11.getClass();
        java.net.URL uRL16 = null;
        java.net.URLStreamHandler uRLStreamHandler18 = null;
        java.net.URL uRL19 = new java.net.URL(uRL16, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler18);
        java.lang.String str20 = uRL19.getHost();
        java.lang.String str21 = uRL19.getAuthority();
        java.lang.String str22 = uRL19.getHost();
        java.lang.String str23 = uRL19.getRef();
        java.net.URLConnection uRLConnection24 = uRL19.openConnection();
        java.lang.Class<?> wildcardClass25 = uRLConnection24.getClass();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        boolean boolean28 = fileEntryIterator26.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file30 = explodedArchive29.manifestFile;
        java.io.File file31 = explodedArchive29.manifestFile;
        java.io.File file32 = null;
        java.io.File file33 = explodedArchive29.getManifestFile(file32);
        boolean boolean34 = explodedArchive29.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        fileEntryIterator35.recursive = true;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator35.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator40.stack;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator40.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        java.util.Comparator<java.io.File> fileComparator49 = fileComparator45.thenComparing(fileComparator48);
        fileEntryIterator40.entryComparator = fileComparator45;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        java.util.Comparator<java.io.File> fileComparator54 = fileComparator45.thenComparing(fileComparator53);
        fileEntryIterator35.entryComparator = fileComparator54;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file57 = explodedArchive56.manifestFile;
        java.io.File file58 = explodedArchive56.manifestFile;
        java.io.File file59 = null;
        java.io.File file60 = explodedArchive56.getManifestFile(file59);
        fileEntryIterator35.root = file60;
        explodedArchive29.root = file60;
        java.util.Iterator<java.io.File> fileItor63 = fileEntryIterator26.listFiles(file60);
        java.lang.Class<?> wildcardClass64 = fileEntryIterator26.getClass();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file66 = fileEntryIterator65.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue68 = fileEntryIterator67.stack;
        java.util.Comparator<java.io.File> fileComparator69 = fileEntryIterator67.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator70 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue71 = fileEntryIterator70.stack;
        java.util.Comparator<java.io.File> fileComparator72 = fileEntryIterator70.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator73 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue74 = fileEntryIterator73.stack;
        java.util.Comparator<java.io.File> fileComparator75 = fileEntryIterator73.entryComparator;
        java.util.Comparator<java.io.File> fileComparator76 = fileComparator72.thenComparing(fileComparator75);
        fileEntryIterator67.entryComparator = fileComparator72;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator78 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue79 = fileEntryIterator78.stack;
        java.util.Comparator<java.io.File> fileComparator80 = fileEntryIterator78.entryComparator;
        java.util.Comparator<java.io.File> fileComparator81 = fileComparator72.thenComparing(fileComparator80);
        fileEntryIterator65.entryComparator = fileComparator81;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue83 = fileEntryIterator65.stack;
        boolean boolean84 = fileEntryIterator65.recursive;
        java.lang.Class<?> wildcardClass85 = fileEntryIterator65.getClass();
        java.lang.Class[] classArray86 = new java.lang.Class[] { wildcardClass15, wildcardClass25, wildcardClass64, wildcardClass85 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj87 = uRL3.getContent(classArray86);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertEquals(uRL19.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(uRLConnection24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileItorQueue41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file60.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNotNull(fileItorQueue68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNotNull(fileItorQueue71);
        org.junit.Assert.assertNotNull(fileComparator72);
        org.junit.Assert.assertNotNull(fileItorQueue74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNotNull(fileItorQueue79);
        org.junit.Assert.assertNotNull(fileComparator80);
        org.junit.Assert.assertNotNull(fileComparator81);
        org.junit.Assert.assertNotNull(fileItorQueue83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(classArray86);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.recursive;
        boolean boolean2 = fileEntryIterator0.recursive;
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        java.io.File file4 = fileEntryIterator0.current;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass5 = file4.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fileComparator3);
        org.junit.Assert.assertNull(file4);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        java.net.URL uRL8 = null;
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL8, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.getHost();
        java.net.URI uRI13 = uRL11.toURI();
        java.lang.String str14 = uRL11.toExternalForm();
        boolean boolean15 = uRL3.sameFile(uRL11);
        java.lang.String str16 = uRL11.getHost();
        java.lang.String str17 = uRL11.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(uRI13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str14, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str17, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        java.io.File file5 = explodedArchive0.manifestFile;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL6 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file5);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        fileEntryIterator0.stack = fileItorQueue8;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file11 = fileEntryIterator10.current;
        java.io.File file12 = fileEntryIterator10.poll();
        java.io.File file13 = fileEntryIterator10.poll();
        java.io.File file14 = fileEntryIterator10.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.io.File file17 = fileEntryIterator15.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.manifestFile;
        java.io.File file20 = explodedArchive18.manifestFile;
        java.io.File file21 = null;
        java.io.File file22 = explodedArchive18.getManifestFile(file21);
        fileEntryIterator15.root = file21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        java.util.Iterator<java.io.File> fileItor29 = fileEntryIterator15.listFiles(file28);
        fileEntryIterator10.root = file28;
        java.util.Iterator<java.io.File> fileItor31 = fileEntryIterator0.listFiles(file28);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry32 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor29);
        org.junit.Assert.assertNotNull(fileItor31);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.util.jar.Manifest manifest4 = explodedArchive0.manifest;
        java.io.File file5 = null;
        java.io.File file6 = explodedArchive0.getManifestFile(file5);
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file10 = fileEntry9.getFile();
        java.lang.String str11 = fileEntry9.name;
        java.lang.String str12 = fileEntry9.getName();
        java.lang.String str13 = fileEntry9.getName();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive14 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.util.jar.Manifest manifest4 = explodedArchive0.manifest;
        java.io.File file5 = null;
        java.io.File file6 = explodedArchive0.getManifestFile(file5);
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator9 = explodedArchive0.spliterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        java.io.File file5 = fileEntry0.getFile();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = fileEntry0.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        int int11 = uRL9.getPort();
        java.net.URL uRL12 = null;
        java.net.URLStreamHandler uRLStreamHandler14 = null;
        java.net.URL uRL15 = new java.net.URL(uRL12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler14);
        java.lang.String str16 = uRL15.getHost();
        java.lang.String str17 = uRL15.getAuthority();
        java.lang.String str18 = uRL15.getQuery();
        int int19 = uRL15.getDefaultPort();
        boolean boolean20 = uRL9.sameFile(uRL15);
        boolean boolean21 = uRL3.sameFile(uRL9);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = uRL9.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        java.io.File file41 = explodedArchive0.root;
        explodedArchive0.recursive = true;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor44 = explodedArchive0.iterator();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file46 = fileEntry45.getFile();
        java.lang.String str47 = fileEntry45.getName();
        java.lang.String str48 = fileEntry45.getName();
        fileEntry45.name = "";
        java.io.File file51 = fileEntry45.file;
        java.lang.String str52 = fileEntry45.getName();
        java.io.File file53 = fileEntry45.getFile();
        java.io.File file54 = fileEntry45.file;
        fileEntry45.name = "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF";
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive57 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entryItor44);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator15);
        fileEntryIterator0.entryComparator = entryComparator15;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        fileEntryIterator18.recursive = true;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator28.thenComparing(fileComparator31);
        fileEntryIterator23.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator28.thenComparing(fileComparator36);
        fileEntryIterator18.entryComparator = fileComparator37;
        java.util.Comparator<java.io.File> fileComparator39 = entryComparator15.thenComparing(fileComparator37);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.manifestFile;
        java.io.File file42 = explodedArchive40.manifestFile;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive40.getManifestFile(file43);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean46 = fileEntryIterator45.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean48 = explodedArchive47.recursive;
        java.io.File file49 = explodedArchive47.manifestFile;
        java.util.jar.Manifest manifest50 = null;
        explodedArchive47.manifest = manifest50;
        java.io.File file52 = explodedArchive47.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        java.io.File file56 = fileEntryIterator53.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.manifestFile;
        java.io.File file59 = explodedArchive57.manifestFile;
        java.io.File file60 = null;
        java.io.File file61 = explodedArchive57.getManifestFile(file60);
        fileEntryIterator53.current = file61;
        explodedArchive47.root = file61;
        fileEntryIterator45.root = file61;
        int int65 = entryComparator15.compare(file44, file61);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive(file61, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getAuthority();
        java.net.URL uRL71 = null;
        java.net.URLStreamHandler uRLStreamHandler73 = null;
        java.net.URL uRL74 = new java.net.URL(uRL71, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler73);
        java.lang.String str75 = uRL74.getHost();
        int int76 = uRL74.getPort();
        java.net.URL uRL77 = null;
        java.net.URLStreamHandler uRLStreamHandler79 = null;
        java.net.URL uRL80 = new java.net.URL(uRL77, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler79);
        java.lang.String str81 = uRL80.getHost();
        int int82 = uRL80.getPort();
        java.net.URL uRL83 = null;
        java.net.URLStreamHandler uRLStreamHandler85 = null;
        java.net.URL uRL86 = new java.net.URL(uRL83, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler85);
        java.lang.String str87 = uRL86.getHost();
        java.lang.String str88 = uRL86.getAuthority();
        java.lang.String str89 = uRL86.getQuery();
        int int90 = uRL86.getDefaultPort();
        boolean boolean91 = uRL80.sameFile(uRL86);
        boolean boolean92 = uRL74.sameFile(uRL80);
        boolean boolean93 = uRL69.sameFile(uRL74);
        java.lang.String str94 = uRL69.getProtocol();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream95 = uRL69.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertEquals(uRL80.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertEquals(uRL86.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "file" + "'", str94, "file");
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.util.jar.Manifest manifest5 = null;
        explodedArchive0.manifest = manifest5;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL7 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "hi!", "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/manifest.mf");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.io.File file4 = fileEntryIterator0.current;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str1 = fileEntry0.getName();
        fileEntry0.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean5 = explodedArchive4.recursive;
        boolean boolean6 = explodedArchive4.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.manifestFile;
        java.io.File file9 = explodedArchive7.manifestFile;
        java.io.File file10 = null;
        java.io.File file11 = explodedArchive7.getManifestFile(file10);
        explodedArchive4.root = file11;
        fileEntry0.file = file11;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file15 = fileEntryIterator14.current;
        java.io.File file16 = fileEntryIterator14.poll();
        java.io.File file17 = fileEntryIterator14.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator23.thenComparing(fileComparator26);
        fileEntryIterator18.entryComparator = fileComparator23;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator30 = fileComparator23.thenComparing((java.util.Comparator<java.io.File>) entryComparator29);
        fileEntryIterator14.entryComparator = entryComparator29;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        fileEntryIterator32.recursive = true;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator32.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator40.stack;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator40.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        java.util.Comparator<java.io.File> fileComparator46 = fileComparator42.thenComparing(fileComparator45);
        fileEntryIterator37.entryComparator = fileComparator42;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        java.util.Comparator<java.io.File> fileComparator51 = fileComparator42.thenComparing(fileComparator50);
        fileEntryIterator32.entryComparator = fileComparator51;
        java.util.Comparator<java.io.File> fileComparator53 = entryComparator29.thenComparing(fileComparator51);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file55 = explodedArchive54.manifestFile;
        java.io.File file56 = explodedArchive54.manifestFile;
        java.io.File file57 = null;
        java.io.File file58 = explodedArchive54.getManifestFile(file57);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean60 = fileEntryIterator59.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean62 = explodedArchive61.recursive;
        java.io.File file63 = explodedArchive61.manifestFile;
        java.util.jar.Manifest manifest64 = null;
        explodedArchive61.manifest = manifest64;
        java.io.File file66 = explodedArchive61.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue68 = fileEntryIterator67.stack;
        java.util.Comparator<java.io.File> fileComparator69 = fileEntryIterator67.entryComparator;
        java.io.File file70 = fileEntryIterator67.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file72 = explodedArchive71.manifestFile;
        java.io.File file73 = explodedArchive71.manifestFile;
        java.io.File file74 = null;
        java.io.File file75 = explodedArchive71.getManifestFile(file74);
        fileEntryIterator67.current = file75;
        explodedArchive61.root = file75;
        fileEntryIterator59.root = file75;
        int int79 = entryComparator29.compare(file58, file75);
        fileEntry0.file = file75;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileItorQueue41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file58.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNotNull(fileItorQueue68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file75.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("exploded archive", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.util.Comparator<java.io.File> fileComparator2 = fileEntryIterator0.entryComparator;
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.manifestFile;
        java.io.File file6 = explodedArchive4.manifestFile;
        java.io.File file7 = null;
        java.io.File file8 = explodedArchive4.getManifestFile(file7);
        fileEntryIterator0.current = file8;
        java.io.File file10 = fileEntryIterator0.root;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry11 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file10);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("hi!", "file", "file://exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        fileEntryIterator3.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator3.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        fileEntryIterator3.root = file28;
        explodedArchive0.manifestFile = file28;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator31 = explodedArchive0.spliterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        fileEntryIterator0.recursive = true;
        fileEntryIterator0.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator0.stack;
        boolean boolean26 = fileEntryIterator0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        boolean boolean3 = fileEntryIterator0.recursive;
        java.io.File file4 = fileEntryIterator0.root;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator0.stack;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileItorQueue5);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getProtocol();
        java.lang.String str5 = uRL3.getUserInfo();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler16);
        boolean boolean18 = uRL3.sameFile(uRL17);
        java.lang.String str19 = uRL3.getProtocol();
        java.net.URLConnection uRLConnection20 = uRL3.openConnection();
        java.lang.String str21 = uRL3.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "file" + "'", str4, "file");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "file" + "'", str19, "file");
        org.junit.Assert.assertNotNull(uRLConnection20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str21, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        java.io.File file3 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file5 = fileEntry4.getFile();
        java.io.File file6 = fileEntry4.file;
        java.io.File file7 = null;
        fileEntry4.file = file7;
        java.lang.String str9 = fileEntry4.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        boolean boolean12 = fileEntryIterator10.hasNext();
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator10.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator19.thenComparing(fileComparator22);
        fileEntryIterator14.entryComparator = fileComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator26 = fileComparator19.thenComparing((java.util.Comparator<java.io.File>) entryComparator25);
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator13.thenComparing((java.util.Comparator<java.io.File>) entryComparator25);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean29 = fileEntryIterator28.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean31 = explodedArchive30.recursive;
        java.io.File file32 = explodedArchive30.manifestFile;
        java.util.jar.Manifest manifest33 = null;
        explodedArchive30.manifest = manifest33;
        java.io.File file35 = explodedArchive30.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        java.io.File file39 = fileEntryIterator36.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.manifestFile;
        java.io.File file42 = explodedArchive40.manifestFile;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive40.getManifestFile(file43);
        fileEntryIterator36.current = file44;
        explodedArchive30.root = file44;
        fileEntryIterator28.root = file44;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file49 = explodedArchive48.manifestFile;
        java.io.File file50 = explodedArchive48.manifestFile;
        java.io.File file51 = null;
        java.io.File file52 = explodedArchive48.getManifestFile(file51);
        boolean boolean53 = explodedArchive48.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        fileEntryIterator54.recursive = true;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator54.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator62.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator65.stack;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator65.entryComparator;
        java.util.Comparator<java.io.File> fileComparator68 = fileComparator64.thenComparing(fileComparator67);
        fileEntryIterator59.entryComparator = fileComparator64;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator70 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue71 = fileEntryIterator70.stack;
        java.util.Comparator<java.io.File> fileComparator72 = fileEntryIterator70.entryComparator;
        java.util.Comparator<java.io.File> fileComparator73 = fileComparator64.thenComparing(fileComparator72);
        fileEntryIterator54.entryComparator = fileComparator73;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file76 = explodedArchive75.manifestFile;
        java.io.File file77 = explodedArchive75.manifestFile;
        java.io.File file78 = null;
        java.io.File file79 = explodedArchive75.getManifestFile(file78);
        fileEntryIterator54.root = file79;
        explodedArchive48.root = file79;
        int int82 = entryComparator25.compare(file44, file79);
        fileEntry4.file = file79;
        java.io.File file84 = explodedArchive0.getManifestFile(file79);
        java.lang.Class<?> wildcardClass85 = file84.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileItorQueue71);
        org.junit.Assert.assertNotNull(fileComparator72);
        org.junit.Assert.assertNotNull(fileComparator73);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file79.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file84.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.net.URLStreamHandler uRLStreamHandler74 = null;
        java.net.URL uRL75 = new java.net.URL(uRL72, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", uRLStreamHandler74);
        java.lang.String str76 = uRL75.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL75.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!" + "'", str76, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getAuthority();
        java.lang.String str9 = uRL3.getRef();
        java.lang.String str10 = uRL3.getQuery();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream11 = uRL3.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.net.URL uRL13 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str14 = uRL3.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL13.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str14, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.util.Comparator<java.io.File> fileComparator2 = fileEntryIterator0.entryComparator;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator0.stack;
        boolean boolean4 = fileEntryIterator0.recursive;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator2);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        fileEntryIterator0.recursive = true;
        boolean boolean23 = fileEntryIterator0.recursive;
        boolean boolean24 = fileEntryIterator0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getRef();
        java.net.URL uRL7 = null;
        java.net.URLStreamHandler uRLStreamHandler9 = null;
        java.net.URL uRL10 = new java.net.URL(uRL7, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler9);
        java.lang.String str11 = uRL10.getHost();
        java.lang.String str12 = uRL10.getAuthority();
        java.lang.String str13 = uRL10.getAuthority();
        java.lang.String str14 = uRL10.getFile();
        int int15 = uRL10.getPort();
        java.lang.String str16 = uRL10.getRef();
        java.net.URL uRL18 = new java.net.URL(uRL10, "hi!");
        java.net.URLStreamHandler uRLStreamHandler20 = null;
        java.net.URL uRL21 = new java.net.URL(uRL18, "", uRLStreamHandler20);
        boolean boolean22 = uRL3.sameFile(uRL18);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj23 = uRL3.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals(uRL10.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str14, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals(uRL18.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL21.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        int int7 = uRL3.getPort();
        java.lang.String str8 = uRL3.getPath();
        java.lang.String str9 = uRL3.getHost();
        java.net.URI uRI10 = uRL3.toURI();
        java.net.Proxy proxy11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection12 = uRL3.openConnection(proxy11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(uRI10);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getAuthority();
        int int9 = uRL3.getPort();
        java.lang.String str10 = uRL3.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator15);
        fileEntryIterator0.entryComparator = entryComparator15;
        java.io.File file18 = fileEntryIterator0.current;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator0.entryComparator;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry20 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(fileComparator19);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("", "file", (int) (byte) -1, "file://exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        java.io.File file3 = explodedArchive0.root;
        java.io.File file4 = null;
        java.io.File file5 = explodedArchive0.getManifestFile(file4);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file7 = fileEntry6.getFile();
        java.io.File file8 = fileEntry6.file;
        java.io.File file9 = null;
        fileEntry6.file = file9;
        java.lang.String str11 = fileEntry6.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        boolean boolean14 = fileEntryIterator12.hasNext();
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator21.thenComparing(fileComparator24);
        fileEntryIterator16.entryComparator = fileComparator21;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator21.thenComparing((java.util.Comparator<java.io.File>) entryComparator27);
        java.util.Comparator<java.io.File> fileComparator29 = fileComparator15.thenComparing((java.util.Comparator<java.io.File>) entryComparator27);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean31 = fileEntryIterator30.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean33 = explodedArchive32.recursive;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.util.jar.Manifest manifest35 = null;
        explodedArchive32.manifest = manifest35;
        java.io.File file37 = explodedArchive32.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        java.io.File file41 = fileEntryIterator38.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.io.File file45 = null;
        java.io.File file46 = explodedArchive42.getManifestFile(file45);
        fileEntryIterator38.current = file46;
        explodedArchive32.root = file46;
        fileEntryIterator30.root = file46;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file51 = explodedArchive50.manifestFile;
        java.io.File file52 = explodedArchive50.manifestFile;
        java.io.File file53 = null;
        java.io.File file54 = explodedArchive50.getManifestFile(file53);
        boolean boolean55 = explodedArchive50.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        fileEntryIterator56.recursive = true;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator56.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        java.util.Comparator<java.io.File> fileComparator66 = fileEntryIterator64.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue68 = fileEntryIterator67.stack;
        java.util.Comparator<java.io.File> fileComparator69 = fileEntryIterator67.entryComparator;
        java.util.Comparator<java.io.File> fileComparator70 = fileComparator66.thenComparing(fileComparator69);
        fileEntryIterator61.entryComparator = fileComparator66;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator72 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue73 = fileEntryIterator72.stack;
        java.util.Comparator<java.io.File> fileComparator74 = fileEntryIterator72.entryComparator;
        java.util.Comparator<java.io.File> fileComparator75 = fileComparator66.thenComparing(fileComparator74);
        fileEntryIterator56.entryComparator = fileComparator75;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file78 = explodedArchive77.manifestFile;
        java.io.File file79 = explodedArchive77.manifestFile;
        java.io.File file80 = null;
        java.io.File file81 = explodedArchive77.getManifestFile(file80);
        fileEntryIterator56.root = file81;
        explodedArchive50.root = file81;
        int int84 = entryComparator27.compare(file46, file81);
        fileEntry6.file = file81;
        boolean boolean86 = fileEntry6.isDirectory();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive87 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: File must exist");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(file5);
        org.junit.Assert.assertEquals(file5.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file5.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileItorQueue68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileItorQueue73);
        org.junit.Assert.assertNotNull(fileComparator74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNull(file78);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file81.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        fileEntryIterator39.recursive = true;
        java.util.Comparator<java.io.File> fileComparator43 = fileEntryIterator39.entryComparator;
        fileEntryIterator39.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        fileEntryIterator39.stack = fileItorQueue47;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file50 = fileEntryIterator49.current;
        java.io.File file51 = fileEntryIterator49.poll();
        java.io.File file52 = fileEntryIterator49.poll();
        java.io.File file53 = fileEntryIterator49.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.io.File file56 = fileEntryIterator54.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.manifestFile;
        java.io.File file59 = explodedArchive57.manifestFile;
        java.io.File file60 = null;
        java.io.File file61 = explodedArchive57.getManifestFile(file60);
        fileEntryIterator54.root = file60;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file64 = explodedArchive63.manifestFile;
        java.io.File file65 = explodedArchive63.manifestFile;
        java.io.File file66 = null;
        java.io.File file67 = explodedArchive63.getManifestFile(file66);
        java.util.Iterator<java.io.File> fileItor68 = fileEntryIterator54.listFiles(file67);
        fileEntryIterator49.root = file67;
        java.util.Iterator<java.io.File> fileItor70 = fileEntryIterator39.listFiles(file67);
        java.io.File file71 = explodedArchive0.getManifestFile(file67);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive(file67, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file67.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor68);
        org.junit.Assert.assertNotNull(fileItor70);
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file71.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file4 = fileEntryIterator3.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator3.entryComparator = fileComparator19;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator3.stack;
        fileEntryIterator0.stack = fileItorQueue21;
        boolean boolean23 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        fileEntryIterator24.recursive = true;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator24.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator35.entryComparator;
        java.util.Comparator<java.io.File> fileComparator38 = fileComparator34.thenComparing(fileComparator37);
        fileEntryIterator29.entryComparator = fileComparator34;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator40.stack;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator40.entryComparator;
        java.util.Comparator<java.io.File> fileComparator43 = fileComparator34.thenComparing(fileComparator42);
        fileEntryIterator24.entryComparator = fileComparator43;
        fileEntryIterator24.recursive = true;
        fileEntryIterator24.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator24.stack;
        boolean boolean50 = fileEntryIterator24.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.io.File file53 = fileEntryIterator51.current;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator51.stack;
        fileEntryIterator24.stack = fileItorQueue54;
        fileEntryIterator0.stack = fileItorQueue54;
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        fileEntryIterator59.recursive = true;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator59.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        java.util.Comparator<java.io.File> fileComparator66 = fileEntryIterator64.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue68 = fileEntryIterator67.stack;
        java.util.Comparator<java.io.File> fileComparator69 = fileEntryIterator67.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator70 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue71 = fileEntryIterator70.stack;
        java.util.Comparator<java.io.File> fileComparator72 = fileEntryIterator70.entryComparator;
        java.util.Comparator<java.io.File> fileComparator73 = fileComparator69.thenComparing(fileComparator72);
        fileEntryIterator64.entryComparator = fileComparator69;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator75 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue76 = fileEntryIterator75.stack;
        java.util.Comparator<java.io.File> fileComparator77 = fileEntryIterator75.entryComparator;
        java.util.Comparator<java.io.File> fileComparator78 = fileComparator69.thenComparing(fileComparator77);
        fileEntryIterator59.entryComparator = fileComparator78;
        fileEntryIterator59.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator82 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue83 = fileEntryIterator82.stack;
        java.util.Comparator<java.io.File> fileComparator84 = fileEntryIterator82.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator85 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue86 = fileEntryIterator85.stack;
        java.util.Comparator<java.io.File> fileComparator87 = fileEntryIterator85.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator88 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue89 = fileEntryIterator88.stack;
        java.util.Comparator<java.io.File> fileComparator90 = fileEntryIterator88.entryComparator;
        java.util.Comparator<java.io.File> fileComparator91 = fileComparator87.thenComparing(fileComparator90);
        fileEntryIterator82.entryComparator = fileComparator87;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator93 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue94 = fileEntryIterator93.stack;
        java.util.Comparator<java.io.File> fileComparator95 = fileEntryIterator93.entryComparator;
        java.util.Comparator<java.io.File> fileComparator96 = fileComparator87.thenComparing(fileComparator95);
        java.util.Comparator<java.io.File> fileComparator97 = fileComparator95.reversed();
        fileEntryIterator59.entryComparator = fileComparator95;
        fileEntryIterator0.entryComparator = fileComparator95;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileItorQueue41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileItorQueue68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNotNull(fileItorQueue71);
        org.junit.Assert.assertNotNull(fileComparator72);
        org.junit.Assert.assertNotNull(fileComparator73);
        org.junit.Assert.assertNotNull(fileItorQueue76);
        org.junit.Assert.assertNotNull(fileComparator77);
        org.junit.Assert.assertNotNull(fileComparator78);
        org.junit.Assert.assertNotNull(fileItorQueue83);
        org.junit.Assert.assertNotNull(fileComparator84);
        org.junit.Assert.assertNotNull(fileItorQueue86);
        org.junit.Assert.assertNotNull(fileComparator87);
        org.junit.Assert.assertNotNull(fileItorQueue89);
        org.junit.Assert.assertNotNull(fileComparator90);
        org.junit.Assert.assertNotNull(fileComparator91);
        org.junit.Assert.assertNotNull(fileItorQueue94);
        org.junit.Assert.assertNotNull(fileComparator95);
        org.junit.Assert.assertNotNull(fileComparator96);
        org.junit.Assert.assertNotNull(fileComparator97);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator0.stack;
        java.io.File file5 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.io.File file8 = fileEntryIterator6.current;
        java.io.File file9 = fileEntryIterator6.current;
        fileEntryIterator6.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.manifestFile;
        java.io.File file14 = explodedArchive12.manifestFile;
        java.io.File file15 = null;
        java.io.File file16 = explodedArchive12.getManifestFile(file15);
        fileEntryIterator6.root = file16;
        fileEntryIterator0.root = file16;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry19 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file16.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.Proxy proxy7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection8 = uRL3.openConnection(proxy7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.util.jar.Manifest manifest4 = explodedArchive0.manifest;
        java.io.File file5 = null;
        java.io.File file6 = explodedArchive0.getManifestFile(file5);
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        java.util.jar.Manifest manifest9 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str11 = fileEntry10.name;
        java.io.File file12 = fileEntry10.file;
        fileEntry10.name = "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF";
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive15 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator5.stack;
        fileEntryIterator0.stack = fileItorQueue8;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry10 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue8);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        java.io.File file41 = explodedArchive0.root;
        explodedArchive0.recursive = true;
        java.io.File file44 = explodedArchive0.root;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file44, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.lang.String str4 = explodedArchive0.toString();
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file7 = fileEntryIterator6.current;
        java.io.File file8 = fileEntryIterator6.poll();
        java.io.File file9 = fileEntryIterator6.poll();
        java.io.File file10 = fileEntryIterator6.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.io.File file13 = fileEntryIterator11.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.manifestFile;
        java.io.File file16 = explodedArchive14.manifestFile;
        java.io.File file17 = null;
        java.io.File file18 = explodedArchive14.getManifestFile(file17);
        fileEntryIterator11.root = file17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.manifestFile;
        java.io.File file22 = explodedArchive20.manifestFile;
        java.io.File file23 = null;
        java.io.File file24 = explodedArchive20.getManifestFile(file23);
        java.util.Iterator<java.io.File> fileItor25 = fileEntryIterator11.listFiles(file24);
        fileEntryIterator6.root = file24;
        explodedArchive0.manifestFile = file24;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        boolean boolean30 = fileEntryIterator28.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.manifestFile;
        java.io.File file33 = explodedArchive31.manifestFile;
        java.io.File file34 = null;
        java.io.File file35 = explodedArchive31.getManifestFile(file34);
        boolean boolean36 = explodedArchive31.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        fileEntryIterator37.recursive = true;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator37.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator42.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator45.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        java.util.Comparator<java.io.File> fileComparator51 = fileComparator47.thenComparing(fileComparator50);
        fileEntryIterator42.entryComparator = fileComparator47;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        java.util.Comparator<java.io.File> fileComparator56 = fileComparator47.thenComparing(fileComparator55);
        fileEntryIterator37.entryComparator = fileComparator56;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file59 = explodedArchive58.manifestFile;
        java.io.File file60 = explodedArchive58.manifestFile;
        java.io.File file61 = null;
        java.io.File file62 = explodedArchive58.getManifestFile(file61);
        fileEntryIterator37.root = file62;
        explodedArchive31.root = file62;
        java.util.Iterator<java.io.File> fileItor65 = fileEntryIterator28.listFiles(file62);
        java.io.File file66 = explodedArchive0.getManifestFile(file62);
        java.lang.String str67 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter68 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList69 = explodedArchive0.getNestedArchives(entryFilter68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor25);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file35.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor65);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "exploded archive" + "'", str67, "exploded archive");
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        java.io.File file5 = explodedArchive0.manifestFile;
        java.lang.String str6 = explodedArchive0.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL7 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "exploded archive" + "'", str6, "exploded archive");
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.lang.String str71 = uRL69.getHost();
        java.net.URI uRI72 = uRL69.toURI();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj73 = uRL69.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(uRI72);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.net.URL uRL74 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator75 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue76 = fileEntryIterator75.stack;
        java.util.Comparator<java.io.File> fileComparator77 = fileEntryIterator75.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator78 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue79 = fileEntryIterator78.stack;
        java.util.Comparator<java.io.File> fileComparator80 = fileEntryIterator78.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator81 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue82 = fileEntryIterator81.stack;
        java.util.Comparator<java.io.File> fileComparator83 = fileEntryIterator81.entryComparator;
        java.util.Comparator<java.io.File> fileComparator84 = fileComparator80.thenComparing(fileComparator83);
        fileEntryIterator75.entryComparator = fileComparator80;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator86 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue87 = fileEntryIterator86.stack;
        java.util.Comparator<java.io.File> fileComparator88 = fileEntryIterator86.entryComparator;
        java.util.Comparator<java.io.File> fileComparator89 = fileComparator80.thenComparing(fileComparator88);
        java.util.Comparator<java.io.File> fileComparator90 = fileComparator88.reversed();
        boolean boolean91 = uRL69.equals((java.lang.Object) fileComparator90);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue76);
        org.junit.Assert.assertNotNull(fileComparator77);
        org.junit.Assert.assertNotNull(fileItorQueue79);
        org.junit.Assert.assertNotNull(fileComparator80);
        org.junit.Assert.assertNotNull(fileItorQueue82);
        org.junit.Assert.assertNotNull(fileComparator83);
        org.junit.Assert.assertNotNull(fileComparator84);
        org.junit.Assert.assertNotNull(fileItorQueue87);
        org.junit.Assert.assertNotNull(fileComparator88);
        org.junit.Assert.assertNotNull(fileComparator89);
        org.junit.Assert.assertNotNull(fileComparator90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        boolean boolean5 = fileEntryIterator0.recursive;
        java.io.File file6 = fileEntryIterator0.poll();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(file6);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        fileEntryIterator3.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator3.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        fileEntryIterator3.root = file28;
        explodedArchive0.manifestFile = file28;
        java.util.jar.Manifest manifest31 = null;
        explodedArchive0.manifest = manifest31;
        boolean boolean33 = explodedArchive0.recursive;
        java.io.File file34 = explodedArchive0.root;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass35 = file34.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(file34);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.util.jar.Manifest manifest5 = null;
        explodedArchive0.manifest = manifest5;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str8 = fileEntry7.name;
        java.io.File file9 = fileEntry7.file;
        fileEntry7.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        boolean boolean14 = fileEntryIterator12.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.manifestFile;
        java.io.File file17 = explodedArchive15.manifestFile;
        java.io.File file18 = null;
        java.io.File file19 = explodedArchive15.getManifestFile(file18);
        boolean boolean20 = explodedArchive15.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        fileEntryIterator21.recursive = true;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator31.thenComparing(fileComparator34);
        fileEntryIterator26.entryComparator = fileComparator31;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator31.thenComparing(fileComparator39);
        fileEntryIterator21.entryComparator = fileComparator40;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.io.File file45 = null;
        java.io.File file46 = explodedArchive42.getManifestFile(file45);
        fileEntryIterator21.root = file46;
        explodedArchive15.root = file46;
        java.util.Iterator<java.io.File> fileItor49 = fileEntryIterator12.listFiles(file46);
        fileEntry7.file = file46;
        explodedArchive0.manifestFile = file46;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive(file46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file19.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor49);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file39 = fileEntryIterator38.current;
        java.io.File file40 = fileEntryIterator38.poll();
        java.io.File file41 = fileEntryIterator38.poll();
        java.io.File file42 = fileEntryIterator38.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.io.File file45 = fileEntryIterator43.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        fileEntryIterator43.root = file49;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.manifestFile;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.io.File file55 = null;
        java.io.File file56 = explodedArchive52.getManifestFile(file55);
        java.util.Iterator<java.io.File> fileItor57 = fileEntryIterator43.listFiles(file56);
        fileEntryIterator38.root = file56;
        explodedArchive0.root = file56;
        explodedArchive0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file63 = fileEntryIterator62.current;
        java.io.File file64 = null;
        fileEntryIterator62.current = file64;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean67 = explodedArchive66.recursive;
        java.io.File file68 = explodedArchive66.manifestFile;
        java.util.jar.Manifest manifest69 = null;
        explodedArchive66.manifest = manifest69;
        java.io.File file71 = explodedArchive66.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator72 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue73 = fileEntryIterator72.stack;
        java.util.Comparator<java.io.File> fileComparator74 = fileEntryIterator72.entryComparator;
        java.io.File file75 = fileEntryIterator72.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file77 = explodedArchive76.manifestFile;
        java.io.File file78 = explodedArchive76.manifestFile;
        java.io.File file79 = null;
        java.io.File file80 = explodedArchive76.getManifestFile(file79);
        fileEntryIterator72.current = file80;
        explodedArchive66.root = file80;
        fileEntryIterator62.root = file80;
        java.io.File file84 = explodedArchive0.getManifestFile(file80);
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator85 = explodedArchive0.spliterator();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor57);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNotNull(fileItorQueue73);
        org.junit.Assert.assertNotNull(fileComparator74);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNull(file78);
        org.junit.Assert.assertNotNull(file80);
        org.junit.Assert.assertEquals(file80.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file80.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file84.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator85);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.net.URI uRI4 = uRL3.toURI();
        java.lang.String str5 = uRL3.getFile();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        java.net.URL uRL9 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.io.File file12 = fileEntryIterator10.current;
        boolean boolean13 = fileEntryIterator10.hasNext();
        fileEntryIterator10.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        boolean boolean18 = fileEntryIterator16.hasNext();
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        java.util.Comparator<java.io.File> fileComparator29 = fileComparator25.thenComparing(fileComparator28);
        fileEntryIterator20.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator25.thenComparing((java.util.Comparator<java.io.File>) entryComparator31);
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator19.thenComparing((java.util.Comparator<java.io.File>) entryComparator31);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean35 = fileEntryIterator34.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean37 = explodedArchive36.recursive;
        java.io.File file38 = explodedArchive36.manifestFile;
        java.util.jar.Manifest manifest39 = null;
        explodedArchive36.manifest = manifest39;
        java.io.File file41 = explodedArchive36.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator42.entryComparator;
        java.io.File file45 = fileEntryIterator42.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        fileEntryIterator42.current = file50;
        explodedArchive36.root = file50;
        fileEntryIterator34.root = file50;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file55 = explodedArchive54.manifestFile;
        java.io.File file56 = explodedArchive54.manifestFile;
        java.io.File file57 = null;
        java.io.File file58 = explodedArchive54.getManifestFile(file57);
        boolean boolean59 = explodedArchive54.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        fileEntryIterator60.recursive = true;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator60.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator65.stack;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator65.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator71 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue72 = fileEntryIterator71.stack;
        java.util.Comparator<java.io.File> fileComparator73 = fileEntryIterator71.entryComparator;
        java.util.Comparator<java.io.File> fileComparator74 = fileComparator70.thenComparing(fileComparator73);
        fileEntryIterator65.entryComparator = fileComparator70;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator76 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue77 = fileEntryIterator76.stack;
        java.util.Comparator<java.io.File> fileComparator78 = fileEntryIterator76.entryComparator;
        java.util.Comparator<java.io.File> fileComparator79 = fileComparator70.thenComparing(fileComparator78);
        fileEntryIterator60.entryComparator = fileComparator79;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive81 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file82 = explodedArchive81.manifestFile;
        java.io.File file83 = explodedArchive81.manifestFile;
        java.io.File file84 = null;
        java.io.File file85 = explodedArchive81.getManifestFile(file84);
        fileEntryIterator60.root = file85;
        explodedArchive54.root = file85;
        int int88 = entryComparator31.compare(file50, file85);
        java.util.Iterator<java.io.File> fileItor89 = fileEntryIterator10.listFiles(file50);
        boolean boolean90 = uRL3.equals((java.lang.Object) fileItor89);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str5, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file58.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileItorQueue72);
        org.junit.Assert.assertNotNull(fileComparator73);
        org.junit.Assert.assertNotNull(fileComparator74);
        org.junit.Assert.assertNotNull(fileItorQueue77);
        org.junit.Assert.assertNotNull(fileComparator78);
        org.junit.Assert.assertNotNull(fileComparator79);
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertNotNull(file85);
        org.junit.Assert.assertEquals(file85.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file85.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(fileItor89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file22 = explodedArchive21.manifestFile;
        java.io.File file23 = explodedArchive21.manifestFile;
        java.io.File file24 = null;
        java.io.File file25 = explodedArchive21.getManifestFile(file24);
        fileEntryIterator0.root = file25;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file25.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = explodedArchive0.manifest;
        java.io.File file37 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest38 = explodedArchive0.manifest;
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest39 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(manifest38);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        boolean boolean3 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = false;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator0.entryComparator;
        java.lang.Class<?> wildcardClass7 = fileEntryIterator0.getClass();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", 0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean10 = explodedArchive9.recursive;
        boolean boolean11 = explodedArchive9.recursive;
        java.io.File file12 = explodedArchive9.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file14 = fileEntry13.getFile();
        java.io.File file15 = fileEntry13.file;
        java.io.File file16 = null;
        fileEntry13.file = file16;
        java.lang.String str18 = fileEntry13.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        boolean boolean21 = fileEntryIterator19.hasNext();
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator28.thenComparing(fileComparator31);
        fileEntryIterator23.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator28.thenComparing((java.util.Comparator<java.io.File>) entryComparator34);
        java.util.Comparator<java.io.File> fileComparator36 = fileComparator22.thenComparing((java.util.Comparator<java.io.File>) entryComparator34);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean38 = fileEntryIterator37.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean40 = explodedArchive39.recursive;
        java.io.File file41 = explodedArchive39.manifestFile;
        java.util.jar.Manifest manifest42 = null;
        explodedArchive39.manifest = manifest42;
        java.io.File file44 = explodedArchive39.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator45.entryComparator;
        java.io.File file48 = fileEntryIterator45.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file50 = explodedArchive49.manifestFile;
        java.io.File file51 = explodedArchive49.manifestFile;
        java.io.File file52 = null;
        java.io.File file53 = explodedArchive49.getManifestFile(file52);
        fileEntryIterator45.current = file53;
        explodedArchive39.root = file53;
        fileEntryIterator37.root = file53;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.manifestFile;
        java.io.File file59 = explodedArchive57.manifestFile;
        java.io.File file60 = null;
        java.io.File file61 = explodedArchive57.getManifestFile(file60);
        boolean boolean62 = explodedArchive57.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        fileEntryIterator63.recursive = true;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator63.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator71 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue72 = fileEntryIterator71.stack;
        java.util.Comparator<java.io.File> fileComparator73 = fileEntryIterator71.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator74 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue75 = fileEntryIterator74.stack;
        java.util.Comparator<java.io.File> fileComparator76 = fileEntryIterator74.entryComparator;
        java.util.Comparator<java.io.File> fileComparator77 = fileComparator73.thenComparing(fileComparator76);
        fileEntryIterator68.entryComparator = fileComparator73;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator79 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue80 = fileEntryIterator79.stack;
        java.util.Comparator<java.io.File> fileComparator81 = fileEntryIterator79.entryComparator;
        java.util.Comparator<java.io.File> fileComparator82 = fileComparator73.thenComparing(fileComparator81);
        fileEntryIterator63.entryComparator = fileComparator82;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive84 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file85 = explodedArchive84.manifestFile;
        java.io.File file86 = explodedArchive84.manifestFile;
        java.io.File file87 = null;
        java.io.File file88 = explodedArchive84.getManifestFile(file87);
        fileEntryIterator63.root = file88;
        explodedArchive57.root = file88;
        int int91 = entryComparator34.compare(file53, file88);
        fileEntry13.file = file88;
        java.io.File file93 = explodedArchive9.getManifestFile(file88);
        boolean boolean94 = uRL3.equals((java.lang.Object) file93);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "file" + "'", str8, "file");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileItorQueue72);
        org.junit.Assert.assertNotNull(fileComparator73);
        org.junit.Assert.assertNotNull(fileItorQueue75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNotNull(fileComparator77);
        org.junit.Assert.assertNotNull(fileItorQueue80);
        org.junit.Assert.assertNotNull(fileComparator81);
        org.junit.Assert.assertNotNull(fileComparator82);
        org.junit.Assert.assertNull(file85);
        org.junit.Assert.assertNull(file86);
        org.junit.Assert.assertNotNull(file88);
        org.junit.Assert.assertEquals(file88.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file88.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNotNull(file93);
        org.junit.Assert.assertEquals(file93.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file93.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        boolean boolean8 = explodedArchive3.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        fileEntryIterator9.recursive = true;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator19.thenComparing(fileComparator22);
        fileEntryIterator14.entryComparator = fileComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator19.thenComparing(fileComparator27);
        fileEntryIterator9.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.manifestFile;
        java.io.File file32 = explodedArchive30.manifestFile;
        java.io.File file33 = null;
        java.io.File file34 = explodedArchive30.getManifestFile(file33);
        fileEntryIterator9.root = file34;
        explodedArchive3.root = file34;
        java.util.Iterator<java.io.File> fileItor37 = fileEntryIterator0.listFiles(file34);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        fileEntryIterator45.recursive = true;
        java.util.Comparator<java.io.File> fileComparator49 = fileEntryIterator45.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        java.util.Comparator<java.io.File> fileComparator52 = fileEntryIterator50.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        java.util.Comparator<java.io.File> fileComparator59 = fileComparator55.thenComparing(fileComparator58);
        fileEntryIterator50.entryComparator = fileComparator55;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        java.util.Comparator<java.io.File> fileComparator64 = fileComparator55.thenComparing(fileComparator63);
        fileEntryIterator45.entryComparator = fileComparator64;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file67 = explodedArchive66.manifestFile;
        java.io.File file68 = explodedArchive66.manifestFile;
        java.io.File file69 = null;
        java.io.File file70 = explodedArchive66.getManifestFile(file69);
        fileEntryIterator45.root = file70;
        explodedArchive42.manifestFile = file70;
        fileEntryIterator38.current = file70;
        fileEntryIterator0.root = file70;
        boolean boolean75 = fileEntryIterator0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file70.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.lang.String str2 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean5 = fileEntryIterator4.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean7 = explodedArchive6.recursive;
        java.io.File file8 = explodedArchive6.manifestFile;
        java.util.jar.Manifest manifest9 = null;
        explodedArchive6.manifest = manifest9;
        java.io.File file11 = explodedArchive6.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        java.io.File file15 = fileEntryIterator12.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.manifestFile;
        java.io.File file18 = explodedArchive16.manifestFile;
        java.io.File file19 = null;
        java.io.File file20 = explodedArchive16.getManifestFile(file19);
        fileEntryIterator12.current = file20;
        explodedArchive6.root = file20;
        fileEntryIterator4.root = file20;
        explodedArchive3.root = file20;
        java.io.File file25 = explodedArchive3.root;
        explodedArchive0.manifestFile = file25;
        java.lang.String str27 = explodedArchive0.toString();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "exploded archive" + "'", str2, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file20.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file25.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "exploded archive" + "'", str27, "exploded archive");
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        explodedArchive0.recursive = true;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor24 = explodedArchive0.iterator();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file26 = fileEntry25.getFile();
        java.io.File file27 = fileEntry25.file;
        java.io.File file28 = null;
        fileEntry25.file = file28;
        java.lang.String str30 = fileEntry25.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file32 = fileEntryIterator31.current;
        java.io.File file33 = fileEntryIterator31.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file35 = fileEntryIterator34.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator39.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator42.entryComparator;
        java.util.Comparator<java.io.File> fileComparator45 = fileComparator41.thenComparing(fileComparator44);
        fileEntryIterator36.entryComparator = fileComparator41;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue48 = fileEntryIterator47.stack;
        java.util.Comparator<java.io.File> fileComparator49 = fileEntryIterator47.entryComparator;
        java.util.Comparator<java.io.File> fileComparator50 = fileComparator41.thenComparing(fileComparator49);
        fileEntryIterator34.entryComparator = fileComparator50;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator34.stack;
        fileEntryIterator31.stack = fileItorQueue52;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file55 = fileEntryIterator54.current;
        java.io.File file56 = fileEntryIterator54.poll();
        java.io.File file57 = fileEntryIterator54.poll();
        java.io.File file58 = fileEntryIterator54.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.io.File file61 = fileEntryIterator59.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file63 = explodedArchive62.manifestFile;
        java.io.File file64 = explodedArchive62.manifestFile;
        java.io.File file65 = null;
        java.io.File file66 = explodedArchive62.getManifestFile(file65);
        fileEntryIterator59.root = file65;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file69 = explodedArchive68.manifestFile;
        java.io.File file70 = explodedArchive68.manifestFile;
        java.io.File file71 = null;
        java.io.File file72 = explodedArchive68.getManifestFile(file71);
        java.util.Iterator<java.io.File> fileItor73 = fileEntryIterator59.listFiles(file72);
        fileEntryIterator54.root = file72;
        java.util.Iterator<java.io.File> fileItor75 = fileEntryIterator31.listFiles(file72);
        fileEntry25.file = file72;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive77 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: File must exist");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entryItor24);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNotNull(file72);
        org.junit.Assert.assertEquals(file72.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file72.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor73);
        org.junit.Assert.assertNotNull(fileItor75);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = explodedArchive0.manifest;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator37 = explodedArchive0.spliterator();
        java.net.URL uRL38 = explodedArchive0.getUrl();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file40 = fileEntryIterator39.current;
        boolean boolean41 = fileEntryIterator39.recursive;
        boolean boolean42 = uRL38.equals((java.lang.Object) fileEntryIterator39);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNotNull(entrySpliterator37);
        org.junit.Assert.assertNotNull(uRL38);
// flaky:         org.junit.Assert.assertEquals(uRL38.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        boolean boolean3 = fileEntryIterator0.recursive;
        java.io.File file4 = fileEntryIterator0.root;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass5 = file4.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(file4);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("hi!", "hi!", 100, "file://exploded archive", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry21 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", "", (-1), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        java.lang.String str34 = explodedArchive0.toString();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator35 = explodedArchive0.spliterator();
        java.util.jar.Manifest manifest36 = explodedArchive0.manifest;
        java.net.URL uRL37 = explodedArchive0.getUrl();
        java.net.Proxy proxy38 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection39 = uRL37.openConnection(proxy38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNotNull(uRL37);
// flaky:         org.junit.Assert.assertEquals(uRL37.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getAuthority();
        java.lang.String str9 = uRL3.getFile();
        java.lang.String str10 = uRL3.getFile();
        java.lang.String str11 = uRL3.getProtocol();
        java.lang.Class[] classArray12 = new java.lang.Class[] {};
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj13 = uRL3.getContent(classArray12);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "file" + "'", str11, "file");
        org.junit.Assert.assertNotNull(classArray12);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean5 = explodedArchive4.recursive;
        boolean boolean6 = explodedArchive4.recursive;
        java.io.File file7 = explodedArchive4.root;
        java.io.File file8 = null;
        java.io.File file9 = explodedArchive4.getManifestFile(file8);
        fileEntryIterator0.current = file8;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file9.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        boolean boolean3 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        java.util.Comparator<java.io.File> fileComparator18 = fileComparator9.thenComparing(fileComparator17);
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator17.reversed();
        fileEntryIterator0.entryComparator = fileComparator17;
        boolean boolean21 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file23 = fileEntryIterator22.current;
        java.io.File file24 = fileEntryIterator22.poll();
        java.io.File file25 = fileEntryIterator22.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator31.thenComparing(fileComparator34);
        fileEntryIterator26.entryComparator = fileComparator31;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator38 = fileComparator31.thenComparing((java.util.Comparator<java.io.File>) entryComparator37);
        fileEntryIterator22.entryComparator = entryComparator37;
        java.io.File file40 = fileEntryIterator22.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean43 = fileEntryIterator42.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean45 = explodedArchive44.recursive;
        java.io.File file46 = explodedArchive44.manifestFile;
        java.util.jar.Manifest manifest47 = null;
        explodedArchive44.manifest = manifest47;
        java.io.File file49 = explodedArchive44.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        java.util.Comparator<java.io.File> fileComparator52 = fileEntryIterator50.entryComparator;
        java.io.File file53 = fileEntryIterator50.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file55 = explodedArchive54.manifestFile;
        java.io.File file56 = explodedArchive54.manifestFile;
        java.io.File file57 = null;
        java.io.File file58 = explodedArchive54.getManifestFile(file57);
        fileEntryIterator50.current = file58;
        explodedArchive44.root = file58;
        fileEntryIterator42.root = file58;
        explodedArchive41.root = file58;
        fileEntryIterator22.current = file58;
        fileEntryIterator0.root = file58;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry65 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file58.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        fileEntryIterator3.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator3.entryComparator = fileComparator22;
        fileEntryIterator3.recursive = true;
        fileEntryIterator3.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator3.stack;
        fileEntryIterator0.stack = fileItorQueue28;
        java.io.File file30 = fileEntryIterator0.current;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNull(file30);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        int int7 = uRL3.getPort();
        java.lang.String str8 = uRL3.getPath();
        java.lang.String str9 = uRL3.getRef();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream10 = uRL3.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        java.io.File file3 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file5 = fileEntry4.getFile();
        java.io.File file6 = fileEntry4.file;
        java.io.File file7 = null;
        fileEntry4.file = file7;
        java.lang.String str9 = fileEntry4.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        boolean boolean12 = fileEntryIterator10.hasNext();
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator10.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator19.thenComparing(fileComparator22);
        fileEntryIterator14.entryComparator = fileComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator26 = fileComparator19.thenComparing((java.util.Comparator<java.io.File>) entryComparator25);
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator13.thenComparing((java.util.Comparator<java.io.File>) entryComparator25);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean29 = fileEntryIterator28.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean31 = explodedArchive30.recursive;
        java.io.File file32 = explodedArchive30.manifestFile;
        java.util.jar.Manifest manifest33 = null;
        explodedArchive30.manifest = manifest33;
        java.io.File file35 = explodedArchive30.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        java.io.File file39 = fileEntryIterator36.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.manifestFile;
        java.io.File file42 = explodedArchive40.manifestFile;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive40.getManifestFile(file43);
        fileEntryIterator36.current = file44;
        explodedArchive30.root = file44;
        fileEntryIterator28.root = file44;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file49 = explodedArchive48.manifestFile;
        java.io.File file50 = explodedArchive48.manifestFile;
        java.io.File file51 = null;
        java.io.File file52 = explodedArchive48.getManifestFile(file51);
        boolean boolean53 = explodedArchive48.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        fileEntryIterator54.recursive = true;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator54.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator62.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator65.stack;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator65.entryComparator;
        java.util.Comparator<java.io.File> fileComparator68 = fileComparator64.thenComparing(fileComparator67);
        fileEntryIterator59.entryComparator = fileComparator64;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator70 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue71 = fileEntryIterator70.stack;
        java.util.Comparator<java.io.File> fileComparator72 = fileEntryIterator70.entryComparator;
        java.util.Comparator<java.io.File> fileComparator73 = fileComparator64.thenComparing(fileComparator72);
        fileEntryIterator54.entryComparator = fileComparator73;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file76 = explodedArchive75.manifestFile;
        java.io.File file77 = explodedArchive75.manifestFile;
        java.io.File file78 = null;
        java.io.File file79 = explodedArchive75.getManifestFile(file78);
        fileEntryIterator54.root = file79;
        explodedArchive48.root = file79;
        int int82 = entryComparator25.compare(file44, file79);
        fileEntry4.file = file79;
        java.io.File file84 = explodedArchive0.getManifestFile(file79);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL85 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileItorQueue71);
        org.junit.Assert.assertNotNull(fileComparator72);
        org.junit.Assert.assertNotNull(fileComparator73);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file79.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file84.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.manifestFile;
        java.io.File file4 = explodedArchive2.manifestFile;
        java.io.File file5 = null;
        java.io.File file6 = explodedArchive2.getManifestFile(file5);
        fileEntryIterator0.current = file5;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        fileEntryIterator0.entryComparator = fileComparator10;
        java.io.File file12 = null;
        fileEntryIterator0.root = file12;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry14 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        boolean boolean14 = uRL3.sameFile(uRL9);
        java.lang.String str15 = uRL3.getHost();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getProtocol();
        java.lang.String str5 = uRL3.getUserInfo();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler16);
        boolean boolean18 = uRL3.sameFile(uRL17);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.io.File file21 = fileEntryIterator19.current;
        boolean boolean22 = fileEntryIterator19.hasNext();
        java.lang.Class<?> wildcardClass23 = fileEntryIterator19.getClass();
        java.lang.Class[] classArray24 = new java.lang.Class[] { wildcardClass23 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj25 = uRL17.getContent(classArray24);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "file" + "'", str4, "file");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(classArray24);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file://exploded archive", "", (int) 'a', "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file://exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file39 = fileEntryIterator38.current;
        java.io.File file40 = fileEntryIterator38.poll();
        java.io.File file41 = fileEntryIterator38.poll();
        java.io.File file42 = fileEntryIterator38.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.io.File file45 = fileEntryIterator43.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        fileEntryIterator43.root = file49;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.manifestFile;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.io.File file55 = null;
        java.io.File file56 = explodedArchive52.getManifestFile(file55);
        java.util.Iterator<java.io.File> fileItor57 = fileEntryIterator43.listFiles(file56);
        fileEntryIterator38.root = file56;
        explodedArchive0.root = file56;
        explodedArchive0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry62.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator65.stack;
        java.io.File file67 = fileEntryIterator65.current;
        boolean boolean68 = fileEntryIterator65.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator65.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean71 = explodedArchive70.recursive;
        boolean boolean72 = explodedArchive70.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file74 = explodedArchive73.manifestFile;
        java.io.File file75 = explodedArchive73.manifestFile;
        java.io.File file76 = null;
        java.io.File file77 = explodedArchive73.getManifestFile(file76);
        explodedArchive70.root = file77;
        fileEntryIterator65.root = file77;
        fileEntry62.file = file77;
        java.io.File file81 = fileEntry62.getFile();
        java.lang.String str82 = fileEntry62.name;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive83 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: File must exist");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor57);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file77.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file81.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "exploded archive" + "'", str82, "exploded archive");
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        boolean boolean3 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.manifestFile;
        java.io.File file8 = explodedArchive6.manifestFile;
        java.lang.String str9 = explodedArchive6.toString();
        java.lang.String str10 = explodedArchive6.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean12 = fileEntryIterator11.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean14 = explodedArchive13.recursive;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.util.jar.Manifest manifest16 = null;
        explodedArchive13.manifest = manifest16;
        java.io.File file18 = explodedArchive13.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.io.File file22 = fileEntryIterator19.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.manifestFile;
        java.io.File file25 = explodedArchive23.manifestFile;
        java.io.File file26 = null;
        java.io.File file27 = explodedArchive23.getManifestFile(file26);
        fileEntryIterator19.current = file27;
        explodedArchive13.root = file27;
        fileEntryIterator11.root = file27;
        java.io.File file31 = explodedArchive6.getManifestFile(file27);
        fileEntryIterator0.current = file31;
        java.io.File file33 = fileEntryIterator0.current;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "exploded archive" + "'", str9, "exploded archive");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "exploded archive" + "'", str10, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file27.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry0.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.io.File file5 = fileEntryIterator3.current;
        boolean boolean6 = fileEntryIterator3.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator3.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean9 = explodedArchive8.recursive;
        boolean boolean10 = explodedArchive8.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.manifestFile;
        java.io.File file13 = explodedArchive11.manifestFile;
        java.io.File file14 = null;
        java.io.File file15 = explodedArchive11.getManifestFile(file14);
        explodedArchive8.root = file15;
        fileEntryIterator3.root = file15;
        fileEntry0.file = file15;
        java.lang.String str19 = fileEntry0.name;
        java.io.File file20 = fileEntry0.getFile();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file20, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file15.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "exploded archive" + "'", str19, "exploded archive");
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file20.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        java.io.File file3 = fileEntryIterator0.current;
        fileEntryIterator0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str7 = fileEntry6.getName();
        fileEntry6.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean11 = explodedArchive10.recursive;
        boolean boolean12 = explodedArchive10.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        explodedArchive10.root = file17;
        fileEntry6.file = file17;
        fileEntryIterator0.root = file17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.io.File file23 = fileEntryIterator21.current;
        boolean boolean24 = fileEntryIterator21.hasNext();
        fileEntryIterator21.recursive = false;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator31.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator33.thenComparing(fileComparator36);
        java.util.Comparator<java.io.File> fileComparator38 = fileComparator30.thenComparing(fileComparator36);
        java.util.Comparator<java.io.File> fileComparator39 = fileComparator27.thenComparing(fileComparator38);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator40.stack;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator40.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        java.util.Comparator<java.io.File> fileComparator49 = fileComparator45.thenComparing(fileComparator48);
        fileEntryIterator40.entryComparator = fileComparator45;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator45.thenComparing((java.util.Comparator<java.io.File>) entryComparator51);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        java.util.Comparator<java.io.File> fileComparator62 = fileComparator58.thenComparing(fileComparator61);
        java.util.Comparator<java.io.File> fileComparator63 = fileComparator55.thenComparing(fileComparator61);
        java.util.Comparator<java.io.File> fileComparator64 = entryComparator51.thenComparing(fileComparator63);
        java.util.Comparator<java.io.File> fileComparator65 = entryComparator51.reversed();
        java.util.Comparator<java.io.File> fileComparator66 = fileComparator38.thenComparing(fileComparator65);
        fileEntryIterator0.entryComparator = fileComparator38;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileItorQueue41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileComparator66);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = null;
        fileEntryIterator0.current = file2;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.io.File file6 = fileEntryIterator4.current;
        boolean boolean7 = fileEntryIterator4.hasNext();
        fileEntryIterator4.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        boolean boolean12 = fileEntryIterator10.hasNext();
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator10.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator19.thenComparing(fileComparator22);
        fileEntryIterator14.entryComparator = fileComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator26 = fileComparator19.thenComparing((java.util.Comparator<java.io.File>) entryComparator25);
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator13.thenComparing((java.util.Comparator<java.io.File>) entryComparator25);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean29 = fileEntryIterator28.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean31 = explodedArchive30.recursive;
        java.io.File file32 = explodedArchive30.manifestFile;
        java.util.jar.Manifest manifest33 = null;
        explodedArchive30.manifest = manifest33;
        java.io.File file35 = explodedArchive30.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        java.io.File file39 = fileEntryIterator36.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.manifestFile;
        java.io.File file42 = explodedArchive40.manifestFile;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive40.getManifestFile(file43);
        fileEntryIterator36.current = file44;
        explodedArchive30.root = file44;
        fileEntryIterator28.root = file44;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file49 = explodedArchive48.manifestFile;
        java.io.File file50 = explodedArchive48.manifestFile;
        java.io.File file51 = null;
        java.io.File file52 = explodedArchive48.getManifestFile(file51);
        boolean boolean53 = explodedArchive48.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        fileEntryIterator54.recursive = true;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator54.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator62.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator65.stack;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator65.entryComparator;
        java.util.Comparator<java.io.File> fileComparator68 = fileComparator64.thenComparing(fileComparator67);
        fileEntryIterator59.entryComparator = fileComparator64;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator70 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue71 = fileEntryIterator70.stack;
        java.util.Comparator<java.io.File> fileComparator72 = fileEntryIterator70.entryComparator;
        java.util.Comparator<java.io.File> fileComparator73 = fileComparator64.thenComparing(fileComparator72);
        fileEntryIterator54.entryComparator = fileComparator73;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file76 = explodedArchive75.manifestFile;
        java.io.File file77 = explodedArchive75.manifestFile;
        java.io.File file78 = null;
        java.io.File file79 = explodedArchive75.getManifestFile(file78);
        fileEntryIterator54.root = file79;
        explodedArchive48.root = file79;
        int int82 = entryComparator25.compare(file44, file79);
        java.util.Iterator<java.io.File> fileItor83 = fileEntryIterator4.listFiles(file44);
        java.util.Iterator<java.io.File> fileItor84 = fileEntryIterator0.listFiles(file44);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive86 = new org.springframework.boot.loader.archive.ExplodedArchive(file44, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileItorQueue71);
        org.junit.Assert.assertNotNull(fileComparator72);
        org.junit.Assert.assertNotNull(fileComparator73);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file79.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(fileItor83);
        org.junit.Assert.assertNotNull(fileItor84);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getAuthority();
        int int9 = uRL3.getPort();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = uRL3.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator15);
        fileEntryIterator0.entryComparator = entryComparator15;
        java.io.File file18 = fileEntryIterator0.current;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry19 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file18);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.Proxy proxy9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection10 = uRL3.openConnection(proxy9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        java.net.URL uRL4 = new java.net.URL("file", "hi!", (int) (byte) -1, "hi!");
        java.lang.String str5 = uRL4.getHost();
        org.junit.Assert.assertEquals(uRL4.toString(), "file://hi!hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("hi!", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", 52, "file", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        fileEntryIterator0.recursive = true;
        fileEntryIterator0.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator0.stack;
        boolean boolean26 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.io.File file29 = fileEntryIterator27.current;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator27.stack;
        fileEntryIterator0.stack = fileItorQueue30;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(fileItorQueue30);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.io.File file9 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        fileEntryIterator6.current = file14;
        explodedArchive0.root = file14;
        explodedArchive0.recursive = false;
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest19 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        java.net.URL uRL1 = new java.net.URL("file://exploded archive");
        java.lang.String str2 = uRL1.getProtocol();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj3 = uRL1.getContent();
            org.junit.Assert.fail("Expected exception of type java.net.UnknownHostException; message: exploded archive");
        } catch (java.net.UnknownHostException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL1.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "file" + "'", str2, "file");
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", 10, "file://exploded archive", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.io.File file5 = fileEntryIterator3.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.manifestFile;
        java.io.File file8 = explodedArchive6.manifestFile;
        java.io.File file9 = null;
        java.io.File file10 = explodedArchive6.getManifestFile(file9);
        fileEntryIterator3.root = file9;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.manifestFile;
        java.io.File file14 = explodedArchive12.manifestFile;
        java.io.File file15 = null;
        java.io.File file16 = explodedArchive12.getManifestFile(file15);
        java.util.Iterator<java.io.File> fileItor17 = fileEntryIterator3.listFiles(file16);
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator3.stack;
        fileEntryIterator0.stack = fileItorQueue18;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file16.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor17);
        org.junit.Assert.assertNotNull(fileItorQueue18);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        java.io.File file3 = explodedArchive0.root;
        java.io.File file4 = explodedArchive0.root;
        explodedArchive0.recursive = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream73 = uRL69.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.toExternalForm();
        java.lang.String str7 = uRL3.getFile();
        java.lang.String str8 = uRL3.getAuthority();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = uRL3.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.lang.String str4 = explodedArchive0.toString();
        boolean boolean5 = explodedArchive0.recursive;
        java.io.File file6 = null;
        explodedArchive0.root = file6;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str9 = fileEntry8.name;
        java.io.File file10 = fileEntry8.file;
        fileEntry8.name = "exploded archive";
        java.lang.String str13 = fileEntry8.getName();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive14 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "exploded archive" + "'", str13, "exploded archive");
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean13 = explodedArchive12.recursive;
        java.io.File file14 = explodedArchive12.manifestFile;
        java.util.jar.Manifest manifest15 = null;
        explodedArchive12.manifest = manifest15;
        java.io.File file17 = explodedArchive12.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        java.io.File file21 = fileEntryIterator18.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file23 = explodedArchive22.manifestFile;
        java.io.File file24 = explodedArchive22.manifestFile;
        java.io.File file25 = null;
        java.io.File file26 = explodedArchive22.getManifestFile(file25);
        fileEntryIterator18.current = file26;
        explodedArchive12.root = file26;
        boolean boolean29 = explodedArchive12.recursive;
        boolean boolean30 = uRL3.equals((java.lang.Object) explodedArchive12);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        java.net.URL uRL5 = new java.net.URL("file", "exploded archive", (int) (byte) -1, "", uRLStreamHandler4);
        java.lang.String str6 = uRL5.getUserInfo();
        java.lang.String str7 = uRL5.getFile();
        java.lang.String str8 = uRL5.toString();
        org.junit.Assert.assertEquals(uRL5.toString(), "file://exploded archive");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "file://exploded archive" + "'", str8, "file://exploded archive");
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.lang.String str4 = explodedArchive0.toString();
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file7 = fileEntryIterator6.current;
        java.io.File file8 = fileEntryIterator6.poll();
        java.io.File file9 = fileEntryIterator6.poll();
        java.io.File file10 = fileEntryIterator6.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.io.File file13 = fileEntryIterator11.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.manifestFile;
        java.io.File file16 = explodedArchive14.manifestFile;
        java.io.File file17 = null;
        java.io.File file18 = explodedArchive14.getManifestFile(file17);
        fileEntryIterator11.root = file17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.manifestFile;
        java.io.File file22 = explodedArchive20.manifestFile;
        java.io.File file23 = null;
        java.io.File file24 = explodedArchive20.getManifestFile(file23);
        java.util.Iterator<java.io.File> fileItor25 = fileEntryIterator11.listFiles(file24);
        fileEntryIterator6.root = file24;
        explodedArchive0.manifestFile = file24;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        boolean boolean30 = fileEntryIterator28.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.manifestFile;
        java.io.File file33 = explodedArchive31.manifestFile;
        java.io.File file34 = null;
        java.io.File file35 = explodedArchive31.getManifestFile(file34);
        boolean boolean36 = explodedArchive31.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        fileEntryIterator37.recursive = true;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator37.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator42.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator45.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        java.util.Comparator<java.io.File> fileComparator51 = fileComparator47.thenComparing(fileComparator50);
        fileEntryIterator42.entryComparator = fileComparator47;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        java.util.Comparator<java.io.File> fileComparator56 = fileComparator47.thenComparing(fileComparator55);
        fileEntryIterator37.entryComparator = fileComparator56;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file59 = explodedArchive58.manifestFile;
        java.io.File file60 = explodedArchive58.manifestFile;
        java.io.File file61 = null;
        java.io.File file62 = explodedArchive58.getManifestFile(file61);
        fileEntryIterator37.root = file62;
        explodedArchive31.root = file62;
        java.util.Iterator<java.io.File> fileItor65 = fileEntryIterator28.listFiles(file62);
        java.io.File file66 = explodedArchive0.getManifestFile(file62);
        java.lang.String str67 = explodedArchive0.toString();
        java.util.jar.Manifest manifest68 = null;
        explodedArchive0.manifest = manifest68;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor70 = explodedArchive0.iterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor25);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file35.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor65);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "exploded archive" + "'", str67, "exploded archive");
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.net.URLStreamHandler uRLStreamHandler7 = null;
        java.net.URL uRL8 = new java.net.URL(uRL3, "hi!", uRLStreamHandler7);
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals(uRL8.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file39 = fileEntryIterator38.current;
        java.io.File file40 = fileEntryIterator38.poll();
        java.io.File file41 = fileEntryIterator38.poll();
        java.io.File file42 = fileEntryIterator38.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.io.File file45 = fileEntryIterator43.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        fileEntryIterator43.root = file49;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.manifestFile;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.io.File file55 = null;
        java.io.File file56 = explodedArchive52.getManifestFile(file55);
        java.util.Iterator<java.io.File> fileItor57 = fileEntryIterator43.listFiles(file56);
        fileEntryIterator38.root = file56;
        explodedArchive0.root = file56;
        java.io.File file60 = explodedArchive0.root;
        java.io.File file61 = explodedArchive0.root;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive(file61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor57);
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file60.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        java.util.jar.Manifest manifest24 = explodedArchive0.manifest;
        java.io.File file25 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file27 = fileEntryIterator26.current;
        java.io.File file28 = null;
        fileEntryIterator26.current = file28;
        java.io.File file30 = fileEntryIterator26.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file32 = fileEntry31.getFile();
        java.lang.String str33 = fileEntry31.name;
        java.io.File file34 = fileEntry31.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        boolean boolean37 = fileEntryIterator35.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        boolean boolean43 = explodedArchive38.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        fileEntryIterator44.recursive = true;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator44.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        java.util.Comparator<java.io.File> fileComparator58 = fileComparator54.thenComparing(fileComparator57);
        fileEntryIterator49.entryComparator = fileComparator54;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        java.util.Comparator<java.io.File> fileComparator63 = fileComparator54.thenComparing(fileComparator62);
        fileEntryIterator44.entryComparator = fileComparator63;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file66 = explodedArchive65.manifestFile;
        java.io.File file67 = explodedArchive65.manifestFile;
        java.io.File file68 = null;
        java.io.File file69 = explodedArchive65.getManifestFile(file68);
        fileEntryIterator44.root = file69;
        explodedArchive38.root = file69;
        java.util.Iterator<java.io.File> fileItor72 = fileEntryIterator35.listFiles(file69);
        fileEntry31.file = file69;
        fileEntryIterator26.current = file69;
        explodedArchive0.root = file69;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive(file69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor72);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLConnection uRLConnection7 = uRL3.openConnection();
        java.lang.String str8 = uRL3.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file10 = fileEntryIterator9.current;
        boolean boolean11 = fileEntryIterator9.hasNext();
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator9.entryComparator;
        java.lang.Class<?> wildcardClass13 = fileEntryIterator9.getClass();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.manifestFile;
        java.io.File file16 = explodedArchive14.manifestFile;
        java.io.File file17 = null;
        java.io.File file18 = explodedArchive14.getManifestFile(file17);
        boolean boolean19 = explodedArchive14.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        fileEntryIterator20.recursive = true;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator20.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator31.entryComparator;
        java.util.Comparator<java.io.File> fileComparator34 = fileComparator30.thenComparing(fileComparator33);
        fileEntryIterator25.entryComparator = fileComparator30;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        java.util.Comparator<java.io.File> fileComparator39 = fileComparator30.thenComparing(fileComparator38);
        fileEntryIterator20.entryComparator = fileComparator39;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file42 = explodedArchive41.manifestFile;
        java.io.File file43 = explodedArchive41.manifestFile;
        java.io.File file44 = null;
        java.io.File file45 = explodedArchive41.getManifestFile(file44);
        fileEntryIterator20.root = file45;
        explodedArchive14.root = file45;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor48 = explodedArchive14.iterator();
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor49 = explodedArchive14.iterator();
        java.lang.Class<?> wildcardClass50 = entryItor49.getClass();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.io.File file53 = fileEntryIterator51.current;
        boolean boolean54 = fileEntryIterator51.hasNext();
        fileEntryIterator51.recursive = false;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator51.entryComparator;
        java.lang.Class<?> wildcardClass58 = fileEntryIterator51.getClass();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.io.File file61 = fileEntryIterator59.current;
        boolean boolean62 = fileEntryIterator59.hasNext();
        java.lang.Class<?> wildcardClass63 = fileEntryIterator59.getClass();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.Class<?> wildcardClass65 = explodedArchive64.getClass();
        java.lang.Class[] classArray66 = new java.lang.Class[] { wildcardClass13, wildcardClass50, wildcardClass58, wildcardClass63, wildcardClass65 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj67 = uRL3.getContent(classArray66);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entryItor48);
        org.junit.Assert.assertNotNull(entryItor49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(classArray66);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.net.URI uRI4 = uRL3.toURI();
        java.net.URLConnection uRLConnection5 = uRL3.openConnection();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI4);
        org.junit.Assert.assertNotNull(uRLConnection5);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        explodedArchive0.root = file7;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file7, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        java.io.File file3 = explodedArchive0.root;
        java.io.File file4 = explodedArchive0.root;
        explodedArchive0.recursive = false;
        explodedArchive0.recursive = true;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive0.getNestedArchives(entryFilter9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", (int) (byte) -1, "file");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/manifest.mf");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.net.URLStreamHandler uRLStreamHandler74 = null;
        java.net.URL uRL75 = new java.net.URL(uRL72, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", uRLStreamHandler74);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj76 = uRL75.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi! (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL75.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        int int13 = uRL11.getDefaultPort();
        java.lang.String str14 = uRL11.getUserInfo();
        java.lang.String str15 = uRL11.getRef();
        int int16 = uRL11.getPort();
        java.lang.String str17 = uRL11.getRef();
        java.net.Proxy proxy18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection19 = uRL11.openConnection(proxy18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive0.getNestedArchives(entryFilter36);
        java.net.URL uRL38 = explodedArchive0.getUrl();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream39 = uRL38.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertNotNull(uRL38);
// flaky:         org.junit.Assert.assertEquals(uRL38.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.net.URL uRL13 = new java.net.URL(uRL3, "file://exploded archive");
        java.lang.String str14 = uRL13.getProtocol();
        java.lang.Class<?> wildcardClass15 = uRL13.getClass();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL13.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        java.util.jar.Manifest manifest24 = explodedArchive0.manifest;
        java.net.URL uRL25 = explodedArchive0.getUrl();
        java.lang.Class<?> wildcardClass26 = uRL25.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertNotNull(uRL25);
// flaky:         org.junit.Assert.assertEquals(uRL25.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file://exploded archive", "exploded archive", (int) (short) 1, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file://exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        explodedArchive0.root = file7;
        java.lang.String str9 = explodedArchive0.toString();
        java.io.File file10 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file12 = fileEntry11.getFile();
        java.lang.String str13 = fileEntry11.name;
        java.io.File file14 = null;
        fileEntry11.file = file14;
        java.io.File file16 = fileEntry11.file;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive17 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str9, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(file16);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.lang.String str10 = uRL3.getFile();
        java.net.URL uRL11 = null;
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getHost();
        java.lang.String str16 = uRL14.getAuthority();
        java.lang.String str17 = uRL14.getAuthority();
        java.lang.String str18 = uRL14.getRef();
        java.net.URL uRL19 = null;
        java.net.URLStreamHandler uRLStreamHandler21 = null;
        java.net.URL uRL22 = new java.net.URL(uRL19, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler21);
        java.lang.String str23 = uRL22.getHost();
        java.lang.String str24 = uRL22.getAuthority();
        java.lang.String str25 = uRL22.getQuery();
        int int26 = uRL22.getDefaultPort();
        java.lang.String str27 = uRL22.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler29 = null;
        java.net.URL uRL30 = new java.net.URL(uRL22, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler29);
        java.lang.String str31 = uRL30.getFile();
        boolean boolean32 = uRL14.sameFile(uRL30);
        boolean boolean33 = uRL3.sameFile(uRL30);
        java.net.URI uRI34 = uRL3.toURI();
        java.lang.String str35 = uRL3.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals(uRL30.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str31, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(uRI34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str35, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", (int) (short) 10, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.util.jar.Manifest manifest5 = null;
        explodedArchive0.manifest = manifest5;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file8 = fileEntry7.getFile();
        java.lang.String str9 = fileEntry7.name;
        java.io.File file10 = fileEntry7.file;
        java.lang.String str11 = fileEntry7.getName();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive12 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        java.io.File file3 = explodedArchive0.root;
        java.util.jar.Manifest manifest4 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive0.getNestedArchives(entryFilter5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(manifest4);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.recursive;
        boolean boolean2 = fileEntryIterator0.recursive;
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        java.io.File file4 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean7 = fileEntryIterator6.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean9 = explodedArchive8.recursive;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.util.jar.Manifest manifest11 = null;
        explodedArchive8.manifest = manifest11;
        java.io.File file13 = explodedArchive8.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.io.File file17 = fileEntryIterator14.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.manifestFile;
        java.io.File file20 = explodedArchive18.manifestFile;
        java.io.File file21 = null;
        java.io.File file22 = explodedArchive18.getManifestFile(file21);
        fileEntryIterator14.current = file22;
        explodedArchive8.root = file22;
        fileEntryIterator6.root = file22;
        explodedArchive5.root = file22;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator27 = explodedArchive5.spliterator();
        java.io.File file28 = explodedArchive5.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str30 = fileEntry29.name;
        java.io.File file31 = fileEntry29.file;
        fileEntry29.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        boolean boolean36 = fileEntryIterator34.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file38 = explodedArchive37.manifestFile;
        java.io.File file39 = explodedArchive37.manifestFile;
        java.io.File file40 = null;
        java.io.File file41 = explodedArchive37.getManifestFile(file40);
        boolean boolean42 = explodedArchive37.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        fileEntryIterator43.recursive = true;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator53.thenComparing(fileComparator56);
        fileEntryIterator48.entryComparator = fileComparator53;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        java.util.Comparator<java.io.File> fileComparator62 = fileComparator53.thenComparing(fileComparator61);
        fileEntryIterator43.entryComparator = fileComparator62;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file65 = explodedArchive64.manifestFile;
        java.io.File file66 = explodedArchive64.manifestFile;
        java.io.File file67 = null;
        java.io.File file68 = explodedArchive64.getManifestFile(file67);
        fileEntryIterator43.root = file68;
        explodedArchive37.root = file68;
        java.util.Iterator<java.io.File> fileItor71 = fileEntryIterator34.listFiles(file68);
        fileEntry29.file = file68;
        explodedArchive5.root = file68;
        java.util.Iterator<java.io.File> fileItor74 = fileEntryIterator0.listFiles(file68);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive(file68);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fileComparator3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file68.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor71);
        org.junit.Assert.assertNotNull(fileItor74);
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.io.File file38 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file40 = fileEntry39.getFile();
        java.io.File file41 = fileEntry39.file;
        fileEntry39.name = "";
        java.lang.String str44 = fileEntry39.name;
        java.io.File file45 = fileEntry39.file;
        java.lang.String str46 = fileEntry39.getName();
        java.io.File file47 = fileEntry39.file;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive48 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNull(file47);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.root;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor6 = explodedArchive0.iterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.name;
        java.io.File file3 = fileEntry0.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        boolean boolean6 = fileEntryIterator4.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.manifestFile;
        java.io.File file9 = explodedArchive7.manifestFile;
        java.io.File file10 = null;
        java.io.File file11 = explodedArchive7.getManifestFile(file10);
        boolean boolean12 = explodedArchive7.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        fileEntryIterator13.recursive = true;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator23.thenComparing(fileComparator26);
        fileEntryIterator18.entryComparator = fileComparator23;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator23.thenComparing(fileComparator31);
        fileEntryIterator13.entryComparator = fileComparator32;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file35 = explodedArchive34.manifestFile;
        java.io.File file36 = explodedArchive34.manifestFile;
        java.io.File file37 = null;
        java.io.File file38 = explodedArchive34.getManifestFile(file37);
        fileEntryIterator13.root = file38;
        explodedArchive7.root = file38;
        java.util.Iterator<java.io.File> fileItor41 = fileEntryIterator4.listFiles(file38);
        fileEntry0.file = file38;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.io.File file45 = fileEntryIterator43.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        fileEntryIterator43.root = file49;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.manifestFile;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.io.File file55 = null;
        java.io.File file56 = explodedArchive52.getManifestFile(file55);
        java.util.Iterator<java.io.File> fileItor57 = fileEntryIterator43.listFiles(file56);
        fileEntry0.file = file56;
        java.io.File file59 = fileEntry0.getFile();
        java.lang.String str60 = fileEntry0.getName();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor41);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor57);
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str60);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        fileEntryIterator0.recursive = true;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fileComparator3);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file4 = fileEntryIterator3.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator3.entryComparator = fileComparator19;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator3.stack;
        fileEntryIterator0.stack = fileItorQueue21;
        boolean boolean23 = fileEntryIterator0.recursive;
        java.io.File file24 = null;
        fileEntryIterator0.root = file24;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry26 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", "hi!", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator39 = explodedArchive0.spliterator();
        java.io.File file40 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator39);
        org.junit.Assert.assertNull(file40);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getFile();
        java.net.URLConnection uRLConnection14 = uRL11.openConnection();
        java.lang.String str15 = uRL11.getAuthority();
        java.lang.String str16 = uRL11.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str13, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str16, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        java.lang.String str5 = fileEntry0.getName();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = fileEntry0.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", "hi!", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        int int7 = uRL3.getPort();
        java.lang.String str8 = uRL3.getPath();
        java.lang.String str9 = uRL3.getRef();
        java.lang.String str10 = uRL3.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", 0, "file", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", (int) 'a', "file");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: Illegal character found in host: '/'");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        java.io.File file41 = explodedArchive0.root;
        explodedArchive0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file45 = fileEntry44.getFile();
        java.io.File file46 = fileEntry44.file;
        java.io.File file47 = null;
        fileEntry44.file = file47;
        java.lang.String str49 = fileEntry44.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file51 = fileEntryIterator50.current;
        java.io.File file52 = null;
        fileEntryIterator50.current = file52;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean55 = explodedArchive54.recursive;
        java.io.File file56 = explodedArchive54.manifestFile;
        java.util.jar.Manifest manifest57 = null;
        explodedArchive54.manifest = manifest57;
        java.io.File file59 = explodedArchive54.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        java.io.File file63 = fileEntryIterator60.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file65 = explodedArchive64.manifestFile;
        java.io.File file66 = explodedArchive64.manifestFile;
        java.io.File file67 = null;
        java.io.File file68 = explodedArchive64.getManifestFile(file67);
        fileEntryIterator60.current = file68;
        explodedArchive54.root = file68;
        fileEntryIterator50.root = file68;
        fileEntry44.file = file68;
        java.io.File file73 = fileEntry44.file;
        explodedArchive0.root = file73;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive(file73);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file68.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file73.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        fileEntryIterator3.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator3.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        fileEntryIterator3.root = file28;
        explodedArchive0.manifestFile = file28;
        java.util.jar.Manifest manifest31 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest32 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest33 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest34 = explodedArchive0.getManifest();
        java.io.File file35 = explodedArchive0.root;
        java.io.File file36 = explodedArchive0.manifestFile;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator37 = explodedArchive0.spliterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertNull(manifest34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.manifestFile;
        java.io.File file3 = explodedArchive1.manifestFile;
        java.lang.String str4 = explodedArchive1.toString();
        java.util.jar.Manifest manifest5 = null;
        explodedArchive1.manifest = manifest5;
        java.lang.String str7 = explodedArchive1.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        boolean boolean10 = fileEntryIterator8.hasNext();
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        java.util.Comparator<java.io.File> fileComparator21 = fileComparator17.thenComparing(fileComparator20);
        fileEntryIterator12.entryComparator = fileComparator17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator17.thenComparing((java.util.Comparator<java.io.File>) entryComparator23);
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator11.thenComparing((java.util.Comparator<java.io.File>) entryComparator23);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean27 = fileEntryIterator26.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean29 = explodedArchive28.recursive;
        java.io.File file30 = explodedArchive28.manifestFile;
        java.util.jar.Manifest manifest31 = null;
        explodedArchive28.manifest = manifest31;
        java.io.File file33 = explodedArchive28.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.io.File file37 = fileEntryIterator34.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        fileEntryIterator34.current = file42;
        explodedArchive28.root = file42;
        fileEntryIterator26.root = file42;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        boolean boolean51 = explodedArchive46.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        fileEntryIterator52.recursive = true;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator63.entryComparator;
        java.util.Comparator<java.io.File> fileComparator66 = fileComparator62.thenComparing(fileComparator65);
        fileEntryIterator57.entryComparator = fileComparator62;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        java.util.Comparator<java.io.File> fileComparator71 = fileComparator62.thenComparing(fileComparator70);
        fileEntryIterator52.entryComparator = fileComparator71;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file74 = explodedArchive73.manifestFile;
        java.io.File file75 = explodedArchive73.manifestFile;
        java.io.File file76 = null;
        java.io.File file77 = explodedArchive73.getManifestFile(file76);
        fileEntryIterator52.root = file77;
        explodedArchive46.root = file77;
        int int80 = entryComparator23.compare(file42, file77);
        java.io.File file81 = explodedArchive1.getManifestFile(file42);
        explodedArchive0.manifestFile = file81;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive84 = new org.springframework.boot.loader.archive.ExplodedArchive(file81, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "exploded archive" + "'", str7, "exploded archive");
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file77.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file81.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "", (int) ' ', "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/manifest.mf");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.lang.String str73 = uRL69.getUserInfo();
        java.net.URLStreamHandler uRLStreamHandler75 = null;
        java.net.URL uRL76 = new java.net.URL(uRL69, "file", uRLStreamHandler75);
        java.net.Proxy proxy77 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection78 = uRL76.openConnection(proxy77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str73);
// flaky:         org.junit.Assert.assertEquals(uRL76.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getRef();
        java.lang.Class[] classArray7 = new java.lang.Class[] {};
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj8 = uRL3.getContent(classArray7);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(classArray7);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.net.URI uRI4 = uRL3.toURI();
        java.net.URL uRL6 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        java.lang.String str7 = uRL6.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI4);
        org.junit.Assert.assertEquals(uRL6.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!" + "'", str7, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.util.jar.Manifest manifest38 = explodedArchive0.manifest;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass39 = manifest38.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest38);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLConnection uRLConnection9 = uRL3.openConnection();
        java.lang.Class[] classArray10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = uRL3.getContent(classArray10);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(uRLConnection9);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        java.net.URL uRL1 = new java.net.URL("file://exploded archive");
        java.lang.Class[] classArray2 = new java.lang.Class[] {};
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj3 = uRL1.getContent(classArray2);
            org.junit.Assert.fail("Expected exception of type java.net.UnknownHostException; message: exploded archive");
        } catch (java.net.UnknownHostException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL1.toString(), "file://exploded archive");
        org.junit.Assert.assertNotNull(classArray2);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL(uRL0, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", uRLStreamHandler2);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.net.URL uRL13 = new java.net.URL(uRL3, "file://exploded archive");
        java.lang.Class<?> wildcardClass14 = uRL13.getClass();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL13.toString(), "file://exploded archive");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getAuthority();
        java.lang.String str9 = uRL3.getRef();
        java.lang.String str10 = uRL3.getQuery();
        java.net.Proxy proxy11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection12 = uRL3.openConnection(proxy11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file44 = fileEntry43.getFile();
        java.lang.String str45 = fileEntry43.name;
        java.io.File file46 = fileEntry43.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue48 = fileEntryIterator47.stack;
        boolean boolean49 = fileEntryIterator47.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file51 = explodedArchive50.manifestFile;
        java.io.File file52 = explodedArchive50.manifestFile;
        java.io.File file53 = null;
        java.io.File file54 = explodedArchive50.getManifestFile(file53);
        boolean boolean55 = explodedArchive50.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        fileEntryIterator56.recursive = true;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator56.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        java.util.Comparator<java.io.File> fileComparator66 = fileEntryIterator64.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue68 = fileEntryIterator67.stack;
        java.util.Comparator<java.io.File> fileComparator69 = fileEntryIterator67.entryComparator;
        java.util.Comparator<java.io.File> fileComparator70 = fileComparator66.thenComparing(fileComparator69);
        fileEntryIterator61.entryComparator = fileComparator66;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator72 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue73 = fileEntryIterator72.stack;
        java.util.Comparator<java.io.File> fileComparator74 = fileEntryIterator72.entryComparator;
        java.util.Comparator<java.io.File> fileComparator75 = fileComparator66.thenComparing(fileComparator74);
        fileEntryIterator56.entryComparator = fileComparator75;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file78 = explodedArchive77.manifestFile;
        java.io.File file79 = explodedArchive77.manifestFile;
        java.io.File file80 = null;
        java.io.File file81 = explodedArchive77.getManifestFile(file80);
        fileEntryIterator56.root = file81;
        explodedArchive50.root = file81;
        java.util.Iterator<java.io.File> fileItor84 = fileEntryIterator47.listFiles(file81);
        fileEntry43.file = file81;
        explodedArchive38.manifestFile = file81;
        explodedArchive0.root = file81;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry88 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive89 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(fileItorQueue48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileItorQueue68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileItorQueue73);
        org.junit.Assert.assertNotNull(fileComparator74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNull(file78);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file81.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor84);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        int int8 = uRL3.getPort();
        java.lang.String str9 = uRL3.getRef();
        java.net.URL uRL11 = new java.net.URL(uRL3, "hi!");
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "", uRLStreamHandler13);
        java.lang.String str15 = uRL11.getUserInfo();
        java.lang.String str16 = uRL11.toExternalForm();
        java.lang.String str17 = uRL11.getQuery();
        java.lang.String str18 = uRL11.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!" + "'", str16, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!" + "'", str18, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator0.stack;
        java.io.File file5 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.io.File file8 = fileEntryIterator6.current;
        java.io.File file9 = fileEntryIterator6.current;
        fileEntryIterator6.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.manifestFile;
        java.io.File file14 = explodedArchive12.manifestFile;
        java.io.File file15 = null;
        java.io.File file16 = explodedArchive12.getManifestFile(file15);
        fileEntryIterator6.root = file16;
        fileEntryIterator0.root = file16;
        java.io.File file19 = fileEntryIterator0.root;
        boolean boolean20 = fileEntryIterator0.recursive;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file16.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file19.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str8 = explodedArchive7.toString();
        java.io.File file9 = explodedArchive7.root;
        java.io.File file10 = explodedArchive7.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file12 = fileEntryIterator11.current;
        java.io.File file13 = fileEntryIterator11.poll();
        java.io.File file14 = fileEntryIterator11.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator20.thenComparing(fileComparator23);
        fileEntryIterator15.entryComparator = fileComparator20;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator20.thenComparing((java.util.Comparator<java.io.File>) entryComparator26);
        fileEntryIterator11.entryComparator = entryComparator26;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file30 = explodedArchive29.manifestFile;
        java.io.File file31 = explodedArchive29.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        fileEntryIterator32.recursive = true;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator32.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator40.stack;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator40.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        java.util.Comparator<java.io.File> fileComparator46 = fileComparator42.thenComparing(fileComparator45);
        fileEntryIterator37.entryComparator = fileComparator42;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        java.util.Comparator<java.io.File> fileComparator51 = fileComparator42.thenComparing(fileComparator50);
        fileEntryIterator32.entryComparator = fileComparator51;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file54 = explodedArchive53.manifestFile;
        java.io.File file55 = explodedArchive53.manifestFile;
        java.io.File file56 = null;
        java.io.File file57 = explodedArchive53.getManifestFile(file56);
        fileEntryIterator32.root = file57;
        explodedArchive29.manifestFile = file57;
        fileEntryIterator11.root = file57;
        explodedArchive7.root = file57;
        fileEntryIterator0.current = file57;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive(file57, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "exploded archive" + "'", str8, "exploded archive");
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileItorQueue41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNotNull(file57);
        org.junit.Assert.assertEquals(file57.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file57.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.Proxy proxy70 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection71 = uRL69.openConnection(proxy70);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "file://exploded archive", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/manifest.mf");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file4 = fileEntryIterator3.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator3.entryComparator = fileComparator19;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator3.stack;
        fileEntryIterator0.stack = fileItorQueue21;
        boolean boolean23 = fileEntryIterator0.recursive;
        java.io.File file24 = null;
        fileEntryIterator0.root = file24;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getProtocol();
        java.net.URL uRL6 = new java.net.URL(uRL3, "file");
        java.lang.String str7 = uRL3.getFile();
        java.net.URL uRL9 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str11 = fileEntry10.getName();
        fileEntry10.name = "exploded archive";
        fileEntry10.name = "hi!";
        boolean boolean16 = uRL3.equals((java.lang.Object) "hi!");
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "file" + "'", str4, "file");
        org.junit.Assert.assertEquals(uRL6.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.root;
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest6 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        int int8 = uRL3.getPort();
        java.lang.String str9 = uRL3.getRef();
        java.net.URL uRL11 = new java.net.URL(uRL3, "hi!");
        java.net.URL uRL13 = new java.net.URL(uRL11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream14 = uRL13.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL13.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator39 = explodedArchive0.spliterator();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry40.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.io.File file45 = fileEntryIterator43.current;
        boolean boolean46 = fileEntryIterator43.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator43.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean49 = explodedArchive48.recursive;
        boolean boolean50 = explodedArchive48.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file52 = explodedArchive51.manifestFile;
        java.io.File file53 = explodedArchive51.manifestFile;
        java.io.File file54 = null;
        java.io.File file55 = explodedArchive51.getManifestFile(file54);
        explodedArchive48.root = file55;
        fileEntryIterator43.root = file55;
        fileEntry40.file = file55;
        java.lang.String str59 = fileEntry40.name;
        boolean boolean60 = fileEntry40.isDirectory();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive61 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: File must exist");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator39);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "exploded archive" + "'", str59, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file23 = fileEntryIterator22.current;
        java.io.File file24 = null;
        fileEntryIterator22.current = file24;
        java.io.File file26 = fileEntryIterator22.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file28 = fileEntry27.getFile();
        java.lang.String str29 = fileEntry27.name;
        java.io.File file30 = fileEntry27.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        boolean boolean33 = fileEntryIterator31.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file35 = explodedArchive34.manifestFile;
        java.io.File file36 = explodedArchive34.manifestFile;
        java.io.File file37 = null;
        java.io.File file38 = explodedArchive34.getManifestFile(file37);
        boolean boolean39 = explodedArchive34.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator40.stack;
        fileEntryIterator40.recursive = true;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator40.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator45.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        java.util.Comparator<java.io.File> fileComparator54 = fileComparator50.thenComparing(fileComparator53);
        fileEntryIterator45.entryComparator = fileComparator50;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        java.util.Comparator<java.io.File> fileComparator59 = fileComparator50.thenComparing(fileComparator58);
        fileEntryIterator40.entryComparator = fileComparator59;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file62 = explodedArchive61.manifestFile;
        java.io.File file63 = explodedArchive61.manifestFile;
        java.io.File file64 = null;
        java.io.File file65 = explodedArchive61.getManifestFile(file64);
        fileEntryIterator40.root = file65;
        explodedArchive34.root = file65;
        java.util.Iterator<java.io.File> fileItor68 = fileEntryIterator31.listFiles(file65);
        fileEntry27.file = file65;
        fileEntryIterator22.current = file65;
        explodedArchive0.manifestFile = file65;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry72 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str73 = fileEntry72.getName();
        fileEntry72.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean77 = explodedArchive76.recursive;
        boolean boolean78 = explodedArchive76.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file80 = explodedArchive79.manifestFile;
        java.io.File file81 = explodedArchive79.manifestFile;
        java.io.File file82 = null;
        java.io.File file83 = explodedArchive79.getManifestFile(file82);
        explodedArchive76.root = file83;
        fileEntry72.file = file83;
        java.io.File file86 = fileEntry72.getFile();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive87 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry72);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: File must exist");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(fileItorQueue41);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file65.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor68);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertNotNull(file83);
        org.junit.Assert.assertEquals(file83.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file83.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file86);
        org.junit.Assert.assertEquals(file86.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file86.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", "file://exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getAuthority();
        int int9 = uRL3.getPort();
        java.lang.String str10 = uRL3.getPath();
        java.lang.Class[] classArray11 = new java.lang.Class[] {};
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = uRL3.getContent(classArray11);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(classArray11);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        boolean boolean5 = explodedArchive0.recursive;
        java.io.File file6 = explodedArchive0.manifestFile;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(file6);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.lang.String str4 = explodedArchive0.toString();
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.manifestFile;
        java.io.File file8 = explodedArchive6.manifestFile;
        java.io.File file9 = null;
        java.io.File file10 = explodedArchive6.getManifestFile(file9);
        java.io.File file11 = explodedArchive0.getManifestFile(file9);
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest12 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        int int15 = uRL14.getDefaultPort();
        java.lang.String str16 = uRL14.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str16, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", (int) '4', "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/manifest.mf");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor34 = explodedArchive0.iterator();
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor35 = explodedArchive0.iterator();
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest36 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entryItor34);
        org.junit.Assert.assertNotNull(entryItor35);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str2 = uRL1.getRef();
        java.net.URI uRI3 = uRL1.toURI();
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(uRI3);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.lang.String str2 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean5 = fileEntryIterator4.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean7 = explodedArchive6.recursive;
        java.io.File file8 = explodedArchive6.manifestFile;
        java.util.jar.Manifest manifest9 = null;
        explodedArchive6.manifest = manifest9;
        java.io.File file11 = explodedArchive6.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        java.io.File file15 = fileEntryIterator12.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.manifestFile;
        java.io.File file18 = explodedArchive16.manifestFile;
        java.io.File file19 = null;
        java.io.File file20 = explodedArchive16.getManifestFile(file19);
        fileEntryIterator12.current = file20;
        explodedArchive6.root = file20;
        fileEntryIterator4.root = file20;
        explodedArchive3.root = file20;
        java.io.File file25 = explodedArchive3.root;
        explodedArchive0.manifestFile = file25;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file25, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "exploded archive" + "'", str2, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file20.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file25.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        boolean boolean3 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        java.util.Comparator<java.io.File> fileComparator18 = fileComparator9.thenComparing(fileComparator17);
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator17.reversed();
        fileEntryIterator0.entryComparator = fileComparator17;
        boolean boolean21 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file23 = fileEntryIterator22.current;
        java.io.File file24 = fileEntryIterator22.poll();
        java.io.File file25 = fileEntryIterator22.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator31.thenComparing(fileComparator34);
        fileEntryIterator26.entryComparator = fileComparator31;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator38 = fileComparator31.thenComparing((java.util.Comparator<java.io.File>) entryComparator37);
        fileEntryIterator22.entryComparator = entryComparator37;
        java.io.File file40 = fileEntryIterator22.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean43 = fileEntryIterator42.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean45 = explodedArchive44.recursive;
        java.io.File file46 = explodedArchive44.manifestFile;
        java.util.jar.Manifest manifest47 = null;
        explodedArchive44.manifest = manifest47;
        java.io.File file49 = explodedArchive44.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        java.util.Comparator<java.io.File> fileComparator52 = fileEntryIterator50.entryComparator;
        java.io.File file53 = fileEntryIterator50.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file55 = explodedArchive54.manifestFile;
        java.io.File file56 = explodedArchive54.manifestFile;
        java.io.File file57 = null;
        java.io.File file58 = explodedArchive54.getManifestFile(file57);
        fileEntryIterator50.current = file58;
        explodedArchive44.root = file58;
        fileEntryIterator42.root = file58;
        explodedArchive41.root = file58;
        fileEntryIterator22.current = file58;
        fileEntryIterator0.root = file58;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file58.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        int int11 = uRL9.getPort();
        java.net.URL uRL12 = null;
        java.net.URLStreamHandler uRLStreamHandler14 = null;
        java.net.URL uRL15 = new java.net.URL(uRL12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler14);
        java.lang.String str16 = uRL15.getHost();
        java.lang.String str17 = uRL15.getAuthority();
        java.lang.String str18 = uRL15.getQuery();
        int int19 = uRL15.getDefaultPort();
        boolean boolean20 = uRL9.sameFile(uRL15);
        boolean boolean21 = uRL3.sameFile(uRL9);
        int int22 = uRL3.getDefaultPort();
        java.net.URLConnection uRLConnection23 = uRL3.openConnection();
        java.lang.Class<?> wildcardClass24 = uRL3.getClass();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(uRLConnection23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        int int7 = uRL3.getPort();
        java.lang.String str8 = uRL3.getPath();
        java.lang.String str9 = uRL3.getHost();
        java.lang.String str10 = uRL3.getAuthority();
        java.net.URL uRL12 = new java.net.URL(uRL3, "hi!");
        java.lang.String str13 = uRL3.getUserInfo();
        java.net.Proxy proxy14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection15 = uRL3.openConnection(proxy14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals(uRL12.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator15);
        fileEntryIterator0.entryComparator = entryComparator15;
        java.io.File file18 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean21 = fileEntryIterator20.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean23 = explodedArchive22.recursive;
        java.io.File file24 = explodedArchive22.manifestFile;
        java.util.jar.Manifest manifest25 = null;
        explodedArchive22.manifest = manifest25;
        java.io.File file27 = explodedArchive22.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        java.io.File file31 = fileEntryIterator28.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        fileEntryIterator28.current = file36;
        explodedArchive22.root = file36;
        fileEntryIterator20.root = file36;
        explodedArchive19.root = file36;
        fileEntryIterator0.current = file36;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("hi!", "", "file://exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        boolean boolean41 = explodedArchive0.recursive;
        java.io.File file42 = null;
        explodedArchive0.manifestFile = file42;
        java.io.File file44 = explodedArchive0.root;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file44, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest70 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.net.URL uRL74 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str75 = uRL69.getRef();
        java.lang.String str76 = uRL69.getFile();
        java.net.Proxy proxy77 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection78 = uRL69.openConnection(proxy77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str75);
// flaky:         org.junit.Assert.assertEquals("'" + str76 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str76, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file7 = fileEntry6.getFile();
        java.lang.String str8 = fileEntry6.name;
        java.lang.String str9 = fileEntry6.getName();
        java.lang.String str10 = fileEntry6.getName();
        java.lang.String str11 = fileEntry6.name;
        java.io.File file12 = fileEntry6.file;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive13 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getPort();
        java.lang.String str8 = uRL3.getAuthority();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = uRL3.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        java.io.File file3 = fileEntryIterator0.current;
        fileEntryIterator0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.manifestFile;
        java.io.File file8 = explodedArchive6.manifestFile;
        java.io.File file9 = null;
        java.io.File file10 = explodedArchive6.getManifestFile(file9);
        fileEntryIterator0.root = file10;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.util.jar.Manifest manifest5 = explodedArchive0.manifest;
        explodedArchive0.recursive = true;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive0.getNestedArchives(entryFilter8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(manifest5);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator15);
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator3.thenComparing((java.util.Comparator<java.io.File>) entryComparator15);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean19 = fileEntryIterator18.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean21 = explodedArchive20.recursive;
        java.io.File file22 = explodedArchive20.manifestFile;
        java.util.jar.Manifest manifest23 = null;
        explodedArchive20.manifest = manifest23;
        java.io.File file25 = explodedArchive20.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        java.io.File file29 = fileEntryIterator26.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.manifestFile;
        java.io.File file32 = explodedArchive30.manifestFile;
        java.io.File file33 = null;
        java.io.File file34 = explodedArchive30.getManifestFile(file33);
        fileEntryIterator26.current = file34;
        explodedArchive20.root = file34;
        fileEntryIterator18.root = file34;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        boolean boolean43 = explodedArchive38.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        fileEntryIterator44.recursive = true;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator44.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        java.util.Comparator<java.io.File> fileComparator58 = fileComparator54.thenComparing(fileComparator57);
        fileEntryIterator49.entryComparator = fileComparator54;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        java.util.Comparator<java.io.File> fileComparator63 = fileComparator54.thenComparing(fileComparator62);
        fileEntryIterator44.entryComparator = fileComparator63;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file66 = explodedArchive65.manifestFile;
        java.io.File file67 = explodedArchive65.manifestFile;
        java.io.File file68 = null;
        java.io.File file69 = explodedArchive65.getManifestFile(file68);
        fileEntryIterator44.root = file69;
        explodedArchive38.root = file69;
        int int72 = entryComparator15.compare(file34, file69);
        java.util.Comparator<java.io.File> fileComparator73 = entryComparator15.reversed();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator74 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue75 = fileEntryIterator74.stack;
        java.util.Comparator<java.io.File> fileComparator76 = fileEntryIterator74.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator77 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue78 = fileEntryIterator77.stack;
        java.util.Comparator<java.io.File> fileComparator79 = fileEntryIterator77.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator80 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue81 = fileEntryIterator80.stack;
        java.util.Comparator<java.io.File> fileComparator82 = fileEntryIterator80.entryComparator;
        java.util.Comparator<java.io.File> fileComparator83 = fileComparator79.thenComparing(fileComparator82);
        java.util.Comparator<java.io.File> fileComparator84 = fileComparator76.thenComparing(fileComparator82);
        java.util.Comparator<java.io.File> fileComparator85 = fileComparator73.thenComparing(fileComparator82);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator86 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue87 = fileEntryIterator86.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive88 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file89 = explodedArchive88.manifestFile;
        java.io.File file90 = explodedArchive88.manifestFile;
        java.io.File file91 = null;
        java.io.File file92 = explodedArchive88.getManifestFile(file91);
        fileEntryIterator86.current = file91;
        fileEntryIterator86.recursive = true;
        java.util.Comparator<java.io.File> fileComparator96 = fileEntryIterator86.entryComparator;
        java.util.Comparator<java.io.File> fileComparator97 = fileComparator85.thenComparing(fileComparator96);
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fileComparator3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(fileComparator73);
        org.junit.Assert.assertNotNull(fileItorQueue75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNotNull(fileItorQueue78);
        org.junit.Assert.assertNotNull(fileComparator79);
        org.junit.Assert.assertNotNull(fileItorQueue81);
        org.junit.Assert.assertNotNull(fileComparator82);
        org.junit.Assert.assertNotNull(fileComparator83);
        org.junit.Assert.assertNotNull(fileComparator84);
        org.junit.Assert.assertNotNull(fileComparator85);
        org.junit.Assert.assertNotNull(fileItorQueue87);
        org.junit.Assert.assertNull(file89);
        org.junit.Assert.assertNull(file90);
        org.junit.Assert.assertNotNull(file92);
        org.junit.Assert.assertEquals(file92.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file92.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileComparator96);
        org.junit.Assert.assertNotNull(fileComparator97);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        fileEntryIterator3.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator3.entryComparator = fileComparator22;
        fileEntryIterator3.recursive = true;
        fileEntryIterator3.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator3.stack;
        fileEntryIterator0.stack = fileItorQueue28;
        java.io.File file30 = fileEntryIterator0.current;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass31 = file30.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNull(file30);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        java.net.URL uRL5 = new java.net.URL("file", "exploded archive", (int) (byte) -1, "", uRLStreamHandler4);
        java.lang.String str6 = uRL5.getUserInfo();
        java.lang.String str7 = uRL5.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.io.File file10 = fileEntryIterator8.current;
        boolean boolean11 = fileEntryIterator8.hasNext();
        java.lang.Class<?> wildcardClass12 = fileEntryIterator8.getClass();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file14 = fileEntryIterator13.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator20.thenComparing(fileComparator23);
        fileEntryIterator15.entryComparator = fileComparator20;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        java.util.Comparator<java.io.File> fileComparator29 = fileComparator20.thenComparing(fileComparator28);
        fileEntryIterator13.entryComparator = fileComparator29;
        java.io.File file31 = fileEntryIterator13.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        fileEntryIterator13.entryComparator = entryComparator32;
        java.lang.Class<?> wildcardClass34 = fileEntryIterator13.getClass();
        java.lang.Class[] classArray35 = new java.lang.Class[] { wildcardClass12, wildcardClass34 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj36 = uRL5.getContent(classArray35);
            org.junit.Assert.fail("Expected exception of type java.net.UnknownHostException; message: exploded archive");
        } catch (java.net.UnknownHostException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL5.toString(), "file://exploded archive");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(classArray35);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.lang.String str73 = uRL69.getUserInfo();
        java.net.URLConnection uRLConnection74 = uRL69.openConnection();
        java.net.Proxy proxy75 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection76 = uRL69.openConnection(proxy75);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(uRLConnection74);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean8 = explodedArchive7.recursive;
        java.io.File file9 = null;
        explodedArchive7.manifestFile = file9;
        explodedArchive7.recursive = true;
        boolean boolean13 = uRL3.equals((java.lang.Object) true);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.manifestFile;
        java.io.File file8 = explodedArchive6.manifestFile;
        java.lang.String str9 = explodedArchive6.toString();
        java.util.jar.Manifest manifest10 = null;
        explodedArchive6.manifest = manifest10;
        java.lang.String str12 = explodedArchive6.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        boolean boolean15 = fileEntryIterator13.hasNext();
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        java.util.Comparator<java.io.File> fileComparator26 = fileComparator22.thenComparing(fileComparator25);
        fileEntryIterator17.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator29 = fileComparator22.thenComparing((java.util.Comparator<java.io.File>) entryComparator28);
        java.util.Comparator<java.io.File> fileComparator30 = fileComparator16.thenComparing((java.util.Comparator<java.io.File>) entryComparator28);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean32 = fileEntryIterator31.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean34 = explodedArchive33.recursive;
        java.io.File file35 = explodedArchive33.manifestFile;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive33.manifest = manifest36;
        java.io.File file38 = explodedArchive33.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator39.entryComparator;
        java.io.File file42 = fileEntryIterator39.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file44 = explodedArchive43.manifestFile;
        java.io.File file45 = explodedArchive43.manifestFile;
        java.io.File file46 = null;
        java.io.File file47 = explodedArchive43.getManifestFile(file46);
        fileEntryIterator39.current = file47;
        explodedArchive33.root = file47;
        fileEntryIterator31.root = file47;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file52 = explodedArchive51.manifestFile;
        java.io.File file53 = explodedArchive51.manifestFile;
        java.io.File file54 = null;
        java.io.File file55 = explodedArchive51.getManifestFile(file54);
        boolean boolean56 = explodedArchive51.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        fileEntryIterator57.recursive = true;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator62.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator65.stack;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator65.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        java.util.Comparator<java.io.File> fileComparator71 = fileComparator67.thenComparing(fileComparator70);
        fileEntryIterator62.entryComparator = fileComparator67;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator73 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue74 = fileEntryIterator73.stack;
        java.util.Comparator<java.io.File> fileComparator75 = fileEntryIterator73.entryComparator;
        java.util.Comparator<java.io.File> fileComparator76 = fileComparator67.thenComparing(fileComparator75);
        fileEntryIterator57.entryComparator = fileComparator76;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file79 = explodedArchive78.manifestFile;
        java.io.File file80 = explodedArchive78.manifestFile;
        java.io.File file81 = null;
        java.io.File file82 = explodedArchive78.getManifestFile(file81);
        fileEntryIterator57.root = file82;
        explodedArchive51.root = file82;
        int int85 = entryComparator28.compare(file47, file82);
        java.io.File file86 = explodedArchive6.getManifestFile(file47);
        java.io.File file87 = explodedArchive0.getManifestFile(file47);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive88 = new org.springframework.boot.loader.archive.ExplodedArchive(file47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "exploded archive" + "'", str9, "exploded archive");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "exploded archive" + "'", str12, "exploded archive");
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileItorQueue74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(file86);
        org.junit.Assert.assertEquals(file86.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file86.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file87);
        org.junit.Assert.assertEquals(file87.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file87.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file4 = fileEntryIterator3.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator3.entryComparator = fileComparator19;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator3.stack;
        fileEntryIterator0.stack = fileItorQueue21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.manifestFile;
        java.io.File file25 = explodedArchive23.manifestFile;
        explodedArchive23.recursive = true;
        java.util.jar.Manifest manifest28 = null;
        explodedArchive23.manifest = manifest28;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        fileEntryIterator30.recursive = true;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator30.entryComparator;
        fileEntryIterator30.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        fileEntryIterator30.stack = fileItorQueue38;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file41 = fileEntryIterator40.current;
        java.io.File file42 = fileEntryIterator40.poll();
        java.io.File file43 = fileEntryIterator40.poll();
        java.io.File file44 = fileEntryIterator40.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.io.File file47 = fileEntryIterator45.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file49 = explodedArchive48.manifestFile;
        java.io.File file50 = explodedArchive48.manifestFile;
        java.io.File file51 = null;
        java.io.File file52 = explodedArchive48.getManifestFile(file51);
        fileEntryIterator45.root = file51;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file55 = explodedArchive54.manifestFile;
        java.io.File file56 = explodedArchive54.manifestFile;
        java.io.File file57 = null;
        java.io.File file58 = explodedArchive54.getManifestFile(file57);
        java.util.Iterator<java.io.File> fileItor59 = fileEntryIterator45.listFiles(file58);
        fileEntryIterator40.root = file58;
        java.util.Iterator<java.io.File> fileItor61 = fileEntryIterator30.listFiles(file58);
        explodedArchive23.manifestFile = file58;
        fileEntryIterator0.root = file58;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive(file58, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file58.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor59);
        org.junit.Assert.assertNotNull(fileItor61);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator15);
        fileEntryIterator0.entryComparator = entryComparator15;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        fileEntryIterator18.recursive = true;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator28.thenComparing(fileComparator31);
        fileEntryIterator23.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator28.thenComparing(fileComparator36);
        fileEntryIterator18.entryComparator = fileComparator37;
        java.util.Comparator<java.io.File> fileComparator39 = entryComparator15.thenComparing(fileComparator37);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry40.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.io.File file45 = fileEntryIterator43.current;
        boolean boolean46 = fileEntryIterator43.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator43.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean49 = explodedArchive48.recursive;
        boolean boolean50 = explodedArchive48.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file52 = explodedArchive51.manifestFile;
        java.io.File file53 = explodedArchive51.manifestFile;
        java.io.File file54 = null;
        java.io.File file55 = explodedArchive51.getManifestFile(file54);
        explodedArchive48.root = file55;
        fileEntryIterator43.root = file55;
        fileEntry40.file = file55;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        explodedArchive59.recursive = true;
        java.lang.String str63 = explodedArchive59.toString();
        boolean boolean64 = explodedArchive59.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file66 = fileEntryIterator65.current;
        java.io.File file67 = fileEntryIterator65.poll();
        java.io.File file68 = fileEntryIterator65.poll();
        java.io.File file69 = fileEntryIterator65.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator70 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue71 = fileEntryIterator70.stack;
        java.io.File file72 = fileEntryIterator70.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file74 = explodedArchive73.manifestFile;
        java.io.File file75 = explodedArchive73.manifestFile;
        java.io.File file76 = null;
        java.io.File file77 = explodedArchive73.getManifestFile(file76);
        fileEntryIterator70.root = file76;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file80 = explodedArchive79.manifestFile;
        java.io.File file81 = explodedArchive79.manifestFile;
        java.io.File file82 = null;
        java.io.File file83 = explodedArchive79.getManifestFile(file82);
        java.util.Iterator<java.io.File> fileItor84 = fileEntryIterator70.listFiles(file83);
        fileEntryIterator65.root = file83;
        explodedArchive59.manifestFile = file83;
        int int87 = entryComparator15.compare(file55, file83);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive89 = new org.springframework.boot.loader.archive.ExplodedArchive(file55, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "exploded archive" + "'", str63, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNotNull(fileItorQueue71);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file77.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertNotNull(file83);
        org.junit.Assert.assertEquals(file83.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file83.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor84);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getProtocol();
        java.lang.String str5 = uRL3.getUserInfo();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler16);
        boolean boolean18 = uRL3.sameFile(uRL17);
        java.lang.String str19 = uRL3.getProtocol();
        java.lang.String str20 = uRL3.getQuery();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj21 = uRL3.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "file" + "'", str4, "file");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "file" + "'", str19, "file");
        org.junit.Assert.assertNull(str20);
    }
}
