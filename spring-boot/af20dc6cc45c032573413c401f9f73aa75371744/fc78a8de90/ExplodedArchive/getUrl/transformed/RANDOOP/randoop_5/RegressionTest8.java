import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest8 {

    public static boolean debug = false;

    @Test
    public void test4001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4001");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("exploded archive", "", 1, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4002");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getPath();
        java.lang.String str9 = uRL3.getQuery();
        java.lang.String str10 = uRL3.getRef();
        java.net.Proxy proxy11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection12 = uRL3.openConnection(proxy11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test4003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4003");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getQuery();
        java.lang.String str16 = uRL14.getUserInfo();
        java.net.URL uRL17 = null;
        java.net.URLStreamHandler uRLStreamHandler19 = null;
        java.net.URL uRL20 = new java.net.URL(uRL17, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler19);
        java.lang.String str21 = uRL20.getHost();
        java.lang.String str22 = uRL20.getAuthority();
        java.lang.String str23 = uRL20.getHost();
        java.lang.String str24 = uRL20.getQuery();
        java.lang.String str25 = uRL20.getAuthority();
        java.lang.String str26 = uRL20.getFile();
        java.lang.String str27 = uRL20.getFile();
        java.lang.String str28 = uRL20.getProtocol();
        boolean boolean29 = uRL14.sameFile(uRL20);
        java.lang.String str30 = uRL14.toExternalForm();
        java.lang.String str31 = uRL14.getAuthority();
        java.lang.String str32 = uRL14.getProtocol();
        java.lang.String str33 = uRL14.getHost();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals(uRL20.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str26, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str27, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "file" + "'", str28, "file");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str30, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "file" + "'", str32, "file");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
    }

    @Test
    public void test4004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4004");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.net.URLStreamHandler uRLStreamHandler74 = null;
        java.net.URL uRL75 = new java.net.URL(uRL69, "", uRLStreamHandler74);
        java.lang.String str76 = uRL69.getProtocol();
        java.net.URI uRI77 = uRL69.toURI();
        java.lang.String str78 = uRL69.getHost();
        java.lang.String str79 = uRL69.getProtocol();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals(uRL75.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "file" + "'", str76, "file");
        org.junit.Assert.assertNotNull(uRI77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "file" + "'", str79, "file");
    }

    @Test
    public void test4005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4005");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = explodedArchive0.manifest;
        java.io.File file37 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter38 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList39 = explodedArchive0.getNestedArchives(entryFilter38);
        explodedArchive0.recursive = true;
        java.net.URL uRL42 = explodedArchive0.getUrl();
        explodedArchive0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file46 = fileEntry45.getFile();
        java.io.File file47 = fileEntry45.file;
        java.io.File file48 = fileEntry45.file;
        java.lang.String str49 = fileEntry45.name;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive50 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(archiveList39);
        org.junit.Assert.assertNotNull(uRL42);
// flaky:         org.junit.Assert.assertEquals(uRL42.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNull(str49);
    }

    @Test
    public void test4006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4006");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        java.lang.String str5 = fileEntry0.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        boolean boolean8 = fileEntryIterator6.hasNext();
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator15.thenComparing(fileComparator18);
        fileEntryIterator10.entryComparator = fileComparator15;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator15.thenComparing((java.util.Comparator<java.io.File>) entryComparator21);
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator21);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean25 = fileEntryIterator24.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean27 = explodedArchive26.recursive;
        java.io.File file28 = explodedArchive26.manifestFile;
        java.util.jar.Manifest manifest29 = null;
        explodedArchive26.manifest = manifest29;
        java.io.File file31 = explodedArchive26.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.io.File file35 = fileEntryIterator32.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file37 = explodedArchive36.manifestFile;
        java.io.File file38 = explodedArchive36.manifestFile;
        java.io.File file39 = null;
        java.io.File file40 = explodedArchive36.getManifestFile(file39);
        fileEntryIterator32.current = file40;
        explodedArchive26.root = file40;
        fileEntryIterator24.root = file40;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.manifestFile;
        java.io.File file46 = explodedArchive44.manifestFile;
        java.io.File file47 = null;
        java.io.File file48 = explodedArchive44.getManifestFile(file47);
        boolean boolean49 = explodedArchive44.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        fileEntryIterator50.recursive = true;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator50.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        java.util.Comparator<java.io.File> fileComparator64 = fileComparator60.thenComparing(fileComparator63);
        fileEntryIterator55.entryComparator = fileComparator60;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator66 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue67 = fileEntryIterator66.stack;
        java.util.Comparator<java.io.File> fileComparator68 = fileEntryIterator66.entryComparator;
        java.util.Comparator<java.io.File> fileComparator69 = fileComparator60.thenComparing(fileComparator68);
        fileEntryIterator50.entryComparator = fileComparator69;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file72 = explodedArchive71.manifestFile;
        java.io.File file73 = explodedArchive71.manifestFile;
        java.io.File file74 = null;
        java.io.File file75 = explodedArchive71.getManifestFile(file74);
        fileEntryIterator50.root = file75;
        explodedArchive44.root = file75;
        int int78 = entryComparator21.compare(file40, file75);
        fileEntry0.file = file75;
        fileEntry0.name = "exploded archive";
        fileEntry0.name = "file://exploded archive";
        java.lang.String str84 = fileEntry0.name;
        java.io.File file85 = fileEntry0.file;
        fileEntry0.name = "";
        java.io.File file88 = fileEntry0.file;
        java.lang.String str89 = fileEntry0.getName();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file40.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file75.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "file://exploded archive" + "'", str84, "file://exploded archive");
        org.junit.Assert.assertNotNull(file85);
        org.junit.Assert.assertEquals(file85.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file85.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file88);
        org.junit.Assert.assertEquals(file88.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file88.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
    }

    @Test
    public void test4007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4007");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        java.lang.String str34 = explodedArchive0.toString();
        java.util.jar.Manifest manifest35 = explodedArchive0.manifest;
        java.io.File file36 = null;
        explodedArchive0.root = file36;
        java.io.File file38 = explodedArchive0.root;
        explodedArchive0.recursive = true;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertNull(file38);
    }

    @Test
    public void test4008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4008");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getUserInfo();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test4009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4009");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file39 = fileEntryIterator38.current;
        java.io.File file40 = fileEntryIterator38.poll();
        java.io.File file41 = fileEntryIterator38.poll();
        java.io.File file42 = fileEntryIterator38.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.io.File file45 = fileEntryIterator43.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        fileEntryIterator43.root = file49;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.manifestFile;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.io.File file55 = null;
        java.io.File file56 = explodedArchive52.getManifestFile(file55);
        java.util.Iterator<java.io.File> fileItor57 = fileEntryIterator43.listFiles(file56);
        fileEntryIterator38.root = file56;
        explodedArchive0.root = file56;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter60 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList61 = explodedArchive0.getNestedArchives(entryFilter60);
        java.net.URL uRL62 = explodedArchive0.getUrl();
        java.net.URLConnection uRLConnection63 = uRL62.openConnection();
        int int64 = uRL62.getDefaultPort();
        int int65 = uRL62.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean67 = explodedArchive66.recursive;
        boolean boolean68 = explodedArchive66.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file70 = explodedArchive69.manifestFile;
        java.io.File file71 = explodedArchive69.manifestFile;
        java.io.File file72 = null;
        java.io.File file73 = explodedArchive69.getManifestFile(file72);
        explodedArchive66.root = file73;
        explodedArchive66.recursive = false;
        java.io.File file77 = explodedArchive66.root;
        java.net.URL uRL78 = explodedArchive66.getUrl();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator79 = explodedArchive66.spliterator();
        java.io.File file80 = explodedArchive66.manifestFile;
        boolean boolean81 = uRL62.equals((java.lang.Object) file80);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor57);
        org.junit.Assert.assertNotNull(archiveList61);
        org.junit.Assert.assertNotNull(uRL62);
// flaky:         org.junit.Assert.assertEquals(uRL62.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file73.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file77.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRL78);
// flaky:         org.junit.Assert.assertEquals(uRL78.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test4010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4010");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.io.File file4 = fileEntryIterator0.poll();
        fileEntryIterator0.recursive = false;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator0.entryComparator;
        boolean boolean8 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        java.util.Comparator<java.io.File> fileComparator18 = fileComparator14.thenComparing(fileComparator17);
        fileEntryIterator9.entryComparator = fileComparator14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator14.thenComparing(fileComparator22);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        fileEntryIterator24.recursive = true;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator24.entryComparator;
        java.util.Comparator<java.io.File> fileComparator29 = fileComparator14.thenComparing(fileComparator28);
        java.util.Comparator<java.io.File> fileComparator30 = fileComparator28.reversed();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean32 = fileEntryIterator31.recursive;
        boolean boolean33 = fileEntryIterator31.recursive;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator31.entryComparator;
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator34.reversed();
        java.util.Comparator<java.io.File> fileComparator36 = fileComparator30.thenComparing(fileComparator34);
        fileEntryIterator0.entryComparator = fileComparator34;
        java.lang.Class<?> wildcardClass38 = fileComparator34.getClass();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test4011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4011");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getUserInfo();
        java.lang.String str14 = uRL11.getProtocol();
        java.net.URLConnection uRLConnection15 = uRL11.openConnection();
        java.net.URL uRL17 = new java.net.URL(uRL11, "file://exploded archive");
        java.lang.String str18 = uRL17.toExternalForm();
        java.lang.String str19 = uRL17.getHost();
        java.lang.Class[] classArray20 = new java.lang.Class[] {};
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj21 = uRL17.getContent(classArray20);
            org.junit.Assert.fail("Expected exception of type java.net.UnknownHostException; message: exploded archive");
        } catch (java.net.UnknownHostException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertNotNull(uRLConnection15);
        org.junit.Assert.assertEquals(uRL17.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "file://exploded archive" + "'", str18, "file://exploded archive");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "exploded archive" + "'", str19, "exploded archive");
        org.junit.Assert.assertNotNull(classArray20);
    }

    @Test
    public void test4012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4012");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", "file:100", (int) (byte) 100, "file://filefile://exploded archive:0");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4013");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        boolean boolean4 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest5 = null;
        explodedArchive0.manifest = manifest5;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file8 = fileEntry7.getFile();
        java.io.File file9 = fileEntry7.file;
        java.io.File file10 = null;
        fileEntry7.file = file10;
        java.lang.String str12 = fileEntry7.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        boolean boolean15 = fileEntryIterator13.hasNext();
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        java.util.Comparator<java.io.File> fileComparator26 = fileComparator22.thenComparing(fileComparator25);
        fileEntryIterator17.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator29 = fileComparator22.thenComparing((java.util.Comparator<java.io.File>) entryComparator28);
        java.util.Comparator<java.io.File> fileComparator30 = fileComparator16.thenComparing((java.util.Comparator<java.io.File>) entryComparator28);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean32 = fileEntryIterator31.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean34 = explodedArchive33.recursive;
        java.io.File file35 = explodedArchive33.manifestFile;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive33.manifest = manifest36;
        java.io.File file38 = explodedArchive33.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator39.entryComparator;
        java.io.File file42 = fileEntryIterator39.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file44 = explodedArchive43.manifestFile;
        java.io.File file45 = explodedArchive43.manifestFile;
        java.io.File file46 = null;
        java.io.File file47 = explodedArchive43.getManifestFile(file46);
        fileEntryIterator39.current = file47;
        explodedArchive33.root = file47;
        fileEntryIterator31.root = file47;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file52 = explodedArchive51.manifestFile;
        java.io.File file53 = explodedArchive51.manifestFile;
        java.io.File file54 = null;
        java.io.File file55 = explodedArchive51.getManifestFile(file54);
        boolean boolean56 = explodedArchive51.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        fileEntryIterator57.recursive = true;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator62.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator65.stack;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator65.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        java.util.Comparator<java.io.File> fileComparator71 = fileComparator67.thenComparing(fileComparator70);
        fileEntryIterator62.entryComparator = fileComparator67;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator73 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue74 = fileEntryIterator73.stack;
        java.util.Comparator<java.io.File> fileComparator75 = fileEntryIterator73.entryComparator;
        java.util.Comparator<java.io.File> fileComparator76 = fileComparator67.thenComparing(fileComparator75);
        fileEntryIterator57.entryComparator = fileComparator76;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file79 = explodedArchive78.manifestFile;
        java.io.File file80 = explodedArchive78.manifestFile;
        java.io.File file81 = null;
        java.io.File file82 = explodedArchive78.getManifestFile(file81);
        fileEntryIterator57.root = file82;
        explodedArchive51.root = file82;
        int int85 = entryComparator28.compare(file47, file82);
        fileEntry7.file = file82;
        fileEntry7.name = "exploded archive";
        fileEntry7.name = "file://exploded archive";
        java.io.File file91 = fileEntry7.getFile();
        explodedArchive0.root = file91;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator93 = explodedArchive0.spliterator();
        java.util.jar.Manifest manifest94 = explodedArchive0.manifest;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileItorQueue74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(file91);
        org.junit.Assert.assertEquals(file91.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file91.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator93);
        org.junit.Assert.assertNull(manifest94);
    }

    @Test
    public void test4014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4014");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.net.URI uRI4 = uRL3.toURI();
        java.lang.String str5 = uRL3.getFile();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        java.net.URL uRL9 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        java.lang.String str10 = uRL9.getUserInfo();
        java.lang.String str11 = uRL9.getRef();
        java.lang.String str12 = uRL9.getAuthority();
        java.net.URLConnection uRLConnection13 = uRL9.openConnection();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str5, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(uRLConnection13);
    }

    @Test
    public void test4015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4015");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator15);
        fileEntryIterator0.entryComparator = entryComparator15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.manifestFile;
        java.io.File file20 = explodedArchive18.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        fileEntryIterator21.recursive = true;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator31.thenComparing(fileComparator34);
        fileEntryIterator26.entryComparator = fileComparator31;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator31.thenComparing(fileComparator39);
        fileEntryIterator21.entryComparator = fileComparator40;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.io.File file45 = null;
        java.io.File file46 = explodedArchive42.getManifestFile(file45);
        fileEntryIterator21.root = file46;
        explodedArchive18.manifestFile = file46;
        fileEntryIterator0.root = file46;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        java.io.File file52 = fileEntryIterator50.current;
        java.io.File file53 = fileEntryIterator50.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file55 = fileEntryIterator54.current;
        boolean boolean56 = fileEntryIterator54.hasNext();
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator54.entryComparator;
        fileEntryIterator50.entryComparator = fileComparator58;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        fileEntryIterator50.stack = fileItorQueue61;
        fileEntryIterator0.stack = fileItorQueue61;
        fileEntryIterator0.recursive = true;
        java.io.File file66 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean68 = explodedArchive67.recursive;
        java.io.File file69 = null;
        explodedArchive67.manifestFile = file69;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry71 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str72 = fileEntry71.getName();
        fileEntry71.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean76 = explodedArchive75.recursive;
        boolean boolean77 = explodedArchive75.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file79 = explodedArchive78.manifestFile;
        java.io.File file80 = explodedArchive78.manifestFile;
        java.io.File file81 = null;
        java.io.File file82 = explodedArchive78.getManifestFile(file81);
        explodedArchive75.root = file82;
        fileEntry71.file = file82;
        java.io.File file85 = fileEntry71.getFile();
        explodedArchive67.manifestFile = file85;
        java.util.Iterator<java.io.File> fileItor87 = fileEntryIterator0.listFiles(file85);
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue88 = fileEntryIterator0.stack;
        boolean boolean89 = fileEntryIterator0.recursive;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file85);
        org.junit.Assert.assertEquals(file85.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file85.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor87);
        org.junit.Assert.assertNotNull(fileItorQueue88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test4016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4016");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.io.File file4 = fileEntryIterator0.poll();
        fileEntryIterator0.recursive = true;
        fileEntryIterator0.recursive = true;
        java.io.File file9 = null;
        fileEntryIterator0.root = file9;
        boolean boolean11 = fileEntryIterator0.hasNext();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test4017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4017");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.util.jar.Manifest manifest4 = explodedArchive0.manifest;
        java.io.File file5 = explodedArchive0.manifestFile;
        boolean boolean6 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        fileEntryIterator7.recursive = true;
        java.io.File file11 = fileEntryIterator7.poll();
        fileEntryIterator7.recursive = true;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator7.entryComparator;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator7.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.manifestFile;
        java.io.File file18 = explodedArchive16.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.manifestFile;
        java.io.File file21 = explodedArchive19.manifestFile;
        java.io.File file22 = null;
        java.io.File file23 = explodedArchive19.getManifestFile(file22);
        boolean boolean24 = explodedArchive19.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        fileEntryIterator25.recursive = true;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator25.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        java.util.Comparator<java.io.File> fileComparator39 = fileComparator35.thenComparing(fileComparator38);
        fileEntryIterator30.entryComparator = fileComparator35;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        java.util.Comparator<java.io.File> fileComparator43 = fileEntryIterator41.entryComparator;
        java.util.Comparator<java.io.File> fileComparator44 = fileComparator35.thenComparing(fileComparator43);
        fileEntryIterator25.entryComparator = fileComparator44;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        fileEntryIterator25.root = file50;
        explodedArchive19.root = file50;
        explodedArchive19.recursive = false;
        java.util.jar.Manifest manifest55 = null;
        explodedArchive19.manifest = manifest55;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file58 = fileEntryIterator57.current;
        java.io.File file59 = fileEntryIterator57.poll();
        java.io.File file60 = fileEntryIterator57.poll();
        java.io.File file61 = fileEntryIterator57.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.io.File file64 = fileEntryIterator62.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file66 = explodedArchive65.manifestFile;
        java.io.File file67 = explodedArchive65.manifestFile;
        java.io.File file68 = null;
        java.io.File file69 = explodedArchive65.getManifestFile(file68);
        fileEntryIterator62.root = file68;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file72 = explodedArchive71.manifestFile;
        java.io.File file73 = explodedArchive71.manifestFile;
        java.io.File file74 = null;
        java.io.File file75 = explodedArchive71.getManifestFile(file74);
        java.util.Iterator<java.io.File> fileItor76 = fileEntryIterator62.listFiles(file75);
        fileEntryIterator57.root = file75;
        explodedArchive19.root = file75;
        java.io.File file79 = explodedArchive19.root;
        explodedArchive16.root = file79;
        fileEntryIterator7.root = file79;
        explodedArchive0.manifestFile = file79;
        java.lang.String str83 = explodedArchive0.toString();
        java.io.File file84 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest85 = explodedArchive0.getManifest();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file75.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor76);
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file79.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "exploded archive" + "'", str83, "exploded archive");
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file84.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest85);
    }

    @Test
    public void test4018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4018");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getAuthority();
        java.lang.String str9 = uRL3.getFile();
        java.lang.String str10 = uRL3.getFile();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj11 = uRL3.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4019");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.util.Comparator<java.io.File> fileComparator2 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.util.Comparator<java.io.File> fileComparator9 = fileComparator5.thenComparing(fileComparator8);
        fileEntryIterator0.entryComparator = fileComparator5;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator5.thenComparing(fileComparator13);
        java.util.Comparator<java.io.File> fileComparator15 = fileComparator13.reversed();
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator15.reversed();
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator16.reversed();
        java.util.Comparator<java.io.File> fileComparator18 = fileComparator17.reversed();
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator17.reversed();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file21 = fileEntryIterator20.current;
        java.io.File file22 = fileEntryIterator20.poll();
        java.io.File file23 = fileEntryIterator20.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator20.stack;
        java.io.File file25 = fileEntryIterator20.current;
        boolean boolean26 = fileEntryIterator20.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        java.util.Comparator<java.io.File> fileComparator36 = fileComparator32.thenComparing(fileComparator35);
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator29.thenComparing(fileComparator35);
        fileEntryIterator20.entryComparator = fileComparator35;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator20.entryComparator;
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator19.thenComparing(fileComparator39);
        java.util.Comparator<java.io.File> fileComparator41 = fileComparator19.reversed();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileComparator41);
    }

    @Test
    public void test4020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4020");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        boolean boolean3 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        java.util.Comparator<java.io.File> fileComparator18 = fileComparator9.thenComparing(fileComparator17);
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator17.reversed();
        fileEntryIterator0.entryComparator = fileComparator17;
        boolean boolean21 = fileEntryIterator0.recursive;
        java.io.File file22 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file24 = fileEntry23.getFile();
        java.lang.String str25 = fileEntry23.getName();
        java.lang.String str26 = fileEntry23.getName();
        fileEntry23.name = "";
        java.io.File file29 = fileEntry23.file;
        java.lang.String str30 = fileEntry23.getName();
        java.io.File file31 = fileEntry23.getFile();
        fileEntry23.name = "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF";
        fileEntry23.name = "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF";
        java.lang.String str36 = fileEntry23.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.io.File file39 = fileEntryIterator37.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.manifestFile;
        java.io.File file42 = explodedArchive40.manifestFile;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive40.getManifestFile(file43);
        fileEntryIterator37.root = file43;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        java.util.Iterator<java.io.File> fileItor51 = fileEntryIterator37.listFiles(file50);
        fileEntry23.file = file50;
        java.io.File file53 = fileEntry23.file;
        fileEntryIterator0.current = file53;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str36, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor51);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test4021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4021");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getUserInfo();
        java.lang.String str14 = uRL11.getProtocol();
        int int15 = uRL11.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler20 = null;
        java.net.URL uRL21 = new java.net.URL("file", "exploded archive", 0, "", uRLStreamHandler20);
        boolean boolean22 = uRL11.sameFile(uRL21);
        java.lang.String str23 = uRL11.getProtocol();
        java.net.URL uRL24 = null;
        java.net.URLStreamHandler uRLStreamHandler26 = null;
        java.net.URL uRL27 = new java.net.URL(uRL24, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler26);
        java.lang.String str28 = uRL27.getHost();
        int int29 = uRL27.getPort();
        java.net.URL uRL30 = null;
        java.net.URLStreamHandler uRLStreamHandler32 = null;
        java.net.URL uRL33 = new java.net.URL(uRL30, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler32);
        java.lang.String str34 = uRL33.getHost();
        java.lang.String str35 = uRL33.getAuthority();
        java.lang.String str36 = uRL33.getQuery();
        int int37 = uRL33.getDefaultPort();
        boolean boolean38 = uRL27.sameFile(uRL33);
        java.lang.String str39 = uRL33.getFile();
        boolean boolean40 = uRL11.sameFile(uRL33);
        java.net.URLConnection uRLConnection41 = uRL11.openConnection();
        java.lang.String str42 = uRL11.getRef();
        int int43 = uRL11.getDefaultPort();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals(uRL21.toString(), "file://exploded archive:0");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "file" + "'", str23, "file");
        org.junit.Assert.assertEquals(uRL27.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals(uRL33.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str39, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(uRLConnection41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
    }

    @Test
    public void test4022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4022");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator15);
        fileEntryIterator0.entryComparator = entryComparator15;
        java.io.File file18 = fileEntryIterator0.current;
        java.io.File file19 = fileEntryIterator0.root;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator0.entryComparator;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator0.entryComparator;
        java.io.File file22 = fileEntryIterator0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file24 = fileEntryIterator23.current;
        java.io.File file25 = fileEntryIterator23.poll();
        java.io.File file26 = fileEntryIterator23.poll();
        java.io.File file27 = fileEntryIterator23.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.io.File file30 = fileEntryIterator28.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.manifestFile;
        java.io.File file33 = explodedArchive31.manifestFile;
        java.io.File file34 = null;
        java.io.File file35 = explodedArchive31.getManifestFile(file34);
        fileEntryIterator28.root = file34;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file38 = explodedArchive37.manifestFile;
        java.io.File file39 = explodedArchive37.manifestFile;
        java.io.File file40 = null;
        java.io.File file41 = explodedArchive37.getManifestFile(file40);
        java.util.Iterator<java.io.File> fileItor42 = fileEntryIterator28.listFiles(file41);
        fileEntryIterator23.root = file41;
        boolean boolean44 = fileEntryIterator23.hasNext();
        boolean boolean45 = fileEntryIterator23.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator52.entryComparator;
        java.util.Comparator<java.io.File> fileComparator55 = fileComparator51.thenComparing(fileComparator54);
        fileEntryIterator46.entryComparator = fileComparator51;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean58 = fileEntryIterator57.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean60 = explodedArchive59.recursive;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.util.jar.Manifest manifest62 = null;
        explodedArchive59.manifest = manifest62;
        java.io.File file64 = explodedArchive59.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator65.stack;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator65.entryComparator;
        java.io.File file68 = fileEntryIterator65.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file70 = explodedArchive69.manifestFile;
        java.io.File file71 = explodedArchive69.manifestFile;
        java.io.File file72 = null;
        java.io.File file73 = explodedArchive69.getManifestFile(file72);
        fileEntryIterator65.current = file73;
        explodedArchive59.root = file73;
        fileEntryIterator57.root = file73;
        fileEntryIterator46.root = file73;
        java.util.Iterator<java.io.File> fileItor78 = fileEntryIterator23.listFiles(file73);
        java.util.Iterator<java.io.File> fileItor79 = fileEntryIterator0.listFiles(file73);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry80 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file35.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file73.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor78);
        org.junit.Assert.assertNotNull(fileItor79);
    }

    @Test
    public void test4023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4023");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        boolean boolean3 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        fileEntryIterator6.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.io.File file15 = fileEntryIterator13.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        fileEntryIterator13.entryComparator = fileComparator18;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.manifestFile;
        java.io.File file22 = explodedArchive20.manifestFile;
        java.io.File file23 = null;
        java.io.File file24 = explodedArchive20.getManifestFile(file23);
        fileEntryIterator13.root = file23;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file27 = fileEntryIterator26.current;
        java.io.File file28 = null;
        fileEntryIterator26.current = file28;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean31 = explodedArchive30.recursive;
        java.io.File file32 = explodedArchive30.manifestFile;
        java.util.jar.Manifest manifest33 = null;
        explodedArchive30.manifest = manifest33;
        java.io.File file35 = explodedArchive30.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        java.io.File file39 = fileEntryIterator36.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.manifestFile;
        java.io.File file42 = explodedArchive40.manifestFile;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive40.getManifestFile(file43);
        fileEntryIterator36.current = file44;
        explodedArchive30.root = file44;
        fileEntryIterator26.root = file44;
        fileEntryIterator13.current = file44;
        java.util.Iterator<java.io.File> fileItor49 = fileEntryIterator6.listFiles(file44);
        fileEntryIterator0.root = file44;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator0.stack;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor49);
        org.junit.Assert.assertNotNull(fileItorQueue51);
    }

    @Test
    public void test4024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4024");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        java.io.File file3 = fileEntryIterator0.poll();
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        java.util.Comparator<java.io.File> fileComparator5 = fileComparator4.reversed();
        java.util.Comparator<java.io.File> fileComparator6 = fileComparator5.reversed();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNotNull(fileComparator6);
    }

    @Test
    public void test4025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4025");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("hi!:10", "hi!", "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!:10");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4026");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        fileEntryIterator3.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator3.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        fileEntryIterator3.root = file28;
        explodedArchive0.manifestFile = file28;
        java.util.jar.Manifest manifest31 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest32 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest33 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest34 = explodedArchive0.getManifest();
        java.io.File file35 = explodedArchive0.root;
        java.io.File file36 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList38 = explodedArchive0.getNestedArchives(entryFilter37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertNull(manifest34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
    }

    @Test
    public void test4027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4027");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getAuthority();
        java.lang.String str9 = uRL3.getFile();
        java.lang.String str10 = uRL3.getFile();
        java.lang.String str11 = uRL3.getProtocol();
        java.lang.String str12 = uRL3.getRef();
        java.lang.String str13 = uRL3.toExternalForm();
        java.net.URLConnection uRLConnection14 = uRL3.openConnection();
        java.lang.String str15 = uRL3.getProtocol();
        java.lang.String str16 = uRL3.getFile();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "file" + "'", str11, "file");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str13, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "file" + "'", str15, "file");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str16, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4028");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:100", uRLStreamHandler2);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:100");
    }

    @Test
    public void test4029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4029");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.io.File file4 = fileEntryIterator0.current;
        boolean boolean5 = fileEntryIterator0.hasNext();
        boolean boolean6 = fileEntryIterator0.hasNext();
        java.io.File file7 = fileEntryIterator0.current;
        boolean boolean8 = fileEntryIterator0.hasNext();
        java.io.File file9 = fileEntryIterator0.root;
        java.io.File file10 = fileEntryIterator0.current;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
    }

    @Test
    public void test4030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4030");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        boolean boolean3 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        java.util.Comparator<java.io.File> fileComparator18 = fileComparator9.thenComparing(fileComparator17);
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator17.reversed();
        fileEntryIterator0.entryComparator = fileComparator17;
        java.io.File file21 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file23 = fileEntryIterator22.current;
        java.io.File file24 = fileEntryIterator22.poll();
        java.io.File file25 = fileEntryIterator22.poll();
        java.io.File file26 = fileEntryIterator22.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.io.File file29 = fileEntryIterator27.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.manifestFile;
        java.io.File file32 = explodedArchive30.manifestFile;
        java.io.File file33 = null;
        java.io.File file34 = explodedArchive30.getManifestFile(file33);
        fileEntryIterator27.root = file33;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file37 = explodedArchive36.manifestFile;
        java.io.File file38 = explodedArchive36.manifestFile;
        java.io.File file39 = null;
        java.io.File file40 = explodedArchive36.getManifestFile(file39);
        java.util.Iterator<java.io.File> fileItor41 = fileEntryIterator27.listFiles(file40);
        fileEntryIterator22.root = file40;
        fileEntryIterator22.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        fileEntryIterator45.recursive = true;
        java.util.Comparator<java.io.File> fileComparator49 = fileEntryIterator45.entryComparator;
        fileEntryIterator45.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        fileEntryIterator45.stack = fileItorQueue53;
        fileEntryIterator22.stack = fileItorQueue53;
        fileEntryIterator0.stack = fileItorQueue53;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file63 = explodedArchive62.manifestFile;
        java.io.File file64 = explodedArchive62.manifestFile;
        java.io.File file65 = null;
        java.io.File file66 = explodedArchive62.getManifestFile(file65);
        fileEntryIterator60.current = file65;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        fileEntryIterator60.entryComparator = fileComparator70;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator72 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue73 = fileEntryIterator72.stack;
        java.util.Comparator<java.io.File> fileComparator74 = fileEntryIterator72.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator75 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue76 = fileEntryIterator75.stack;
        java.util.Comparator<java.io.File> fileComparator77 = fileEntryIterator75.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator78 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue79 = fileEntryIterator78.stack;
        java.util.Comparator<java.io.File> fileComparator80 = fileEntryIterator78.entryComparator;
        java.util.Comparator<java.io.File> fileComparator81 = fileComparator77.thenComparing(fileComparator80);
        fileEntryIterator72.entryComparator = fileComparator77;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator83 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator84 = fileComparator77.thenComparing((java.util.Comparator<java.io.File>) entryComparator83);
        java.util.Comparator<java.io.File> fileComparator85 = fileComparator70.thenComparing(fileComparator77);
        java.util.Comparator<java.io.File> fileComparator86 = fileComparator70.reversed();
        java.util.Comparator<java.io.File> fileComparator87 = fileComparator59.thenComparing(fileComparator70);
        java.util.Comparator<java.io.File> fileComparator88 = fileComparator87.reversed();
        fileEntryIterator0.entryComparator = fileComparator88;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file40.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor41);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileItorQueue73);
        org.junit.Assert.assertNotNull(fileComparator74);
        org.junit.Assert.assertNotNull(fileItorQueue76);
        org.junit.Assert.assertNotNull(fileComparator77);
        org.junit.Assert.assertNotNull(fileItorQueue79);
        org.junit.Assert.assertNotNull(fileComparator80);
        org.junit.Assert.assertNotNull(fileComparator81);
        org.junit.Assert.assertNotNull(fileComparator84);
        org.junit.Assert.assertNotNull(fileComparator85);
        org.junit.Assert.assertNotNull(fileComparator86);
        org.junit.Assert.assertNotNull(fileComparator87);
        org.junit.Assert.assertNotNull(fileComparator88);
    }

    @Test
    public void test4031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4031");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getProtocol();
        java.lang.String str11 = uRL9.getRef();
        java.lang.String str12 = uRL9.getFile();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "file" + "'", str10, "file");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file" + "'", str12, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
    }

    @Test
    public void test4032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4032");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("file://hi!hi!", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file://hi!hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4033");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor34 = explodedArchive0.iterator();
        java.io.File file35 = explodedArchive0.root;
        java.lang.String str36 = explodedArchive0.toString();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entryItor34);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file35.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str36, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4034");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.lang.String str10 = uRL3.getFile();
        java.net.URL uRL11 = null;
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getHost();
        java.lang.String str16 = uRL14.getAuthority();
        java.lang.String str17 = uRL14.getAuthority();
        java.lang.String str18 = uRL14.getRef();
        java.net.URL uRL19 = null;
        java.net.URLStreamHandler uRLStreamHandler21 = null;
        java.net.URL uRL22 = new java.net.URL(uRL19, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler21);
        java.lang.String str23 = uRL22.getHost();
        java.lang.String str24 = uRL22.getAuthority();
        java.lang.String str25 = uRL22.getQuery();
        int int26 = uRL22.getDefaultPort();
        java.lang.String str27 = uRL22.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler29 = null;
        java.net.URL uRL30 = new java.net.URL(uRL22, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler29);
        java.lang.String str31 = uRL30.getFile();
        boolean boolean32 = uRL14.sameFile(uRL30);
        boolean boolean33 = uRL3.sameFile(uRL30);
        java.net.URL uRL34 = null;
        java.net.URLStreamHandler uRLStreamHandler36 = null;
        java.net.URL uRL37 = new java.net.URL(uRL34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler36);
        java.lang.String str38 = uRL37.getHost();
        java.lang.String str39 = uRL37.getAuthority();
        java.lang.String str40 = uRL37.getAuthority();
        java.lang.String str41 = uRL37.getFile();
        int int42 = uRL37.getPort();
        java.lang.String str43 = uRL37.getRef();
        java.net.URL uRL45 = new java.net.URL(uRL37, "hi!");
        boolean boolean46 = uRL3.sameFile(uRL45);
        int int47 = uRL3.getDefaultPort();
        java.net.URL uRL48 = null;
        java.net.URLStreamHandler uRLStreamHandler50 = null;
        java.net.URL uRL51 = new java.net.URL(uRL48, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler50);
        java.lang.String str52 = uRL51.getHost();
        int int53 = uRL51.getPort();
        java.net.URLStreamHandler uRLStreamHandler55 = null;
        java.net.URL uRL56 = new java.net.URL(uRL51, "hi!", uRLStreamHandler55);
        java.net.URLConnection uRLConnection57 = uRL56.openConnection();
        boolean boolean58 = uRL3.sameFile(uRL56);
        java.lang.String str59 = uRL3.getRef();
        java.lang.String str60 = uRL3.getRef();
        java.net.URLStreamHandler uRLStreamHandler62 = null;
        java.net.URL uRL63 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", uRLStreamHandler62);
        java.net.URL uRL64 = null;
        java.net.URLStreamHandler uRLStreamHandler66 = null;
        java.net.URL uRL67 = new java.net.URL(uRL64, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler66);
        java.lang.String str68 = uRL67.getHost();
        int int69 = uRL67.getPort();
        java.lang.String str70 = uRL67.getHost();
        java.lang.String str71 = uRL67.getRef();
        boolean boolean72 = uRL63.sameFile(uRL67);
        java.lang.String str73 = uRL67.getQuery();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals(uRL30.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str31, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals(uRL37.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str41, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals(uRL45.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertEquals(uRL51.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertEquals(uRL56.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNotNull(uRLConnection57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertEquals(uRL63.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL67.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(str73);
    }

    @Test
    public void test4035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4035");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor34 = explodedArchive0.iterator();
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor35 = explodedArchive0.iterator();
        java.io.File file36 = explodedArchive0.root;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entryItor34);
        org.junit.Assert.assertNotNull(entryItor35);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test4036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4036");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("exploded archive", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", (int) (byte) -1, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4037");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator2.stack;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator2.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        java.util.Comparator<java.io.File> fileComparator11 = fileComparator7.thenComparing(fileComparator10);
        fileEntryIterator2.entryComparator = fileComparator7;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator7.thenComparing(fileComparator15);
        fileEntryIterator0.entryComparator = fileComparator16;
        java.io.File file18 = fileEntryIterator0.root;
        boolean boolean19 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.manifestFile;
        explodedArchive20.recursive = true;
        java.lang.String str24 = explodedArchive20.toString();
        boolean boolean25 = explodedArchive20.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file27 = fileEntryIterator26.current;
        java.io.File file28 = fileEntryIterator26.poll();
        java.io.File file29 = fileEntryIterator26.poll();
        java.io.File file30 = fileEntryIterator26.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.io.File file33 = fileEntryIterator31.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file35 = explodedArchive34.manifestFile;
        java.io.File file36 = explodedArchive34.manifestFile;
        java.io.File file37 = null;
        java.io.File file38 = explodedArchive34.getManifestFile(file37);
        fileEntryIterator31.root = file37;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.manifestFile;
        java.io.File file42 = explodedArchive40.manifestFile;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive40.getManifestFile(file43);
        java.util.Iterator<java.io.File> fileItor45 = fileEntryIterator31.listFiles(file44);
        fileEntryIterator26.root = file44;
        explodedArchive20.manifestFile = file44;
        fileEntryIterator0.root = file44;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file50 = explodedArchive49.manifestFile;
        java.io.File file51 = explodedArchive49.manifestFile;
        java.io.File file52 = null;
        java.io.File file53 = explodedArchive49.getManifestFile(file52);
        boolean boolean54 = explodedArchive49.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        fileEntryIterator55.recursive = true;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator55.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator63.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator66 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue67 = fileEntryIterator66.stack;
        java.util.Comparator<java.io.File> fileComparator68 = fileEntryIterator66.entryComparator;
        java.util.Comparator<java.io.File> fileComparator69 = fileComparator65.thenComparing(fileComparator68);
        fileEntryIterator60.entryComparator = fileComparator65;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator71 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue72 = fileEntryIterator71.stack;
        java.util.Comparator<java.io.File> fileComparator73 = fileEntryIterator71.entryComparator;
        java.util.Comparator<java.io.File> fileComparator74 = fileComparator65.thenComparing(fileComparator73);
        fileEntryIterator55.entryComparator = fileComparator74;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file77 = explodedArchive76.manifestFile;
        java.io.File file78 = explodedArchive76.manifestFile;
        java.io.File file79 = null;
        java.io.File file80 = explodedArchive76.getManifestFile(file79);
        fileEntryIterator55.root = file80;
        explodedArchive49.root = file80;
        explodedArchive49.recursive = false;
        java.util.jar.Manifest manifest85 = null;
        explodedArchive49.manifest = manifest85;
        java.lang.String str87 = explodedArchive49.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter88 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList89 = explodedArchive49.getNestedArchives(entryFilter88);
        java.util.jar.Manifest manifest90 = null;
        explodedArchive49.manifest = manifest90;
        java.io.File file92 = explodedArchive49.root;
        java.util.Iterator<java.io.File> fileItor93 = fileEntryIterator0.listFiles(file92);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "exploded archive" + "'", str24, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor45);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileItorQueue67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNotNull(fileItorQueue72);
        org.junit.Assert.assertNotNull(fileComparator73);
        org.junit.Assert.assertNotNull(fileComparator74);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNull(file78);
        org.junit.Assert.assertNotNull(file80);
        org.junit.Assert.assertEquals(file80.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file80.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str87 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str87, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList89);
        org.junit.Assert.assertNotNull(file92);
        org.junit.Assert.assertEquals(file92.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file92.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor93);
    }

    @Test
    public void test4038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4038");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file://exploded archive:0", "file://exploded archive:0", 0, "exploded archive:0");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file://exploded archive:0");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4039");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        boolean boolean3 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = false;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator12.thenComparing(fileComparator15);
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator9.thenComparing(fileComparator15);
        java.util.Comparator<java.io.File> fileComparator18 = fileComparator6.thenComparing(fileComparator17);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator24.thenComparing(fileComparator27);
        fileEntryIterator19.entryComparator = fileComparator24;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator31 = fileComparator24.thenComparing((java.util.Comparator<java.io.File>) entryComparator30);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator35.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        java.util.Comparator<java.io.File> fileComparator41 = fileComparator37.thenComparing(fileComparator40);
        java.util.Comparator<java.io.File> fileComparator42 = fileComparator34.thenComparing(fileComparator40);
        java.util.Comparator<java.io.File> fileComparator43 = entryComparator30.thenComparing(fileComparator42);
        java.util.Comparator<java.io.File> fileComparator44 = entryComparator30.reversed();
        java.util.Comparator<java.io.File> fileComparator45 = fileComparator17.thenComparing(fileComparator44);
        java.util.Comparator<java.io.File> fileComparator46 = fileComparator17.reversed();
        java.util.Comparator<java.io.File> fileComparator47 = fileComparator46.reversed();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNotNull(fileComparator47);
    }

    @Test
    public void test4040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4040");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.io.File file6 = fileEntryIterator4.current;
        boolean boolean7 = fileEntryIterator4.hasNext();
        fileEntryIterator4.recursive = false;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator4.stack;
        fileEntryIterator0.stack = fileItorQueue10;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        boolean boolean18 = explodedArchive13.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        fileEntryIterator19.recursive = true;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator29.thenComparing(fileComparator32);
        fileEntryIterator24.entryComparator = fileComparator29;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator35.entryComparator;
        java.util.Comparator<java.io.File> fileComparator38 = fileComparator29.thenComparing(fileComparator37);
        fileEntryIterator19.entryComparator = fileComparator38;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.manifestFile;
        java.io.File file42 = explodedArchive40.manifestFile;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive40.getManifestFile(file43);
        fileEntryIterator19.root = file44;
        explodedArchive13.root = file44;
        explodedArchive13.recursive = false;
        java.util.jar.Manifest manifest49 = null;
        explodedArchive13.manifest = manifest49;
        java.lang.String str51 = explodedArchive13.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter52 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList53 = explodedArchive13.getNestedArchives(entryFilter52);
        java.io.File file54 = explodedArchive13.root;
        explodedArchive13.recursive = true;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor57 = explodedArchive13.iterator();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter58 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList59 = explodedArchive13.getNestedArchives(entryFilter58);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean61 = explodedArchive60.recursive;
        boolean boolean62 = explodedArchive60.recursive;
        java.io.File file63 = explodedArchive60.root;
        java.io.File file64 = null;
        java.io.File file65 = explodedArchive60.getManifestFile(file64);
        java.io.File file66 = explodedArchive13.getManifestFile(file65);
        java.util.Iterator<java.io.File> fileItor67 = fileEntryIterator0.listFiles(file66);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str51 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str51, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList53);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entryItor57);
        org.junit.Assert.assertNotNull(archiveList59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file65.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor67);
    }

    @Test
    public void test4041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4041");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getRef();
        java.net.URL uRL7 = null;
        java.net.URLStreamHandler uRLStreamHandler9 = null;
        java.net.URL uRL10 = new java.net.URL(uRL7, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler9);
        java.lang.String str11 = uRL10.getHost();
        java.lang.String str12 = uRL10.getAuthority();
        java.lang.String str13 = uRL10.getAuthority();
        java.lang.String str14 = uRL10.getFile();
        int int15 = uRL10.getPort();
        java.lang.String str16 = uRL10.getRef();
        java.net.URL uRL18 = new java.net.URL(uRL10, "hi!");
        java.net.URLStreamHandler uRLStreamHandler20 = null;
        java.net.URL uRL21 = new java.net.URL(uRL18, "", uRLStreamHandler20);
        boolean boolean22 = uRL3.sameFile(uRL18);
        java.lang.String str23 = uRL18.getQuery();
        java.lang.String str24 = uRL18.getQuery();
        java.lang.String str25 = uRL18.getFile();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals(uRL10.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str14, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals(uRL18.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL21.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!" + "'", str25, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test4042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4042");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        fileEntryIterator3.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator3.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        fileEntryIterator3.root = file28;
        explodedArchive0.manifestFile = file28;
        java.util.jar.Manifest manifest31 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest32 = explodedArchive0.manifest;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor33 = explodedArchive0.iterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertNull(manifest32);
    }

    @Test
    public void test4043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4043");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.net.URLStreamHandler uRLStreamHandler74 = null;
        java.net.URL uRL75 = new java.net.URL(uRL72, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", uRLStreamHandler74);
        java.lang.String str76 = uRL75.getUserInfo();
        java.lang.String str77 = uRL75.getAuthority();
        java.net.URI uRI78 = uRL75.toURI();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL75.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(uRI78);
    }

    @Test
    public void test4044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4044");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file://filefile://exploded archive:0", "file://exploded archive:0/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", (int) ' ', "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file://filefile://exploded archive:0");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4045");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.io.File file5 = fileEntryIterator3.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.manifestFile;
        java.io.File file8 = explodedArchive6.manifestFile;
        java.io.File file9 = null;
        java.io.File file10 = explodedArchive6.getManifestFile(file9);
        fileEntryIterator3.root = file9;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.manifestFile;
        java.io.File file14 = explodedArchive12.manifestFile;
        java.io.File file15 = null;
        java.io.File file16 = explodedArchive12.getManifestFile(file15);
        java.util.Iterator<java.io.File> fileItor17 = fileEntryIterator3.listFiles(file16);
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator3.stack;
        fileEntryIterator0.stack = fileItorQueue18;
        java.io.File file20 = fileEntryIterator0.root;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file16.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor17);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNull(file20);
    }

    @Test
    public void test4046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4046");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.io.File file4 = fileEntryIterator0.poll();
        fileEntryIterator0.recursive = false;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator0.entryComparator;
        boolean boolean8 = fileEntryIterator0.hasNext();
        java.io.File file9 = fileEntryIterator0.root;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry10 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file9);
    }

    @Test
    public void test4047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4047");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLConnection uRLConnection7 = uRL3.openConnection();
        java.net.URL uRL9 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        fileEntryIterator13.recursive = true;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator23.thenComparing(fileComparator26);
        fileEntryIterator18.entryComparator = fileComparator23;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator23.thenComparing(fileComparator31);
        fileEntryIterator13.entryComparator = fileComparator32;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file35 = explodedArchive34.manifestFile;
        java.io.File file36 = explodedArchive34.manifestFile;
        java.io.File file37 = null;
        java.io.File file38 = explodedArchive34.getManifestFile(file37);
        fileEntryIterator13.root = file38;
        explodedArchive10.manifestFile = file38;
        java.util.jar.Manifest manifest41 = explodedArchive10.manifest;
        boolean boolean42 = explodedArchive10.recursive;
        java.io.File file43 = explodedArchive10.root;
        boolean boolean44 = explodedArchive10.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file46 = explodedArchive45.manifestFile;
        java.io.File file47 = explodedArchive45.manifestFile;
        java.io.File file48 = null;
        java.io.File file49 = explodedArchive45.getManifestFile(file48);
        boolean boolean50 = explodedArchive45.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        fileEntryIterator51.recursive = true;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator51.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator62.entryComparator;
        java.util.Comparator<java.io.File> fileComparator65 = fileComparator61.thenComparing(fileComparator64);
        fileEntryIterator56.entryComparator = fileComparator61;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue68 = fileEntryIterator67.stack;
        java.util.Comparator<java.io.File> fileComparator69 = fileEntryIterator67.entryComparator;
        java.util.Comparator<java.io.File> fileComparator70 = fileComparator61.thenComparing(fileComparator69);
        fileEntryIterator51.entryComparator = fileComparator70;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file73 = explodedArchive72.manifestFile;
        java.io.File file74 = explodedArchive72.manifestFile;
        java.io.File file75 = null;
        java.io.File file76 = explodedArchive72.getManifestFile(file75);
        fileEntryIterator51.root = file76;
        explodedArchive45.root = file76;
        explodedArchive45.recursive = false;
        java.util.jar.Manifest manifest81 = null;
        explodedArchive45.manifest = manifest81;
        java.lang.String str83 = explodedArchive45.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter84 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList85 = explodedArchive45.getNestedArchives(entryFilter84);
        java.io.File file86 = explodedArchive45.root;
        explodedArchive45.recursive = true;
        java.io.File file89 = explodedArchive45.root;
        explodedArchive10.manifestFile = file89;
        java.util.jar.Manifest manifest91 = explodedArchive10.manifest;
        boolean boolean92 = uRL3.equals((java.lang.Object) explodedArchive10);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection7);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileItorQueue68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file76.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str83 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str83, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList85);
        org.junit.Assert.assertNotNull(file86);
        org.junit.Assert.assertEquals(file86.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file86.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file89);
        org.junit.Assert.assertEquals(file89.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file89.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test4048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4048");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        fileEntryIterator0.root = file6;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = null;
        fileEntryIterator0.stack = fileItorQueue9;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator0.entryComparator;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator0.entryComparator;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileComparator12);
    }

    @Test
    public void test4049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4049");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        boolean boolean2 = fileEntryIterator0.hasNext();
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        fileEntryIterator4.recursive = true;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        java.util.Comparator<java.io.File> fileComparator18 = fileComparator14.thenComparing(fileComparator17);
        fileEntryIterator9.entryComparator = fileComparator14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator14.thenComparing(fileComparator22);
        fileEntryIterator4.entryComparator = fileComparator23;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file26 = fileEntryIterator25.current;
        java.io.File file27 = fileEntryIterator25.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file29 = fileEntryIterator28.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        java.util.Comparator<java.io.File> fileComparator39 = fileComparator35.thenComparing(fileComparator38);
        fileEntryIterator30.entryComparator = fileComparator35;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        java.util.Comparator<java.io.File> fileComparator43 = fileEntryIterator41.entryComparator;
        java.util.Comparator<java.io.File> fileComparator44 = fileComparator35.thenComparing(fileComparator43);
        fileEntryIterator28.entryComparator = fileComparator44;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator28.stack;
        fileEntryIterator25.stack = fileItorQueue46;
        fileEntryIterator4.stack = fileItorQueue46;
        fileEntryIterator0.stack = fileItorQueue46;
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.manifestFile;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.io.File file55 = null;
        java.io.File file56 = explodedArchive52.getManifestFile(file55);
        boolean boolean57 = explodedArchive52.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        fileEntryIterator58.recursive = true;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator58.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator63.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator66 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue67 = fileEntryIterator66.stack;
        java.util.Comparator<java.io.File> fileComparator68 = fileEntryIterator66.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator69 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue70 = fileEntryIterator69.stack;
        java.util.Comparator<java.io.File> fileComparator71 = fileEntryIterator69.entryComparator;
        java.util.Comparator<java.io.File> fileComparator72 = fileComparator68.thenComparing(fileComparator71);
        fileEntryIterator63.entryComparator = fileComparator68;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator74 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue75 = fileEntryIterator74.stack;
        java.util.Comparator<java.io.File> fileComparator76 = fileEntryIterator74.entryComparator;
        java.util.Comparator<java.io.File> fileComparator77 = fileComparator68.thenComparing(fileComparator76);
        fileEntryIterator58.entryComparator = fileComparator77;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file80 = explodedArchive79.manifestFile;
        java.io.File file81 = explodedArchive79.manifestFile;
        java.io.File file82 = null;
        java.io.File file83 = explodedArchive79.getManifestFile(file82);
        fileEntryIterator58.root = file83;
        explodedArchive52.root = file83;
        java.util.Iterator<java.io.File> fileItor86 = fileEntryIterator0.listFiles(file83);
        java.util.Comparator<java.io.File> fileComparator87 = fileEntryIterator0.entryComparator;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue88 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.io.File file91 = fileEntryIterator0.current;
        fileEntryIterator0.recursive = false;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fileComparator3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileItorQueue67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileItorQueue70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileComparator72);
        org.junit.Assert.assertNotNull(fileItorQueue75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNotNull(fileComparator77);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertNotNull(file83);
        org.junit.Assert.assertEquals(file83.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file83.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor86);
        org.junit.Assert.assertNotNull(fileComparator87);
        org.junit.Assert.assertNotNull(fileItorQueue88);
        org.junit.Assert.assertNull(file91);
    }

    @Test
    public void test4050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4050");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getProtocol();
        java.lang.String str5 = uRL3.getUserInfo();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler16);
        boolean boolean18 = uRL3.sameFile(uRL17);
        java.net.URL uRL20 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj21 = uRL3.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "file" + "'", str4, "file");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals(uRL20.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test4051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4051");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getQuery();
        java.lang.String str16 = uRL14.getUserInfo();
        java.net.URL uRL17 = null;
        java.net.URLStreamHandler uRLStreamHandler19 = null;
        java.net.URL uRL20 = new java.net.URL(uRL17, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler19);
        java.lang.String str21 = uRL20.getHost();
        java.lang.String str22 = uRL20.getAuthority();
        java.lang.String str23 = uRL20.getHost();
        java.lang.String str24 = uRL20.getQuery();
        java.lang.String str25 = uRL20.getAuthority();
        java.lang.String str26 = uRL20.getFile();
        java.lang.String str27 = uRL20.getFile();
        java.lang.String str28 = uRL20.getProtocol();
        boolean boolean29 = uRL14.sameFile(uRL20);
        java.lang.String str30 = uRL14.getPath();
        java.lang.String str31 = uRL14.getHost();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals(uRL20.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str26, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str27, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "file" + "'", str28, "file");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str30, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
    }

    @Test
    public void test4052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4052");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLConnection uRLConnection7 = uRL3.openConnection();
        java.lang.String str8 = uRL3.getFile();
        java.net.URL uRL10 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str11 = uRL10.getProtocol();
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL10, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", uRLStreamHandler13);
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL14, "file", uRLStreamHandler16);
        java.lang.Object obj18 = null;
        boolean boolean19 = uRL14.equals(obj18);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL10.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "file" + "'", str11, "file");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test4053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4053");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file3 = fileEntryIterator2.current;
        java.io.File file4 = fileEntryIterator2.poll();
        java.io.File file5 = fileEntryIterator2.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        java.util.Comparator<java.io.File> fileComparator15 = fileComparator11.thenComparing(fileComparator14);
        fileEntryIterator6.entryComparator = fileComparator11;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator18 = fileComparator11.thenComparing((java.util.Comparator<java.io.File>) entryComparator17);
        fileEntryIterator2.entryComparator = entryComparator17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        fileEntryIterator20.recursive = true;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator20.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator31.entryComparator;
        java.util.Comparator<java.io.File> fileComparator34 = fileComparator30.thenComparing(fileComparator33);
        fileEntryIterator25.entryComparator = fileComparator30;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        java.util.Comparator<java.io.File> fileComparator39 = fileComparator30.thenComparing(fileComparator38);
        fileEntryIterator20.entryComparator = fileComparator39;
        java.util.Comparator<java.io.File> fileComparator41 = entryComparator17.thenComparing(fileComparator39);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.io.File file45 = null;
        java.io.File file46 = explodedArchive42.getManifestFile(file45);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean48 = fileEntryIterator47.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean50 = explodedArchive49.recursive;
        java.io.File file51 = explodedArchive49.manifestFile;
        java.util.jar.Manifest manifest52 = null;
        explodedArchive49.manifest = manifest52;
        java.io.File file54 = explodedArchive49.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        java.io.File file58 = fileEntryIterator55.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator55.current = file63;
        explodedArchive49.root = file63;
        fileEntryIterator47.root = file63;
        int int67 = entryComparator17.compare(file46, file63);
        java.util.Iterator<java.io.File> fileItor68 = fileEntryIterator0.listFiles(file46);
        java.util.Comparator<java.io.File> fileComparator69 = fileEntryIterator0.entryComparator;
        java.io.File file70 = fileEntryIterator0.current;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(fileItor68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNull(file70);
    }

    @Test
    public void test4054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4054");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str1 = fileEntry0.getName();
        fileEntry0.name = "exploded archive";
        fileEntry0.name = "hi!";
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.manifestFile;
        java.io.File file8 = explodedArchive6.manifestFile;
        java.lang.String str9 = explodedArchive6.toString();
        java.lang.String str10 = explodedArchive6.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean12 = fileEntryIterator11.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean14 = explodedArchive13.recursive;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.util.jar.Manifest manifest16 = null;
        explodedArchive13.manifest = manifest16;
        java.io.File file18 = explodedArchive13.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.io.File file22 = fileEntryIterator19.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.manifestFile;
        java.io.File file25 = explodedArchive23.manifestFile;
        java.io.File file26 = null;
        java.io.File file27 = explodedArchive23.getManifestFile(file26);
        fileEntryIterator19.current = file27;
        explodedArchive13.root = file27;
        fileEntryIterator11.root = file27;
        java.io.File file31 = explodedArchive6.getManifestFile(file27);
        fileEntry0.file = file31;
        fileEntry0.name = "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF";
        java.io.File file35 = fileEntry0.file;
        java.io.File file36 = fileEntry0.file;
        boolean boolean37 = fileEntry0.isDirectory();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        fileEntryIterator41.recursive = true;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator41.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator52.entryComparator;
        java.util.Comparator<java.io.File> fileComparator55 = fileComparator51.thenComparing(fileComparator54);
        fileEntryIterator46.entryComparator = fileComparator51;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        java.util.Comparator<java.io.File> fileComparator60 = fileComparator51.thenComparing(fileComparator59);
        fileEntryIterator41.entryComparator = fileComparator60;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file63 = explodedArchive62.manifestFile;
        java.io.File file64 = explodedArchive62.manifestFile;
        java.io.File file65 = null;
        java.io.File file66 = explodedArchive62.getManifestFile(file65);
        fileEntryIterator41.root = file66;
        explodedArchive38.manifestFile = file66;
        java.util.jar.Manifest manifest69 = explodedArchive38.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry70 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file71 = fileEntry70.getFile();
        java.io.File file72 = fileEntry70.file;
        fileEntry70.name = "";
        java.io.File file75 = fileEntry70.file;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean77 = explodedArchive76.recursive;
        boolean boolean78 = explodedArchive76.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file80 = explodedArchive79.manifestFile;
        java.io.File file81 = explodedArchive79.manifestFile;
        java.io.File file82 = null;
        java.io.File file83 = explodedArchive79.getManifestFile(file82);
        explodedArchive76.root = file83;
        explodedArchive76.recursive = false;
        java.io.File file87 = explodedArchive76.root;
        fileEntry70.file = file87;
        java.io.File file89 = fileEntry70.getFile();
        java.io.File file90 = fileEntry70.file;
        java.io.File file91 = explodedArchive38.getManifestFile(file90);
        fileEntry0.file = file91;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "exploded archive" + "'", str9, "exploded archive");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "exploded archive" + "'", str10, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file27.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file35.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest69);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertNotNull(file83);
        org.junit.Assert.assertEquals(file83.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file83.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file87);
        org.junit.Assert.assertEquals(file87.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file87.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file89);
        org.junit.Assert.assertEquals(file89.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file89.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file90);
        org.junit.Assert.assertEquals(file90.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file90.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file91);
        org.junit.Assert.assertEquals(file91.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file91.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4055");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str1 = fileEntry0.name;
        java.lang.String str2 = fileEntry0.getName();
        java.lang.String str3 = fileEntry0.getName();
        java.lang.String str4 = fileEntry0.name;
        fileEntry0.name = "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF";
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test4056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4056");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.util.jar.Manifest manifest4 = null;
        explodedArchive0.manifest = manifest4;
        java.lang.String str6 = explodedArchive0.toString();
        java.io.File file7 = explodedArchive0.root;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "exploded archive" + "'", str6, "exploded archive");
        org.junit.Assert.assertNull(file7);
    }

    @Test
    public void test4057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4057");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        boolean boolean4 = fileEntryIterator0.recursive;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        java.util.Comparator<java.io.File> fileComparator15 = fileComparator11.thenComparing(fileComparator14);
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator8.thenComparing(fileComparator14);
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator14.reversed();
        java.util.Comparator<java.io.File> fileComparator18 = fileComparator14.reversed();
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator18.reversed();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        fileEntryIterator20.recursive = true;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator20.entryComparator;
        fileEntryIterator20.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        fileEntryIterator20.stack = fileItorQueue28;
        fileEntryIterator20.recursive = true;
        java.io.File file32 = fileEntryIterator20.current;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator20.entryComparator;
        java.util.Comparator<java.io.File> fileComparator34 = fileComparator18.thenComparing(fileComparator33);
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator5.thenComparing(fileComparator34);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
    }

    @Test
    public void test4058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4058");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        int int8 = uRL3.getPort();
        java.lang.String str9 = uRL3.getRef();
        java.net.URL uRL11 = new java.net.URL(uRL3, "hi!");
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "", uRLStreamHandler13);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream15 = uRL11.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi! (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test4059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4059");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        boolean boolean4 = fileEntryIterator0.hasNext();
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        fileEntryIterator6.recursive = true;
        fileEntryIterator6.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator6.stack;
        boolean boolean32 = fileEntryIterator6.recursive;
        boolean boolean33 = fileEntryIterator6.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator6.stack;
        boolean boolean35 = fileEntryIterator6.recursive;
        boolean boolean36 = fileEntryIterator6.recursive;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator6.stack;
        fileEntryIterator0.stack = fileItorQueue37;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(fileItorQueue37);
    }

    @Test
    public void test4060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4060");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        boolean boolean2 = fileEntryIterator0.hasNext();
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        boolean boolean5 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator0.entryComparator;
        java.io.File file9 = fileEntryIterator0.current;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fileComparator3);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
    }

    @Test
    public void test4061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4061");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.lang.String str4 = explodedArchive0.toString();
        boolean boolean5 = explodedArchive0.recursive;
        java.io.File file6 = null;
        explodedArchive0.root = file6;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive0.manifest = manifest8;
        java.io.File file10 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file12 = fileEntry11.getFile();
        java.io.File file13 = fileEntry11.file;
        java.io.File file14 = null;
        fileEntry11.file = file14;
        java.lang.String str16 = fileEntry11.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        boolean boolean19 = fileEntryIterator17.hasNext();
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        java.util.Comparator<java.io.File> fileComparator30 = fileComparator26.thenComparing(fileComparator29);
        fileEntryIterator21.entryComparator = fileComparator26;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator26.thenComparing((java.util.Comparator<java.io.File>) entryComparator32);
        java.util.Comparator<java.io.File> fileComparator34 = fileComparator20.thenComparing((java.util.Comparator<java.io.File>) entryComparator32);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean36 = fileEntryIterator35.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean38 = explodedArchive37.recursive;
        java.io.File file39 = explodedArchive37.manifestFile;
        java.util.jar.Manifest manifest40 = null;
        explodedArchive37.manifest = manifest40;
        java.io.File file42 = explodedArchive37.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        java.io.File file46 = fileEntryIterator43.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file48 = explodedArchive47.manifestFile;
        java.io.File file49 = explodedArchive47.manifestFile;
        java.io.File file50 = null;
        java.io.File file51 = explodedArchive47.getManifestFile(file50);
        fileEntryIterator43.current = file51;
        explodedArchive37.root = file51;
        fileEntryIterator35.root = file51;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file56 = explodedArchive55.manifestFile;
        java.io.File file57 = explodedArchive55.manifestFile;
        java.io.File file58 = null;
        java.io.File file59 = explodedArchive55.getManifestFile(file58);
        boolean boolean60 = explodedArchive55.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        fileEntryIterator61.recursive = true;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator61.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator66 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue67 = fileEntryIterator66.stack;
        java.util.Comparator<java.io.File> fileComparator68 = fileEntryIterator66.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator69 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue70 = fileEntryIterator69.stack;
        java.util.Comparator<java.io.File> fileComparator71 = fileEntryIterator69.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator72 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue73 = fileEntryIterator72.stack;
        java.util.Comparator<java.io.File> fileComparator74 = fileEntryIterator72.entryComparator;
        java.util.Comparator<java.io.File> fileComparator75 = fileComparator71.thenComparing(fileComparator74);
        fileEntryIterator66.entryComparator = fileComparator71;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator77 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue78 = fileEntryIterator77.stack;
        java.util.Comparator<java.io.File> fileComparator79 = fileEntryIterator77.entryComparator;
        java.util.Comparator<java.io.File> fileComparator80 = fileComparator71.thenComparing(fileComparator79);
        fileEntryIterator61.entryComparator = fileComparator80;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file83 = explodedArchive82.manifestFile;
        java.io.File file84 = explodedArchive82.manifestFile;
        java.io.File file85 = null;
        java.io.File file86 = explodedArchive82.getManifestFile(file85);
        fileEntryIterator61.root = file86;
        explodedArchive55.root = file86;
        int int89 = entryComparator32.compare(file51, file86);
        fileEntry11.file = file86;
        boolean boolean91 = fileEntry11.isDirectory();
        java.io.File file92 = fileEntry11.getFile();
        explodedArchive0.root = file92;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive94 = new org.springframework.boot.loader.archive.ExplodedArchive(file92);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file51.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileItorQueue67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileItorQueue70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileItorQueue73);
        org.junit.Assert.assertNotNull(fileComparator74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNotNull(fileItorQueue78);
        org.junit.Assert.assertNotNull(fileComparator79);
        org.junit.Assert.assertNotNull(fileComparator80);
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertNull(file84);
        org.junit.Assert.assertNotNull(file86);
        org.junit.Assert.assertEquals(file86.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file86.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(file92);
        org.junit.Assert.assertEquals(file92.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file92.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test4062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4062");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", 0, "file:100", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4063");
        java.net.URL uRL4 = new java.net.URL("file", "", (int) 'a', "hi!");
        org.junit.Assert.assertEquals(uRL4.toString(), "file://:97hi!");
    }

    @Test
    public void test4064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4064");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.lang.String str10 = uRL3.getFile();
        java.net.URL uRL11 = null;
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getHost();
        java.lang.String str16 = uRL14.getAuthority();
        java.lang.String str17 = uRL14.getAuthority();
        java.lang.String str18 = uRL14.getRef();
        java.net.URL uRL19 = null;
        java.net.URLStreamHandler uRLStreamHandler21 = null;
        java.net.URL uRL22 = new java.net.URL(uRL19, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler21);
        java.lang.String str23 = uRL22.getHost();
        java.lang.String str24 = uRL22.getAuthority();
        java.lang.String str25 = uRL22.getQuery();
        int int26 = uRL22.getDefaultPort();
        java.lang.String str27 = uRL22.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler29 = null;
        java.net.URL uRL30 = new java.net.URL(uRL22, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler29);
        java.lang.String str31 = uRL30.getFile();
        boolean boolean32 = uRL14.sameFile(uRL30);
        boolean boolean33 = uRL3.sameFile(uRL30);
        java.net.URL uRL34 = null;
        java.net.URLStreamHandler uRLStreamHandler36 = null;
        java.net.URL uRL37 = new java.net.URL(uRL34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler36);
        java.lang.String str38 = uRL37.getHost();
        java.lang.String str39 = uRL37.getAuthority();
        java.lang.String str40 = uRL37.getAuthority();
        java.lang.String str41 = uRL37.getFile();
        int int42 = uRL37.getPort();
        java.lang.String str43 = uRL37.getRef();
        java.net.URL uRL45 = new java.net.URL(uRL37, "hi!");
        boolean boolean46 = uRL3.sameFile(uRL45);
        int int47 = uRL3.getDefaultPort();
        java.net.URL uRL48 = null;
        java.net.URLStreamHandler uRLStreamHandler50 = null;
        java.net.URL uRL51 = new java.net.URL(uRL48, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler50);
        java.lang.String str52 = uRL51.getHost();
        int int53 = uRL51.getPort();
        java.net.URLStreamHandler uRLStreamHandler55 = null;
        java.net.URL uRL56 = new java.net.URL(uRL51, "hi!", uRLStreamHandler55);
        java.net.URLConnection uRLConnection57 = uRL56.openConnection();
        boolean boolean58 = uRL3.sameFile(uRL56);
        java.lang.String str59 = uRL3.getRef();
        java.lang.String str60 = uRL3.getRef();
        java.net.URLStreamHandler uRLStreamHandler62 = null;
        java.net.URL uRL63 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", uRLStreamHandler62);
        java.net.URL uRL64 = null;
        java.net.URLStreamHandler uRLStreamHandler66 = null;
        java.net.URL uRL67 = new java.net.URL(uRL64, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler66);
        java.lang.String str68 = uRL67.getHost();
        int int69 = uRL67.getPort();
        java.lang.String str70 = uRL67.getHost();
        java.lang.String str71 = uRL67.getRef();
        boolean boolean72 = uRL63.sameFile(uRL67);
        java.lang.String str73 = uRL67.toExternalForm();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals(uRL30.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str31, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals(uRL37.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str41, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals(uRL45.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertEquals(uRL51.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertEquals(uRL56.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNotNull(uRLConnection57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertEquals(uRL63.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL67.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str73, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4065");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.lang.String str10 = uRL3.getFile();
        java.net.URL uRL11 = null;
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getHost();
        java.lang.String str16 = uRL14.getAuthority();
        java.lang.String str17 = uRL14.getAuthority();
        java.lang.String str18 = uRL14.getRef();
        java.net.URL uRL19 = null;
        java.net.URLStreamHandler uRLStreamHandler21 = null;
        java.net.URL uRL22 = new java.net.URL(uRL19, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler21);
        java.lang.String str23 = uRL22.getHost();
        java.lang.String str24 = uRL22.getAuthority();
        java.lang.String str25 = uRL22.getQuery();
        int int26 = uRL22.getDefaultPort();
        java.lang.String str27 = uRL22.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler29 = null;
        java.net.URL uRL30 = new java.net.URL(uRL22, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler29);
        java.lang.String str31 = uRL30.getFile();
        boolean boolean32 = uRL14.sameFile(uRL30);
        boolean boolean33 = uRL3.sameFile(uRL30);
        java.net.URL uRL34 = null;
        java.net.URLStreamHandler uRLStreamHandler36 = null;
        java.net.URL uRL37 = new java.net.URL(uRL34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler36);
        java.lang.String str38 = uRL37.getHost();
        java.lang.String str39 = uRL37.getAuthority();
        java.lang.String str40 = uRL37.getAuthority();
        java.lang.String str41 = uRL37.getFile();
        int int42 = uRL37.getPort();
        java.lang.String str43 = uRL37.getRef();
        java.net.URL uRL45 = new java.net.URL(uRL37, "hi!");
        boolean boolean46 = uRL3.sameFile(uRL45);
        int int47 = uRL3.getDefaultPort();
        java.net.URL uRL48 = null;
        java.net.URLStreamHandler uRLStreamHandler50 = null;
        java.net.URL uRL51 = new java.net.URL(uRL48, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler50);
        java.lang.String str52 = uRL51.getHost();
        int int53 = uRL51.getPort();
        java.net.URLStreamHandler uRLStreamHandler55 = null;
        java.net.URL uRL56 = new java.net.URL(uRL51, "hi!", uRLStreamHandler55);
        java.net.URLConnection uRLConnection57 = uRL56.openConnection();
        boolean boolean58 = uRL3.sameFile(uRL56);
        java.lang.String str59 = uRL3.getRef();
        java.lang.String str60 = uRL3.getRef();
        java.net.URLStreamHandler uRLStreamHandler62 = null;
        java.net.URL uRL63 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", uRLStreamHandler62);
        java.lang.String str64 = uRL63.getPath();
        java.lang.String str65 = uRL63.getFile();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals(uRL30.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str31, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals(uRL37.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str41, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals(uRL45.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertEquals(uRL51.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertEquals(uRL56.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNotNull(uRLConnection57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertEquals(uRL63.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!" + "'", str64, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!" + "'", str65, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test4066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4066");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLConnection uRLConnection7 = uRL3.openConnection();
        java.lang.String str8 = uRL3.getUserInfo();
        java.lang.String str9 = uRL3.getRef();
        java.lang.String str10 = uRL3.getFile();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4067");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.util.jar.Manifest manifest5 = null;
        explodedArchive0.manifest = manifest5;
        java.lang.String str7 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file9 = fileEntry8.getFile();
        java.io.File file10 = fileEntry8.file;
        java.io.File file11 = null;
        fileEntry8.file = file11;
        java.lang.String str13 = fileEntry8.getName();
        java.io.File file14 = fileEntry8.getFile();
        java.io.File file15 = fileEntry8.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file17 = fileEntryIterator16.current;
        java.io.File file18 = fileEntryIterator16.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file20 = fileEntryIterator19.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        java.util.Comparator<java.io.File> fileComparator30 = fileComparator26.thenComparing(fileComparator29);
        fileEntryIterator21.entryComparator = fileComparator26;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator26.thenComparing(fileComparator34);
        fileEntryIterator19.entryComparator = fileComparator35;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator19.stack;
        fileEntryIterator16.stack = fileItorQueue37;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file40 = explodedArchive39.manifestFile;
        java.io.File file41 = explodedArchive39.manifestFile;
        explodedArchive39.recursive = true;
        java.util.jar.Manifest manifest44 = null;
        explodedArchive39.manifest = manifest44;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        fileEntryIterator46.recursive = true;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator46.entryComparator;
        fileEntryIterator46.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        fileEntryIterator46.stack = fileItorQueue54;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file57 = fileEntryIterator56.current;
        java.io.File file58 = fileEntryIterator56.poll();
        java.io.File file59 = fileEntryIterator56.poll();
        java.io.File file60 = fileEntryIterator56.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.io.File file63 = fileEntryIterator61.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file65 = explodedArchive64.manifestFile;
        java.io.File file66 = explodedArchive64.manifestFile;
        java.io.File file67 = null;
        java.io.File file68 = explodedArchive64.getManifestFile(file67);
        fileEntryIterator61.root = file67;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file71 = explodedArchive70.manifestFile;
        java.io.File file72 = explodedArchive70.manifestFile;
        java.io.File file73 = null;
        java.io.File file74 = explodedArchive70.getManifestFile(file73);
        java.util.Iterator<java.io.File> fileItor75 = fileEntryIterator61.listFiles(file74);
        fileEntryIterator56.root = file74;
        java.util.Iterator<java.io.File> fileItor77 = fileEntryIterator46.listFiles(file74);
        explodedArchive39.manifestFile = file74;
        fileEntryIterator16.root = file74;
        fileEntry8.file = file74;
        java.io.File file81 = fileEntry8.getFile();
        explodedArchive0.root = file81;
        java.net.URL uRL83 = explodedArchive0.getUrl();
        java.net.Proxy proxy84 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection85 = uRL83.openConnection(proxy84);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "exploded archive" + "'", str7, "exploded archive");
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file68.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file74.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor75);
        org.junit.Assert.assertNotNull(fileItor77);
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file81.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRL83);
// flaky:         org.junit.Assert.assertEquals(uRL83.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4068");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.io.File file9 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        fileEntryIterator6.current = file14;
        explodedArchive0.root = file14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file18 = fileEntry17.getFile();
        java.io.File file19 = fileEntry17.file;
        fileEntry17.name = "";
        java.lang.String str22 = fileEntry17.name;
        java.io.File file23 = fileEntry17.file;
        java.io.File file24 = fileEntry17.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.manifestFile;
        java.io.File file27 = explodedArchive25.manifestFile;
        java.io.File file28 = null;
        java.io.File file29 = explodedArchive25.getManifestFile(file28);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file31 = fileEntry30.getFile();
        java.lang.String str32 = fileEntry30.name;
        java.io.File file33 = fileEntry30.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        boolean boolean36 = fileEntryIterator34.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file38 = explodedArchive37.manifestFile;
        java.io.File file39 = explodedArchive37.manifestFile;
        java.io.File file40 = null;
        java.io.File file41 = explodedArchive37.getManifestFile(file40);
        boolean boolean42 = explodedArchive37.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        fileEntryIterator43.recursive = true;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator53.thenComparing(fileComparator56);
        fileEntryIterator48.entryComparator = fileComparator53;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        java.util.Comparator<java.io.File> fileComparator62 = fileComparator53.thenComparing(fileComparator61);
        fileEntryIterator43.entryComparator = fileComparator62;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file65 = explodedArchive64.manifestFile;
        java.io.File file66 = explodedArchive64.manifestFile;
        java.io.File file67 = null;
        java.io.File file68 = explodedArchive64.getManifestFile(file67);
        fileEntryIterator43.root = file68;
        explodedArchive37.root = file68;
        java.util.Iterator<java.io.File> fileItor71 = fileEntryIterator34.listFiles(file68);
        fileEntry30.file = file68;
        explodedArchive25.manifestFile = file68;
        fileEntry17.file = file68;
        explodedArchive0.root = file68;
        explodedArchive0.recursive = false;
        explodedArchive0.recursive = true;
        java.net.URL uRL80 = explodedArchive0.getUrl();
        java.lang.String str81 = uRL80.getRef();
        java.lang.String str82 = uRL80.getProtocol();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file68.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor71);
        org.junit.Assert.assertNotNull(uRL80);
// flaky:         org.junit.Assert.assertEquals(uRL80.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "file" + "'", str82, "file");
    }

    @Test
    public void test4069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4069");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor34 = explodedArchive0.iterator();
        java.io.File file35 = null;
        explodedArchive0.root = file35;
        explodedArchive0.recursive = false;
        explodedArchive0.recursive = false;
        java.lang.Class<?> wildcardClass41 = explodedArchive0.getClass();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entryItor34);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test4070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4070");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.net.URLStreamHandler uRLStreamHandler74 = null;
        java.net.URL uRL75 = new java.net.URL(uRL72, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", uRLStreamHandler74);
        java.lang.String str76 = uRL72.getProtocol();
        java.lang.String str77 = uRL72.getAuthority();
        int int78 = uRL72.getDefaultPort();
        java.lang.String str79 = uRL72.getAuthority();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL75.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "file" + "'", str76, "file");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
    }

    @Test
    public void test4071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4071");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("file:100", "file", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4072");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        java.net.URL uRL41 = explodedArchive0.getUrl();
        java.lang.String str42 = uRL41.getQuery();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(uRL41);
// flaky:         org.junit.Assert.assertEquals(uRL41.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test4073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4073");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        boolean boolean4 = explodedArchive0.recursive;
        java.lang.String str5 = explodedArchive0.toString();
        explodedArchive0.recursive = false;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "exploded archive" + "'", str5, "exploded archive");
    }

    @Test
    public void test4074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4074");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getUserInfo();
        boolean boolean13 = uRL3.sameFile(uRL9);
        java.lang.String str14 = uRL9.getQuery();
        java.lang.String str15 = uRL9.getRef();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test4075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4075");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        fileEntryIterator0.root = file6;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.manifestFile;
        java.io.File file11 = explodedArchive9.manifestFile;
        java.io.File file12 = null;
        java.io.File file13 = explodedArchive9.getManifestFile(file12);
        java.util.Iterator<java.io.File> fileItor14 = fileEntryIterator0.listFiles(file13);
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator0.stack;
        boolean boolean16 = fileEntryIterator0.recursive;
        boolean boolean17 = fileEntryIterator0.hasNext();
        java.io.File file18 = fileEntryIterator0.poll();
        fileEntryIterator0.recursive = false;
        java.io.File file21 = fileEntryIterator0.current;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file13.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor14);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file21);
    }

    @Test
    public void test4076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4076");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry0.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.util.Comparator<java.io.File> fileComparator12 = fileComparator8.thenComparing(fileComparator11);
        fileEntryIterator3.entryComparator = fileComparator8;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator15 = fileComparator8.thenComparing((java.util.Comparator<java.io.File>) entryComparator14);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator21.thenComparing(fileComparator24);
        java.util.Comparator<java.io.File> fileComparator26 = fileComparator18.thenComparing(fileComparator24);
        java.util.Comparator<java.io.File> fileComparator27 = entryComparator14.thenComparing(fileComparator26);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file29 = fileEntryIterator28.current;
        java.io.File file30 = null;
        fileEntryIterator28.current = file30;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean33 = explodedArchive32.recursive;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.util.jar.Manifest manifest35 = null;
        explodedArchive32.manifest = manifest35;
        java.io.File file37 = explodedArchive32.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        java.io.File file41 = fileEntryIterator38.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.io.File file45 = null;
        java.io.File file46 = explodedArchive42.getManifestFile(file45);
        fileEntryIterator38.current = file46;
        explodedArchive32.root = file46;
        fileEntryIterator28.root = file46;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        fileEntryIterator50.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file55 = explodedArchive54.manifestFile;
        java.io.File file56 = explodedArchive54.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        fileEntryIterator57.recursive = true;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator62.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator65.stack;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator65.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        java.util.Comparator<java.io.File> fileComparator71 = fileComparator67.thenComparing(fileComparator70);
        fileEntryIterator62.entryComparator = fileComparator67;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator73 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue74 = fileEntryIterator73.stack;
        java.util.Comparator<java.io.File> fileComparator75 = fileEntryIterator73.entryComparator;
        java.util.Comparator<java.io.File> fileComparator76 = fileComparator67.thenComparing(fileComparator75);
        fileEntryIterator57.entryComparator = fileComparator76;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file79 = explodedArchive78.manifestFile;
        java.io.File file80 = explodedArchive78.manifestFile;
        java.io.File file81 = null;
        java.io.File file82 = explodedArchive78.getManifestFile(file81);
        fileEntryIterator57.root = file82;
        explodedArchive54.manifestFile = file82;
        fileEntryIterator50.current = file82;
        int int86 = entryComparator14.compare(file46, file82);
        fileEntry0.file = file82;
        java.io.File file88 = fileEntry0.file;
        java.io.File file89 = fileEntry0.getFile();
        boolean boolean90 = fileEntry0.isDirectory();
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileItorQueue74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(file88);
        org.junit.Assert.assertEquals(file88.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file88.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file89);
        org.junit.Assert.assertEquals(file89.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file89.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test4077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4077");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getProtocol();
        java.lang.String str5 = uRL3.getUserInfo();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler16);
        boolean boolean18 = uRL3.sameFile(uRL17);
        java.lang.String str19 = uRL17.getHost();
        java.lang.String str20 = uRL17.getQuery();
        java.net.URL uRL22 = new java.net.URL(uRL17, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        java.lang.String str23 = uRL17.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "file" + "'", str4, "file");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str23, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4078");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        explodedArchive0.root = file7;
        java.util.jar.Manifest manifest9 = explodedArchive0.manifest;
        java.net.URL uRL10 = explodedArchive0.getUrl();
        java.util.jar.Manifest manifest11 = null;
        explodedArchive0.manifest = manifest11;
        java.lang.String str13 = explodedArchive0.toString();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNotNull(uRL10);
// flaky:         org.junit.Assert.assertEquals(uRL10.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str13, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4079");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        int int2 = uRL1.getDefaultPort();
        java.lang.String str3 = uRL1.getUserInfo();
        java.net.URL uRL4 = null;
        java.net.URLStreamHandler uRLStreamHandler6 = null;
        java.net.URL uRL7 = new java.net.URL(uRL4, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler6);
        java.lang.String str8 = uRL7.getHost();
        java.lang.String str9 = uRL7.getAuthority();
        java.lang.String str10 = uRL7.toExternalForm();
        java.net.URLConnection uRLConnection11 = uRL7.openConnection();
        java.lang.String str12 = uRL7.getUserInfo();
        java.lang.String str13 = uRL7.getRef();
        java.lang.String str14 = uRL7.getPath();
        java.net.URI uRI15 = uRL7.toURI();
        java.net.URLConnection uRLConnection16 = uRL7.openConnection();
        boolean boolean17 = uRL1.sameFile(uRL7);
        java.net.URLStreamHandler uRLStreamHandler19 = null;
        java.net.URL uRL20 = new java.net.URL(uRL1, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", uRLStreamHandler19);
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals(uRL7.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str14, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI15);
        org.junit.Assert.assertNotNull(uRLConnection16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals(uRL20.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
    }

    @Test
    public void test4080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4080");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", (int) (byte) 100, "file://filefile://exploded archive:0", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/file");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4081");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getRef();
        java.net.URLStreamHandler uRLStreamHandler9 = null;
        java.net.URL uRL10 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", uRLStreamHandler9);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals(uRL10.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test4082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4082");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "file://filefile://exploded archive:0", (-1), "file://exploded archive/exploded archive", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/manifest.mf");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4083");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        fileEntryIterator0.recursive = true;
        java.io.File file6 = fileEntryIterator0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry7.name = "exploded archive";
        java.lang.String str10 = fileEntry7.getName();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.manifestFile;
        java.io.File file13 = explodedArchive11.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        fileEntryIterator14.recursive = true;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator24.thenComparing(fileComparator27);
        fileEntryIterator19.entryComparator = fileComparator24;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator24.thenComparing(fileComparator32);
        fileEntryIterator14.entryComparator = fileComparator33;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.manifestFile;
        java.io.File file37 = explodedArchive35.manifestFile;
        java.io.File file38 = null;
        java.io.File file39 = explodedArchive35.getManifestFile(file38);
        fileEntryIterator14.root = file39;
        explodedArchive11.manifestFile = file39;
        java.util.jar.Manifest manifest42 = explodedArchive11.manifest;
        java.util.jar.Manifest manifest43 = explodedArchive11.manifest;
        java.util.jar.Manifest manifest44 = explodedArchive11.getManifest();
        java.util.jar.Manifest manifest45 = explodedArchive11.getManifest();
        java.io.File file46 = explodedArchive11.root;
        java.io.File file47 = explodedArchive11.manifestFile;
        java.io.File file48 = explodedArchive11.manifestFile;
        fileEntry7.file = file48;
        fileEntryIterator0.root = file48;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive(file48, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fileComparator3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "exploded archive" + "'", str10, "exploded archive");
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest42);
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertNull(manifest44);
        org.junit.Assert.assertNull(manifest45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test4084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4084");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry0.name = "exploded archive";
        java.io.File file3 = fileEntry0.file;
        java.io.File file4 = fileEntry0.file;
        java.lang.String str5 = fileEntry0.getName();
        java.io.File file6 = fileEntry0.file;
        java.io.File file7 = fileEntry0.file;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "exploded archive" + "'", str5, "exploded archive");
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
    }

    @Test
    public void test4085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4085");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file6 = fileEntry5.getFile();
        java.lang.String str7 = fileEntry5.name;
        java.io.File file8 = fileEntry5.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        boolean boolean11 = fileEntryIterator9.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.manifestFile;
        java.io.File file14 = explodedArchive12.manifestFile;
        java.io.File file15 = null;
        java.io.File file16 = explodedArchive12.getManifestFile(file15);
        boolean boolean17 = explodedArchive12.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        fileEntryIterator18.recursive = true;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator28.thenComparing(fileComparator31);
        fileEntryIterator23.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator28.thenComparing(fileComparator36);
        fileEntryIterator18.entryComparator = fileComparator37;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file40 = explodedArchive39.manifestFile;
        java.io.File file41 = explodedArchive39.manifestFile;
        java.io.File file42 = null;
        java.io.File file43 = explodedArchive39.getManifestFile(file42);
        fileEntryIterator18.root = file43;
        explodedArchive12.root = file43;
        java.util.Iterator<java.io.File> fileItor46 = fileEntryIterator9.listFiles(file43);
        fileEntry5.file = file43;
        explodedArchive0.manifestFile = file43;
        java.util.jar.Manifest manifest49 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter50 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList51 = explodedArchive0.getNestedArchives(entryFilter50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file16.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file43.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor46);
        org.junit.Assert.assertNull(manifest49);
    }

    @Test
    public void test4086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4086");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive0.manifest = manifest6;
        java.lang.String str8 = explodedArchive0.toString();
        boolean boolean9 = explodedArchive0.recursive;
        explodedArchive0.recursive = true;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive0.getNestedArchives(entryFilter12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "exploded archive" + "'", str8, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test4087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4087");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.io.File file4 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.io.File file7 = fileEntryIterator5.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        fileEntryIterator8.recursive = true;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator18.thenComparing(fileComparator21);
        fileEntryIterator13.entryComparator = fileComparator18;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator18.thenComparing(fileComparator26);
        fileEntryIterator8.entryComparator = fileComparator27;
        fileEntryIterator8.recursive = true;
        fileEntryIterator8.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator8.stack;
        fileEntryIterator5.stack = fileItorQueue33;
        fileEntryIterator0.stack = fileItorQueue33;
        java.io.File file36 = fileEntryIterator0.poll();
        java.io.File file37 = fileEntryIterator0.current;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator0.stack;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(fileItorQueue38);
    }

    @Test
    public void test4088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4088");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.name;
        java.io.File file3 = fileEntry0.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        boolean boolean6 = fileEntryIterator4.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.manifestFile;
        java.io.File file9 = explodedArchive7.manifestFile;
        java.io.File file10 = null;
        java.io.File file11 = explodedArchive7.getManifestFile(file10);
        boolean boolean12 = explodedArchive7.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        fileEntryIterator13.recursive = true;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator23.thenComparing(fileComparator26);
        fileEntryIterator18.entryComparator = fileComparator23;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator23.thenComparing(fileComparator31);
        fileEntryIterator13.entryComparator = fileComparator32;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file35 = explodedArchive34.manifestFile;
        java.io.File file36 = explodedArchive34.manifestFile;
        java.io.File file37 = null;
        java.io.File file38 = explodedArchive34.getManifestFile(file37);
        fileEntryIterator13.root = file38;
        explodedArchive7.root = file38;
        java.util.Iterator<java.io.File> fileItor41 = fileEntryIterator4.listFiles(file38);
        fileEntry0.file = file38;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.io.File file45 = fileEntryIterator43.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        fileEntryIterator43.root = file49;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.manifestFile;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.io.File file55 = null;
        java.io.File file56 = explodedArchive52.getManifestFile(file55);
        java.util.Iterator<java.io.File> fileItor57 = fileEntryIterator43.listFiles(file56);
        fileEntry0.file = file56;
        java.io.File file59 = fileEntry0.getFile();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive(file59, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor41);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor57);
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test4089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4089");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getUserInfo();
        java.lang.String str14 = uRL11.getProtocol();
        java.net.URLConnection uRLConnection15 = uRL11.openConnection();
        java.net.URL uRL17 = new java.net.URL(uRL11, "file://exploded archive");
        java.lang.String str18 = uRL11.getRef();
        java.net.URL uRL20 = new java.net.URL(uRL11, "exploded archive");
        java.lang.String str21 = uRL11.getRef();
        java.net.URI uRI22 = uRL11.toURI();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.manifestFile;
        java.io.File file25 = explodedArchive23.manifestFile;
        java.io.File file26 = null;
        java.io.File file27 = explodedArchive23.getManifestFile(file26);
        boolean boolean28 = explodedArchive23.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        fileEntryIterator29.recursive = true;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator40.stack;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator40.entryComparator;
        java.util.Comparator<java.io.File> fileComparator43 = fileComparator39.thenComparing(fileComparator42);
        fileEntryIterator34.entryComparator = fileComparator39;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator45.entryComparator;
        java.util.Comparator<java.io.File> fileComparator48 = fileComparator39.thenComparing(fileComparator47);
        fileEntryIterator29.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file51 = explodedArchive50.manifestFile;
        java.io.File file52 = explodedArchive50.manifestFile;
        java.io.File file53 = null;
        java.io.File file54 = explodedArchive50.getManifestFile(file53);
        fileEntryIterator29.root = file54;
        explodedArchive23.root = file54;
        explodedArchive23.recursive = false;
        java.util.jar.Manifest manifest59 = explodedArchive23.manifest;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator60 = explodedArchive23.spliterator();
        java.net.URL uRL61 = explodedArchive23.getUrl();
        int int62 = uRL61.getDefaultPort();
        java.net.URLConnection uRLConnection63 = uRL61.openConnection();
        java.lang.String str64 = uRL61.getHost();
        java.net.URL uRL65 = null;
        java.net.URLStreamHandler uRLStreamHandler67 = null;
        java.net.URL uRL68 = new java.net.URL(uRL65, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler67);
        java.lang.String str69 = uRL68.getHost();
        java.lang.String str70 = uRL68.getAuthority();
        java.lang.String str71 = uRL68.getQuery();
        int int72 = uRL68.getDefaultPort();
        java.lang.String str73 = uRL68.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler75 = null;
        java.net.URL uRL76 = new java.net.URL(uRL68, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler75);
        java.lang.String str77 = uRL76.toExternalForm();
        java.lang.String str78 = uRL76.getUserInfo();
        java.lang.String str79 = uRL76.getProtocol();
        int int80 = uRL76.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler85 = null;
        java.net.URL uRL86 = new java.net.URL("file", "exploded archive", 0, "", uRLStreamHandler85);
        boolean boolean87 = uRL76.sameFile(uRL86);
        java.lang.String str88 = uRL76.getProtocol();
        java.lang.String str89 = uRL76.getRef();
        boolean boolean90 = uRL61.sameFile(uRL76);
        boolean boolean91 = uRL11.sameFile(uRL61);
        java.lang.String str92 = uRL11.getQuery();
        int int93 = uRL11.getPort();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertNotNull(uRLConnection15);
        org.junit.Assert.assertEquals(uRL17.toString(), "file://exploded archive");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals(uRL20.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(uRI22);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file27.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileItorQueue41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest59);
        org.junit.Assert.assertNotNull(entrySpliterator60);
        org.junit.Assert.assertNotNull(uRL61);
// flaky:         org.junit.Assert.assertEquals(uRL61.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(uRLConnection63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertEquals(uRL68.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertEquals(uRL76.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str77, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "file" + "'", str79, "file");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertEquals(uRL86.toString(), "file://exploded archive:0");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "file" + "'", str88, "file");
        org.junit.Assert.assertNull(str89);
// flaky:         org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
    }

    @Test
    public void test4090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4090");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        boolean boolean14 = uRL3.sameFile(uRL9);
        java.lang.String str15 = uRL9.getFile();
        java.lang.String str16 = uRL9.getHost();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = uRL9.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str15, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test4091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4091");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator2.stack;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator2.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        java.util.Comparator<java.io.File> fileComparator11 = fileComparator7.thenComparing(fileComparator10);
        fileEntryIterator2.entryComparator = fileComparator7;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator7.thenComparing(fileComparator15);
        fileEntryIterator0.entryComparator = fileComparator16;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator0.stack;
        boolean boolean19 = fileEntryIterator0.recursive;
        java.io.File file20 = fileEntryIterator0.current;
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.manifestFile;
        java.io.File file27 = explodedArchive25.manifestFile;
        java.io.File file28 = null;
        java.io.File file29 = explodedArchive25.getManifestFile(file28);
        fileEntryIterator23.current = file28;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator31.entryComparator;
        fileEntryIterator23.entryComparator = fileComparator33;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator35.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        java.util.Comparator<java.io.File> fileComparator43 = fileEntryIterator41.entryComparator;
        java.util.Comparator<java.io.File> fileComparator44 = fileComparator40.thenComparing(fileComparator43);
        fileEntryIterator35.entryComparator = fileComparator40;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator47 = fileComparator40.thenComparing((java.util.Comparator<java.io.File>) entryComparator46);
        java.util.Comparator<java.io.File> fileComparator48 = fileComparator33.thenComparing(fileComparator40);
        java.util.Comparator<java.io.File> fileComparator49 = fileComparator33.reversed();
        fileEntryIterator0.entryComparator = fileComparator49;
        java.util.Comparator<java.io.File> fileComparator51 = fileComparator49.reversed();
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator49.reversed();
        java.util.Comparator<java.io.File> fileComparator53 = fileComparator49.reversed();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileComparator53);
    }

    @Test
    public void test4092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4092");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL71 = null;
        java.net.URLStreamHandler uRLStreamHandler73 = null;
        java.net.URL uRL74 = new java.net.URL(uRL71, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler73);
        java.lang.String str75 = uRL74.getHost();
        java.lang.String str76 = uRL74.getAuthority();
        java.lang.String str77 = uRL74.getAuthority();
        java.lang.String str78 = uRL74.getFile();
        int int79 = uRL74.getPort();
        java.lang.String str80 = uRL74.getRef();
        java.net.URL uRL82 = new java.net.URL(uRL74, "hi!");
        boolean boolean83 = uRL69.sameFile(uRL82);
        java.net.URL uRL84 = null;
        java.net.URLStreamHandler uRLStreamHandler86 = null;
        java.net.URL uRL87 = new java.net.URL(uRL84, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler86);
        java.lang.String str88 = uRL87.getHost();
        java.lang.String str89 = uRL87.getAuthority();
        java.lang.String str90 = uRL87.getQuery();
        int int91 = uRL87.getDefaultPort();
        int int92 = uRL87.getPort();
        boolean boolean93 = uRL82.sameFile(uRL87);
        java.net.URLStreamHandler uRLStreamHandler95 = null;
        java.net.URL uRL96 = new java.net.URL(uRL87, "file", uRLStreamHandler95);
        java.lang.String str97 = uRL96.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str78, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertEquals(uRL82.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals(uRL87.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertEquals(uRL96.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file" + "'", str97, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
    }

    @Test
    public void test4093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4093");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.net.URLStreamHandler uRLStreamHandler7 = null;
        java.net.URL uRL8 = new java.net.URL(uRL3, "hi!", uRLStreamHandler7);
        int int9 = uRL3.getPort();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals(uRL8.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test4094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4094");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        explodedArchive0.recursive = false;
        explodedArchive0.recursive = true;
        java.io.File file45 = explodedArchive0.root;
        java.io.File file46 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue48 = fileEntryIterator47.stack;
        fileEntryIterator47.recursive = true;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator47.entryComparator;
        fileEntryIterator47.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.io.File file56 = fileEntryIterator54.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        fileEntryIterator54.entryComparator = fileComparator59;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file62 = explodedArchive61.manifestFile;
        java.io.File file63 = explodedArchive61.manifestFile;
        java.io.File file64 = null;
        java.io.File file65 = explodedArchive61.getManifestFile(file64);
        fileEntryIterator54.root = file64;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file68 = fileEntryIterator67.current;
        java.io.File file69 = null;
        fileEntryIterator67.current = file69;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean72 = explodedArchive71.recursive;
        java.io.File file73 = explodedArchive71.manifestFile;
        java.util.jar.Manifest manifest74 = null;
        explodedArchive71.manifest = manifest74;
        java.io.File file76 = explodedArchive71.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator77 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue78 = fileEntryIterator77.stack;
        java.util.Comparator<java.io.File> fileComparator79 = fileEntryIterator77.entryComparator;
        java.io.File file80 = fileEntryIterator77.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive81 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file82 = explodedArchive81.manifestFile;
        java.io.File file83 = explodedArchive81.manifestFile;
        java.io.File file84 = null;
        java.io.File file85 = explodedArchive81.getManifestFile(file84);
        fileEntryIterator77.current = file85;
        explodedArchive71.root = file85;
        fileEntryIterator67.root = file85;
        fileEntryIterator54.current = file85;
        java.util.Iterator<java.io.File> fileItor90 = fileEntryIterator47.listFiles(file85);
        explodedArchive0.root = file85;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue48);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file65.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNotNull(fileItorQueue78);
        org.junit.Assert.assertNotNull(fileComparator79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertNotNull(file85);
        org.junit.Assert.assertEquals(file85.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file85.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor90);
    }

    @Test
    public void test4095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4095");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.hasNext();
        java.io.File file2 = fileEntryIterator0.root;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file5 = fileEntryIterator4.current;
        java.io.File file6 = fileEntryIterator4.poll();
        java.io.File file7 = fileEntryIterator4.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator13.thenComparing((java.util.Comparator<java.io.File>) entryComparator19);
        fileEntryIterator4.entryComparator = entryComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        fileEntryIterator22.recursive = true;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator22.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        java.util.Comparator<java.io.File> fileComparator36 = fileComparator32.thenComparing(fileComparator35);
        fileEntryIterator27.entryComparator = fileComparator32;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        java.util.Comparator<java.io.File> fileComparator41 = fileComparator32.thenComparing(fileComparator40);
        fileEntryIterator22.entryComparator = fileComparator41;
        java.util.Comparator<java.io.File> fileComparator43 = entryComparator19.thenComparing(fileComparator41);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.manifestFile;
        java.io.File file46 = explodedArchive44.manifestFile;
        java.io.File file47 = null;
        java.io.File file48 = explodedArchive44.getManifestFile(file47);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean50 = fileEntryIterator49.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean52 = explodedArchive51.recursive;
        java.io.File file53 = explodedArchive51.manifestFile;
        java.util.jar.Manifest manifest54 = null;
        explodedArchive51.manifest = manifest54;
        java.io.File file56 = explodedArchive51.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        java.io.File file60 = fileEntryIterator57.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file62 = explodedArchive61.manifestFile;
        java.io.File file63 = explodedArchive61.manifestFile;
        java.io.File file64 = null;
        java.io.File file65 = explodedArchive61.getManifestFile(file64);
        fileEntryIterator57.current = file65;
        explodedArchive51.root = file65;
        fileEntryIterator49.root = file65;
        int int69 = entryComparator19.compare(file48, file65);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator70 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file71 = fileEntryIterator70.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator72 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue73 = fileEntryIterator72.stack;
        java.util.Comparator<java.io.File> fileComparator74 = fileEntryIterator72.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator75 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue76 = fileEntryIterator75.stack;
        java.util.Comparator<java.io.File> fileComparator77 = fileEntryIterator75.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator78 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue79 = fileEntryIterator78.stack;
        java.util.Comparator<java.io.File> fileComparator80 = fileEntryIterator78.entryComparator;
        java.util.Comparator<java.io.File> fileComparator81 = fileComparator77.thenComparing(fileComparator80);
        fileEntryIterator72.entryComparator = fileComparator77;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator83 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue84 = fileEntryIterator83.stack;
        java.util.Comparator<java.io.File> fileComparator85 = fileEntryIterator83.entryComparator;
        java.util.Comparator<java.io.File> fileComparator86 = fileComparator77.thenComparing(fileComparator85);
        fileEntryIterator70.entryComparator = fileComparator86;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue88 = fileEntryIterator70.stack;
        java.io.File file89 = fileEntryIterator70.current;
        java.util.Comparator<java.io.File> fileComparator90 = fileEntryIterator70.entryComparator;
        java.util.Comparator<java.io.File> fileComparator91 = entryComparator19.thenComparing(fileComparator90);
        java.util.Comparator<java.io.File> fileComparator92 = fileComparator90.reversed();
        java.util.Comparator<java.io.File> fileComparator93 = fileComparator90.reversed();
        java.util.Comparator<java.io.File> fileComparator94 = fileComparator90.reversed();
        fileEntryIterator0.entryComparator = fileComparator90;
        fileEntryIterator0.recursive = false;
        fileEntryIterator0.recursive = false;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file65.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNotNull(fileItorQueue73);
        org.junit.Assert.assertNotNull(fileComparator74);
        org.junit.Assert.assertNotNull(fileItorQueue76);
        org.junit.Assert.assertNotNull(fileComparator77);
        org.junit.Assert.assertNotNull(fileItorQueue79);
        org.junit.Assert.assertNotNull(fileComparator80);
        org.junit.Assert.assertNotNull(fileComparator81);
        org.junit.Assert.assertNotNull(fileItorQueue84);
        org.junit.Assert.assertNotNull(fileComparator85);
        org.junit.Assert.assertNotNull(fileComparator86);
        org.junit.Assert.assertNotNull(fileItorQueue88);
        org.junit.Assert.assertNull(file89);
        org.junit.Assert.assertNotNull(fileComparator90);
        org.junit.Assert.assertNotNull(fileComparator91);
        org.junit.Assert.assertNotNull(fileComparator92);
        org.junit.Assert.assertNotNull(fileComparator93);
        org.junit.Assert.assertNotNull(fileComparator94);
    }

    @Test
    public void test4096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4096");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getProtocol();
        java.lang.String str5 = uRL3.getUserInfo();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler16);
        boolean boolean18 = uRL3.sameFile(uRL17);
        java.lang.String str19 = uRL3.getProtocol();
        java.net.URLStreamHandler uRLStreamHandler21 = null;
        java.net.URL uRL22 = new java.net.URL(uRL3, "hi!", uRLStreamHandler21);
        java.lang.String str23 = uRL3.getUserInfo();
        int int24 = uRL3.getPort();
        int int25 = uRL3.getPort();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "file" + "'", str4, "file");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "file" + "'", str19, "file");
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    }

    @Test
    public void test4097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4097");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getProtocol();
        java.lang.String str5 = uRL3.getUserInfo();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler16);
        boolean boolean18 = uRL3.sameFile(uRL17);
        java.lang.String str19 = uRL3.getProtocol();
        java.net.URI uRI20 = uRL3.toURI();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream21 = uRL3.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "file" + "'", str4, "file");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "file" + "'", str19, "file");
        org.junit.Assert.assertNotNull(uRI20);
    }

    @Test
    public void test4098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4098");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        boolean boolean41 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest42 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file44 = explodedArchive43.manifestFile;
        java.io.File file45 = explodedArchive43.manifestFile;
        java.io.File file46 = null;
        java.io.File file47 = explodedArchive43.getManifestFile(file46);
        boolean boolean48 = explodedArchive43.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        fileEntryIterator49.recursive = true;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator49.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        java.util.Comparator<java.io.File> fileComparator63 = fileComparator59.thenComparing(fileComparator62);
        fileEntryIterator54.entryComparator = fileComparator59;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator65.stack;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator65.entryComparator;
        java.util.Comparator<java.io.File> fileComparator68 = fileComparator59.thenComparing(fileComparator67);
        fileEntryIterator49.entryComparator = fileComparator68;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file71 = explodedArchive70.manifestFile;
        java.io.File file72 = explodedArchive70.manifestFile;
        java.io.File file73 = null;
        java.io.File file74 = explodedArchive70.getManifestFile(file73);
        fileEntryIterator49.root = file74;
        explodedArchive43.root = file74;
        explodedArchive43.recursive = false;
        java.util.jar.Manifest manifest79 = null;
        explodedArchive43.manifest = manifest79;
        java.lang.String str81 = explodedArchive43.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter82 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList83 = explodedArchive43.getNestedArchives(entryFilter82);
        java.io.File file84 = explodedArchive43.root;
        explodedArchive43.recursive = true;
        java.lang.String str87 = explodedArchive43.toString();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator88 = explodedArchive43.spliterator();
        java.lang.String str89 = explodedArchive43.toString();
        java.io.File file90 = explodedArchive43.root;
        explodedArchive0.root = file90;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(manifest42);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file74.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str81 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str81, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList83);
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file84.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str87 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str87, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator88);
// flaky:         org.junit.Assert.assertEquals("'" + str89 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str89, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file90);
        org.junit.Assert.assertEquals(file90.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file90.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test4099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4099");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        boolean boolean14 = uRL3.sameFile(uRL9);
        java.lang.String str15 = uRL3.getQuery();
        java.net.URLStreamHandler uRLStreamHandler17 = null;
        java.net.URL uRL18 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler17);
        java.net.URL uRL20 = new java.net.URL(uRL3, "hi!");
        java.lang.String str21 = uRL3.getPath();
        java.net.URL uRL23 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals(uRL18.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL20.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str21, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL23.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4100");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        fileEntryIterator0.stack = fileItorQueue8;
        java.io.File file10 = fileEntryIterator0.poll();
        boolean boolean11 = fileEntryIterator0.recursive;
        java.io.File file12 = fileEntryIterator0.poll();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test4101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4101");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        explodedArchive0.recursive = false;
        explodedArchive0.recursive = true;
        java.net.URL uRL45 = explodedArchive0.getUrl();
        java.io.File file46 = explodedArchive0.manifestFile;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(uRL45);
// flaky:         org.junit.Assert.assertEquals(uRL45.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file46);
    }

    @Test
    public void test4102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4102");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        fileEntryIterator0.recursive = true;
        fileEntryIterator0.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean27 = explodedArchive26.recursive;
        boolean boolean28 = explodedArchive26.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file30 = explodedArchive29.manifestFile;
        java.io.File file31 = explodedArchive29.manifestFile;
        java.io.File file32 = null;
        java.io.File file33 = explodedArchive29.getManifestFile(file32);
        explodedArchive26.root = file33;
        fileEntryIterator0.root = file33;
        boolean boolean36 = fileEntryIterator0.recursive;
        java.io.File file37 = fileEntryIterator0.current;
        boolean boolean38 = fileEntryIterator0.hasNext();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test4103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4103");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        java.io.File file3 = fileEntry0.file;
        java.lang.String str4 = fileEntry0.getName();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test4104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4104");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        int int11 = uRL9.getPort();
        java.net.URL uRL12 = null;
        java.net.URLStreamHandler uRLStreamHandler14 = null;
        java.net.URL uRL15 = new java.net.URL(uRL12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler14);
        java.lang.String str16 = uRL15.getHost();
        java.lang.String str17 = uRL15.getAuthority();
        java.lang.String str18 = uRL15.getQuery();
        int int19 = uRL15.getDefaultPort();
        boolean boolean20 = uRL9.sameFile(uRL15);
        boolean boolean21 = uRL3.sameFile(uRL9);
        int int22 = uRL3.getPort();
        java.net.URI uRI23 = uRL3.toURI();
        java.lang.String str24 = uRL3.getPath();
        java.lang.String str25 = uRL3.getFile();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(uRI23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str24, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str25, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4105");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.io.File file22 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.io.File file25 = fileEntryIterator23.current;
        boolean boolean26 = fileEntryIterator23.hasNext();
        fileEntryIterator23.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        fileEntryIterator29.recursive = true;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator29.entryComparator;
        fileEntryIterator29.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.io.File file38 = fileEntryIterator36.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator39.entryComparator;
        fileEntryIterator36.entryComparator = fileComparator41;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file44 = explodedArchive43.manifestFile;
        java.io.File file45 = explodedArchive43.manifestFile;
        java.io.File file46 = null;
        java.io.File file47 = explodedArchive43.getManifestFile(file46);
        fileEntryIterator36.root = file46;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file50 = fileEntryIterator49.current;
        java.io.File file51 = null;
        fileEntryIterator49.current = file51;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean54 = explodedArchive53.recursive;
        java.io.File file55 = explodedArchive53.manifestFile;
        java.util.jar.Manifest manifest56 = null;
        explodedArchive53.manifest = manifest56;
        java.io.File file58 = explodedArchive53.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        java.io.File file62 = fileEntryIterator59.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file64 = explodedArchive63.manifestFile;
        java.io.File file65 = explodedArchive63.manifestFile;
        java.io.File file66 = null;
        java.io.File file67 = explodedArchive63.getManifestFile(file66);
        fileEntryIterator59.current = file67;
        explodedArchive53.root = file67;
        fileEntryIterator49.root = file67;
        fileEntryIterator36.current = file67;
        java.util.Iterator<java.io.File> fileItor72 = fileEntryIterator29.listFiles(file67);
        fileEntryIterator23.root = file67;
        java.io.File file74 = explodedArchive0.getManifestFile(file67);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive(file74);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file67.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor72);
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file74.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4106");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file://hi!:100hi!", "hi!", (int) (byte) 0, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file://hi!:100hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4107");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.lang.String str71 = uRL69.getHost();
        java.net.URI uRI72 = uRL69.toURI();
        java.lang.String str73 = uRL69.getQuery();
        java.lang.String str74 = uRL69.getPath();
        java.net.URL uRL75 = null;
        java.net.URLStreamHandler uRLStreamHandler77 = null;
        java.net.URL uRL78 = new java.net.URL(uRL75, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler77);
        java.lang.String str79 = uRL78.getProtocol();
        java.net.URL uRL81 = new java.net.URL(uRL78, "file");
        java.lang.String str82 = uRL78.getFile();
        java.net.URL uRL84 = new java.net.URL(uRL78, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        boolean boolean85 = uRL69.sameFile(uRL78);
        java.net.URI uRI86 = uRL69.toURI();
        int int87 = uRL69.getDefaultPort();
        java.lang.String str88 = uRL69.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(uRI72);
        org.junit.Assert.assertNull(str73);
// flaky:         org.junit.Assert.assertEquals("'" + str74 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str74, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL78.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "file" + "'", str79, "file");
        org.junit.Assert.assertEquals(uRL81.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str82, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL84.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
// flaky:         org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(uRI86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
// flaky:         org.junit.Assert.assertEquals("'" + str88 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str88, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4108");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.lang.String str23 = explodedArchive0.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str23, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4109");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        int int7 = uRL3.getPort();
        java.lang.String str8 = uRL3.getPath();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "file://exploded archive:0", uRLStreamHandler10);
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", uRLStreamHandler13);
        java.net.Proxy proxy15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection16 = uRL14.openConnection(proxy15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL11.toString(), "file://exploded archive:0");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
    }

    @Test
    public void test4110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4110");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        java.net.URL uRL5 = new java.net.URL("file", "exploded archive", (int) (byte) -1, "", uRLStreamHandler4);
        java.net.URLStreamHandler uRLStreamHandler7 = null;
        java.net.URL uRL8 = new java.net.URL(uRL5, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", uRLStreamHandler7);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI9 = uRL5.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in authority at index 7: file://exploded archive");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL5.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals(uRL8.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
    }

    @Test
    public void test4111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4111");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file39 = fileEntryIterator38.current;
        java.io.File file40 = fileEntryIterator38.poll();
        java.io.File file41 = fileEntryIterator38.poll();
        java.io.File file42 = fileEntryIterator38.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.io.File file45 = fileEntryIterator43.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        fileEntryIterator43.root = file49;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.manifestFile;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.io.File file55 = null;
        java.io.File file56 = explodedArchive52.getManifestFile(file55);
        java.util.Iterator<java.io.File> fileItor57 = fileEntryIterator43.listFiles(file56);
        fileEntryIterator38.root = file56;
        explodedArchive0.root = file56;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter60 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList61 = explodedArchive0.getNestedArchives(entryFilter60);
        java.net.URL uRL62 = explodedArchive0.getUrl();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file64 = explodedArchive63.manifestFile;
        java.io.File file65 = explodedArchive63.manifestFile;
        java.io.File file66 = null;
        java.io.File file67 = explodedArchive63.getManifestFile(file66);
        explodedArchive0.manifestFile = file67;
        java.io.File file69 = explodedArchive0.root;
        java.net.URL uRL70 = explodedArchive0.getUrl();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor57);
        org.junit.Assert.assertNotNull(archiveList61);
        org.junit.Assert.assertNotNull(uRL62);
// flaky:         org.junit.Assert.assertEquals(uRL62.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file67.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRL70);
// flaky:         org.junit.Assert.assertEquals(uRL70.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4112");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean39 = fileEntryIterator38.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.manifestFile;
        java.io.File file42 = explodedArchive40.manifestFile;
        java.lang.String str43 = explodedArchive40.toString();
        java.lang.String str44 = explodedArchive40.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean46 = fileEntryIterator45.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean48 = explodedArchive47.recursive;
        java.io.File file49 = explodedArchive47.manifestFile;
        java.util.jar.Manifest manifest50 = null;
        explodedArchive47.manifest = manifest50;
        java.io.File file52 = explodedArchive47.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        java.io.File file56 = fileEntryIterator53.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.manifestFile;
        java.io.File file59 = explodedArchive57.manifestFile;
        java.io.File file60 = null;
        java.io.File file61 = explodedArchive57.getManifestFile(file60);
        fileEntryIterator53.current = file61;
        explodedArchive47.root = file61;
        fileEntryIterator45.root = file61;
        java.io.File file65 = explodedArchive40.getManifestFile(file61);
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator38.listFiles(file65);
        java.io.File file67 = explodedArchive0.getManifestFile(file65);
        boolean boolean68 = explodedArchive0.recursive;
        boolean boolean69 = explodedArchive0.recursive;
        java.io.File file70 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry71 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file72 = fileEntry71.getFile();
        java.lang.String str73 = fileEntry71.name;
        java.io.File file74 = null;
        fileEntry71.file = file74;
        java.io.File file76 = fileEntry71.file;
        java.lang.String str77 = fileEntry71.name;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator78 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue79 = fileEntryIterator78.stack;
        java.io.File file80 = fileEntryIterator78.current;
        java.io.File file81 = fileEntryIterator78.current;
        fileEntryIterator78.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive84 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file85 = explodedArchive84.manifestFile;
        java.io.File file86 = explodedArchive84.manifestFile;
        java.io.File file87 = null;
        java.io.File file88 = explodedArchive84.getManifestFile(file87);
        fileEntryIterator78.root = file88;
        fileEntry71.file = file88;
        boolean boolean91 = fileEntry71.isDirectory();
        java.io.File file92 = fileEntry71.getFile();
        java.io.File file93 = fileEntry71.file;
        java.io.File file94 = fileEntry71.file;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive95 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: File must exist");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "exploded archive" + "'", str43, "exploded archive");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "exploded archive" + "'", str44, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file65.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file67.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file70.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(fileItorQueue79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertNull(file85);
        org.junit.Assert.assertNull(file86);
        org.junit.Assert.assertNotNull(file88);
        org.junit.Assert.assertEquals(file88.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file88.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(file92);
        org.junit.Assert.assertEquals(file92.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file92.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file93);
        org.junit.Assert.assertEquals(file93.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file93.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file94);
        org.junit.Assert.assertEquals(file94.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file94.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test4113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4113");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean39 = fileEntryIterator38.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.manifestFile;
        java.io.File file42 = explodedArchive40.manifestFile;
        java.lang.String str43 = explodedArchive40.toString();
        java.lang.String str44 = explodedArchive40.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean46 = fileEntryIterator45.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean48 = explodedArchive47.recursive;
        java.io.File file49 = explodedArchive47.manifestFile;
        java.util.jar.Manifest manifest50 = null;
        explodedArchive47.manifest = manifest50;
        java.io.File file52 = explodedArchive47.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        java.io.File file56 = fileEntryIterator53.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.manifestFile;
        java.io.File file59 = explodedArchive57.manifestFile;
        java.io.File file60 = null;
        java.io.File file61 = explodedArchive57.getManifestFile(file60);
        fileEntryIterator53.current = file61;
        explodedArchive47.root = file61;
        fileEntryIterator45.root = file61;
        java.io.File file65 = explodedArchive40.getManifestFile(file61);
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator38.listFiles(file65);
        java.io.File file67 = explodedArchive0.getManifestFile(file65);
        boolean boolean68 = explodedArchive0.recursive;
        boolean boolean69 = explodedArchive0.recursive;
        java.io.File file70 = explodedArchive0.root;
        java.lang.String str71 = explodedArchive0.toString();
        java.lang.String str72 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter73 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList74 = explodedArchive0.getNestedArchives(entryFilter73);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "exploded archive" + "'", str43, "exploded archive");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "exploded archive" + "'", str44, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file65.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file67.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file70.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str71 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str71, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str72 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str72, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList74);
    }

    @Test
    public void test4114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4114");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        boolean boolean2 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.lang.String str5 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.manifestFile;
        java.io.File file8 = explodedArchive6.manifestFile;
        java.io.File file9 = null;
        java.io.File file10 = explodedArchive6.getManifestFile(file9);
        boolean boolean11 = explodedArchive6.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        fileEntryIterator12.recursive = true;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        java.util.Comparator<java.io.File> fileComparator26 = fileComparator22.thenComparing(fileComparator25);
        fileEntryIterator17.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        java.util.Comparator<java.io.File> fileComparator31 = fileComparator22.thenComparing(fileComparator30);
        fileEntryIterator12.entryComparator = fileComparator31;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file34 = explodedArchive33.manifestFile;
        java.io.File file35 = explodedArchive33.manifestFile;
        java.io.File file36 = null;
        java.io.File file37 = explodedArchive33.getManifestFile(file36);
        fileEntryIterator12.root = file37;
        explodedArchive6.root = file37;
        explodedArchive6.recursive = false;
        java.util.jar.Manifest manifest42 = null;
        explodedArchive6.manifest = manifest42;
        java.lang.String str44 = explodedArchive6.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter45 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList46 = explodedArchive6.getNestedArchives(entryFilter45);
        java.io.File file47 = explodedArchive6.root;
        explodedArchive6.recursive = true;
        java.lang.String str50 = explodedArchive6.toString();
        java.util.jar.Manifest manifest51 = null;
        explodedArchive6.manifest = manifest51;
        java.io.File file53 = explodedArchive6.root;
        explodedArchive0.root = file53;
        java.util.jar.Manifest manifest55 = null;
        explodedArchive0.manifest = manifest55;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "exploded archive" + "'", str1, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "exploded archive" + "'", str5, "exploded archive");
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str44, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList46);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str50 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str50, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test4115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4115");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        boolean boolean4 = fileEntryIterator0.recursive;
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file8 = fileEntry7.getFile();
        java.io.File file9 = fileEntry7.file;
        fileEntry7.name = "";
        java.io.File file12 = fileEntry7.file;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean14 = explodedArchive13.recursive;
        boolean boolean15 = explodedArchive13.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.manifestFile;
        java.io.File file18 = explodedArchive16.manifestFile;
        java.io.File file19 = null;
        java.io.File file20 = explodedArchive16.getManifestFile(file19);
        explodedArchive13.root = file20;
        explodedArchive13.recursive = false;
        java.io.File file24 = explodedArchive13.root;
        fileEntry7.file = file24;
        java.io.File file26 = fileEntry7.getFile();
        java.util.Iterator<java.io.File> fileItor27 = fileEntryIterator0.listFiles(file26);
        boolean boolean28 = fileEntryIterator0.hasNext();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file20.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test4116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4116");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        fileEntry0.name = "";
        java.lang.String str5 = fileEntry0.name;
        fileEntry0.name = "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!";
        java.io.File file8 = fileEntry0.file;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(file8);
    }

    @Test
    public void test4117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4117");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "file:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4118");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        fileEntry0.name = "";
        java.lang.String str5 = fileEntry0.name;
        java.io.File file6 = fileEntry0.file;
        java.io.File file7 = fileEntry0.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive8.getManifestFile(file11);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file14 = fileEntry13.getFile();
        java.lang.String str15 = fileEntry13.name;
        java.io.File file16 = fileEntry13.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        boolean boolean19 = fileEntryIterator17.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.manifestFile;
        java.io.File file22 = explodedArchive20.manifestFile;
        java.io.File file23 = null;
        java.io.File file24 = explodedArchive20.getManifestFile(file23);
        boolean boolean25 = explodedArchive20.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        fileEntryIterator26.recursive = true;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator31.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator36.thenComparing(fileComparator39);
        fileEntryIterator31.entryComparator = fileComparator36;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator42.entryComparator;
        java.util.Comparator<java.io.File> fileComparator45 = fileComparator36.thenComparing(fileComparator44);
        fileEntryIterator26.entryComparator = fileComparator45;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file48 = explodedArchive47.manifestFile;
        java.io.File file49 = explodedArchive47.manifestFile;
        java.io.File file50 = null;
        java.io.File file51 = explodedArchive47.getManifestFile(file50);
        fileEntryIterator26.root = file51;
        explodedArchive20.root = file51;
        java.util.Iterator<java.io.File> fileItor54 = fileEntryIterator17.listFiles(file51);
        fileEntry13.file = file51;
        explodedArchive8.manifestFile = file51;
        fileEntry0.file = file51;
        java.io.File file58 = fileEntry0.getFile();
        boolean boolean59 = fileEntry0.isDirectory();
        java.lang.String str60 = fileEntry0.name;
        fileEntry0.name = "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file";
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file51.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor54);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file58.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
    }

    @Test
    public void test4119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4119");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", "hi!:10", (int) '#', "exploded archive", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4120");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL71 = null;
        java.net.URLStreamHandler uRLStreamHandler73 = null;
        java.net.URL uRL74 = new java.net.URL(uRL71, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler73);
        java.lang.String str75 = uRL74.getHost();
        java.lang.String str76 = uRL74.getAuthority();
        java.lang.String str77 = uRL74.getAuthority();
        java.lang.String str78 = uRL74.getFile();
        int int79 = uRL74.getPort();
        java.lang.String str80 = uRL74.getRef();
        java.net.URL uRL82 = new java.net.URL(uRL74, "hi!");
        boolean boolean83 = uRL69.sameFile(uRL82);
        java.lang.String str84 = uRL69.getProtocol();
        java.lang.String str85 = uRL69.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str78, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertEquals(uRL82.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "file" + "'", str84, "file");
// flaky:         org.junit.Assert.assertEquals("'" + str85 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str85, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4121");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.lang.String str73 = uRL69.getUserInfo();
        java.net.URLConnection uRLConnection74 = uRL69.openConnection();
        int int75 = uRL69.getDefaultPort();
        java.lang.String str76 = uRL69.getUserInfo();
        java.net.URL uRL77 = null;
        java.net.URLStreamHandler uRLStreamHandler79 = null;
        java.net.URL uRL80 = new java.net.URL(uRL77, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler79);
        java.lang.String str81 = uRL80.getHost();
        java.lang.String str82 = uRL80.getAuthority();
        java.lang.String str83 = uRL80.getAuthority();
        java.lang.String str84 = uRL80.getFile();
        int int85 = uRL80.getPort();
        java.lang.String str86 = uRL80.getRef();
        java.net.URL uRL88 = new java.net.URL(uRL80, "hi!");
        int int89 = uRL80.getPort();
        java.lang.String str90 = uRL80.getFile();
        java.net.URI uRI91 = uRL80.toURI();
        boolean boolean92 = uRL69.sameFile(uRL80);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream93 = uRL69.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(uRLConnection74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertEquals(uRL80.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str84, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertEquals(uRL88.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str90, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI91);
// flaky:         org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test4122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4122");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        java.io.File file3 = fileEntryIterator0.current;
        java.io.File file4 = fileEntryIterator0.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.manifestFile;
        java.io.File file8 = explodedArchive6.manifestFile;
        java.lang.String str9 = explodedArchive6.toString();
        java.util.jar.Manifest manifest10 = null;
        explodedArchive6.manifest = manifest10;
        java.lang.String str12 = explodedArchive6.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        boolean boolean15 = fileEntryIterator13.hasNext();
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        java.util.Comparator<java.io.File> fileComparator26 = fileComparator22.thenComparing(fileComparator25);
        fileEntryIterator17.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator29 = fileComparator22.thenComparing((java.util.Comparator<java.io.File>) entryComparator28);
        java.util.Comparator<java.io.File> fileComparator30 = fileComparator16.thenComparing((java.util.Comparator<java.io.File>) entryComparator28);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean32 = fileEntryIterator31.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean34 = explodedArchive33.recursive;
        java.io.File file35 = explodedArchive33.manifestFile;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive33.manifest = manifest36;
        java.io.File file38 = explodedArchive33.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator39.entryComparator;
        java.io.File file42 = fileEntryIterator39.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file44 = explodedArchive43.manifestFile;
        java.io.File file45 = explodedArchive43.manifestFile;
        java.io.File file46 = null;
        java.io.File file47 = explodedArchive43.getManifestFile(file46);
        fileEntryIterator39.current = file47;
        explodedArchive33.root = file47;
        fileEntryIterator31.root = file47;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file52 = explodedArchive51.manifestFile;
        java.io.File file53 = explodedArchive51.manifestFile;
        java.io.File file54 = null;
        java.io.File file55 = explodedArchive51.getManifestFile(file54);
        boolean boolean56 = explodedArchive51.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        fileEntryIterator57.recursive = true;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator62.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator65.stack;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator65.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        java.util.Comparator<java.io.File> fileComparator71 = fileComparator67.thenComparing(fileComparator70);
        fileEntryIterator62.entryComparator = fileComparator67;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator73 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue74 = fileEntryIterator73.stack;
        java.util.Comparator<java.io.File> fileComparator75 = fileEntryIterator73.entryComparator;
        java.util.Comparator<java.io.File> fileComparator76 = fileComparator67.thenComparing(fileComparator75);
        fileEntryIterator57.entryComparator = fileComparator76;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file79 = explodedArchive78.manifestFile;
        java.io.File file80 = explodedArchive78.manifestFile;
        java.io.File file81 = null;
        java.io.File file82 = explodedArchive78.getManifestFile(file81);
        fileEntryIterator57.root = file82;
        explodedArchive51.root = file82;
        int int85 = entryComparator28.compare(file47, file82);
        java.io.File file86 = explodedArchive6.getManifestFile(file47);
        explodedArchive5.manifestFile = file86;
        fileEntryIterator0.root = file86;
        java.io.File file89 = fileEntryIterator0.poll();
        boolean boolean90 = fileEntryIterator0.recursive;
        java.io.File file91 = fileEntryIterator0.poll();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "exploded archive" + "'", str9, "exploded archive");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "exploded archive" + "'", str12, "exploded archive");
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileItorQueue74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(file86);
        org.junit.Assert.assertEquals(file86.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file86.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNull(file91);
    }

    @Test
    public void test4123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4123");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        int int8 = uRL3.getPort();
        java.lang.String str9 = uRL3.getRef();
        java.net.URL uRL11 = new java.net.URL(uRL3, "hi!");
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getUserInfo();
        java.net.URL uRL16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = uRL14.sameFile(uRL16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test4124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4124");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        boolean boolean5 = fileEntryIterator0.recursive;
        fileEntryIterator0.recursive = true;
        boolean boolean8 = fileEntryIterator0.recursive;
        java.io.File file9 = fileEntryIterator0.current;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry10 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(file9);
    }

    @Test
    public void test4125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4125");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        fileEntryIterator3.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator3.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        fileEntryIterator3.root = file28;
        explodedArchive0.manifestFile = file28;
        java.util.jar.Manifest manifest31 = null;
        explodedArchive0.manifest = manifest31;
        boolean boolean33 = explodedArchive0.recursive;
        java.io.File file34 = explodedArchive0.root;
        java.lang.String str35 = explodedArchive0.toString();
        java.io.File file36 = explodedArchive0.manifestFile;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "exploded archive" + "'", str35, "exploded archive");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test4126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4126");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.lang.String str6 = uRL3.getProtocol();
        int int7 = uRL3.getPort();
        java.lang.String str8 = uRL3.toExternalForm();
        java.lang.String str9 = uRL3.getHost();
        java.lang.String str10 = uRL3.getAuthority();
        java.lang.String str11 = uRL3.getRef();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file" + "'", str6, "file");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test4127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4127");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        explodedArchive0.recursive = false;
        explodedArchive0.recursive = true;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor45 = explodedArchive0.iterator();
        java.io.File file46 = explodedArchive0.manifestFile;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(entryItor45);
        org.junit.Assert.assertNull(file46);
    }

    @Test
    public void test4128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4128");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.util.jar.Manifest manifest4 = explodedArchive0.manifest;
        java.io.File file5 = explodedArchive0.manifestFile;
        boolean boolean6 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file8 = fileEntry7.getFile();
        java.io.File file9 = fileEntry7.file;
        java.io.File file10 = null;
        fileEntry7.file = file10;
        java.lang.String str12 = fileEntry7.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file14 = fileEntryIterator13.current;
        java.io.File file15 = null;
        fileEntryIterator13.current = file15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean18 = explodedArchive17.recursive;
        java.io.File file19 = explodedArchive17.manifestFile;
        java.util.jar.Manifest manifest20 = null;
        explodedArchive17.manifest = manifest20;
        java.io.File file22 = explodedArchive17.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        java.io.File file26 = fileEntryIterator23.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator23.current = file31;
        explodedArchive17.root = file31;
        fileEntryIterator13.root = file31;
        fileEntry7.file = file31;
        java.io.File file36 = fileEntry7.getFile();
        java.io.File file37 = fileEntry7.file;
        explodedArchive0.manifestFile = file37;
        java.io.File file39 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList41 = explodedArchive0.getNestedArchives(entryFilter40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test4129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4129");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        boolean boolean2 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = true;
        boolean boolean5 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str7 = explodedArchive6.toString();
        boolean boolean8 = explodedArchive6.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file10 = fileEntryIterator9.current;
        java.io.File file11 = null;
        fileEntryIterator9.current = file11;
        java.io.File file13 = fileEntryIterator9.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file15 = fileEntry14.getFile();
        java.lang.String str16 = fileEntry14.name;
        java.io.File file17 = fileEntry14.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        boolean boolean20 = fileEntryIterator18.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file22 = explodedArchive21.manifestFile;
        java.io.File file23 = explodedArchive21.manifestFile;
        java.io.File file24 = null;
        java.io.File file25 = explodedArchive21.getManifestFile(file24);
        boolean boolean26 = explodedArchive21.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        fileEntryIterator27.recursive = true;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator27.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator35.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        java.util.Comparator<java.io.File> fileComparator41 = fileComparator37.thenComparing(fileComparator40);
        fileEntryIterator32.entryComparator = fileComparator37;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        java.util.Comparator<java.io.File> fileComparator46 = fileComparator37.thenComparing(fileComparator45);
        fileEntryIterator27.entryComparator = fileComparator46;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file49 = explodedArchive48.manifestFile;
        java.io.File file50 = explodedArchive48.manifestFile;
        java.io.File file51 = null;
        java.io.File file52 = explodedArchive48.getManifestFile(file51);
        fileEntryIterator27.root = file52;
        explodedArchive21.root = file52;
        java.util.Iterator<java.io.File> fileItor55 = fileEntryIterator18.listFiles(file52);
        fileEntry14.file = file52;
        fileEntryIterator9.current = file52;
        explodedArchive6.root = file52;
        java.util.Iterator<java.io.File> fileItor59 = fileEntryIterator0.listFiles(file52);
        boolean boolean60 = fileEntryIterator0.recursive;
        java.io.File file61 = fileEntryIterator0.current;
        fileEntryIterator0.recursive = false;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "exploded archive" + "'", str7, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file25.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor55);
        org.junit.Assert.assertNotNull(fileItor59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(file61);
    }

    @Test
    public void test4130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4130");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file3 = fileEntry2.getFile();
        java.io.File file4 = fileEntry2.file;
        java.io.File file5 = null;
        fileEntry2.file = file5;
        java.lang.String str7 = fileEntry2.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        boolean boolean10 = fileEntryIterator8.hasNext();
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        java.util.Comparator<java.io.File> fileComparator21 = fileComparator17.thenComparing(fileComparator20);
        fileEntryIterator12.entryComparator = fileComparator17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator17.thenComparing((java.util.Comparator<java.io.File>) entryComparator23);
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator11.thenComparing((java.util.Comparator<java.io.File>) entryComparator23);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean27 = fileEntryIterator26.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean29 = explodedArchive28.recursive;
        java.io.File file30 = explodedArchive28.manifestFile;
        java.util.jar.Manifest manifest31 = null;
        explodedArchive28.manifest = manifest31;
        java.io.File file33 = explodedArchive28.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.io.File file37 = fileEntryIterator34.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        fileEntryIterator34.current = file42;
        explodedArchive28.root = file42;
        fileEntryIterator26.root = file42;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        boolean boolean51 = explodedArchive46.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        fileEntryIterator52.recursive = true;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator63.entryComparator;
        java.util.Comparator<java.io.File> fileComparator66 = fileComparator62.thenComparing(fileComparator65);
        fileEntryIterator57.entryComparator = fileComparator62;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        java.util.Comparator<java.io.File> fileComparator71 = fileComparator62.thenComparing(fileComparator70);
        fileEntryIterator52.entryComparator = fileComparator71;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file74 = explodedArchive73.manifestFile;
        java.io.File file75 = explodedArchive73.manifestFile;
        java.io.File file76 = null;
        java.io.File file77 = explodedArchive73.getManifestFile(file76);
        fileEntryIterator52.root = file77;
        explodedArchive46.root = file77;
        int int80 = entryComparator23.compare(file42, file77);
        fileEntry2.file = file77;
        explodedArchive0.manifestFile = file77;
        java.lang.String str83 = explodedArchive0.toString();
        java.io.File file84 = explodedArchive0.root;
        java.util.jar.Manifest manifest85 = null;
        explodedArchive0.manifest = manifest85;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter87 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList88 = explodedArchive0.getNestedArchives(entryFilter87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file77.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "exploded archive" + "'", str83, "exploded archive");
        org.junit.Assert.assertNull(file84);
    }

    @Test
    public void test4131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4131");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        explodedArchive0.root = file7;
        explodedArchive0.recursive = false;
        java.io.File file11 = explodedArchive0.root;
        explodedArchive0.recursive = true;
        java.net.URL uRL14 = explodedArchive0.getUrl();
        java.util.jar.Manifest manifest15 = null;
        explodedArchive0.manifest = manifest15;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive0.getNestedArchives(entryFilter17);
        java.lang.Class<?> wildcardClass19 = archiveList18.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRL14);
// flaky:         org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test4132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4132");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.name;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        java.io.File file5 = fileEntry0.file;
        java.lang.String str6 = fileEntry0.name;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.io.File file9 = fileEntryIterator7.current;
        java.io.File file10 = fileEntryIterator7.current;
        fileEntryIterator7.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator7.root = file17;
        fileEntry0.file = file17;
        java.lang.String str20 = fileEntry0.name;
        java.io.File file21 = fileEntry0.getFile();
        boolean boolean22 = fileEntry0.isDirectory();
        fileEntry0.name = "file://hi!:100hi!";
        java.lang.String str25 = fileEntry0.name;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "file://hi!:100hi!" + "'", str25, "file://hi!:100hi!");
    }

    @Test
    public void test4133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4133");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor22 = explodedArchive0.iterator();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.manifestFile;
        java.io.File file25 = explodedArchive23.manifestFile;
        java.lang.String str26 = explodedArchive23.toString();
        java.util.jar.Manifest manifest27 = explodedArchive23.manifest;
        java.io.File file28 = explodedArchive23.manifestFile;
        boolean boolean29 = explodedArchive23.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file31 = fileEntry30.getFile();
        java.io.File file32 = fileEntry30.file;
        java.io.File file33 = null;
        fileEntry30.file = file33;
        java.lang.String str35 = fileEntry30.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file37 = fileEntryIterator36.current;
        java.io.File file38 = null;
        fileEntryIterator36.current = file38;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean41 = explodedArchive40.recursive;
        java.io.File file42 = explodedArchive40.manifestFile;
        java.util.jar.Manifest manifest43 = null;
        explodedArchive40.manifest = manifest43;
        java.io.File file45 = explodedArchive40.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        java.io.File file49 = fileEntryIterator46.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file51 = explodedArchive50.manifestFile;
        java.io.File file52 = explodedArchive50.manifestFile;
        java.io.File file53 = null;
        java.io.File file54 = explodedArchive50.getManifestFile(file53);
        fileEntryIterator46.current = file54;
        explodedArchive40.root = file54;
        fileEntryIterator36.root = file54;
        fileEntry30.file = file54;
        java.io.File file59 = fileEntry30.getFile();
        java.io.File file60 = fileEntry30.file;
        explodedArchive23.manifestFile = file60;
        java.io.File file62 = explodedArchive23.manifestFile;
        java.io.File file63 = explodedArchive0.getManifestFile(file62);
        java.lang.Class<?> wildcardClass64 = file63.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entryItor22);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "exploded archive" + "'", str26, "exploded archive");
        org.junit.Assert.assertNull(manifest27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file60.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test4134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4134");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        java.util.jar.Manifest manifest24 = explodedArchive0.manifest;
        java.io.File file25 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest26 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest27 = explodedArchive0.manifest;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(manifest26);
        org.junit.Assert.assertNull(manifest27);
    }

    @Test
    public void test4135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4135");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("exploded archive", "file:100", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4136");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        int int11 = uRL9.getPort();
        java.net.URL uRL12 = null;
        java.net.URLStreamHandler uRLStreamHandler14 = null;
        java.net.URL uRL15 = new java.net.URL(uRL12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler14);
        java.lang.String str16 = uRL15.getHost();
        java.lang.String str17 = uRL15.getAuthority();
        java.lang.String str18 = uRL15.getQuery();
        int int19 = uRL15.getDefaultPort();
        boolean boolean20 = uRL9.sameFile(uRL15);
        boolean boolean21 = uRL3.sameFile(uRL9);
        java.net.URI uRI22 = uRL3.toURI();
        java.net.URLConnection uRLConnection23 = uRL3.openConnection();
        java.net.URL uRL24 = null;
        java.net.URLStreamHandler uRLStreamHandler26 = null;
        java.net.URL uRL27 = new java.net.URL(uRL24, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler26);
        java.lang.String str28 = uRL27.getHost();
        java.lang.String str29 = uRL27.getAuthority();
        java.lang.String str30 = uRL27.getQuery();
        int int31 = uRL27.getDefaultPort();
        java.lang.String str32 = uRL27.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler34 = null;
        java.net.URL uRL35 = new java.net.URL(uRL27, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler34);
        java.lang.String str36 = uRL35.toExternalForm();
        java.lang.String str37 = uRL35.getFile();
        java.net.URLConnection uRLConnection38 = uRL35.openConnection();
        java.lang.String str39 = uRL35.getAuthority();
        java.lang.String str40 = uRL35.getUserInfo();
        boolean boolean41 = uRL3.sameFile(uRL35);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj42 = uRL3.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(uRI22);
        org.junit.Assert.assertNotNull(uRLConnection23);
        org.junit.Assert.assertEquals(uRL27.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str36, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str37, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test4137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4137");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.io.File file6 = fileEntryIterator4.current;
        boolean boolean7 = fileEntryIterator4.hasNext();
        fileEntryIterator4.recursive = false;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator4.stack;
        fileEntryIterator0.stack = fileItorQueue10;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        fileEntryIterator13.recursive = true;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator13.entryComparator;
        fileEntryIterator13.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        fileEntryIterator13.stack = fileItorQueue21;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator13.stack;
        fileEntryIterator0.stack = fileItorQueue23;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
    }

    @Test
    public void test4138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4138");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        boolean boolean8 = explodedArchive3.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        fileEntryIterator9.recursive = true;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator19.thenComparing(fileComparator22);
        fileEntryIterator14.entryComparator = fileComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator19.thenComparing(fileComparator27);
        fileEntryIterator9.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.manifestFile;
        java.io.File file32 = explodedArchive30.manifestFile;
        java.io.File file33 = null;
        java.io.File file34 = explodedArchive30.getManifestFile(file33);
        fileEntryIterator9.root = file34;
        explodedArchive3.root = file34;
        java.util.Iterator<java.io.File> fileItor37 = fileEntryIterator0.listFiles(file34);
        boolean boolean38 = fileEntryIterator0.recursive;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator0.entryComparator;
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator39.reversed();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator40);
    }

    @Test
    public void test4139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4139");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        fileEntryIterator0.recursive = true;
        fileEntryIterator0.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator0.stack;
        boolean boolean26 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        java.util.Comparator<java.io.File> fileComparator36 = fileComparator32.thenComparing(fileComparator35);
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator29.thenComparing(fileComparator35);
        fileEntryIterator0.entryComparator = fileComparator29;
        java.util.Comparator<java.io.File> fileComparator39 = fileComparator29.reversed();
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator39.reversed();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator40);
    }

    @Test
    public void test4140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4140");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLConnection uRLConnection7 = uRL3.openConnection();
        java.lang.String str8 = uRL3.getUserInfo();
        java.lang.String str9 = uRL3.getRef();
        java.lang.String str10 = uRL3.getPath();
        java.net.URI uRI11 = uRL3.toURI();
        java.lang.String str12 = uRL3.getFile();
        java.net.URL uRL14 = new java.net.URL(uRL3, "file://exploded archive:0/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean16 = fileEntryIterator15.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        fileEntryIterator15.stack = fileItorQueue18;
        boolean boolean20 = fileEntryIterator15.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file22 = explodedArchive21.manifestFile;
        java.io.File file23 = explodedArchive21.manifestFile;
        java.io.File file24 = null;
        java.io.File file25 = explodedArchive21.getManifestFile(file24);
        boolean boolean26 = explodedArchive21.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        fileEntryIterator27.recursive = true;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator27.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator35.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        java.util.Comparator<java.io.File> fileComparator41 = fileComparator37.thenComparing(fileComparator40);
        fileEntryIterator32.entryComparator = fileComparator37;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        java.util.Comparator<java.io.File> fileComparator46 = fileComparator37.thenComparing(fileComparator45);
        fileEntryIterator27.entryComparator = fileComparator46;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file49 = explodedArchive48.manifestFile;
        java.io.File file50 = explodedArchive48.manifestFile;
        java.io.File file51 = null;
        java.io.File file52 = explodedArchive48.getManifestFile(file51);
        fileEntryIterator27.root = file52;
        explodedArchive21.root = file52;
        explodedArchive21.recursive = false;
        java.util.jar.Manifest manifest57 = null;
        explodedArchive21.manifest = manifest57;
        java.lang.String str59 = explodedArchive21.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter60 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList61 = explodedArchive21.getNestedArchives(entryFilter60);
        java.io.File file62 = explodedArchive21.root;
        fileEntryIterator15.root = file62;
        java.lang.Class<?> wildcardClass64 = fileEntryIterator15.getClass();
        java.lang.Class[] classArray65 = new java.lang.Class[] { wildcardClass64 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj66 = uRL14.getContent(classArray65);
            org.junit.Assert.fail("Expected exception of type java.net.UnknownHostException; message: exploded archive");
        } catch (java.net.UnknownHostException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file://exploded archive:0/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file25.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str59, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList61);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(classArray65);
    }

    @Test
    public void test4141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4141");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        java.lang.String str5 = fileEntry0.getName();
        java.io.File file6 = fileEntry0.getFile();
        java.io.File file7 = fileEntry0.getFile();
        java.io.File file8 = fileEntry0.getFile();
        fileEntry0.name = "hi!:10";
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
    }

    @Test
    public void test4142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4142");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file3 = fileEntry2.getFile();
        java.io.File file4 = fileEntry2.file;
        java.io.File file5 = null;
        fileEntry2.file = file5;
        java.lang.String str7 = fileEntry2.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        boolean boolean10 = fileEntryIterator8.hasNext();
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        java.util.Comparator<java.io.File> fileComparator21 = fileComparator17.thenComparing(fileComparator20);
        fileEntryIterator12.entryComparator = fileComparator17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator17.thenComparing((java.util.Comparator<java.io.File>) entryComparator23);
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator11.thenComparing((java.util.Comparator<java.io.File>) entryComparator23);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean27 = fileEntryIterator26.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean29 = explodedArchive28.recursive;
        java.io.File file30 = explodedArchive28.manifestFile;
        java.util.jar.Manifest manifest31 = null;
        explodedArchive28.manifest = manifest31;
        java.io.File file33 = explodedArchive28.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.io.File file37 = fileEntryIterator34.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        fileEntryIterator34.current = file42;
        explodedArchive28.root = file42;
        fileEntryIterator26.root = file42;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        boolean boolean51 = explodedArchive46.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        fileEntryIterator52.recursive = true;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator63.entryComparator;
        java.util.Comparator<java.io.File> fileComparator66 = fileComparator62.thenComparing(fileComparator65);
        fileEntryIterator57.entryComparator = fileComparator62;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        java.util.Comparator<java.io.File> fileComparator71 = fileComparator62.thenComparing(fileComparator70);
        fileEntryIterator52.entryComparator = fileComparator71;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file74 = explodedArchive73.manifestFile;
        java.io.File file75 = explodedArchive73.manifestFile;
        java.io.File file76 = null;
        java.io.File file77 = explodedArchive73.getManifestFile(file76);
        fileEntryIterator52.root = file77;
        explodedArchive46.root = file77;
        int int80 = entryComparator23.compare(file42, file77);
        fileEntry2.file = file77;
        explodedArchive0.manifestFile = file77;
        explodedArchive0.recursive = true;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL85 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file77.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
    }

    @Test
    public void test4143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4143");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        fileEntryIterator39.recursive = true;
        java.util.Comparator<java.io.File> fileComparator43 = fileEntryIterator39.entryComparator;
        fileEntryIterator39.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        fileEntryIterator39.stack = fileItorQueue47;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file50 = fileEntryIterator49.current;
        java.io.File file51 = fileEntryIterator49.poll();
        java.io.File file52 = fileEntryIterator49.poll();
        java.io.File file53 = fileEntryIterator49.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.io.File file56 = fileEntryIterator54.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.manifestFile;
        java.io.File file59 = explodedArchive57.manifestFile;
        java.io.File file60 = null;
        java.io.File file61 = explodedArchive57.getManifestFile(file60);
        fileEntryIterator54.root = file60;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file64 = explodedArchive63.manifestFile;
        java.io.File file65 = explodedArchive63.manifestFile;
        java.io.File file66 = null;
        java.io.File file67 = explodedArchive63.getManifestFile(file66);
        java.util.Iterator<java.io.File> fileItor68 = fileEntryIterator54.listFiles(file67);
        fileEntryIterator49.root = file67;
        java.util.Iterator<java.io.File> fileItor70 = fileEntryIterator39.listFiles(file67);
        java.io.File file71 = explodedArchive0.getManifestFile(file67);
        java.util.jar.Manifest manifest72 = explodedArchive0.manifest;
        boolean boolean73 = explodedArchive0.recursive;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file67.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor68);
        org.junit.Assert.assertNotNull(fileItor70);
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file71.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test4144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4144");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        explodedArchive0.root = file7;
        java.util.jar.Manifest manifest9 = explodedArchive0.manifest;
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest10 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest9);
    }

    @Test
    public void test4145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4145");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getProtocol();
        java.lang.String str5 = uRL3.getUserInfo();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler16);
        boolean boolean18 = uRL3.sameFile(uRL17);
        java.net.URL uRL20 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        java.lang.String str21 = uRL3.getFile();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj22 = uRL3.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "file" + "'", str4, "file");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals(uRL20.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str21, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4146");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.lang.String str6 = uRL3.getProtocol();
        java.lang.String str7 = uRL3.getPath();
        java.lang.String str8 = uRL3.getPath();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file" + "'", str6, "file");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4147");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        explodedArchive0.recursive = false;
        explodedArchive0.recursive = true;
        java.io.File file45 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive0.getNestedArchives(entryFilter46);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList47);
    }

    @Test
    public void test4148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4148");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.io.File file4 = fileEntryIterator0.poll();
        fileEntryIterator0.recursive = false;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator0.entryComparator;
        java.io.File file8 = fileEntryIterator0.poll();
        boolean boolean9 = fileEntryIterator0.recursive;
        boolean boolean10 = fileEntryIterator0.hasNext();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test4149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4149");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.util.Comparator<java.io.File> fileComparator2 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.util.Comparator<java.io.File> fileComparator9 = fileComparator5.thenComparing(fileComparator8);
        fileEntryIterator0.entryComparator = fileComparator5;
        boolean boolean11 = fileEntryIterator0.recursive;
        java.io.File file12 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        boolean boolean18 = explodedArchive13.recursive;
        java.io.File file19 = explodedArchive13.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.manifestFile;
        explodedArchive20.recursive = true;
        java.lang.String str24 = explodedArchive20.toString();
        boolean boolean25 = explodedArchive20.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file27 = explodedArchive26.manifestFile;
        java.io.File file28 = explodedArchive26.manifestFile;
        java.io.File file29 = null;
        java.io.File file30 = explodedArchive26.getManifestFile(file29);
        java.io.File file31 = explodedArchive20.getManifestFile(file29);
        explodedArchive13.root = file31;
        java.util.jar.Manifest manifest33 = explodedArchive13.manifest;
        java.util.jar.Manifest manifest34 = explodedArchive13.manifest;
        java.io.File file35 = explodedArchive13.root;
        fileEntryIterator0.root = file35;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "exploded archive" + "'", str24, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertNull(manifest34);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file35.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test4150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4150");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", "file://hi!:100hi!", (-1), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/file");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4151");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.recursive;
        boolean boolean2 = fileEntryIterator0.recursive;
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        java.io.File file4 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean7 = fileEntryIterator6.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean9 = explodedArchive8.recursive;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.util.jar.Manifest manifest11 = null;
        explodedArchive8.manifest = manifest11;
        java.io.File file13 = explodedArchive8.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.io.File file17 = fileEntryIterator14.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.manifestFile;
        java.io.File file20 = explodedArchive18.manifestFile;
        java.io.File file21 = null;
        java.io.File file22 = explodedArchive18.getManifestFile(file21);
        fileEntryIterator14.current = file22;
        explodedArchive8.root = file22;
        fileEntryIterator6.root = file22;
        explodedArchive5.root = file22;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator27 = explodedArchive5.spliterator();
        java.io.File file28 = explodedArchive5.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str30 = fileEntry29.name;
        java.io.File file31 = fileEntry29.file;
        fileEntry29.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        boolean boolean36 = fileEntryIterator34.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file38 = explodedArchive37.manifestFile;
        java.io.File file39 = explodedArchive37.manifestFile;
        java.io.File file40 = null;
        java.io.File file41 = explodedArchive37.getManifestFile(file40);
        boolean boolean42 = explodedArchive37.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        fileEntryIterator43.recursive = true;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator53.thenComparing(fileComparator56);
        fileEntryIterator48.entryComparator = fileComparator53;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        java.util.Comparator<java.io.File> fileComparator62 = fileComparator53.thenComparing(fileComparator61);
        fileEntryIterator43.entryComparator = fileComparator62;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file65 = explodedArchive64.manifestFile;
        java.io.File file66 = explodedArchive64.manifestFile;
        java.io.File file67 = null;
        java.io.File file68 = explodedArchive64.getManifestFile(file67);
        fileEntryIterator43.root = file68;
        explodedArchive37.root = file68;
        java.util.Iterator<java.io.File> fileItor71 = fileEntryIterator34.listFiles(file68);
        fileEntry29.file = file68;
        explodedArchive5.root = file68;
        java.util.Iterator<java.io.File> fileItor74 = fileEntryIterator0.listFiles(file68);
        java.util.Comparator<java.io.File> fileComparator75 = fileEntryIterator0.entryComparator;
        java.io.File file76 = fileEntryIterator0.current;
        fileEntryIterator0.recursive = true;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fileComparator3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator27);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file68.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor71);
        org.junit.Assert.assertNotNull(fileItor74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNull(file76);
    }

    @Test
    public void test4152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4152");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file39 = fileEntryIterator38.current;
        java.io.File file40 = fileEntryIterator38.poll();
        java.io.File file41 = fileEntryIterator38.poll();
        java.io.File file42 = fileEntryIterator38.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.io.File file45 = fileEntryIterator43.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        fileEntryIterator43.root = file49;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.manifestFile;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.io.File file55 = null;
        java.io.File file56 = explodedArchive52.getManifestFile(file55);
        java.util.Iterator<java.io.File> fileItor57 = fileEntryIterator43.listFiles(file56);
        fileEntryIterator38.root = file56;
        explodedArchive0.root = file56;
        explodedArchive0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean63 = explodedArchive62.recursive;
        boolean boolean64 = explodedArchive62.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file66 = explodedArchive65.manifestFile;
        java.io.File file67 = explodedArchive65.manifestFile;
        java.io.File file68 = null;
        java.io.File file69 = explodedArchive65.getManifestFile(file68);
        explodedArchive62.root = file69;
        explodedArchive62.recursive = false;
        java.io.File file73 = explodedArchive62.root;
        java.io.File file74 = explodedArchive0.getManifestFile(file73);
        java.net.URL uRL75 = explodedArchive0.getUrl();
        java.net.URL uRL76 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler78 = null;
        java.net.URL uRL79 = new java.net.URL(uRL76, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", uRLStreamHandler78);
        java.lang.String str80 = uRL76.getProtocol();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor57);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file73.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file74.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRL75);
// flaky:         org.junit.Assert.assertEquals(uRL75.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRL76);
// flaky:         org.junit.Assert.assertEquals(uRL76.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL79.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "file" + "'", str80, "file");
    }

    @Test
    public void test4153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4153");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "file:100", (int) ' ', "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/manifest.mf");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4154");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.getName();
        java.lang.String str3 = fileEntry0.getName();
        fileEntry0.name = "";
        java.io.File file6 = fileEntry0.file;
        java.lang.String str7 = fileEntry0.getName();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        fileEntryIterator11.recursive = true;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator21.thenComparing(fileComparator24);
        fileEntryIterator16.entryComparator = fileComparator21;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        java.util.Comparator<java.io.File> fileComparator30 = fileComparator21.thenComparing(fileComparator29);
        fileEntryIterator11.entryComparator = fileComparator30;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        fileEntryIterator11.root = file36;
        explodedArchive8.manifestFile = file36;
        java.util.jar.Manifest manifest39 = explodedArchive8.manifest;
        java.util.jar.Manifest manifest40 = explodedArchive8.manifest;
        java.util.jar.Manifest manifest41 = explodedArchive8.getManifest();
        java.util.jar.Manifest manifest42 = explodedArchive8.getManifest();
        java.io.File file43 = explodedArchive8.root;
        java.io.File file44 = null;
        explodedArchive8.manifestFile = file44;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        fileEntryIterator46.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file51 = explodedArchive50.manifestFile;
        java.io.File file52 = explodedArchive50.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        fileEntryIterator53.recursive = true;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator53.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        java.util.Comparator<java.io.File> fileComparator66 = fileEntryIterator64.entryComparator;
        java.util.Comparator<java.io.File> fileComparator67 = fileComparator63.thenComparing(fileComparator66);
        fileEntryIterator58.entryComparator = fileComparator63;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator69 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue70 = fileEntryIterator69.stack;
        java.util.Comparator<java.io.File> fileComparator71 = fileEntryIterator69.entryComparator;
        java.util.Comparator<java.io.File> fileComparator72 = fileComparator63.thenComparing(fileComparator71);
        fileEntryIterator53.entryComparator = fileComparator72;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file75 = explodedArchive74.manifestFile;
        java.io.File file76 = explodedArchive74.manifestFile;
        java.io.File file77 = null;
        java.io.File file78 = explodedArchive74.getManifestFile(file77);
        fileEntryIterator53.root = file78;
        explodedArchive50.manifestFile = file78;
        fileEntryIterator46.current = file78;
        java.io.File file82 = fileEntryIterator46.current;
        java.io.File file83 = explodedArchive8.getManifestFile(file82);
        fileEntry0.file = file83;
        java.lang.String str85 = fileEntry0.getName();
        boolean boolean86 = fileEntry0.isDirectory();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest39);
        org.junit.Assert.assertNull(manifest40);
        org.junit.Assert.assertNull(manifest41);
        org.junit.Assert.assertNull(manifest42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileComparator72);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file78.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file83);
        org.junit.Assert.assertEquals(file83.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file83.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test4155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4155");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.io.File file9 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        fileEntryIterator6.current = file14;
        explodedArchive0.root = file14;
        java.util.jar.Manifest manifest17 = explodedArchive0.manifest;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator18 = explodedArchive0.spliterator();
        java.net.URL uRL19 = explodedArchive0.getUrl();
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor20 = explodedArchive0.iterator();
        boolean boolean21 = explodedArchive0.recursive;
        boolean boolean22 = explodedArchive0.recursive;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertNotNull(entrySpliterator18);
        org.junit.Assert.assertNotNull(uRL19);
// flaky:         org.junit.Assert.assertEquals(uRL19.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entryItor20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test4156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4156");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str1 = fileEntry0.getName();
        fileEntry0.name = "exploded archive:0";
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test4157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4157");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        boolean boolean2 = fileEntryIterator0.hasNext();
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        fileEntryIterator4.recursive = true;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        java.util.Comparator<java.io.File> fileComparator18 = fileComparator14.thenComparing(fileComparator17);
        fileEntryIterator9.entryComparator = fileComparator14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator14.thenComparing(fileComparator22);
        fileEntryIterator4.entryComparator = fileComparator23;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file26 = fileEntryIterator25.current;
        java.io.File file27 = fileEntryIterator25.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file29 = fileEntryIterator28.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        java.util.Comparator<java.io.File> fileComparator39 = fileComparator35.thenComparing(fileComparator38);
        fileEntryIterator30.entryComparator = fileComparator35;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        java.util.Comparator<java.io.File> fileComparator43 = fileEntryIterator41.entryComparator;
        java.util.Comparator<java.io.File> fileComparator44 = fileComparator35.thenComparing(fileComparator43);
        fileEntryIterator28.entryComparator = fileComparator44;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator28.stack;
        fileEntryIterator25.stack = fileItorQueue46;
        fileEntryIterator4.stack = fileItorQueue46;
        fileEntryIterator0.stack = fileItorQueue46;
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.manifestFile;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.io.File file55 = null;
        java.io.File file56 = explodedArchive52.getManifestFile(file55);
        boolean boolean57 = explodedArchive52.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        fileEntryIterator58.recursive = true;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator58.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator63.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator66 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue67 = fileEntryIterator66.stack;
        java.util.Comparator<java.io.File> fileComparator68 = fileEntryIterator66.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator69 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue70 = fileEntryIterator69.stack;
        java.util.Comparator<java.io.File> fileComparator71 = fileEntryIterator69.entryComparator;
        java.util.Comparator<java.io.File> fileComparator72 = fileComparator68.thenComparing(fileComparator71);
        fileEntryIterator63.entryComparator = fileComparator68;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator74 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue75 = fileEntryIterator74.stack;
        java.util.Comparator<java.io.File> fileComparator76 = fileEntryIterator74.entryComparator;
        java.util.Comparator<java.io.File> fileComparator77 = fileComparator68.thenComparing(fileComparator76);
        fileEntryIterator58.entryComparator = fileComparator77;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file80 = explodedArchive79.manifestFile;
        java.io.File file81 = explodedArchive79.manifestFile;
        java.io.File file82 = null;
        java.io.File file83 = explodedArchive79.getManifestFile(file82);
        fileEntryIterator58.root = file83;
        explodedArchive52.root = file83;
        java.util.Iterator<java.io.File> fileItor86 = fileEntryIterator0.listFiles(file83);
        java.util.Comparator<java.io.File> fileComparator87 = fileEntryIterator0.entryComparator;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue88 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator89 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue90 = fileEntryIterator89.stack;
        boolean boolean91 = fileEntryIterator89.hasNext();
        java.io.File file92 = fileEntryIterator89.poll();
        java.util.Comparator<java.io.File> fileComparator93 = fileEntryIterator89.entryComparator;
        fileEntryIterator0.entryComparator = fileComparator93;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fileComparator3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileItorQueue67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileItorQueue70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileComparator72);
        org.junit.Assert.assertNotNull(fileItorQueue75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNotNull(fileComparator77);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertNotNull(file83);
        org.junit.Assert.assertEquals(file83.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file83.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor86);
        org.junit.Assert.assertNotNull(fileComparator87);
        org.junit.Assert.assertNotNull(fileItorQueue88);
        org.junit.Assert.assertNotNull(fileItorQueue90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNull(file92);
        org.junit.Assert.assertNotNull(fileComparator93);
    }

    @Test
    public void test4158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4158");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.net.URL uRL74 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str75 = uRL69.getHost();
        java.net.URL uRL77 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator78 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue79 = fileEntryIterator78.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive80 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file81 = explodedArchive80.manifestFile;
        java.io.File file82 = explodedArchive80.manifestFile;
        java.io.File file83 = null;
        java.io.File file84 = explodedArchive80.getManifestFile(file83);
        fileEntryIterator78.current = file83;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator86 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue87 = fileEntryIterator86.stack;
        java.io.File file88 = fileEntryIterator86.current;
        java.util.ArrayDeque<java.util.Iterator<java.io.File>> fileItorQueue89 = new java.util.ArrayDeque<java.util.Iterator<java.io.File>>();
        fileEntryIterator86.stack = fileItorQueue89;
        boolean boolean91 = fileEntryIterator86.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue92 = fileEntryIterator86.stack;
        fileEntryIterator78.stack = fileItorQueue92;
        boolean boolean94 = uRL77.equals((java.lang.Object) fileEntryIterator78);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertEquals(uRL77.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNotNull(fileItorQueue79);
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file84.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue87);
        org.junit.Assert.assertNull(file88);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(fileItorQueue92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test4159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4159");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.net.URLStreamHandler uRLStreamHandler7 = null;
        java.net.URL uRL8 = new java.net.URL(uRL3, "", uRLStreamHandler7);
        java.lang.Class[] classArray9 = new java.lang.Class[] {};
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj10 = uRL8.getContent(classArray9);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals(uRL8.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(classArray9);
    }

    @Test
    public void test4160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4160");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getProtocol();
        java.lang.String str5 = uRL3.getUserInfo();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler16);
        boolean boolean18 = uRL3.sameFile(uRL17);
        java.lang.String str19 = uRL17.getQuery();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "file" + "'", str4, "file");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test4161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4161");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        java.lang.String str34 = explodedArchive0.toString();
        java.io.File file35 = explodedArchive0.manifestFile;
        boolean boolean36 = explodedArchive0.recursive;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor37 = explodedArchive0.iterator();
        boolean boolean38 = explodedArchive0.recursive;
        java.net.URL uRL39 = explodedArchive0.getUrl();
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor40 = explodedArchive0.iterator();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(entryItor37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(uRL39);
// flaky:         org.junit.Assert.assertEquals(uRL39.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entryItor40);
    }

    @Test
    public void test4162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4162");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLConnection uRLConnection7 = uRL3.openConnection();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.net.URLConnection uRLConnection12 = uRL3.openConnection();
        java.lang.String str13 = uRL3.getRef();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj14 = uRL3.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test4163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4163");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.io.File file9 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        fileEntryIterator6.current = file14;
        explodedArchive0.root = file14;
        java.util.jar.Manifest manifest17 = explodedArchive0.manifest;
        java.io.File file18 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file20 = fileEntryIterator19.current;
        boolean boolean21 = fileEntryIterator19.hasNext();
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file24 = fileEntryIterator23.current;
        java.io.File file25 = null;
        fileEntryIterator23.current = file25;
        java.io.File file27 = fileEntryIterator23.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file29 = fileEntry28.getFile();
        java.lang.String str30 = fileEntry28.name;
        java.io.File file31 = fileEntry28.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        boolean boolean34 = fileEntryIterator32.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.manifestFile;
        java.io.File file37 = explodedArchive35.manifestFile;
        java.io.File file38 = null;
        java.io.File file39 = explodedArchive35.getManifestFile(file38);
        boolean boolean40 = explodedArchive35.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        fileEntryIterator41.recursive = true;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator41.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator52.entryComparator;
        java.util.Comparator<java.io.File> fileComparator55 = fileComparator51.thenComparing(fileComparator54);
        fileEntryIterator46.entryComparator = fileComparator51;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        java.util.Comparator<java.io.File> fileComparator60 = fileComparator51.thenComparing(fileComparator59);
        fileEntryIterator41.entryComparator = fileComparator60;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file63 = explodedArchive62.manifestFile;
        java.io.File file64 = explodedArchive62.manifestFile;
        java.io.File file65 = null;
        java.io.File file66 = explodedArchive62.getManifestFile(file65);
        fileEntryIterator41.root = file66;
        explodedArchive35.root = file66;
        java.util.Iterator<java.io.File> fileItor69 = fileEntryIterator32.listFiles(file66);
        fileEntry28.file = file66;
        fileEntryIterator23.current = file66;
        java.util.Iterator<java.io.File> fileItor72 = fileEntryIterator19.listFiles(file66);
        java.io.File file73 = explodedArchive0.getManifestFile(file66);
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor74 = explodedArchive0.iterator();
        java.util.jar.Manifest manifest75 = null;
        explodedArchive0.manifest = manifest75;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor69);
        org.junit.Assert.assertNotNull(fileItor72);
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file73.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entryItor74);
    }

    @Test
    public void test4164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4164");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        int int8 = uRL3.getPort();
        java.lang.String str9 = uRL3.getRef();
        java.net.URL uRL11 = new java.net.URL(uRL3, "hi!");
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "", uRLStreamHandler13);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean17 = fileEntryIterator16.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean19 = explodedArchive18.recursive;
        java.io.File file20 = explodedArchive18.manifestFile;
        java.util.jar.Manifest manifest21 = null;
        explodedArchive18.manifest = manifest21;
        java.io.File file23 = explodedArchive18.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        java.io.File file27 = fileEntryIterator24.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file29 = explodedArchive28.manifestFile;
        java.io.File file30 = explodedArchive28.manifestFile;
        java.io.File file31 = null;
        java.io.File file32 = explodedArchive28.getManifestFile(file31);
        fileEntryIterator24.current = file32;
        explodedArchive18.root = file32;
        fileEntryIterator16.root = file32;
        explodedArchive15.root = file32;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator37 = explodedArchive15.spliterator();
        java.io.File file38 = explodedArchive15.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str40 = fileEntry39.name;
        java.io.File file41 = fileEntry39.file;
        fileEntry39.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        boolean boolean46 = fileEntryIterator44.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file48 = explodedArchive47.manifestFile;
        java.io.File file49 = explodedArchive47.manifestFile;
        java.io.File file50 = null;
        java.io.File file51 = explodedArchive47.getManifestFile(file50);
        boolean boolean52 = explodedArchive47.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        fileEntryIterator53.recursive = true;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator53.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        java.util.Comparator<java.io.File> fileComparator66 = fileEntryIterator64.entryComparator;
        java.util.Comparator<java.io.File> fileComparator67 = fileComparator63.thenComparing(fileComparator66);
        fileEntryIterator58.entryComparator = fileComparator63;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator69 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue70 = fileEntryIterator69.stack;
        java.util.Comparator<java.io.File> fileComparator71 = fileEntryIterator69.entryComparator;
        java.util.Comparator<java.io.File> fileComparator72 = fileComparator63.thenComparing(fileComparator71);
        fileEntryIterator53.entryComparator = fileComparator72;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file75 = explodedArchive74.manifestFile;
        java.io.File file76 = explodedArchive74.manifestFile;
        java.io.File file77 = null;
        java.io.File file78 = explodedArchive74.getManifestFile(file77);
        fileEntryIterator53.root = file78;
        explodedArchive47.root = file78;
        java.util.Iterator<java.io.File> fileItor81 = fileEntryIterator44.listFiles(file78);
        fileEntry39.file = file78;
        explodedArchive15.root = file78;
        java.net.URL uRL84 = explodedArchive15.getUrl();
        java.lang.String str85 = uRL84.getUserInfo();
        java.lang.String str86 = uRL84.getHost();
        java.net.URL uRL88 = new java.net.URL(uRL84, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        boolean boolean89 = uRL11.sameFile(uRL84);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj90 = uRL11.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi! (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file32.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator37);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file51.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileComparator72);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file78.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor81);
        org.junit.Assert.assertNotNull(uRL84);
// flaky:         org.junit.Assert.assertEquals(uRL84.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertEquals(uRL88.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test4165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4165");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getProtocol();
        java.lang.String str11 = uRL9.getFile();
        java.lang.String str12 = uRL9.getHost();
        java.lang.String str13 = uRL9.getHost();
        java.lang.String str14 = uRL9.getUserInfo();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "file" + "'", str10, "file");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file" + "'", str11, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test4166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4166");
        java.net.URL uRL1 = new java.net.URL("file://exploded archive");
        java.lang.String str2 = uRL1.getProtocol();
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        java.net.URL uRL5 = new java.net.URL(uRL1, "file", uRLStreamHandler4);
        java.net.URL uRL7 = new java.net.URL(uRL1, "file:100");
        java.lang.String str8 = uRL7.getRef();
        org.junit.Assert.assertEquals(uRL1.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "file" + "'", str2, "file");
        org.junit.Assert.assertEquals(uRL5.toString(), "file://exploded archive/file");
        org.junit.Assert.assertEquals(uRL7.toString(), "file:100");
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test4167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4167");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest37 = null;
        explodedArchive0.manifest = manifest37;
        java.util.jar.Manifest manifest39 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest40 = null;
        explodedArchive0.manifest = manifest40;
        java.io.File file42 = explodedArchive0.manifestFile;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNull(manifest39);
        org.junit.Assert.assertNull(file42);
    }

    @Test
    public void test4168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4168");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.lang.String str2 = explodedArchive0.toString();
        boolean boolean3 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file5 = fileEntry4.getFile();
        java.lang.String str6 = fileEntry4.getName();
        java.lang.String str7 = fileEntry4.getName();
        fileEntry4.name = "";
        java.io.File file10 = fileEntry4.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        boolean boolean13 = fileEntryIterator11.hasNext();
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator11.entryComparator;
        fileEntryIterator11.recursive = true;
        java.io.File file17 = fileEntryIterator11.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry18.name = "exploded archive";
        java.lang.String str21 = fileEntry18.getName();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file23 = explodedArchive22.manifestFile;
        java.io.File file24 = explodedArchive22.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        fileEntryIterator25.recursive = true;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator25.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        java.util.Comparator<java.io.File> fileComparator39 = fileComparator35.thenComparing(fileComparator38);
        fileEntryIterator30.entryComparator = fileComparator35;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        java.util.Comparator<java.io.File> fileComparator43 = fileEntryIterator41.entryComparator;
        java.util.Comparator<java.io.File> fileComparator44 = fileComparator35.thenComparing(fileComparator43);
        fileEntryIterator25.entryComparator = fileComparator44;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        fileEntryIterator25.root = file50;
        explodedArchive22.manifestFile = file50;
        java.util.jar.Manifest manifest53 = explodedArchive22.manifest;
        java.util.jar.Manifest manifest54 = explodedArchive22.manifest;
        java.util.jar.Manifest manifest55 = explodedArchive22.getManifest();
        java.util.jar.Manifest manifest56 = explodedArchive22.getManifest();
        java.io.File file57 = explodedArchive22.root;
        java.io.File file58 = explodedArchive22.manifestFile;
        java.io.File file59 = explodedArchive22.manifestFile;
        fileEntry18.file = file59;
        fileEntryIterator11.root = file59;
        fileEntry4.file = file59;
        java.io.File file63 = fileEntry4.file;
        java.io.File file64 = explodedArchive0.getManifestFile(file63);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "exploded archive" + "'", str2, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "exploded archive" + "'", str21, "exploded archive");
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest53);
        org.junit.Assert.assertNull(manifest54);
        org.junit.Assert.assertNull(manifest55);
        org.junit.Assert.assertNull(manifest56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file58.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file64.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4169");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.getName();
        java.lang.String str3 = fileEntry0.getName();
        fileEntry0.name = "";
        java.io.File file6 = fileEntry0.file;
        java.io.File file7 = fileEntry0.getFile();
        java.lang.String str8 = fileEntry0.getName();
        java.io.File file9 = fileEntry0.getFile();
        java.io.File file10 = fileEntry0.getFile();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
    }

    @Test
    public void test4170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4170");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file6 = fileEntry5.getFile();
        java.io.File file7 = fileEntry5.file;
        java.io.File file8 = null;
        fileEntry5.file = file8;
        java.lang.String str10 = fileEntry5.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        boolean boolean13 = fileEntryIterator11.hasNext();
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator20.thenComparing(fileComparator23);
        fileEntryIterator15.entryComparator = fileComparator20;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator20.thenComparing((java.util.Comparator<java.io.File>) entryComparator26);
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator14.thenComparing((java.util.Comparator<java.io.File>) entryComparator26);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean30 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean32 = explodedArchive31.recursive;
        java.io.File file33 = explodedArchive31.manifestFile;
        java.util.jar.Manifest manifest34 = null;
        explodedArchive31.manifest = manifest34;
        java.io.File file36 = explodedArchive31.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        java.io.File file40 = fileEntryIterator37.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file42 = explodedArchive41.manifestFile;
        java.io.File file43 = explodedArchive41.manifestFile;
        java.io.File file44 = null;
        java.io.File file45 = explodedArchive41.getManifestFile(file44);
        fileEntryIterator37.current = file45;
        explodedArchive31.root = file45;
        fileEntryIterator29.root = file45;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file50 = explodedArchive49.manifestFile;
        java.io.File file51 = explodedArchive49.manifestFile;
        java.io.File file52 = null;
        java.io.File file53 = explodedArchive49.getManifestFile(file52);
        boolean boolean54 = explodedArchive49.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        fileEntryIterator55.recursive = true;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator55.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator63.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator66 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue67 = fileEntryIterator66.stack;
        java.util.Comparator<java.io.File> fileComparator68 = fileEntryIterator66.entryComparator;
        java.util.Comparator<java.io.File> fileComparator69 = fileComparator65.thenComparing(fileComparator68);
        fileEntryIterator60.entryComparator = fileComparator65;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator71 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue72 = fileEntryIterator71.stack;
        java.util.Comparator<java.io.File> fileComparator73 = fileEntryIterator71.entryComparator;
        java.util.Comparator<java.io.File> fileComparator74 = fileComparator65.thenComparing(fileComparator73);
        fileEntryIterator55.entryComparator = fileComparator74;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file77 = explodedArchive76.manifestFile;
        java.io.File file78 = explodedArchive76.manifestFile;
        java.io.File file79 = null;
        java.io.File file80 = explodedArchive76.getManifestFile(file79);
        fileEntryIterator55.root = file80;
        explodedArchive49.root = file80;
        int int83 = entryComparator26.compare(file45, file80);
        fileEntry5.file = file80;
        explodedArchive3.manifestFile = file80;
        explodedArchive0.manifestFile = file80;
        java.io.File file87 = explodedArchive0.manifestFile;
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileItorQueue67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNotNull(fileItorQueue72);
        org.junit.Assert.assertNotNull(fileComparator73);
        org.junit.Assert.assertNotNull(fileComparator74);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNull(file78);
        org.junit.Assert.assertNotNull(file80);
        org.junit.Assert.assertEquals(file80.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file80.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(file87);
        org.junit.Assert.assertEquals(file87.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file87.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test4171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4171");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getPath();
        java.lang.String str9 = uRL3.getQuery();
        java.lang.String str10 = uRL3.getQuery();
        java.lang.String str11 = uRL3.getQuery();
        int int12 = uRL3.getPort();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test4172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4172");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getAuthority();
        java.net.URL uRL71 = null;
        java.net.URLStreamHandler uRLStreamHandler73 = null;
        java.net.URL uRL74 = new java.net.URL(uRL71, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler73);
        java.lang.String str75 = uRL74.getHost();
        int int76 = uRL74.getPort();
        java.net.URL uRL77 = null;
        java.net.URLStreamHandler uRLStreamHandler79 = null;
        java.net.URL uRL80 = new java.net.URL(uRL77, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler79);
        java.lang.String str81 = uRL80.getHost();
        int int82 = uRL80.getPort();
        java.net.URL uRL83 = null;
        java.net.URLStreamHandler uRLStreamHandler85 = null;
        java.net.URL uRL86 = new java.net.URL(uRL83, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler85);
        java.lang.String str87 = uRL86.getHost();
        java.lang.String str88 = uRL86.getAuthority();
        java.lang.String str89 = uRL86.getQuery();
        int int90 = uRL86.getDefaultPort();
        boolean boolean91 = uRL80.sameFile(uRL86);
        boolean boolean92 = uRL74.sameFile(uRL80);
        boolean boolean93 = uRL69.sameFile(uRL74);
        java.lang.String str94 = uRL74.getRef();
        java.lang.String str95 = uRL74.getPath();
        java.net.URL uRL97 = new java.net.URL(uRL74, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str98 = uRL74.getProtocol();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertEquals(uRL80.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertEquals(uRL86.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNull(str94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str95, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL97.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "file" + "'", str98, "file");
    }

    @Test
    public void test4173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4173");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator0.stack;
        java.io.File file5 = fileEntryIterator0.current;
        boolean boolean6 = fileEntryIterator0.recursive;
        java.io.File file7 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file9 = fileEntryIterator8.current;
        java.io.File file10 = fileEntryIterator8.poll();
        java.io.File file11 = fileEntryIterator8.poll();
        java.io.File file12 = fileEntryIterator8.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.io.File file15 = fileEntryIterator13.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.manifestFile;
        java.io.File file18 = explodedArchive16.manifestFile;
        java.io.File file19 = null;
        java.io.File file20 = explodedArchive16.getManifestFile(file19);
        fileEntryIterator13.root = file19;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file23 = explodedArchive22.manifestFile;
        java.io.File file24 = explodedArchive22.manifestFile;
        java.io.File file25 = null;
        java.io.File file26 = explodedArchive22.getManifestFile(file25);
        java.util.Iterator<java.io.File> fileItor27 = fileEntryIterator13.listFiles(file26);
        fileEntryIterator8.root = file26;
        fileEntryIterator8.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator31.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator36.thenComparing(fileComparator39);
        java.util.Comparator<java.io.File> fileComparator41 = fileComparator33.thenComparing(fileComparator39);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator42.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator45.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        java.util.Comparator<java.io.File> fileComparator51 = fileComparator47.thenComparing(fileComparator50);
        fileEntryIterator42.entryComparator = fileComparator47;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator54 = fileComparator47.thenComparing((java.util.Comparator<java.io.File>) entryComparator53);
        java.util.Comparator<java.io.File> fileComparator55 = fileComparator41.thenComparing((java.util.Comparator<java.io.File>) entryComparator53);
        fileEntryIterator8.entryComparator = fileComparator41;
        fileEntryIterator0.entryComparator = fileComparator41;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator0.entryComparator;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file20.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor27);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileComparator58);
    }

    @Test
    public void test4174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4174");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        java.io.File file3 = fileEntryIterator0.poll();
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        boolean boolean7 = fileEntryIterator5.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive8.getManifestFile(file11);
        boolean boolean13 = explodedArchive8.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        fileEntryIterator14.recursive = true;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator24.thenComparing(fileComparator27);
        fileEntryIterator19.entryComparator = fileComparator24;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator24.thenComparing(fileComparator32);
        fileEntryIterator14.entryComparator = fileComparator33;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.manifestFile;
        java.io.File file37 = explodedArchive35.manifestFile;
        java.io.File file38 = null;
        java.io.File file39 = explodedArchive35.getManifestFile(file38);
        fileEntryIterator14.root = file39;
        explodedArchive8.root = file39;
        java.util.Iterator<java.io.File> fileItor42 = fileEntryIterator5.listFiles(file39);
        boolean boolean43 = fileEntryIterator5.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean45 = explodedArchive44.recursive;
        java.io.File file46 = explodedArchive44.manifestFile;
        java.util.jar.Manifest manifest47 = null;
        explodedArchive44.manifest = manifest47;
        java.io.File file49 = explodedArchive44.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file51 = explodedArchive50.manifestFile;
        java.io.File file52 = explodedArchive50.manifestFile;
        java.io.File file53 = null;
        java.io.File file54 = explodedArchive50.getManifestFile(file53);
        boolean boolean55 = explodedArchive50.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        fileEntryIterator56.recursive = true;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator56.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        java.util.Comparator<java.io.File> fileComparator66 = fileEntryIterator64.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue68 = fileEntryIterator67.stack;
        java.util.Comparator<java.io.File> fileComparator69 = fileEntryIterator67.entryComparator;
        java.util.Comparator<java.io.File> fileComparator70 = fileComparator66.thenComparing(fileComparator69);
        fileEntryIterator61.entryComparator = fileComparator66;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator72 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue73 = fileEntryIterator72.stack;
        java.util.Comparator<java.io.File> fileComparator74 = fileEntryIterator72.entryComparator;
        java.util.Comparator<java.io.File> fileComparator75 = fileComparator66.thenComparing(fileComparator74);
        fileEntryIterator56.entryComparator = fileComparator75;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file78 = explodedArchive77.manifestFile;
        java.io.File file79 = explodedArchive77.manifestFile;
        java.io.File file80 = null;
        java.io.File file81 = explodedArchive77.getManifestFile(file80);
        fileEntryIterator56.root = file81;
        explodedArchive50.root = file81;
        explodedArchive50.recursive = false;
        java.util.jar.Manifest manifest86 = null;
        explodedArchive50.manifest = manifest86;
        java.lang.String str88 = explodedArchive50.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter89 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList90 = explodedArchive50.getNestedArchives(entryFilter89);
        java.io.File file91 = explodedArchive50.root;
        explodedArchive44.root = file91;
        fileEntryIterator5.root = file91;
        fileEntryIterator0.current = file91;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileItorQueue68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileItorQueue73);
        org.junit.Assert.assertNotNull(fileComparator74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNull(file78);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file81.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str88 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str88, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList90);
        org.junit.Assert.assertNotNull(file91);
        org.junit.Assert.assertEquals(file91.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file91.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test4175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4175");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.getRef();
        int int7 = uRL3.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler9 = null;
        java.net.URL uRL10 = new java.net.URL(uRL3, "", uRLStreamHandler9);
        int int11 = uRL10.getDefaultPort();
        java.lang.String str12 = uRL10.getUserInfo();
        java.net.URL uRL13 = null;
        java.net.URLStreamHandler uRLStreamHandler15 = null;
        java.net.URL uRL16 = new java.net.URL(uRL13, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler15);
        java.lang.String str17 = uRL16.getHost();
        java.lang.String str18 = uRL16.getAuthority();
        java.lang.String str19 = uRL16.getAuthority();
        java.lang.String str20 = uRL16.getRef();
        java.net.URL uRL21 = null;
        java.net.URLStreamHandler uRLStreamHandler23 = null;
        java.net.URL uRL24 = new java.net.URL(uRL21, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler23);
        java.lang.String str25 = uRL24.getHost();
        java.lang.String str26 = uRL24.getAuthority();
        java.lang.String str27 = uRL24.getQuery();
        int int28 = uRL24.getDefaultPort();
        java.lang.String str29 = uRL24.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler31 = null;
        java.net.URL uRL32 = new java.net.URL(uRL24, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler31);
        java.lang.String str33 = uRL32.getFile();
        boolean boolean34 = uRL16.sameFile(uRL32);
        java.lang.String str35 = uRL32.getProtocol();
        java.net.URI uRI36 = uRL32.toURI();
        java.lang.String str37 = uRL32.toExternalForm();
        boolean boolean38 = uRL10.equals((java.lang.Object) str37);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals(uRL10.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals(uRL16.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals(uRL24.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals(uRL32.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str33, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "file" + "'", str35, "file");
        org.junit.Assert.assertNotNull(uRI36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str37, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test4176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4176");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        boolean boolean4 = explodedArchive0.recursive;
        java.lang.String str5 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean8 = fileEntryIterator7.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean10 = explodedArchive9.recursive;
        java.io.File file11 = explodedArchive9.manifestFile;
        java.util.jar.Manifest manifest12 = null;
        explodedArchive9.manifest = manifest12;
        java.io.File file14 = explodedArchive9.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        java.io.File file18 = fileEntryIterator15.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.manifestFile;
        java.io.File file21 = explodedArchive19.manifestFile;
        java.io.File file22 = null;
        java.io.File file23 = explodedArchive19.getManifestFile(file22);
        fileEntryIterator15.current = file23;
        explodedArchive9.root = file23;
        fileEntryIterator7.root = file23;
        explodedArchive6.root = file23;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator28 = explodedArchive6.spliterator();
        java.io.File file29 = explodedArchive6.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str31 = fileEntry30.name;
        java.io.File file32 = fileEntry30.file;
        fileEntry30.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        boolean boolean37 = fileEntryIterator35.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        boolean boolean43 = explodedArchive38.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        fileEntryIterator44.recursive = true;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator44.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        java.util.Comparator<java.io.File> fileComparator58 = fileComparator54.thenComparing(fileComparator57);
        fileEntryIterator49.entryComparator = fileComparator54;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        java.util.Comparator<java.io.File> fileComparator63 = fileComparator54.thenComparing(fileComparator62);
        fileEntryIterator44.entryComparator = fileComparator63;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file66 = explodedArchive65.manifestFile;
        java.io.File file67 = explodedArchive65.manifestFile;
        java.io.File file68 = null;
        java.io.File file69 = explodedArchive65.getManifestFile(file68);
        fileEntryIterator44.root = file69;
        explodedArchive38.root = file69;
        java.util.Iterator<java.io.File> fileItor72 = fileEntryIterator35.listFiles(file69);
        fileEntry30.file = file69;
        explodedArchive6.root = file69;
        boolean boolean75 = explodedArchive6.recursive;
        java.io.File file76 = explodedArchive6.root;
        explodedArchive0.root = file76;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = new org.springframework.boot.loader.archive.ExplodedArchive(file76, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "exploded archive" + "'", str5, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator28);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file76.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test4177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4177");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str1 = fileEntry0.getName();
        fileEntry0.name = "exploded archive";
        fileEntry0.name = "hi!";
        java.lang.String str6 = fileEntry0.name;
        fileEntry0.name = "";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        boolean boolean11 = fileEntryIterator9.hasNext();
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator18.thenComparing(fileComparator21);
        fileEntryIterator13.entryComparator = fileComparator18;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator18.thenComparing((java.util.Comparator<java.io.File>) entryComparator24);
        java.util.Comparator<java.io.File> fileComparator26 = fileComparator12.thenComparing((java.util.Comparator<java.io.File>) entryComparator24);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean28 = fileEntryIterator27.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean30 = explodedArchive29.recursive;
        java.io.File file31 = explodedArchive29.manifestFile;
        java.util.jar.Manifest manifest32 = null;
        explodedArchive29.manifest = manifest32;
        java.io.File file34 = explodedArchive29.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator35.entryComparator;
        java.io.File file38 = fileEntryIterator35.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file40 = explodedArchive39.manifestFile;
        java.io.File file41 = explodedArchive39.manifestFile;
        java.io.File file42 = null;
        java.io.File file43 = explodedArchive39.getManifestFile(file42);
        fileEntryIterator35.current = file43;
        explodedArchive29.root = file43;
        fileEntryIterator27.root = file43;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file48 = explodedArchive47.manifestFile;
        java.io.File file49 = explodedArchive47.manifestFile;
        java.io.File file50 = null;
        java.io.File file51 = explodedArchive47.getManifestFile(file50);
        boolean boolean52 = explodedArchive47.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        fileEntryIterator53.recursive = true;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator53.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        java.util.Comparator<java.io.File> fileComparator66 = fileEntryIterator64.entryComparator;
        java.util.Comparator<java.io.File> fileComparator67 = fileComparator63.thenComparing(fileComparator66);
        fileEntryIterator58.entryComparator = fileComparator63;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator69 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue70 = fileEntryIterator69.stack;
        java.util.Comparator<java.io.File> fileComparator71 = fileEntryIterator69.entryComparator;
        java.util.Comparator<java.io.File> fileComparator72 = fileComparator63.thenComparing(fileComparator71);
        fileEntryIterator53.entryComparator = fileComparator72;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file75 = explodedArchive74.manifestFile;
        java.io.File file76 = explodedArchive74.manifestFile;
        java.io.File file77 = null;
        java.io.File file78 = explodedArchive74.getManifestFile(file77);
        fileEntryIterator53.root = file78;
        explodedArchive47.root = file78;
        int int81 = entryComparator24.compare(file43, file78);
        fileEntry0.file = file43;
        java.io.File file83 = fileEntry0.file;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file43.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file51.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileComparator72);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file78.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(file83);
        org.junit.Assert.assertEquals(file83.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file83.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test4178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4178");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getPath();
        java.lang.String str9 = uRL3.getQuery();
        java.lang.String str10 = uRL3.getUserInfo();
        java.lang.String str11 = uRL3.toExternalForm();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4179");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.net.URL uRL73 = null;
        java.net.URLStreamHandler uRLStreamHandler75 = null;
        java.net.URL uRL76 = new java.net.URL(uRL73, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler75);
        java.lang.String str77 = uRL76.getHost();
        java.lang.String str78 = uRL76.getAuthority();
        java.lang.String str79 = uRL76.getHost();
        java.lang.String str80 = uRL76.getQuery();
        java.lang.String str81 = uRL76.getAuthority();
        java.lang.String str82 = uRL76.getRef();
        boolean boolean83 = uRL69.sameFile(uRL76);
        java.net.URLStreamHandler uRLStreamHandler85 = null;
        java.net.URL uRL86 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler85);
        java.net.URL uRL88 = new java.net.URL(uRL86, "file://exploded archive");
        java.lang.String str89 = uRL88.getAuthority();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL76.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNull(str82);
// flaky:         org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertEquals(uRL86.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL88.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "exploded archive" + "'", str89, "exploded archive");
    }

    @Test
    public void test4180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4180");
        java.net.URL uRL1 = new java.net.URL("file://exploded archive");
        java.net.URL uRL2 = null;
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        java.net.URL uRL5 = new java.net.URL(uRL2, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler4);
        java.lang.String str6 = uRL5.getHost();
        java.lang.String str7 = uRL5.getAuthority();
        java.lang.String str8 = uRL5.getQuery();
        int int9 = uRL5.getDefaultPort();
        java.lang.String str10 = uRL5.getAuthority();
        java.net.URLConnection uRLConnection11 = uRL5.openConnection();
        java.lang.String str12 = uRL5.toExternalForm();
        java.lang.String str13 = uRL5.getAuthority();
        boolean boolean14 = uRL1.sameFile(uRL5);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = uRL5.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL1.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals(uRL5.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(uRLConnection11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test4181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4181");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        fileEntryIterator0.recursive = true;
        boolean boolean23 = fileEntryIterator0.recursive;
        boolean boolean24 = fileEntryIterator0.recursive;
        java.io.File file25 = fileEntryIterator0.current;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(file25);
    }

    @Test
    public void test4182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4182");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file:100", "exploded archive", (int) (short) -1, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4183");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getQuery();
        java.lang.String str16 = uRL14.getUserInfo();
        java.net.URL uRL17 = null;
        java.net.URLStreamHandler uRLStreamHandler19 = null;
        java.net.URL uRL20 = new java.net.URL(uRL17, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler19);
        java.lang.String str21 = uRL20.getHost();
        java.lang.String str22 = uRL20.getAuthority();
        java.lang.String str23 = uRL20.getHost();
        java.lang.String str24 = uRL20.getQuery();
        java.lang.String str25 = uRL20.getAuthority();
        java.lang.String str26 = uRL20.getFile();
        java.lang.String str27 = uRL20.getFile();
        java.lang.String str28 = uRL20.getProtocol();
        boolean boolean29 = uRL14.sameFile(uRL20);
        java.net.URLConnection uRLConnection30 = uRL20.openConnection();
        java.lang.String str31 = uRL20.getProtocol();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals(uRL20.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str26, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str27, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "file" + "'", str28, "file");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(uRLConnection30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "file" + "'", str31, "file");
    }

    @Test
    public void test4184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4184");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        fileEntryIterator0.recursive = true;
        fileEntryIterator0.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator0.stack;
        boolean boolean26 = fileEntryIterator0.recursive;
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        fileEntryIterator29.recursive = true;
        boolean boolean33 = fileEntryIterator29.hasNext();
        fileEntryIterator29.recursive = true;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator29.entryComparator;
        java.io.File file37 = fileEntryIterator29.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file39 = fileEntryIterator38.current;
        java.io.File file40 = fileEntryIterator38.poll();
        java.io.File file41 = fileEntryIterator38.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator38.stack;
        java.io.File file43 = fileEntryIterator38.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        java.io.File file46 = fileEntryIterator44.current;
        java.io.File file47 = fileEntryIterator44.current;
        fileEntryIterator44.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file51 = explodedArchive50.manifestFile;
        java.io.File file52 = explodedArchive50.manifestFile;
        java.io.File file53 = null;
        java.io.File file54 = explodedArchive50.getManifestFile(file53);
        fileEntryIterator44.root = file54;
        fileEntryIterator38.root = file54;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean60 = fileEntryIterator59.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean62 = explodedArchive61.recursive;
        java.io.File file63 = explodedArchive61.manifestFile;
        java.util.jar.Manifest manifest64 = null;
        explodedArchive61.manifest = manifest64;
        java.io.File file66 = explodedArchive61.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue68 = fileEntryIterator67.stack;
        java.util.Comparator<java.io.File> fileComparator69 = fileEntryIterator67.entryComparator;
        java.io.File file70 = fileEntryIterator67.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file72 = explodedArchive71.manifestFile;
        java.io.File file73 = explodedArchive71.manifestFile;
        java.io.File file74 = null;
        java.io.File file75 = explodedArchive71.getManifestFile(file74);
        fileEntryIterator67.current = file75;
        explodedArchive61.root = file75;
        fileEntryIterator59.root = file75;
        explodedArchive58.root = file75;
        fileEntryIterator38.root = file75;
        java.io.File file81 = fileEntryIterator38.current;
        java.io.File file82 = fileEntryIterator38.root;
        java.util.Iterator<java.io.File> fileItor83 = fileEntryIterator29.listFiles(file82);
        java.util.Iterator<java.io.File> fileItor84 = fileEntryIterator0.listFiles(file82);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry85 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNotNull(fileItorQueue68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file75.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor83);
        org.junit.Assert.assertNotNull(fileItor84);
    }

    @Test
    public void test4185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4185");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        boolean boolean4 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator0.entryComparator;
        boolean boolean8 = fileEntryIterator0.hasNext();
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator0.entryComparator;
        java.io.File file10 = fileEntryIterator0.current;
        boolean boolean11 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file13 = fileEntryIterator12.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator19.thenComparing(fileComparator22);
        fileEntryIterator14.entryComparator = fileComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator19.thenComparing(fileComparator27);
        fileEntryIterator12.entryComparator = fileComparator28;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator12.stack;
        boolean boolean31 = fileEntryIterator12.recursive;
        java.io.File file32 = fileEntryIterator12.current;
        fileEntryIterator12.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file38 = explodedArchive37.manifestFile;
        java.io.File file39 = explodedArchive37.manifestFile;
        java.io.File file40 = null;
        java.io.File file41 = explodedArchive37.getManifestFile(file40);
        fileEntryIterator35.current = file40;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        fileEntryIterator35.entryComparator = fileComparator45;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue48 = fileEntryIterator47.stack;
        java.util.Comparator<java.io.File> fileComparator49 = fileEntryIterator47.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        java.util.Comparator<java.io.File> fileComparator52 = fileEntryIterator50.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        java.util.Comparator<java.io.File> fileComparator56 = fileComparator52.thenComparing(fileComparator55);
        fileEntryIterator47.entryComparator = fileComparator52;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator59 = fileComparator52.thenComparing((java.util.Comparator<java.io.File>) entryComparator58);
        java.util.Comparator<java.io.File> fileComparator60 = fileComparator45.thenComparing(fileComparator52);
        java.util.Comparator<java.io.File> fileComparator61 = fileComparator45.reversed();
        fileEntryIterator12.entryComparator = fileComparator61;
        java.util.Comparator<java.io.File> fileComparator63 = fileComparator61.reversed();
        java.util.Comparator<java.io.File> fileComparator64 = fileComparator61.reversed();
        fileEntryIterator0.entryComparator = fileComparator64;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileComparator64);
    }

    @Test
    public void test4186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4186");
        java.net.URL uRL1 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj2 = uRL1.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi! (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL1.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test4187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4187");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.io.File file9 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        fileEntryIterator6.current = file14;
        explodedArchive0.root = file14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file18 = fileEntryIterator17.current;
        boolean boolean19 = fileEntryIterator17.hasNext();
        fileEntryIterator17.recursive = true;
        boolean boolean22 = fileEntryIterator17.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str24 = explodedArchive23.toString();
        boolean boolean25 = explodedArchive23.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file27 = fileEntryIterator26.current;
        java.io.File file28 = null;
        fileEntryIterator26.current = file28;
        java.io.File file30 = fileEntryIterator26.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file32 = fileEntry31.getFile();
        java.lang.String str33 = fileEntry31.name;
        java.io.File file34 = fileEntry31.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        boolean boolean37 = fileEntryIterator35.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        boolean boolean43 = explodedArchive38.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        fileEntryIterator44.recursive = true;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator44.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        java.util.Comparator<java.io.File> fileComparator58 = fileComparator54.thenComparing(fileComparator57);
        fileEntryIterator49.entryComparator = fileComparator54;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        java.util.Comparator<java.io.File> fileComparator63 = fileComparator54.thenComparing(fileComparator62);
        fileEntryIterator44.entryComparator = fileComparator63;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file66 = explodedArchive65.manifestFile;
        java.io.File file67 = explodedArchive65.manifestFile;
        java.io.File file68 = null;
        java.io.File file69 = explodedArchive65.getManifestFile(file68);
        fileEntryIterator44.root = file69;
        explodedArchive38.root = file69;
        java.util.Iterator<java.io.File> fileItor72 = fileEntryIterator35.listFiles(file69);
        fileEntry31.file = file69;
        fileEntryIterator26.current = file69;
        explodedArchive23.root = file69;
        java.util.Iterator<java.io.File> fileItor76 = fileEntryIterator17.listFiles(file69);
        explodedArchive0.root = file69;
        java.net.URL uRL78 = explodedArchive0.getUrl();
        boolean boolean79 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest80 = null;
        explodedArchive0.manifest = manifest80;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor82 = explodedArchive0.iterator();
        java.lang.Class<?> wildcardClass83 = entryItor82.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "exploded archive" + "'", str24, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor72);
        org.junit.Assert.assertNotNull(fileItor76);
        org.junit.Assert.assertNotNull(uRL78);
// flaky:         org.junit.Assert.assertEquals(uRL78.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(entryItor82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test4188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4188");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.name;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        java.io.File file5 = fileEntry0.file;
        java.lang.String str6 = fileEntry0.name;
        java.io.File file7 = fileEntry0.file;
        java.io.File file8 = fileEntry0.file;
        java.lang.String str9 = fileEntry0.getName();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = fileEntry0.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test4189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4189");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.io.File file4 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.io.File file7 = fileEntryIterator5.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        fileEntryIterator8.recursive = true;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator18.thenComparing(fileComparator21);
        fileEntryIterator13.entryComparator = fileComparator18;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator18.thenComparing(fileComparator26);
        fileEntryIterator8.entryComparator = fileComparator27;
        fileEntryIterator8.recursive = true;
        fileEntryIterator8.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator8.stack;
        fileEntryIterator5.stack = fileItorQueue33;
        fileEntryIterator0.stack = fileItorQueue33;
        java.io.File file36 = fileEntryIterator0.poll();
        fileEntryIterator0.recursive = false;
        java.io.File file39 = fileEntryIterator0.root;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file39);
    }

    @Test
    public void test4190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4190");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getProtocol();
        java.lang.String str11 = uRL9.getFile();
        java.lang.String str12 = uRL9.getRef();
        java.lang.String str13 = uRL9.getHost();
        java.lang.String str14 = uRL9.toExternalForm();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj15 = uRL9.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "file" + "'", str10, "file");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file" + "'", str11, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file" + "'", str14, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
    }

    @Test
    public void test4191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4191");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        explodedArchive0.root = file6;
        java.io.File file9 = explodedArchive0.root;
        java.lang.String str10 = explodedArchive0.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest11 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "exploded archive" + "'", str10, "exploded archive");
    }

    @Test
    public void test4192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4192");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean3 = explodedArchive2.recursive;
        java.io.File file4 = explodedArchive2.manifestFile;
        java.util.jar.Manifest manifest5 = null;
        explodedArchive2.manifest = manifest5;
        java.io.File file7 = explodedArchive2.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        java.io.File file11 = fileEntryIterator8.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.manifestFile;
        java.io.File file14 = explodedArchive12.manifestFile;
        java.io.File file15 = null;
        java.io.File file16 = explodedArchive12.getManifestFile(file15);
        fileEntryIterator8.current = file16;
        explodedArchive2.root = file16;
        fileEntryIterator0.root = file16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        boolean boolean22 = fileEntryIterator20.hasNext();
        boolean boolean23 = fileEntryIterator20.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator29.thenComparing(fileComparator32);
        fileEntryIterator24.entryComparator = fileComparator29;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator35.entryComparator;
        java.util.Comparator<java.io.File> fileComparator38 = fileComparator29.thenComparing(fileComparator37);
        java.util.Comparator<java.io.File> fileComparator39 = fileComparator37.reversed();
        fileEntryIterator20.entryComparator = fileComparator37;
        boolean boolean41 = fileEntryIterator20.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file43 = fileEntryIterator42.current;
        java.io.File file44 = fileEntryIterator42.poll();
        java.io.File file45 = fileEntryIterator42.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator52.entryComparator;
        java.util.Comparator<java.io.File> fileComparator55 = fileComparator51.thenComparing(fileComparator54);
        fileEntryIterator46.entryComparator = fileComparator51;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator58 = fileComparator51.thenComparing((java.util.Comparator<java.io.File>) entryComparator57);
        fileEntryIterator42.entryComparator = entryComparator57;
        java.io.File file60 = fileEntryIterator42.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean63 = fileEntryIterator62.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean65 = explodedArchive64.recursive;
        java.io.File file66 = explodedArchive64.manifestFile;
        java.util.jar.Manifest manifest67 = null;
        explodedArchive64.manifest = manifest67;
        java.io.File file69 = explodedArchive64.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator70 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue71 = fileEntryIterator70.stack;
        java.util.Comparator<java.io.File> fileComparator72 = fileEntryIterator70.entryComparator;
        java.io.File file73 = fileEntryIterator70.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file75 = explodedArchive74.manifestFile;
        java.io.File file76 = explodedArchive74.manifestFile;
        java.io.File file77 = null;
        java.io.File file78 = explodedArchive74.getManifestFile(file77);
        fileEntryIterator70.current = file78;
        explodedArchive64.root = file78;
        fileEntryIterator62.root = file78;
        explodedArchive61.root = file78;
        fileEntryIterator42.current = file78;
        fileEntryIterator20.root = file78;
        fileEntryIterator0.root = file78;
        java.util.Comparator<java.io.File> fileComparator86 = fileEntryIterator0.entryComparator;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file16.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNotNull(fileItorQueue71);
        org.junit.Assert.assertNotNull(fileComparator72);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file78.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileComparator86);
    }

    @Test
    public void test4193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4193");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.util.jar.Manifest manifest5 = null;
        explodedArchive0.manifest = manifest5;
        java.lang.String str7 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry8.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator16.thenComparing((java.util.Comparator<java.io.File>) entryComparator22);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator29.thenComparing(fileComparator32);
        java.util.Comparator<java.io.File> fileComparator34 = fileComparator26.thenComparing(fileComparator32);
        java.util.Comparator<java.io.File> fileComparator35 = entryComparator22.thenComparing(fileComparator34);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file37 = fileEntryIterator36.current;
        java.io.File file38 = null;
        fileEntryIterator36.current = file38;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean41 = explodedArchive40.recursive;
        java.io.File file42 = explodedArchive40.manifestFile;
        java.util.jar.Manifest manifest43 = null;
        explodedArchive40.manifest = manifest43;
        java.io.File file45 = explodedArchive40.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        java.io.File file49 = fileEntryIterator46.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file51 = explodedArchive50.manifestFile;
        java.io.File file52 = explodedArchive50.manifestFile;
        java.io.File file53 = null;
        java.io.File file54 = explodedArchive50.getManifestFile(file53);
        fileEntryIterator46.current = file54;
        explodedArchive40.root = file54;
        fileEntryIterator36.root = file54;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        fileEntryIterator58.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file63 = explodedArchive62.manifestFile;
        java.io.File file64 = explodedArchive62.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator65.stack;
        fileEntryIterator65.recursive = true;
        java.util.Comparator<java.io.File> fileComparator69 = fileEntryIterator65.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator70 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue71 = fileEntryIterator70.stack;
        java.util.Comparator<java.io.File> fileComparator72 = fileEntryIterator70.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator73 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue74 = fileEntryIterator73.stack;
        java.util.Comparator<java.io.File> fileComparator75 = fileEntryIterator73.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator76 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue77 = fileEntryIterator76.stack;
        java.util.Comparator<java.io.File> fileComparator78 = fileEntryIterator76.entryComparator;
        java.util.Comparator<java.io.File> fileComparator79 = fileComparator75.thenComparing(fileComparator78);
        fileEntryIterator70.entryComparator = fileComparator75;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator81 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue82 = fileEntryIterator81.stack;
        java.util.Comparator<java.io.File> fileComparator83 = fileEntryIterator81.entryComparator;
        java.util.Comparator<java.io.File> fileComparator84 = fileComparator75.thenComparing(fileComparator83);
        fileEntryIterator65.entryComparator = fileComparator84;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive86 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file87 = explodedArchive86.manifestFile;
        java.io.File file88 = explodedArchive86.manifestFile;
        java.io.File file89 = null;
        java.io.File file90 = explodedArchive86.getManifestFile(file89);
        fileEntryIterator65.root = file90;
        explodedArchive62.manifestFile = file90;
        fileEntryIterator58.current = file90;
        int int94 = entryComparator22.compare(file54, file90);
        fileEntry8.file = file90;
        java.io.File file96 = fileEntry8.file;
        java.io.File file97 = null;
        fileEntry8.file = file97;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive99 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "exploded archive" + "'", str7, "exploded archive");
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNotNull(fileItorQueue71);
        org.junit.Assert.assertNotNull(fileComparator72);
        org.junit.Assert.assertNotNull(fileItorQueue74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNotNull(fileItorQueue77);
        org.junit.Assert.assertNotNull(fileComparator78);
        org.junit.Assert.assertNotNull(fileComparator79);
        org.junit.Assert.assertNotNull(fileItorQueue82);
        org.junit.Assert.assertNotNull(fileComparator83);
        org.junit.Assert.assertNotNull(fileComparator84);
        org.junit.Assert.assertNull(file87);
        org.junit.Assert.assertNull(file88);
        org.junit.Assert.assertNotNull(file90);
        org.junit.Assert.assertEquals(file90.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file90.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
        org.junit.Assert.assertNotNull(file96);
        org.junit.Assert.assertEquals(file96.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file96.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test4194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4194");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", "file://hi!hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4195");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        fileEntryIterator3.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator3.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        fileEntryIterator3.root = file28;
        explodedArchive0.manifestFile = file28;
        java.util.jar.Manifest manifest31 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest32 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest33 = explodedArchive0.getManifest();
        boolean boolean34 = explodedArchive0.recursive;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL35 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test4196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4196");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.manifestFile;
        java.io.File file4 = explodedArchive2.manifestFile;
        java.io.File file5 = null;
        java.io.File file6 = explodedArchive2.getManifestFile(file5);
        fileEntryIterator0.current = file5;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        fileEntryIterator0.entryComparator = fileComparator10;
        java.io.File file12 = null;
        fileEntryIterator0.root = file12;
        boolean boolean14 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = false;
        java.io.File file17 = fileEntryIterator0.current;
        fileEntryIterator0.recursive = false;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(file17);
    }

    @Test
    public void test4197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4197");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.net.URI uRI4 = uRL3.toURI();
        java.lang.String str5 = uRL3.getFile();
        java.lang.String str6 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "", uRLStreamHandler8);
        int int10 = uRL9.getDefaultPort();
        java.lang.String str11 = uRL9.getUserInfo();
        int int12 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        fileEntryIterator13.recursive = true;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator23.thenComparing(fileComparator26);
        fileEntryIterator18.entryComparator = fileComparator23;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator23.thenComparing(fileComparator31);
        fileEntryIterator13.entryComparator = fileComparator32;
        fileEntryIterator13.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator39.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator42.entryComparator;
        java.util.Comparator<java.io.File> fileComparator45 = fileComparator41.thenComparing(fileComparator44);
        fileEntryIterator36.entryComparator = fileComparator41;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue48 = fileEntryIterator47.stack;
        java.util.Comparator<java.io.File> fileComparator49 = fileEntryIterator47.entryComparator;
        java.util.Comparator<java.io.File> fileComparator50 = fileComparator41.thenComparing(fileComparator49);
        java.util.Comparator<java.io.File> fileComparator51 = fileComparator49.reversed();
        fileEntryIterator13.entryComparator = fileComparator49;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        fileEntryIterator53.recursive = true;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator53.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        java.util.Comparator<java.io.File> fileComparator66 = fileEntryIterator64.entryComparator;
        java.util.Comparator<java.io.File> fileComparator67 = fileComparator63.thenComparing(fileComparator66);
        fileEntryIterator58.entryComparator = fileComparator63;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator69 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue70 = fileEntryIterator69.stack;
        java.util.Comparator<java.io.File> fileComparator71 = fileEntryIterator69.entryComparator;
        java.util.Comparator<java.io.File> fileComparator72 = fileComparator63.thenComparing(fileComparator71);
        fileEntryIterator53.entryComparator = fileComparator72;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file75 = explodedArchive74.manifestFile;
        java.io.File file76 = explodedArchive74.manifestFile;
        java.io.File file77 = null;
        java.io.File file78 = explodedArchive74.getManifestFile(file77);
        fileEntryIterator53.root = file78;
        java.util.Iterator<java.io.File> fileItor80 = fileEntryIterator13.listFiles(file78);
        boolean boolean81 = uRL9.equals((java.lang.Object) file78);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str5, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileComparator72);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file78.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test4198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4198");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", (int) (byte) 1, "file");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/file");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4199");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getRef();
        int int8 = uRL3.getDefaultPort();
        int int9 = uRL3.getPort();
        java.lang.String str10 = uRL3.getProtocol();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "file" + "'", str10, "file");
    }

    @Test
    public void test4200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4200");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        fileEntryIterator0.recursive = true;
        fileEntryIterator0.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator0.stack;
        boolean boolean26 = fileEntryIterator0.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator0.stack;
        boolean boolean28 = fileEntryIterator0.hasNext();
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator0.entryComparator;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(fileComparator29);
    }

    @Test
    public void test4201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4201");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        boolean boolean3 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = false;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator0.stack;
        boolean boolean7 = fileEntryIterator0.recursive;
        java.io.File file8 = fileEntryIterator0.poll();
        boolean boolean9 = fileEntryIterator0.hasNext();
        java.io.File file10 = fileEntryIterator0.current;
        java.io.File file11 = fileEntryIterator0.poll();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
    }

    @Test
    public void test4202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4202");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.net.URL uRL13 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.net.URLStreamHandler uRLStreamHandler15 = null;
        java.net.URL uRL16 = new java.net.URL(uRL3, "file://exploded archive:0", uRLStreamHandler15);
        java.lang.String str17 = uRL16.getUserInfo();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL13.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL16.toString(), "file://exploded archive:0");
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test4203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4203");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL71 = null;
        java.net.URLStreamHandler uRLStreamHandler73 = null;
        java.net.URL uRL74 = new java.net.URL(uRL71, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler73);
        java.lang.String str75 = uRL74.getHost();
        java.lang.String str76 = uRL74.getAuthority();
        java.lang.String str77 = uRL74.getAuthority();
        java.lang.String str78 = uRL74.getFile();
        int int79 = uRL74.getPort();
        java.lang.String str80 = uRL74.getRef();
        java.net.URL uRL82 = new java.net.URL(uRL74, "hi!");
        boolean boolean83 = uRL69.sameFile(uRL82);
        java.net.URL uRL84 = null;
        java.net.URLStreamHandler uRLStreamHandler86 = null;
        java.net.URL uRL87 = new java.net.URL(uRL84, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler86);
        java.lang.String str88 = uRL87.getHost();
        java.lang.String str89 = uRL87.getAuthority();
        java.lang.String str90 = uRL87.getQuery();
        int int91 = uRL87.getDefaultPort();
        int int92 = uRL87.getPort();
        boolean boolean93 = uRL82.sameFile(uRL87);
        java.lang.String str94 = uRL82.getProtocol();
        java.lang.String str95 = uRL82.getRef();
        java.lang.String str96 = uRL82.getFile();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str78, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertEquals(uRL82.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals(uRL87.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "file" + "'", str94, "file");
        org.junit.Assert.assertNull(str95);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!" + "'", str96, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test4204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4204");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file://hi!:100hi!", "", (int) (short) -1, "exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file://hi!:100hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4205");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        fileEntryIterator0.root = file6;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.manifestFile;
        java.io.File file11 = explodedArchive9.manifestFile;
        java.io.File file12 = null;
        java.io.File file13 = explodedArchive9.getManifestFile(file12);
        java.util.Iterator<java.io.File> fileItor14 = fileEntryIterator0.listFiles(file13);
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator0.stack;
        java.io.File file16 = fileEntryIterator0.poll();
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file13.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor14);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNull(file16);
    }

    @Test
    public void test4206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4206");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("file://exploded archive", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file://exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4207");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file:100", "file:100", (int) (short) 0, "file://exploded archive:0/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4208");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getQuery();
        java.lang.String str16 = uRL14.getUserInfo();
        java.net.URL uRL17 = null;
        java.net.URLStreamHandler uRLStreamHandler19 = null;
        java.net.URL uRL20 = new java.net.URL(uRL17, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler19);
        java.lang.String str21 = uRL20.getHost();
        java.lang.String str22 = uRL20.getAuthority();
        java.lang.String str23 = uRL20.getHost();
        java.lang.String str24 = uRL20.getQuery();
        java.lang.String str25 = uRL20.getAuthority();
        java.lang.String str26 = uRL20.getFile();
        java.lang.String str27 = uRL20.getFile();
        java.lang.String str28 = uRL20.getProtocol();
        boolean boolean29 = uRL14.sameFile(uRL20);
        java.lang.String str30 = uRL20.getQuery();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals(uRL20.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str26, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str27, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "file" + "'", str28, "file");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test4209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4209");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.lang.String str71 = uRL69.getHost();
        java.net.URL uRL73 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str74 = uRL73.getRef();
        int int75 = uRL73.getDefaultPort();
        java.lang.String str76 = uRL73.toExternalForm();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertEquals(uRL73.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str76, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4210");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.net.URI uRI4 = uRL3.toURI();
        java.net.URL uRL6 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        java.lang.String str7 = uRL3.getFile();
        java.net.URLConnection uRLConnection8 = uRL3.openConnection();
        java.lang.String str9 = uRL3.getAuthority();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI4);
        org.junit.Assert.assertEquals(uRL6.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test4211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4211");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL71 = null;
        java.net.URLStreamHandler uRLStreamHandler73 = null;
        java.net.URL uRL74 = new java.net.URL(uRL71, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler73);
        java.lang.String str75 = uRL74.getHost();
        java.lang.String str76 = uRL74.getAuthority();
        java.lang.String str77 = uRL74.getAuthority();
        java.lang.String str78 = uRL74.getFile();
        int int79 = uRL74.getPort();
        java.lang.String str80 = uRL74.getRef();
        java.net.URL uRL82 = new java.net.URL(uRL74, "hi!");
        boolean boolean83 = uRL69.sameFile(uRL82);
        java.lang.String str84 = uRL69.getProtocol();
        java.lang.String str85 = uRL69.getUserInfo();
        java.net.URLStreamHandler uRLStreamHandler87 = null;
        java.net.URL uRL88 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler87);
        java.net.URLStreamHandler uRLStreamHandler90 = null;
        java.net.URL uRL91 = new java.net.URL(uRL88, "file://exploded archive:0", uRLStreamHandler90);
        java.lang.String str92 = uRL88.getAuthority();
        java.net.URL uRL94 = new java.net.URL(uRL88, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        java.lang.String str95 = uRL94.getHost();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str78, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertEquals(uRL82.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "file" + "'", str84, "file");
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertEquals(uRL88.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL91.toString(), "file://exploded archive:0");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
        org.junit.Assert.assertEquals(uRL94.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "" + "'", str95, "");
    }

    @Test
    public void test4212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4212");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file22 = fileEntryIterator21.current;
        java.io.File file23 = fileEntryIterator21.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file25 = fileEntryIterator24.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator31.thenComparing(fileComparator34);
        fileEntryIterator26.entryComparator = fileComparator31;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator31.thenComparing(fileComparator39);
        fileEntryIterator24.entryComparator = fileComparator40;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator24.stack;
        fileEntryIterator21.stack = fileItorQueue42;
        fileEntryIterator0.stack = fileItorQueue42;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean47 = fileEntryIterator46.hasNext();
        fileEntryIterator46.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        fileEntryIterator50.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file55 = explodedArchive54.manifestFile;
        java.io.File file56 = explodedArchive54.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        fileEntryIterator57.recursive = true;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator62.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator65.stack;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator65.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        java.util.Comparator<java.io.File> fileComparator71 = fileComparator67.thenComparing(fileComparator70);
        fileEntryIterator62.entryComparator = fileComparator67;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator73 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue74 = fileEntryIterator73.stack;
        java.util.Comparator<java.io.File> fileComparator75 = fileEntryIterator73.entryComparator;
        java.util.Comparator<java.io.File> fileComparator76 = fileComparator67.thenComparing(fileComparator75);
        fileEntryIterator57.entryComparator = fileComparator76;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file79 = explodedArchive78.manifestFile;
        java.io.File file80 = explodedArchive78.manifestFile;
        java.io.File file81 = null;
        java.io.File file82 = explodedArchive78.getManifestFile(file81);
        fileEntryIterator57.root = file82;
        explodedArchive54.manifestFile = file82;
        fileEntryIterator50.current = file82;
        java.io.File file86 = fileEntryIterator50.current;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue87 = fileEntryIterator50.stack;
        fileEntryIterator46.stack = fileItorQueue87;
        fileEntryIterator0.stack = fileItorQueue87;
        boolean boolean90 = fileEntryIterator0.hasNext();
        boolean boolean91 = fileEntryIterator0.recursive;
        java.io.File file92 = fileEntryIterator0.current;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileItorQueue74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file86);
        org.junit.Assert.assertEquals(file86.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file86.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue87);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNull(file92);
    }

    @Test
    public void test4213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4213");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getRef();
        java.lang.String str8 = uRL3.getRef();
        java.net.URL uRL10 = new java.net.URL("file://exploded archive");
        java.lang.String str11 = uRL10.getProtocol();
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL10, "", uRLStreamHandler13);
        java.lang.String str15 = uRL10.getQuery();
        java.net.URL uRL17 = new java.net.URL(uRL10, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        boolean boolean18 = uRL3.sameFile(uRL10);
        java.net.URL uRL20 = new java.net.URL(uRL3, "file://exploded archive:0/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL10.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "file" + "'", str11, "file");
        org.junit.Assert.assertEquals(uRL14.toString(), "file://exploded archive");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals(uRL20.toString(), "file://exploded archive:0/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
    }

    @Test
    public void test4214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4214");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.net.URL uRL7 = null;
        java.net.URLStreamHandler uRLStreamHandler9 = null;
        java.net.URL uRL10 = new java.net.URL(uRL7, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler9);
        java.lang.String str11 = uRL10.getProtocol();
        java.lang.String str12 = uRL10.getUserInfo();
        java.net.URL uRL13 = null;
        java.net.URLStreamHandler uRLStreamHandler15 = null;
        java.net.URL uRL16 = new java.net.URL(uRL13, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler15);
        java.lang.String str17 = uRL16.getHost();
        java.lang.String str18 = uRL16.getAuthority();
        java.lang.String str19 = uRL16.getQuery();
        int int20 = uRL16.getDefaultPort();
        java.lang.String str21 = uRL16.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler23 = null;
        java.net.URL uRL24 = new java.net.URL(uRL16, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler23);
        boolean boolean25 = uRL10.sameFile(uRL24);
        java.lang.String str26 = uRL10.getProtocol();
        java.net.URLConnection uRLConnection27 = uRL10.openConnection();
        java.lang.String str28 = uRL10.getAuthority();
        boolean boolean29 = uRL3.equals((java.lang.Object) str28);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals(uRL10.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "file" + "'", str11, "file");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals(uRL16.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals(uRL24.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "file" + "'", str26, "file");
        org.junit.Assert.assertNotNull(uRLConnection27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test4215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4215");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file6 = fileEntry5.getFile();
        java.lang.String str7 = fileEntry5.name;
        java.io.File file8 = fileEntry5.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        boolean boolean11 = fileEntryIterator9.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.manifestFile;
        java.io.File file14 = explodedArchive12.manifestFile;
        java.io.File file15 = null;
        java.io.File file16 = explodedArchive12.getManifestFile(file15);
        boolean boolean17 = explodedArchive12.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        fileEntryIterator18.recursive = true;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator28.thenComparing(fileComparator31);
        fileEntryIterator23.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator28.thenComparing(fileComparator36);
        fileEntryIterator18.entryComparator = fileComparator37;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file40 = explodedArchive39.manifestFile;
        java.io.File file41 = explodedArchive39.manifestFile;
        java.io.File file42 = null;
        java.io.File file43 = explodedArchive39.getManifestFile(file42);
        fileEntryIterator18.root = file43;
        explodedArchive12.root = file43;
        java.util.Iterator<java.io.File> fileItor46 = fileEntryIterator9.listFiles(file43);
        fileEntry5.file = file43;
        explodedArchive0.manifestFile = file43;
        java.io.File file49 = explodedArchive0.manifestFile;
        java.io.File file50 = null;
        java.io.File file51 = explodedArchive0.getManifestFile(file50);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file51, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file16.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file43.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor46);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file51.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test4216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4216");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file://hi!hi!", "exploded archive", (int) (byte) -1, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file://hi!hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4217");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.manifestFile;
        java.io.File file6 = explodedArchive4.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        fileEntryIterator7.recursive = true;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        java.util.Comparator<java.io.File> fileComparator21 = fileComparator17.thenComparing(fileComparator20);
        fileEntryIterator12.entryComparator = fileComparator17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        java.util.Comparator<java.io.File> fileComparator26 = fileComparator17.thenComparing(fileComparator25);
        fileEntryIterator7.entryComparator = fileComparator26;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file29 = explodedArchive28.manifestFile;
        java.io.File file30 = explodedArchive28.manifestFile;
        java.io.File file31 = null;
        java.io.File file32 = explodedArchive28.getManifestFile(file31);
        fileEntryIterator7.root = file32;
        explodedArchive4.manifestFile = file32;
        fileEntryIterator0.current = file32;
        java.io.File file36 = fileEntryIterator0.current;
        java.io.File file37 = fileEntryIterator0.current;
        boolean boolean38 = fileEntryIterator0.recursive;
        boolean boolean39 = fileEntryIterator0.recursive;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator0.stack;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file32.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(fileItorQueue40);
    }

    @Test
    public void test4218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4218");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getUserInfo();
        java.lang.String str14 = uRL11.getProtocol();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", uRLStreamHandler16);
        java.net.URL uRL19 = new java.net.URL(uRL17, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL19.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4219");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        boolean boolean8 = explodedArchive3.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        fileEntryIterator9.recursive = true;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator19.thenComparing(fileComparator22);
        fileEntryIterator14.entryComparator = fileComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator19.thenComparing(fileComparator27);
        fileEntryIterator9.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.manifestFile;
        java.io.File file32 = explodedArchive30.manifestFile;
        java.io.File file33 = null;
        java.io.File file34 = explodedArchive30.getManifestFile(file33);
        fileEntryIterator9.root = file34;
        explodedArchive3.root = file34;
        java.util.Iterator<java.io.File> fileItor37 = fileEntryIterator0.listFiles(file34);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        fileEntryIterator45.recursive = true;
        java.util.Comparator<java.io.File> fileComparator49 = fileEntryIterator45.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        java.util.Comparator<java.io.File> fileComparator52 = fileEntryIterator50.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        java.util.Comparator<java.io.File> fileComparator59 = fileComparator55.thenComparing(fileComparator58);
        fileEntryIterator50.entryComparator = fileComparator55;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        java.util.Comparator<java.io.File> fileComparator64 = fileComparator55.thenComparing(fileComparator63);
        fileEntryIterator45.entryComparator = fileComparator64;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file67 = explodedArchive66.manifestFile;
        java.io.File file68 = explodedArchive66.manifestFile;
        java.io.File file69 = null;
        java.io.File file70 = explodedArchive66.getManifestFile(file69);
        fileEntryIterator45.root = file70;
        explodedArchive42.manifestFile = file70;
        fileEntryIterator38.current = file70;
        fileEntryIterator0.root = file70;
        java.util.Comparator<java.io.File> fileComparator75 = fileEntryIterator0.entryComparator;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file70.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileComparator75);
    }

    @Test
    public void test4220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4220");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLConnection uRLConnection9 = uRL3.openConnection();
        java.lang.String str10 = uRL3.getPath();
        java.lang.String str11 = uRL3.getRef();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(uRLConnection9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test4221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4221");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.net.URI uRI4 = uRL3.toURI();
        java.lang.String str5 = uRL3.getFile();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        java.net.URL uRL9 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        java.lang.String str10 = uRL9.getUserInfo();
        java.lang.String str11 = uRL9.getRef();
        java.lang.String str12 = uRL9.getAuthority();
        java.lang.String str13 = uRL9.getProtocol();
        java.net.URI uRI14 = uRL9.toURI();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str5, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "file" + "'", str13, "file");
        org.junit.Assert.assertNotNull(uRI14);
    }

    @Test
    public void test4222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4222");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.net.URL uRL74 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str75 = uRL69.getRef();
        java.lang.String str76 = uRL69.getFile();
        java.lang.String str77 = uRL69.getProtocol();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str75);
// flaky:         org.junit.Assert.assertEquals("'" + str76 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str76, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "file" + "'", str77, "file");
    }

    @Test
    public void test4223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4223");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getProtocol();
        java.lang.String str5 = uRL3.getUserInfo();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler16);
        boolean boolean18 = uRL3.sameFile(uRL17);
        java.net.URI uRI19 = uRL3.toURI();
        java.lang.String str20 = uRL3.getUserInfo();
        java.lang.String str21 = uRL3.getPath();
        java.net.Proxy proxy22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection23 = uRL3.openConnection(proxy22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "file" + "'", str4, "file");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(uRI19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str21, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4224");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest37 = null;
        explodedArchive0.manifest = manifest37;
        java.io.File file39 = explodedArchive0.manifestFile;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor40 = explodedArchive0.iterator();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator41 = explodedArchive0.spliterator();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator42 = explodedArchive0.spliterator();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(entryItor40);
        org.junit.Assert.assertNotNull(entrySpliterator41);
        org.junit.Assert.assertNotNull(entrySpliterator42);
    }

    @Test
    public void test4225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4225");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file22 = fileEntryIterator21.current;
        java.io.File file23 = fileEntryIterator21.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file25 = fileEntryIterator24.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator31.thenComparing(fileComparator34);
        fileEntryIterator26.entryComparator = fileComparator31;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator31.thenComparing(fileComparator39);
        fileEntryIterator24.entryComparator = fileComparator40;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator24.stack;
        fileEntryIterator21.stack = fileItorQueue42;
        fileEntryIterator0.stack = fileItorQueue42;
        boolean boolean45 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        fileEntryIterator49.recursive = true;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator49.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        java.util.Comparator<java.io.File> fileComparator63 = fileComparator59.thenComparing(fileComparator62);
        fileEntryIterator54.entryComparator = fileComparator59;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator65.stack;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator65.entryComparator;
        java.util.Comparator<java.io.File> fileComparator68 = fileComparator59.thenComparing(fileComparator67);
        fileEntryIterator49.entryComparator = fileComparator68;
        fileEntryIterator49.recursive = true;
        fileEntryIterator49.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue74 = fileEntryIterator49.stack;
        boolean boolean75 = fileEntryIterator49.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator76 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue77 = fileEntryIterator76.stack;
        java.util.Comparator<java.io.File> fileComparator78 = fileEntryIterator76.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator79 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue80 = fileEntryIterator79.stack;
        java.util.Comparator<java.io.File> fileComparator81 = fileEntryIterator79.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator82 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue83 = fileEntryIterator82.stack;
        java.util.Comparator<java.io.File> fileComparator84 = fileEntryIterator82.entryComparator;
        java.util.Comparator<java.io.File> fileComparator85 = fileComparator81.thenComparing(fileComparator84);
        java.util.Comparator<java.io.File> fileComparator86 = fileComparator78.thenComparing(fileComparator84);
        fileEntryIterator49.entryComparator = fileComparator78;
        java.util.Comparator<java.io.File> fileComparator88 = fileComparator48.thenComparing(fileComparator78);
        fileEntryIterator0.entryComparator = fileComparator48;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileItorQueue74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(fileItorQueue77);
        org.junit.Assert.assertNotNull(fileComparator78);
        org.junit.Assert.assertNotNull(fileItorQueue80);
        org.junit.Assert.assertNotNull(fileComparator81);
        org.junit.Assert.assertNotNull(fileItorQueue83);
        org.junit.Assert.assertNotNull(fileComparator84);
        org.junit.Assert.assertNotNull(fileComparator85);
        org.junit.Assert.assertNotNull(fileComparator86);
        org.junit.Assert.assertNotNull(fileComparator88);
    }

    @Test
    public void test4226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4226");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        java.util.jar.Manifest manifest24 = explodedArchive0.manifest;
        java.io.File file25 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest26 = null;
        explodedArchive0.manifest = manifest26;
        java.net.URL uRL28 = explodedArchive0.getUrl();
        int int29 = uRL28.getDefaultPort();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(uRL28);
// flaky:         org.junit.Assert.assertEquals(uRL28.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
    }

    @Test
    public void test4227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4227");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.name;
        java.lang.String str3 = fileEntry0.getName();
        java.lang.String str4 = fileEntry0.getName();
        java.lang.String str5 = fileEntry0.name;
        java.lang.String str6 = fileEntry0.getName();
        java.lang.String str7 = fileEntry0.name;
        java.io.File file8 = fileEntry0.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.manifestFile;
        java.io.File file11 = explodedArchive9.manifestFile;
        java.io.File file12 = null;
        java.io.File file13 = explodedArchive9.getManifestFile(file12);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file15 = fileEntry14.getFile();
        java.lang.String str16 = fileEntry14.name;
        java.io.File file17 = fileEntry14.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        boolean boolean20 = fileEntryIterator18.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file22 = explodedArchive21.manifestFile;
        java.io.File file23 = explodedArchive21.manifestFile;
        java.io.File file24 = null;
        java.io.File file25 = explodedArchive21.getManifestFile(file24);
        boolean boolean26 = explodedArchive21.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        fileEntryIterator27.recursive = true;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator27.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator35.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        java.util.Comparator<java.io.File> fileComparator41 = fileComparator37.thenComparing(fileComparator40);
        fileEntryIterator32.entryComparator = fileComparator37;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        java.util.Comparator<java.io.File> fileComparator46 = fileComparator37.thenComparing(fileComparator45);
        fileEntryIterator27.entryComparator = fileComparator46;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file49 = explodedArchive48.manifestFile;
        java.io.File file50 = explodedArchive48.manifestFile;
        java.io.File file51 = null;
        java.io.File file52 = explodedArchive48.getManifestFile(file51);
        fileEntryIterator27.root = file52;
        explodedArchive21.root = file52;
        java.util.Iterator<java.io.File> fileItor55 = fileEntryIterator18.listFiles(file52);
        fileEntry14.file = file52;
        explodedArchive9.manifestFile = file52;
        fileEntry0.file = file52;
        java.io.File file59 = fileEntry0.getFile();
        fileEntry0.name = "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive";
        java.lang.String str62 = fileEntry0.getName();
        java.io.File file63 = fileEntry0.file;
        java.lang.String str64 = fileEntry0.getName();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file13.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file25.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor55);
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive" + "'", str62, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive" + "'", str64, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
    }

    @Test
    public void test4228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4228");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.lang.String str2 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean5 = fileEntryIterator4.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean7 = explodedArchive6.recursive;
        java.io.File file8 = explodedArchive6.manifestFile;
        java.util.jar.Manifest manifest9 = null;
        explodedArchive6.manifest = manifest9;
        java.io.File file11 = explodedArchive6.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        java.io.File file15 = fileEntryIterator12.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.manifestFile;
        java.io.File file18 = explodedArchive16.manifestFile;
        java.io.File file19 = null;
        java.io.File file20 = explodedArchive16.getManifestFile(file19);
        fileEntryIterator12.current = file20;
        explodedArchive6.root = file20;
        fileEntryIterator4.root = file20;
        explodedArchive3.root = file20;
        java.io.File file25 = explodedArchive3.root;
        explodedArchive0.manifestFile = file25;
        java.io.File file27 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean29 = explodedArchive28.recursive;
        boolean boolean30 = explodedArchive28.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.manifestFile;
        java.io.File file33 = explodedArchive31.manifestFile;
        java.io.File file34 = null;
        java.io.File file35 = explodedArchive31.getManifestFile(file34);
        explodedArchive28.root = file35;
        explodedArchive28.recursive = false;
        java.io.File file39 = explodedArchive28.root;
        java.io.File file40 = explodedArchive0.getManifestFile(file39);
        java.io.File file41 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest42 = explodedArchive0.manifest;
        java.io.File file43 = explodedArchive0.root;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL44 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "exploded archive" + "'", str2, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file20.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file25.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file27.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file35.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file40.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest42);
        org.junit.Assert.assertNull(file43);
    }

    @Test
    public void test4229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4229");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        java.io.File file5 = fileEntry0.getFile();
        java.io.File file6 = fileEntry0.getFile();
        java.io.File file7 = fileEntry0.file;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = fileEntry0.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
    }

    @Test
    public void test4230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4230");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file://exploded archive:0", "exploded archive:0", (int) (short) 10, "file://exploded archive/exploded archive", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file://exploded archive:0");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4231");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getAuthority();
        int int9 = uRL3.getPort();
        java.lang.String str10 = uRL3.getPath();
        java.lang.String str11 = uRL3.toExternalForm();
        java.net.Proxy proxy12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection13 = uRL3.openConnection(proxy12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4232");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.net.URL uRL13 = new java.net.URL(uRL3, "file://exploded archive");
        java.lang.String str14 = uRL13.getProtocol();
        java.lang.String str15 = uRL13.getHost();
        java.lang.String str16 = uRL13.getFile();
        java.net.URL uRL18 = new java.net.URL(uRL13, "exploded archive");
        java.net.URL uRL19 = null;
        java.net.URLStreamHandler uRLStreamHandler21 = null;
        java.net.URL uRL22 = new java.net.URL(uRL19, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler21);
        java.lang.String str23 = uRL22.getHost();
        java.lang.String str24 = uRL22.getAuthority();
        java.lang.String str25 = uRL22.getAuthority();
        java.lang.String str26 = uRL22.getFile();
        int int27 = uRL22.getPort();
        java.lang.String str28 = uRL22.getRef();
        java.net.URL uRL30 = new java.net.URL(uRL22, "hi!");
        java.net.URLStreamHandler uRLStreamHandler32 = null;
        java.net.URL uRL33 = new java.net.URL(uRL30, "", uRLStreamHandler32);
        java.net.URL uRL35 = new java.net.URL(uRL33, "hi!");
        boolean boolean36 = uRL18.sameFile(uRL35);
        java.net.URL uRL38 = new java.net.URL(uRL35, "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj39 = uRL35.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi! (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL13.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "exploded archive" + "'", str15, "exploded archive");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals(uRL18.toString(), "file://exploded archive/exploded archive");
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str26, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals(uRL30.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL33.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals(uRL38.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test4233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4233");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator0.stack;
        java.io.File file5 = fileEntryIterator0.current;
        boolean boolean6 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean8 = explodedArchive7.recursive;
        boolean boolean9 = explodedArchive7.recursive;
        java.io.File file10 = explodedArchive7.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file12 = fileEntry11.getFile();
        java.io.File file13 = fileEntry11.file;
        java.io.File file14 = null;
        fileEntry11.file = file14;
        java.lang.String str16 = fileEntry11.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        boolean boolean19 = fileEntryIterator17.hasNext();
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        java.util.Comparator<java.io.File> fileComparator30 = fileComparator26.thenComparing(fileComparator29);
        fileEntryIterator21.entryComparator = fileComparator26;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator26.thenComparing((java.util.Comparator<java.io.File>) entryComparator32);
        java.util.Comparator<java.io.File> fileComparator34 = fileComparator20.thenComparing((java.util.Comparator<java.io.File>) entryComparator32);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean36 = fileEntryIterator35.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean38 = explodedArchive37.recursive;
        java.io.File file39 = explodedArchive37.manifestFile;
        java.util.jar.Manifest manifest40 = null;
        explodedArchive37.manifest = manifest40;
        java.io.File file42 = explodedArchive37.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        java.io.File file46 = fileEntryIterator43.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file48 = explodedArchive47.manifestFile;
        java.io.File file49 = explodedArchive47.manifestFile;
        java.io.File file50 = null;
        java.io.File file51 = explodedArchive47.getManifestFile(file50);
        fileEntryIterator43.current = file51;
        explodedArchive37.root = file51;
        fileEntryIterator35.root = file51;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file56 = explodedArchive55.manifestFile;
        java.io.File file57 = explodedArchive55.manifestFile;
        java.io.File file58 = null;
        java.io.File file59 = explodedArchive55.getManifestFile(file58);
        boolean boolean60 = explodedArchive55.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        fileEntryIterator61.recursive = true;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator61.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator66 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue67 = fileEntryIterator66.stack;
        java.util.Comparator<java.io.File> fileComparator68 = fileEntryIterator66.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator69 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue70 = fileEntryIterator69.stack;
        java.util.Comparator<java.io.File> fileComparator71 = fileEntryIterator69.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator72 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue73 = fileEntryIterator72.stack;
        java.util.Comparator<java.io.File> fileComparator74 = fileEntryIterator72.entryComparator;
        java.util.Comparator<java.io.File> fileComparator75 = fileComparator71.thenComparing(fileComparator74);
        fileEntryIterator66.entryComparator = fileComparator71;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator77 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue78 = fileEntryIterator77.stack;
        java.util.Comparator<java.io.File> fileComparator79 = fileEntryIterator77.entryComparator;
        java.util.Comparator<java.io.File> fileComparator80 = fileComparator71.thenComparing(fileComparator79);
        fileEntryIterator61.entryComparator = fileComparator80;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file83 = explodedArchive82.manifestFile;
        java.io.File file84 = explodedArchive82.manifestFile;
        java.io.File file85 = null;
        java.io.File file86 = explodedArchive82.getManifestFile(file85);
        fileEntryIterator61.root = file86;
        explodedArchive55.root = file86;
        int int89 = entryComparator32.compare(file51, file86);
        fileEntry11.file = file86;
        java.io.File file91 = explodedArchive7.getManifestFile(file86);
        fileEntryIterator0.root = file86;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive93 = new org.springframework.boot.loader.archive.ExplodedArchive(file86);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file51.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileItorQueue67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileItorQueue70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileItorQueue73);
        org.junit.Assert.assertNotNull(fileComparator74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNotNull(fileItorQueue78);
        org.junit.Assert.assertNotNull(fileComparator79);
        org.junit.Assert.assertNotNull(fileComparator80);
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertNull(file84);
        org.junit.Assert.assertNotNull(file86);
        org.junit.Assert.assertEquals(file86.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file86.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNotNull(file91);
        org.junit.Assert.assertEquals(file91.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file91.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4234");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        java.lang.String str5 = fileEntry0.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        boolean boolean8 = fileEntryIterator6.hasNext();
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator15.thenComparing(fileComparator18);
        fileEntryIterator10.entryComparator = fileComparator15;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator15.thenComparing((java.util.Comparator<java.io.File>) entryComparator21);
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator21);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean25 = fileEntryIterator24.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean27 = explodedArchive26.recursive;
        java.io.File file28 = explodedArchive26.manifestFile;
        java.util.jar.Manifest manifest29 = null;
        explodedArchive26.manifest = manifest29;
        java.io.File file31 = explodedArchive26.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.io.File file35 = fileEntryIterator32.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file37 = explodedArchive36.manifestFile;
        java.io.File file38 = explodedArchive36.manifestFile;
        java.io.File file39 = null;
        java.io.File file40 = explodedArchive36.getManifestFile(file39);
        fileEntryIterator32.current = file40;
        explodedArchive26.root = file40;
        fileEntryIterator24.root = file40;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.manifestFile;
        java.io.File file46 = explodedArchive44.manifestFile;
        java.io.File file47 = null;
        java.io.File file48 = explodedArchive44.getManifestFile(file47);
        boolean boolean49 = explodedArchive44.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        fileEntryIterator50.recursive = true;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator50.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        java.util.Comparator<java.io.File> fileComparator64 = fileComparator60.thenComparing(fileComparator63);
        fileEntryIterator55.entryComparator = fileComparator60;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator66 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue67 = fileEntryIterator66.stack;
        java.util.Comparator<java.io.File> fileComparator68 = fileEntryIterator66.entryComparator;
        java.util.Comparator<java.io.File> fileComparator69 = fileComparator60.thenComparing(fileComparator68);
        fileEntryIterator50.entryComparator = fileComparator69;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file72 = explodedArchive71.manifestFile;
        java.io.File file73 = explodedArchive71.manifestFile;
        java.io.File file74 = null;
        java.io.File file75 = explodedArchive71.getManifestFile(file74);
        fileEntryIterator50.root = file75;
        explodedArchive44.root = file75;
        int int78 = entryComparator21.compare(file40, file75);
        fileEntry0.file = file75;
        java.lang.String str80 = fileEntry0.getName();
        java.io.File file81 = fileEntry0.getFile();
        java.io.File file82 = fileEntry0.file;
        java.io.File file83 = fileEntry0.getFile();
        java.lang.String str84 = fileEntry0.getName();
        java.io.File file85 = fileEntry0.getFile();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file40.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file75.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file81.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file83);
        org.junit.Assert.assertEquals(file83.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file83.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(file85);
        org.junit.Assert.assertEquals(file85.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file85.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test4235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4235");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.io.File file4 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file6 = fileEntryIterator5.current;
        java.io.File file7 = fileEntryIterator5.poll();
        java.io.File file8 = fileEntryIterator5.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        java.util.Comparator<java.io.File> fileComparator18 = fileComparator14.thenComparing(fileComparator17);
        fileEntryIterator9.entryComparator = fileComparator14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator21 = fileComparator14.thenComparing((java.util.Comparator<java.io.File>) entryComparator20);
        fileEntryIterator5.entryComparator = entryComparator20;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        fileEntryIterator23.recursive = true;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator31.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator33.thenComparing(fileComparator36);
        fileEntryIterator28.entryComparator = fileComparator33;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator39.entryComparator;
        java.util.Comparator<java.io.File> fileComparator42 = fileComparator33.thenComparing(fileComparator41);
        fileEntryIterator23.entryComparator = fileComparator42;
        java.util.Comparator<java.io.File> fileComparator44 = entryComparator20.thenComparing(fileComparator42);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file46 = explodedArchive45.manifestFile;
        java.io.File file47 = explodedArchive45.manifestFile;
        java.io.File file48 = null;
        java.io.File file49 = explodedArchive45.getManifestFile(file48);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean51 = fileEntryIterator50.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean53 = explodedArchive52.recursive;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.util.jar.Manifest manifest55 = null;
        explodedArchive52.manifest = manifest55;
        java.io.File file57 = explodedArchive52.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        java.io.File file61 = fileEntryIterator58.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file63 = explodedArchive62.manifestFile;
        java.io.File file64 = explodedArchive62.manifestFile;
        java.io.File file65 = null;
        java.io.File file66 = explodedArchive62.getManifestFile(file65);
        fileEntryIterator58.current = file66;
        explodedArchive52.root = file66;
        fileEntryIterator50.root = file66;
        int int70 = entryComparator20.compare(file49, file66);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator71 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file72 = fileEntryIterator71.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator73 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue74 = fileEntryIterator73.stack;
        java.util.Comparator<java.io.File> fileComparator75 = fileEntryIterator73.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator76 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue77 = fileEntryIterator76.stack;
        java.util.Comparator<java.io.File> fileComparator78 = fileEntryIterator76.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator79 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue80 = fileEntryIterator79.stack;
        java.util.Comparator<java.io.File> fileComparator81 = fileEntryIterator79.entryComparator;
        java.util.Comparator<java.io.File> fileComparator82 = fileComparator78.thenComparing(fileComparator81);
        fileEntryIterator73.entryComparator = fileComparator78;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator84 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue85 = fileEntryIterator84.stack;
        java.util.Comparator<java.io.File> fileComparator86 = fileEntryIterator84.entryComparator;
        java.util.Comparator<java.io.File> fileComparator87 = fileComparator78.thenComparing(fileComparator86);
        fileEntryIterator71.entryComparator = fileComparator87;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue89 = fileEntryIterator71.stack;
        java.io.File file90 = fileEntryIterator71.current;
        java.util.Comparator<java.io.File> fileComparator91 = fileEntryIterator71.entryComparator;
        java.util.Comparator<java.io.File> fileComparator92 = entryComparator20.thenComparing(fileComparator91);
        java.util.Comparator<java.io.File> fileComparator93 = fileComparator91.reversed();
        java.util.Comparator<java.io.File> fileComparator94 = fileComparator91.reversed();
        fileEntryIterator0.entryComparator = fileComparator91;
        java.util.Comparator<java.io.File> fileComparator96 = fileEntryIterator0.entryComparator;
        boolean boolean97 = fileEntryIterator0.recursive;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue98 = fileEntryIterator0.stack;
        boolean boolean99 = fileEntryIterator0.hasNext();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNotNull(fileItorQueue74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNotNull(fileItorQueue77);
        org.junit.Assert.assertNotNull(fileComparator78);
        org.junit.Assert.assertNotNull(fileItorQueue80);
        org.junit.Assert.assertNotNull(fileComparator81);
        org.junit.Assert.assertNotNull(fileComparator82);
        org.junit.Assert.assertNotNull(fileItorQueue85);
        org.junit.Assert.assertNotNull(fileComparator86);
        org.junit.Assert.assertNotNull(fileComparator87);
        org.junit.Assert.assertNotNull(fileItorQueue89);
        org.junit.Assert.assertNull(file90);
        org.junit.Assert.assertNotNull(fileComparator91);
        org.junit.Assert.assertNotNull(fileComparator92);
        org.junit.Assert.assertNotNull(fileComparator93);
        org.junit.Assert.assertNotNull(fileComparator94);
        org.junit.Assert.assertNotNull(fileComparator96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertNotNull(fileItorQueue98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test4236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4236");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.util.Comparator<java.io.File> fileComparator2 = fileEntryIterator0.entryComparator;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator0.stack;
        java.io.File file4 = fileEntryIterator0.poll();
        java.io.File file5 = fileEntryIterator0.current;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator2);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
    }

    @Test
    public void test4237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4237");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        java.util.jar.Manifest manifest39 = null;
        explodedArchive0.manifest = manifest39;
        java.io.File file41 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest42 = null;
        explodedArchive0.manifest = manifest42;
        java.io.File file44 = explodedArchive0.manifestFile;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file44);
    }

    @Test
    public void test4238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4238");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        boolean boolean8 = explodedArchive3.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        fileEntryIterator9.recursive = true;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator19.thenComparing(fileComparator22);
        fileEntryIterator14.entryComparator = fileComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator19.thenComparing(fileComparator27);
        fileEntryIterator9.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.manifestFile;
        java.io.File file32 = explodedArchive30.manifestFile;
        java.io.File file33 = null;
        java.io.File file34 = explodedArchive30.getManifestFile(file33);
        fileEntryIterator9.root = file34;
        explodedArchive3.root = file34;
        java.util.Iterator<java.io.File> fileItor37 = fileEntryIterator0.listFiles(file34);
        boolean boolean38 = fileEntryIterator0.recursive;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator0.entryComparator;
        java.io.File file40 = fileEntryIterator0.root;
        boolean boolean41 = fileEntryIterator0.hasNext();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test4239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4239");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file://exploded archive", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", (int) '#', "file://exploded archive", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file://exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4240");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL1 = new java.net.URL("hi!:10");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: hi!:10");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4241");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.lang.String str10 = uRL3.getFile();
        java.net.URL uRL11 = null;
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getHost();
        java.lang.String str16 = uRL14.getAuthority();
        java.lang.String str17 = uRL14.getAuthority();
        java.lang.String str18 = uRL14.getRef();
        java.net.URL uRL19 = null;
        java.net.URLStreamHandler uRLStreamHandler21 = null;
        java.net.URL uRL22 = new java.net.URL(uRL19, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler21);
        java.lang.String str23 = uRL22.getHost();
        java.lang.String str24 = uRL22.getAuthority();
        java.lang.String str25 = uRL22.getQuery();
        int int26 = uRL22.getDefaultPort();
        java.lang.String str27 = uRL22.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler29 = null;
        java.net.URL uRL30 = new java.net.URL(uRL22, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler29);
        java.lang.String str31 = uRL30.getFile();
        boolean boolean32 = uRL14.sameFile(uRL30);
        boolean boolean33 = uRL3.sameFile(uRL30);
        java.net.URL uRL34 = null;
        java.net.URLStreamHandler uRLStreamHandler36 = null;
        java.net.URL uRL37 = new java.net.URL(uRL34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler36);
        java.lang.String str38 = uRL37.getHost();
        java.lang.String str39 = uRL37.getAuthority();
        java.lang.String str40 = uRL37.getAuthority();
        java.lang.String str41 = uRL37.getFile();
        int int42 = uRL37.getPort();
        java.lang.String str43 = uRL37.getRef();
        java.net.URL uRL45 = new java.net.URL(uRL37, "hi!");
        boolean boolean46 = uRL3.sameFile(uRL45);
        int int47 = uRL3.getDefaultPort();
        java.net.URL uRL48 = null;
        java.net.URLStreamHandler uRLStreamHandler50 = null;
        java.net.URL uRL51 = new java.net.URL(uRL48, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler50);
        java.lang.String str52 = uRL51.getHost();
        int int53 = uRL51.getPort();
        java.net.URLStreamHandler uRLStreamHandler55 = null;
        java.net.URL uRL56 = new java.net.URL(uRL51, "hi!", uRLStreamHandler55);
        java.net.URLConnection uRLConnection57 = uRL56.openConnection();
        boolean boolean58 = uRL3.sameFile(uRL56);
        java.lang.String str59 = uRL3.getRef();
        java.lang.String str60 = uRL3.getRef();
        java.net.URLStreamHandler uRLStreamHandler62 = null;
        java.net.URL uRL63 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", uRLStreamHandler62);
        java.net.URL uRL65 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        java.lang.String str66 = uRL65.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals(uRL30.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str31, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals(uRL37.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str41, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals(uRL45.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertEquals(uRL51.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertEquals(uRL56.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNotNull(uRLConnection57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertEquals(uRL63.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL65.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file" + "'", str66, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
    }

    @Test
    public void test4242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4242");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean4 = fileEntryIterator3.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        fileEntryIterator3.stack = fileItorQueue6;
        fileEntryIterator0.stack = fileItorQueue6;
        java.io.File file9 = fileEntryIterator0.poll();
        java.io.File file10 = fileEntryIterator0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file12 = fileEntry11.getFile();
        java.lang.String str13 = fileEntry11.name;
        java.io.File file14 = null;
        fileEntry11.file = file14;
        java.io.File file16 = fileEntry11.file;
        java.lang.String str17 = fileEntry11.name;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.io.File file20 = fileEntryIterator18.current;
        java.io.File file21 = fileEntryIterator18.current;
        fileEntryIterator18.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        fileEntryIterator18.root = file28;
        fileEntry11.file = file28;
        java.lang.String str31 = fileEntry11.name;
        java.lang.String str32 = fileEntry11.name;
        java.io.File file33 = fileEntry11.getFile();
        java.io.File file34 = fileEntry11.file;
        java.util.Iterator<java.io.File> fileItor35 = fileEntryIterator0.listFiles(file34);
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor35);
    }

    @Test
    public void test4243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4243");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.io.File file9 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        fileEntryIterator6.current = file14;
        explodedArchive0.root = file14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file18 = fileEntry17.getFile();
        java.io.File file19 = fileEntry17.file;
        fileEntry17.name = "";
        java.lang.String str22 = fileEntry17.name;
        java.io.File file23 = fileEntry17.file;
        java.io.File file24 = fileEntry17.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.manifestFile;
        java.io.File file27 = explodedArchive25.manifestFile;
        java.io.File file28 = null;
        java.io.File file29 = explodedArchive25.getManifestFile(file28);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file31 = fileEntry30.getFile();
        java.lang.String str32 = fileEntry30.name;
        java.io.File file33 = fileEntry30.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        boolean boolean36 = fileEntryIterator34.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file38 = explodedArchive37.manifestFile;
        java.io.File file39 = explodedArchive37.manifestFile;
        java.io.File file40 = null;
        java.io.File file41 = explodedArchive37.getManifestFile(file40);
        boolean boolean42 = explodedArchive37.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        fileEntryIterator43.recursive = true;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator53.thenComparing(fileComparator56);
        fileEntryIterator48.entryComparator = fileComparator53;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        java.util.Comparator<java.io.File> fileComparator62 = fileComparator53.thenComparing(fileComparator61);
        fileEntryIterator43.entryComparator = fileComparator62;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file65 = explodedArchive64.manifestFile;
        java.io.File file66 = explodedArchive64.manifestFile;
        java.io.File file67 = null;
        java.io.File file68 = explodedArchive64.getManifestFile(file67);
        fileEntryIterator43.root = file68;
        explodedArchive37.root = file68;
        java.util.Iterator<java.io.File> fileItor71 = fileEntryIterator34.listFiles(file68);
        fileEntry30.file = file68;
        explodedArchive25.manifestFile = file68;
        fileEntry17.file = file68;
        explodedArchive0.root = file68;
        explodedArchive0.recursive = false;
        java.io.File file78 = explodedArchive0.root;
        explodedArchive0.recursive = true;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file68.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor71);
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file78.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test4244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4244");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("hi!", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4245");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.lang.String str10 = uRL3.getFile();
        java.net.URL uRL11 = null;
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getHost();
        java.lang.String str16 = uRL14.getAuthority();
        java.lang.String str17 = uRL14.getAuthority();
        java.lang.String str18 = uRL14.getRef();
        java.net.URL uRL19 = null;
        java.net.URLStreamHandler uRLStreamHandler21 = null;
        java.net.URL uRL22 = new java.net.URL(uRL19, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler21);
        java.lang.String str23 = uRL22.getHost();
        java.lang.String str24 = uRL22.getAuthority();
        java.lang.String str25 = uRL22.getQuery();
        int int26 = uRL22.getDefaultPort();
        java.lang.String str27 = uRL22.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler29 = null;
        java.net.URL uRL30 = new java.net.URL(uRL22, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler29);
        java.lang.String str31 = uRL30.getFile();
        boolean boolean32 = uRL14.sameFile(uRL30);
        boolean boolean33 = uRL3.sameFile(uRL30);
        java.net.URI uRI34 = uRL3.toURI();
        java.lang.String str35 = uRL3.getQuery();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals(uRL30.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str31, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(uRI34);
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test4246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4246");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4247");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator2.stack;
        fileEntryIterator0.stack = fileItorQueue3;
        java.io.File file5 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file7 = fileEntryIterator6.current;
        java.io.File file8 = fileEntryIterator6.poll();
        java.io.File file9 = fileEntryIterator6.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator6.stack;
        fileEntryIterator0.stack = fileItorQueue10;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        boolean boolean18 = explodedArchive13.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        fileEntryIterator19.recursive = true;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator29.thenComparing(fileComparator32);
        fileEntryIterator24.entryComparator = fileComparator29;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator35.entryComparator;
        java.util.Comparator<java.io.File> fileComparator38 = fileComparator29.thenComparing(fileComparator37);
        fileEntryIterator19.entryComparator = fileComparator38;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.manifestFile;
        java.io.File file42 = explodedArchive40.manifestFile;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive40.getManifestFile(file43);
        fileEntryIterator19.root = file44;
        explodedArchive13.root = file44;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor47 = explodedArchive13.iterator();
        java.io.File file48 = explodedArchive13.root;
        java.io.File file49 = explodedArchive13.root;
        fileEntryIterator0.root = file49;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive(file49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entryItor47);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test4248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4248");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.net.URLStreamHandler uRLStreamHandler11 = null;
        java.net.URL uRL12 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler11);
        java.lang.String str13 = uRL12.getHost();
        java.lang.String str14 = uRL12.getUserInfo();
        java.lang.String str15 = uRL12.getFile();
        int int16 = uRL12.getDefaultPort();
        java.lang.String str17 = uRL12.getHost();
        java.lang.String str18 = uRL12.getFile();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals(uRL12.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str15, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str18, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4249");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        java.lang.String str34 = explodedArchive0.toString();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator35 = explodedArchive0.spliterator();
        java.io.File file36 = null;
        explodedArchive0.manifestFile = file36;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.lang.String str41 = explodedArchive38.toString();
        java.lang.String str42 = explodedArchive38.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean44 = fileEntryIterator43.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean46 = explodedArchive45.recursive;
        java.io.File file47 = explodedArchive45.manifestFile;
        java.util.jar.Manifest manifest48 = null;
        explodedArchive45.manifest = manifest48;
        java.io.File file50 = explodedArchive45.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        java.io.File file54 = fileEntryIterator51.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file56 = explodedArchive55.manifestFile;
        java.io.File file57 = explodedArchive55.manifestFile;
        java.io.File file58 = null;
        java.io.File file59 = explodedArchive55.getManifestFile(file58);
        fileEntryIterator51.current = file59;
        explodedArchive45.root = file59;
        fileEntryIterator43.root = file59;
        java.io.File file63 = explodedArchive38.getManifestFile(file59);
        java.io.File file64 = explodedArchive0.getManifestFile(file59);
        java.net.URL uRL65 = explodedArchive0.getUrl();
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor66 = explodedArchive0.iterator();
        java.net.URL uRL67 = explodedArchive0.getUrl();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator35);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "exploded archive" + "'", str41, "exploded archive");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "exploded archive" + "'", str42, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file64.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRL65);
// flaky:         org.junit.Assert.assertEquals(uRL65.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entryItor66);
        org.junit.Assert.assertNotNull(uRL67);
// flaky:         org.junit.Assert.assertEquals(uRL67.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4250");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.io.File file4 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.io.File file7 = fileEntryIterator5.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        fileEntryIterator8.recursive = true;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator18.thenComparing(fileComparator21);
        fileEntryIterator13.entryComparator = fileComparator18;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator18.thenComparing(fileComparator26);
        fileEntryIterator8.entryComparator = fileComparator27;
        fileEntryIterator8.recursive = true;
        fileEntryIterator8.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator8.stack;
        fileEntryIterator5.stack = fileItorQueue33;
        fileEntryIterator0.stack = fileItorQueue33;
        java.io.File file36 = fileEntryIterator0.current;
        java.io.File file37 = fileEntryIterator0.current;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
    }

    @Test
    public void test4251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4251");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.io.File file4 = fileEntryIterator0.poll();
        fileEntryIterator0.recursive = true;
        boolean boolean7 = fileEntryIterator0.recursive;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator0.stack;
        java.io.File file9 = fileEntryIterator0.poll();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry10 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNull(file9);
    }

    @Test
    public void test4252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4252");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getAuthority();
        java.net.URL uRL71 = null;
        java.net.URLStreamHandler uRLStreamHandler73 = null;
        java.net.URL uRL74 = new java.net.URL(uRL71, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler73);
        java.lang.String str75 = uRL74.getHost();
        int int76 = uRL74.getPort();
        java.net.URL uRL77 = null;
        java.net.URLStreamHandler uRLStreamHandler79 = null;
        java.net.URL uRL80 = new java.net.URL(uRL77, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler79);
        java.lang.String str81 = uRL80.getHost();
        int int82 = uRL80.getPort();
        java.net.URL uRL83 = null;
        java.net.URLStreamHandler uRLStreamHandler85 = null;
        java.net.URL uRL86 = new java.net.URL(uRL83, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler85);
        java.lang.String str87 = uRL86.getHost();
        java.lang.String str88 = uRL86.getAuthority();
        java.lang.String str89 = uRL86.getQuery();
        int int90 = uRL86.getDefaultPort();
        boolean boolean91 = uRL80.sameFile(uRL86);
        boolean boolean92 = uRL74.sameFile(uRL80);
        boolean boolean93 = uRL69.sameFile(uRL74);
        java.lang.String str94 = uRL69.getProtocol();
        java.lang.String str95 = uRL69.getPath();
        java.lang.String str96 = uRL69.getAuthority();
        java.net.URL uRL98 = new java.net.URL(uRL69, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        java.net.URI uRI99 = uRL69.toURI();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertEquals(uRL80.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertEquals(uRL86.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "file" + "'", str94, "file");
// flaky:         org.junit.Assert.assertEquals("'" + str95 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str95, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "" + "'", str96, "");
        org.junit.Assert.assertEquals(uRL98.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertNotNull(uRI99);
    }

    @Test
    public void test4253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4253");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        boolean boolean14 = uRL3.sameFile(uRL9);
        java.net.Proxy proxy15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection16 = uRL3.openConnection(proxy15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test4254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4254");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("exploded archive", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", (int) (short) 1, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4255");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file39 = fileEntryIterator38.current;
        java.io.File file40 = fileEntryIterator38.poll();
        java.io.File file41 = fileEntryIterator38.poll();
        java.io.File file42 = fileEntryIterator38.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.io.File file45 = fileEntryIterator43.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        fileEntryIterator43.root = file49;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.manifestFile;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.io.File file55 = null;
        java.io.File file56 = explodedArchive52.getManifestFile(file55);
        java.util.Iterator<java.io.File> fileItor57 = fileEntryIterator43.listFiles(file56);
        fileEntryIterator38.root = file56;
        explodedArchive0.root = file56;
        explodedArchive0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean63 = explodedArchive62.recursive;
        boolean boolean64 = explodedArchive62.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file66 = explodedArchive65.manifestFile;
        java.io.File file67 = explodedArchive65.manifestFile;
        java.io.File file68 = null;
        java.io.File file69 = explodedArchive65.getManifestFile(file68);
        explodedArchive62.root = file69;
        explodedArchive62.recursive = false;
        java.io.File file73 = explodedArchive62.root;
        java.io.File file74 = explodedArchive0.getManifestFile(file73);
        java.net.URL uRL75 = explodedArchive0.getUrl();
        java.util.jar.Manifest manifest76 = explodedArchive0.manifest;
        java.io.File file77 = explodedArchive0.manifestFile;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor57);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file73.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file74.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRL75);
// flaky:         org.junit.Assert.assertEquals(uRL75.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest76);
        org.junit.Assert.assertNull(file77);
    }

    @Test
    public void test4256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4256");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", "", 100, "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4257");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.io.File file9 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        fileEntryIterator6.current = file14;
        explodedArchive0.root = file14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file18 = fileEntryIterator17.current;
        boolean boolean19 = fileEntryIterator17.hasNext();
        fileEntryIterator17.recursive = true;
        boolean boolean22 = fileEntryIterator17.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str24 = explodedArchive23.toString();
        boolean boolean25 = explodedArchive23.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file27 = fileEntryIterator26.current;
        java.io.File file28 = null;
        fileEntryIterator26.current = file28;
        java.io.File file30 = fileEntryIterator26.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file32 = fileEntry31.getFile();
        java.lang.String str33 = fileEntry31.name;
        java.io.File file34 = fileEntry31.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        boolean boolean37 = fileEntryIterator35.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        boolean boolean43 = explodedArchive38.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        fileEntryIterator44.recursive = true;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator44.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        java.util.Comparator<java.io.File> fileComparator58 = fileComparator54.thenComparing(fileComparator57);
        fileEntryIterator49.entryComparator = fileComparator54;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        java.util.Comparator<java.io.File> fileComparator63 = fileComparator54.thenComparing(fileComparator62);
        fileEntryIterator44.entryComparator = fileComparator63;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file66 = explodedArchive65.manifestFile;
        java.io.File file67 = explodedArchive65.manifestFile;
        java.io.File file68 = null;
        java.io.File file69 = explodedArchive65.getManifestFile(file68);
        fileEntryIterator44.root = file69;
        explodedArchive38.root = file69;
        java.util.Iterator<java.io.File> fileItor72 = fileEntryIterator35.listFiles(file69);
        fileEntry31.file = file69;
        fileEntryIterator26.current = file69;
        explodedArchive23.root = file69;
        java.util.Iterator<java.io.File> fileItor76 = fileEntryIterator17.listFiles(file69);
        explodedArchive0.root = file69;
        java.net.URL uRL78 = explodedArchive0.getUrl();
        boolean boolean79 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest80 = null;
        explodedArchive0.manifest = manifest80;
        java.io.File file82 = explodedArchive0.manifestFile;
        java.io.File file83 = explodedArchive0.manifestFile;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "exploded archive" + "'", str24, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor72);
        org.junit.Assert.assertNotNull(fileItor76);
        org.junit.Assert.assertNotNull(uRL78);
// flaky:         org.junit.Assert.assertEquals(uRL78.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertNull(file83);
    }

    @Test
    public void test4258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4258");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file22 = explodedArchive21.manifestFile;
        java.io.File file23 = explodedArchive21.manifestFile;
        java.io.File file24 = null;
        java.io.File file25 = explodedArchive21.getManifestFile(file24);
        fileEntryIterator0.root = file25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        explodedArchive27.recursive = true;
        java.lang.String str31 = explodedArchive27.toString();
        boolean boolean32 = explodedArchive27.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file34 = fileEntryIterator33.current;
        java.io.File file35 = fileEntryIterator33.poll();
        java.io.File file36 = fileEntryIterator33.poll();
        java.io.File file37 = fileEntryIterator33.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.io.File file40 = fileEntryIterator38.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file42 = explodedArchive41.manifestFile;
        java.io.File file43 = explodedArchive41.manifestFile;
        java.io.File file44 = null;
        java.io.File file45 = explodedArchive41.getManifestFile(file44);
        fileEntryIterator38.root = file44;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file48 = explodedArchive47.manifestFile;
        java.io.File file49 = explodedArchive47.manifestFile;
        java.io.File file50 = null;
        java.io.File file51 = explodedArchive47.getManifestFile(file50);
        java.util.Iterator<java.io.File> fileItor52 = fileEntryIterator38.listFiles(file51);
        fileEntryIterator33.root = file51;
        explodedArchive27.manifestFile = file51;
        fileEntryIterator0.root = file51;
        boolean boolean56 = fileEntryIterator0.recursive;
        java.io.File file57 = fileEntryIterator0.current;
        java.io.File file58 = fileEntryIterator0.current;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file25.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "exploded archive" + "'", str31, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file51.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNull(file58);
    }

    @Test
    public void test4259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4259");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        java.lang.String str7 = uRL3.getQuery();
        java.net.URL uRL9 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        java.net.URLConnection uRLConnection10 = uRL9.openConnection();
        java.lang.String str11 = uRL9.toExternalForm();
        java.lang.String str12 = uRL9.getAuthority();
        java.net.URL uRL13 = null;
        java.net.URLStreamHandler uRLStreamHandler15 = null;
        java.net.URL uRL16 = new java.net.URL(uRL13, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler15);
        java.lang.String str17 = uRL16.getHost();
        java.lang.String str18 = uRL16.getAuthority();
        java.lang.String str19 = uRL16.getQuery();
        int int20 = uRL16.getDefaultPort();
        java.lang.String str21 = uRL16.getAuthority();
        java.net.URLConnection uRLConnection22 = uRL16.openConnection();
        java.lang.String str23 = uRL16.toExternalForm();
        java.lang.String str24 = uRL16.getAuthority();
        boolean boolean25 = uRL9.sameFile(uRL16);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertNotNull(uRLConnection10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive" + "'", str11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals(uRL16.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(uRLConnection22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str23, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test4260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4260");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        fileEntryIterator0.recursive = true;
        fileEntryIterator0.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean27 = explodedArchive26.recursive;
        boolean boolean28 = explodedArchive26.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file30 = explodedArchive29.manifestFile;
        java.io.File file31 = explodedArchive29.manifestFile;
        java.io.File file32 = null;
        java.io.File file33 = explodedArchive29.getManifestFile(file32);
        explodedArchive26.root = file33;
        fileEntryIterator0.root = file33;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file37 = explodedArchive36.manifestFile;
        java.io.File file38 = explodedArchive36.manifestFile;
        java.io.File file39 = null;
        java.io.File file40 = explodedArchive36.getManifestFile(file39);
        boolean boolean41 = explodedArchive36.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        fileEntryIterator42.recursive = true;
        java.util.Comparator<java.io.File> fileComparator46 = fileEntryIterator42.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue48 = fileEntryIterator47.stack;
        java.util.Comparator<java.io.File> fileComparator49 = fileEntryIterator47.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        java.util.Comparator<java.io.File> fileComparator52 = fileEntryIterator50.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        java.util.Comparator<java.io.File> fileComparator56 = fileComparator52.thenComparing(fileComparator55);
        fileEntryIterator47.entryComparator = fileComparator52;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        java.util.Comparator<java.io.File> fileComparator61 = fileComparator52.thenComparing(fileComparator60);
        fileEntryIterator42.entryComparator = fileComparator61;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file64 = explodedArchive63.manifestFile;
        java.io.File file65 = explodedArchive63.manifestFile;
        java.io.File file66 = null;
        java.io.File file67 = explodedArchive63.getManifestFile(file66);
        fileEntryIterator42.root = file67;
        explodedArchive36.root = file67;
        explodedArchive36.recursive = false;
        java.util.jar.Manifest manifest72 = null;
        explodedArchive36.manifest = manifest72;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator74 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file75 = fileEntryIterator74.current;
        java.io.File file76 = fileEntryIterator74.poll();
        java.io.File file77 = fileEntryIterator74.poll();
        java.io.File file78 = fileEntryIterator74.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator79 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue80 = fileEntryIterator79.stack;
        java.io.File file81 = fileEntryIterator79.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file83 = explodedArchive82.manifestFile;
        java.io.File file84 = explodedArchive82.manifestFile;
        java.io.File file85 = null;
        java.io.File file86 = explodedArchive82.getManifestFile(file85);
        fileEntryIterator79.root = file85;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive88 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file89 = explodedArchive88.manifestFile;
        java.io.File file90 = explodedArchive88.manifestFile;
        java.io.File file91 = null;
        java.io.File file92 = explodedArchive88.getManifestFile(file91);
        java.util.Iterator<java.io.File> fileItor93 = fileEntryIterator79.listFiles(file92);
        fileEntryIterator74.root = file92;
        explodedArchive36.root = file92;
        fileEntryIterator0.current = file92;
        java.io.File file97 = null;
        fileEntryIterator0.current = file97;
        java.io.File file99 = fileEntryIterator0.current;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file40.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNotNull(fileItorQueue48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file67.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNull(file78);
        org.junit.Assert.assertNotNull(fileItorQueue80);
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertNull(file84);
        org.junit.Assert.assertNotNull(file86);
        org.junit.Assert.assertEquals(file86.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file86.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file89);
        org.junit.Assert.assertNull(file90);
        org.junit.Assert.assertNotNull(file92);
        org.junit.Assert.assertEquals(file92.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file92.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor93);
        org.junit.Assert.assertNull(file99);
    }

    @Test
    public void test4261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4261");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        boolean boolean2 = fileEntryIterator0.recursive;
        boolean boolean3 = fileEntryIterator0.recursive;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        boolean boolean7 = fileEntryIterator5.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive8.getManifestFile(file11);
        boolean boolean13 = explodedArchive8.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        fileEntryIterator14.recursive = true;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator24.thenComparing(fileComparator27);
        fileEntryIterator19.entryComparator = fileComparator24;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator24.thenComparing(fileComparator32);
        fileEntryIterator14.entryComparator = fileComparator33;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.manifestFile;
        java.io.File file37 = explodedArchive35.manifestFile;
        java.io.File file38 = null;
        java.io.File file39 = explodedArchive35.getManifestFile(file38);
        fileEntryIterator14.root = file39;
        explodedArchive8.root = file39;
        java.util.Iterator<java.io.File> fileItor42 = fileEntryIterator5.listFiles(file39);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        fileEntryIterator43.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file48 = explodedArchive47.manifestFile;
        java.io.File file49 = explodedArchive47.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        fileEntryIterator50.recursive = true;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator50.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        java.util.Comparator<java.io.File> fileComparator64 = fileComparator60.thenComparing(fileComparator63);
        fileEntryIterator55.entryComparator = fileComparator60;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator66 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue67 = fileEntryIterator66.stack;
        java.util.Comparator<java.io.File> fileComparator68 = fileEntryIterator66.entryComparator;
        java.util.Comparator<java.io.File> fileComparator69 = fileComparator60.thenComparing(fileComparator68);
        fileEntryIterator50.entryComparator = fileComparator69;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file72 = explodedArchive71.manifestFile;
        java.io.File file73 = explodedArchive71.manifestFile;
        java.io.File file74 = null;
        java.io.File file75 = explodedArchive71.getManifestFile(file74);
        fileEntryIterator50.root = file75;
        explodedArchive47.manifestFile = file75;
        fileEntryIterator43.current = file75;
        fileEntryIterator5.root = file75;
        java.util.Iterator<java.io.File> fileItor80 = fileEntryIterator0.listFiles(file75);
        boolean boolean81 = fileEntryIterator0.recursive;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry82 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file75.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test4262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4262");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        boolean boolean3 = fileEntryIterator0.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean6 = explodedArchive5.recursive;
        boolean boolean7 = explodedArchive5.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive8.getManifestFile(file11);
        explodedArchive5.root = file12;
        fileEntryIterator0.root = file12;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator20.thenComparing(fileComparator23);
        fileEntryIterator15.entryComparator = fileComparator20;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        java.util.Comparator<java.io.File> fileComparator29 = fileComparator20.thenComparing(fileComparator28);
        fileEntryIterator0.entryComparator = fileComparator29;
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry33.name = "exploded archive";
        java.lang.String str36 = fileEntry33.name;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file38 = fileEntryIterator37.current;
        boolean boolean39 = fileEntryIterator37.hasNext();
        fileEntryIterator37.recursive = true;
        boolean boolean42 = fileEntryIterator37.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str44 = explodedArchive43.toString();
        boolean boolean45 = explodedArchive43.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file47 = fileEntryIterator46.current;
        java.io.File file48 = null;
        fileEntryIterator46.current = file48;
        java.io.File file50 = fileEntryIterator46.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file52 = fileEntry51.getFile();
        java.lang.String str53 = fileEntry51.name;
        java.io.File file54 = fileEntry51.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        boolean boolean57 = fileEntryIterator55.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file59 = explodedArchive58.manifestFile;
        java.io.File file60 = explodedArchive58.manifestFile;
        java.io.File file61 = null;
        java.io.File file62 = explodedArchive58.getManifestFile(file61);
        boolean boolean63 = explodedArchive58.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        fileEntryIterator64.recursive = true;
        java.util.Comparator<java.io.File> fileComparator68 = fileEntryIterator64.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator69 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue70 = fileEntryIterator69.stack;
        java.util.Comparator<java.io.File> fileComparator71 = fileEntryIterator69.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator72 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue73 = fileEntryIterator72.stack;
        java.util.Comparator<java.io.File> fileComparator74 = fileEntryIterator72.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator75 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue76 = fileEntryIterator75.stack;
        java.util.Comparator<java.io.File> fileComparator77 = fileEntryIterator75.entryComparator;
        java.util.Comparator<java.io.File> fileComparator78 = fileComparator74.thenComparing(fileComparator77);
        fileEntryIterator69.entryComparator = fileComparator74;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator80 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue81 = fileEntryIterator80.stack;
        java.util.Comparator<java.io.File> fileComparator82 = fileEntryIterator80.entryComparator;
        java.util.Comparator<java.io.File> fileComparator83 = fileComparator74.thenComparing(fileComparator82);
        fileEntryIterator64.entryComparator = fileComparator83;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive85 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file86 = explodedArchive85.manifestFile;
        java.io.File file87 = explodedArchive85.manifestFile;
        java.io.File file88 = null;
        java.io.File file89 = explodedArchive85.getManifestFile(file88);
        fileEntryIterator64.root = file89;
        explodedArchive58.root = file89;
        java.util.Iterator<java.io.File> fileItor92 = fileEntryIterator55.listFiles(file89);
        fileEntry51.file = file89;
        fileEntryIterator46.current = file89;
        explodedArchive43.root = file89;
        java.util.Iterator<java.io.File> fileItor96 = fileEntryIterator37.listFiles(file89);
        fileEntry33.file = file89;
        java.util.Iterator<java.io.File> fileItor98 = fileEntryIterator0.listFiles(file89);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive99 = new org.springframework.boot.loader.archive.ExplodedArchive(file89);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "exploded archive" + "'", str36, "exploded archive");
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "exploded archive" + "'", str44, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileItorQueue70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileItorQueue73);
        org.junit.Assert.assertNotNull(fileComparator74);
        org.junit.Assert.assertNotNull(fileItorQueue76);
        org.junit.Assert.assertNotNull(fileComparator77);
        org.junit.Assert.assertNotNull(fileComparator78);
        org.junit.Assert.assertNotNull(fileItorQueue81);
        org.junit.Assert.assertNotNull(fileComparator82);
        org.junit.Assert.assertNotNull(fileComparator83);
        org.junit.Assert.assertNull(file86);
        org.junit.Assert.assertNull(file87);
        org.junit.Assert.assertNotNull(file89);
        org.junit.Assert.assertEquals(file89.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file89.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor92);
        org.junit.Assert.assertNotNull(fileItor96);
        org.junit.Assert.assertNotNull(fileItor98);
    }

    @Test
    public void test4263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4263");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        boolean boolean41 = explodedArchive0.recursive;
        java.io.File file42 = null;
        explodedArchive0.manifestFile = file42;
        java.io.File file44 = explodedArchive0.root;
        java.util.jar.Manifest manifest45 = null;
        explodedArchive0.manifest = manifest45;
        java.io.File file47 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest48 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file50 = fileEntry49.getFile();
        fileEntry49.name = "";
        fileEntry49.name = "hi!";
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean57 = fileEntryIterator56.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean59 = explodedArchive58.recursive;
        java.io.File file60 = explodedArchive58.manifestFile;
        java.util.jar.Manifest manifest61 = null;
        explodedArchive58.manifest = manifest61;
        java.io.File file63 = explodedArchive58.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        java.util.Comparator<java.io.File> fileComparator66 = fileEntryIterator64.entryComparator;
        java.io.File file67 = fileEntryIterator64.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file69 = explodedArchive68.manifestFile;
        java.io.File file70 = explodedArchive68.manifestFile;
        java.io.File file71 = null;
        java.io.File file72 = explodedArchive68.getManifestFile(file71);
        fileEntryIterator64.current = file72;
        explodedArchive58.root = file72;
        fileEntryIterator56.root = file72;
        explodedArchive55.root = file72;
        java.io.File file77 = explodedArchive55.root;
        fileEntry49.file = file77;
        java.io.File file79 = fileEntry49.getFile();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive80 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: File must exist");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNotNull(file72);
        org.junit.Assert.assertEquals(file72.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file72.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file77.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file79.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test4264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4264");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.util.Comparator<java.io.File> fileComparator2 = fileEntryIterator0.entryComparator;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive6.recursive = true;
        java.io.File file9 = explodedArchive6.manifestFile;
        java.util.jar.Manifest manifest10 = explodedArchive6.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator11.current = file16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.io.File file21 = fileEntryIterator19.current;
        java.util.ArrayDeque<java.util.Iterator<java.io.File>> fileItorQueue22 = new java.util.ArrayDeque<java.util.Iterator<java.io.File>>();
        fileEntryIterator19.stack = fileItorQueue22;
        boolean boolean24 = fileEntryIterator19.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator19.stack;
        fileEntryIterator11.stack = fileItorQueue25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.lang.String str30 = explodedArchive27.toString();
        java.lang.String str31 = explodedArchive27.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean33 = fileEntryIterator32.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean35 = explodedArchive34.recursive;
        java.io.File file36 = explodedArchive34.manifestFile;
        java.util.jar.Manifest manifest37 = null;
        explodedArchive34.manifest = manifest37;
        java.io.File file39 = explodedArchive34.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator40.stack;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator40.entryComparator;
        java.io.File file43 = fileEntryIterator40.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.manifestFile;
        java.io.File file46 = explodedArchive44.manifestFile;
        java.io.File file47 = null;
        java.io.File file48 = explodedArchive44.getManifestFile(file47);
        fileEntryIterator40.current = file48;
        explodedArchive34.root = file48;
        fileEntryIterator32.root = file48;
        java.io.File file52 = explodedArchive27.getManifestFile(file48);
        java.util.Iterator<java.io.File> fileItor53 = fileEntryIterator11.listFiles(file52);
        explodedArchive6.manifestFile = file52;
        java.io.File file55 = explodedArchive6.root;
        java.io.File file56 = explodedArchive6.manifestFile;
        fileEntryIterator0.current = file56;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive(file56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator2);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "exploded archive" + "'", str30, "exploded archive");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "exploded archive" + "'", str31, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(fileItorQueue41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor53);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4265");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.lang.String str8 = uRL3.getProtocol();
        java.net.URL uRL10 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        java.lang.String str11 = uRL3.getHost();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "file" + "'", str8, "file");
        org.junit.Assert.assertEquals(uRL10.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test4266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4266");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getHost();
        java.net.URI uRI16 = uRL14.toURI();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(uRI16);
    }

    @Test
    public void test4267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4267");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator15);
        fileEntryIterator0.entryComparator = entryComparator15;
        java.io.File file18 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        fileEntryIterator19.recursive = true;
        boolean boolean23 = fileEntryIterator19.hasNext();
        fileEntryIterator19.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        fileEntryIterator26.recursive = true;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator31.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator36.thenComparing(fileComparator39);
        fileEntryIterator31.entryComparator = fileComparator36;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator42.entryComparator;
        java.util.Comparator<java.io.File> fileComparator45 = fileComparator36.thenComparing(fileComparator44);
        fileEntryIterator26.entryComparator = fileComparator45;
        fileEntryIterator26.recursive = true;
        fileEntryIterator26.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator26.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean53 = explodedArchive52.recursive;
        boolean boolean54 = explodedArchive52.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file56 = explodedArchive55.manifestFile;
        java.io.File file57 = explodedArchive55.manifestFile;
        java.io.File file58 = null;
        java.io.File file59 = explodedArchive55.getManifestFile(file58);
        explodedArchive52.root = file59;
        fileEntryIterator26.root = file59;
        fileEntryIterator19.root = file59;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator19.entryComparator;
        fileEntryIterator0.entryComparator = fileComparator63;
        fileEntryIterator0.recursive = false;
        java.io.File file67 = fileEntryIterator0.root;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNull(file67);
    }

    @Test
    public void test4268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4268");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file3 = fileEntryIterator2.current;
        java.io.File file4 = fileEntryIterator2.poll();
        java.io.File file5 = fileEntryIterator2.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        java.util.Comparator<java.io.File> fileComparator15 = fileComparator11.thenComparing(fileComparator14);
        fileEntryIterator6.entryComparator = fileComparator11;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator18 = fileComparator11.thenComparing((java.util.Comparator<java.io.File>) entryComparator17);
        fileEntryIterator2.entryComparator = entryComparator17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        fileEntryIterator20.recursive = true;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator20.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator31.entryComparator;
        java.util.Comparator<java.io.File> fileComparator34 = fileComparator30.thenComparing(fileComparator33);
        fileEntryIterator25.entryComparator = fileComparator30;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        java.util.Comparator<java.io.File> fileComparator39 = fileComparator30.thenComparing(fileComparator38);
        fileEntryIterator20.entryComparator = fileComparator39;
        java.util.Comparator<java.io.File> fileComparator41 = entryComparator17.thenComparing(fileComparator39);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.io.File file45 = null;
        java.io.File file46 = explodedArchive42.getManifestFile(file45);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean48 = fileEntryIterator47.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean50 = explodedArchive49.recursive;
        java.io.File file51 = explodedArchive49.manifestFile;
        java.util.jar.Manifest manifest52 = null;
        explodedArchive49.manifest = manifest52;
        java.io.File file54 = explodedArchive49.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        java.io.File file58 = fileEntryIterator55.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator55.current = file63;
        explodedArchive49.root = file63;
        fileEntryIterator47.root = file63;
        int int67 = entryComparator17.compare(file46, file63);
        java.util.Iterator<java.io.File> fileItor68 = fileEntryIterator0.listFiles(file46);
        java.util.Comparator<java.io.File> fileComparator69 = fileEntryIterator0.entryComparator;
        java.io.File file70 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator71 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue72 = fileEntryIterator71.stack;
        java.io.File file73 = fileEntryIterator71.current;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue74 = fileEntryIterator71.stack;
        fileEntryIterator0.stack = fileItorQueue74;
        fileEntryIterator0.recursive = true;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(fileItor68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNotNull(fileItorQueue72);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNotNull(fileItorQueue74);
    }

    @Test
    public void test4269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4269");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", "file://exploded archive:0", 0, "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4270");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        fileEntryIterator3.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator3.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        fileEntryIterator3.root = file28;
        explodedArchive0.manifestFile = file28;
        java.util.jar.Manifest manifest31 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest32 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest33 = explodedArchive0.getManifest();
        boolean boolean34 = explodedArchive0.recursive;
        java.io.File file35 = explodedArchive0.manifestFile;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file35.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test4271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4271");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.lang.String str71 = uRL69.getHost();
        java.net.URL uRL73 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str74 = uRL73.getRef();
        int int75 = uRL73.getDefaultPort();
        java.lang.String str76 = uRL73.getAuthority();
        int int77 = uRL73.getPort();
        java.lang.String str78 = uRL73.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertEquals(uRL73.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str78, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4272");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.getRef();
        int int7 = uRL3.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler9 = null;
        java.net.URL uRL10 = new java.net.URL(uRL3, "", uRLStreamHandler9);
        java.net.URL uRL11 = null;
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getHost();
        java.net.URI uRI16 = uRL14.toURI();
        java.lang.String str17 = uRL14.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler19 = null;
        java.net.URL uRL20 = new java.net.URL(uRL14, "file", uRLStreamHandler19);
        java.lang.String str21 = uRL14.getFile();
        java.net.URL uRL22 = null;
        java.net.URLStreamHandler uRLStreamHandler24 = null;
        java.net.URL uRL25 = new java.net.URL(uRL22, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler24);
        java.lang.String str26 = uRL25.getHost();
        java.lang.String str27 = uRL25.getAuthority();
        java.lang.String str28 = uRL25.getAuthority();
        java.lang.String str29 = uRL25.getRef();
        java.net.URL uRL30 = null;
        java.net.URLStreamHandler uRLStreamHandler32 = null;
        java.net.URL uRL33 = new java.net.URL(uRL30, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler32);
        java.lang.String str34 = uRL33.getHost();
        java.lang.String str35 = uRL33.getAuthority();
        java.lang.String str36 = uRL33.getQuery();
        int int37 = uRL33.getDefaultPort();
        java.lang.String str38 = uRL33.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler40 = null;
        java.net.URL uRL41 = new java.net.URL(uRL33, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler40);
        java.lang.String str42 = uRL41.getFile();
        boolean boolean43 = uRL25.sameFile(uRL41);
        boolean boolean44 = uRL14.sameFile(uRL41);
        java.net.URL uRL45 = null;
        java.net.URLStreamHandler uRLStreamHandler47 = null;
        java.net.URL uRL48 = new java.net.URL(uRL45, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler47);
        java.lang.String str49 = uRL48.getHost();
        java.lang.String str50 = uRL48.getAuthority();
        java.lang.String str51 = uRL48.getAuthority();
        java.lang.String str52 = uRL48.getFile();
        int int53 = uRL48.getPort();
        java.lang.String str54 = uRL48.getRef();
        java.net.URL uRL56 = new java.net.URL(uRL48, "hi!");
        boolean boolean57 = uRL14.sameFile(uRL56);
        int int58 = uRL14.getDefaultPort();
        boolean boolean59 = uRL10.sameFile(uRL14);
        java.net.URLStreamHandler uRLStreamHandler61 = null;
        java.net.URL uRL62 = new java.net.URL(uRL14, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", uRLStreamHandler61);
        java.lang.String str63 = uRL62.getUserInfo();
        java.lang.String str64 = uRL62.getProtocol();
        java.net.URLStreamHandler uRLStreamHandler66 = null;
        java.net.URL uRL67 = new java.net.URL(uRL62, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", uRLStreamHandler66);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals(uRL10.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(uRI16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str17, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL20.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str21, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL25.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals(uRL33.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals(uRL41.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str42, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals(uRL48.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str52, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals(uRL56.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals(uRL62.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "file" + "'", str64, "file");
        org.junit.Assert.assertEquals(uRL67.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
    }

    @Test
    public void test4273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4273");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file:100", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", (int) (short) 1, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4274");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        java.util.ArrayDeque<java.util.Iterator<java.io.File>> fileItorQueue3 = new java.util.ArrayDeque<java.util.Iterator<java.io.File>>();
        fileEntryIterator0.stack = fileItorQueue3;
        fileEntryIterator0.recursive = false;
        boolean boolean7 = fileEntryIterator0.hasNext();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test4275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4275");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.recursive;
        boolean boolean2 = fileEntryIterator0.recursive;
        boolean boolean3 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file5 = fileEntryIterator4.current;
        boolean boolean6 = fileEntryIterator4.hasNext();
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator4.entryComparator;
        java.util.Comparator<java.io.File> fileComparator8 = fileComparator7.reversed();
        fileEntryIterator0.entryComparator = fileComparator7;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        boolean boolean15 = explodedArchive10.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        fileEntryIterator16.recursive = true;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        java.util.Comparator<java.io.File> fileComparator30 = fileComparator26.thenComparing(fileComparator29);
        fileEntryIterator21.entryComparator = fileComparator26;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator26.thenComparing(fileComparator34);
        fileEntryIterator16.entryComparator = fileComparator35;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file38 = explodedArchive37.manifestFile;
        java.io.File file39 = explodedArchive37.manifestFile;
        java.io.File file40 = null;
        java.io.File file41 = explodedArchive37.getManifestFile(file40);
        fileEntryIterator16.root = file41;
        explodedArchive10.root = file41;
        explodedArchive10.recursive = false;
        java.util.jar.Manifest manifest46 = null;
        explodedArchive10.manifest = manifest46;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file49 = fileEntryIterator48.current;
        java.io.File file50 = fileEntryIterator48.poll();
        java.io.File file51 = fileEntryIterator48.poll();
        java.io.File file52 = fileEntryIterator48.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.io.File file55 = fileEntryIterator53.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file57 = explodedArchive56.manifestFile;
        java.io.File file58 = explodedArchive56.manifestFile;
        java.io.File file59 = null;
        java.io.File file60 = explodedArchive56.getManifestFile(file59);
        fileEntryIterator53.root = file59;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file63 = explodedArchive62.manifestFile;
        java.io.File file64 = explodedArchive62.manifestFile;
        java.io.File file65 = null;
        java.io.File file66 = explodedArchive62.getManifestFile(file65);
        java.util.Iterator<java.io.File> fileItor67 = fileEntryIterator53.listFiles(file66);
        fileEntryIterator48.root = file66;
        explodedArchive10.root = file66;
        java.io.File file70 = explodedArchive10.root;
        java.io.File file71 = explodedArchive10.root;
        java.util.Iterator<java.io.File> fileItor72 = fileEntryIterator0.listFiles(file71);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file60.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file66.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor67);
        org.junit.Assert.assertNotNull(file70);
        org.junit.Assert.assertEquals(file70.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file70.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file71.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor72);
    }

    @Test
    public void test4276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4276");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        java.util.jar.Manifest manifest24 = explodedArchive0.manifest;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator25 = explodedArchive0.spliterator();
        java.net.URL uRL26 = explodedArchive0.getUrl();
        java.lang.String str27 = uRL26.getAuthority();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertNotNull(entrySpliterator25);
        org.junit.Assert.assertNotNull(uRL26);
// flaky:         org.junit.Assert.assertEquals(uRL26.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
    }

    @Test
    public void test4277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4277");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getUserInfo();
        java.lang.String str14 = uRL11.getProtocol();
        java.net.URLConnection uRLConnection15 = uRL11.openConnection();
        java.net.URL uRL17 = new java.net.URL(uRL11, "file://exploded archive");
        java.lang.String str18 = uRL11.getRef();
        java.net.URL uRL20 = new java.net.URL(uRL11, "exploded archive");
        java.lang.String str21 = uRL20.getPath();
        java.net.URL uRL23 = new java.net.URL(uRL20, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        java.net.URL uRL25 = new java.net.URL(uRL20, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        java.lang.String str26 = uRL25.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertNotNull(uRLConnection15);
        org.junit.Assert.assertEquals(uRL17.toString(), "file://exploded archive");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals(uRL20.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive" + "'", str21, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertEquals(uRL23.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL25.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file" + "'", str26, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
    }

    @Test
    public void test4278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4278");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = true;
        java.lang.String str4 = explodedArchive0.toString();
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file7 = fileEntryIterator6.current;
        java.io.File file8 = fileEntryIterator6.poll();
        java.io.File file9 = fileEntryIterator6.poll();
        java.io.File file10 = fileEntryIterator6.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.io.File file13 = fileEntryIterator11.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.manifestFile;
        java.io.File file16 = explodedArchive14.manifestFile;
        java.io.File file17 = null;
        java.io.File file18 = explodedArchive14.getManifestFile(file17);
        fileEntryIterator11.root = file17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.manifestFile;
        java.io.File file22 = explodedArchive20.manifestFile;
        java.io.File file23 = null;
        java.io.File file24 = explodedArchive20.getManifestFile(file23);
        java.util.Iterator<java.io.File> fileItor25 = fileEntryIterator11.listFiles(file24);
        fileEntryIterator6.root = file24;
        explodedArchive0.manifestFile = file24;
        explodedArchive0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.manifestFile;
        java.io.File file32 = explodedArchive30.manifestFile;
        java.io.File file33 = null;
        java.io.File file34 = explodedArchive30.getManifestFile(file33);
        boolean boolean35 = explodedArchive30.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        fileEntryIterator36.recursive = true;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator36.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        java.util.Comparator<java.io.File> fileComparator43 = fileEntryIterator41.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        java.util.Comparator<java.io.File> fileComparator46 = fileEntryIterator44.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue48 = fileEntryIterator47.stack;
        java.util.Comparator<java.io.File> fileComparator49 = fileEntryIterator47.entryComparator;
        java.util.Comparator<java.io.File> fileComparator50 = fileComparator46.thenComparing(fileComparator49);
        fileEntryIterator41.entryComparator = fileComparator46;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator52.entryComparator;
        java.util.Comparator<java.io.File> fileComparator55 = fileComparator46.thenComparing(fileComparator54);
        fileEntryIterator36.entryComparator = fileComparator55;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.manifestFile;
        java.io.File file59 = explodedArchive57.manifestFile;
        java.io.File file60 = null;
        java.io.File file61 = explodedArchive57.getManifestFile(file60);
        fileEntryIterator36.root = file61;
        explodedArchive30.root = file61;
        explodedArchive30.recursive = false;
        java.util.jar.Manifest manifest66 = null;
        explodedArchive30.manifest = manifest66;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file69 = fileEntryIterator68.current;
        java.io.File file70 = fileEntryIterator68.poll();
        java.io.File file71 = fileEntryIterator68.poll();
        java.io.File file72 = fileEntryIterator68.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator73 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue74 = fileEntryIterator73.stack;
        java.io.File file75 = fileEntryIterator73.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file77 = explodedArchive76.manifestFile;
        java.io.File file78 = explodedArchive76.manifestFile;
        java.io.File file79 = null;
        java.io.File file80 = explodedArchive76.getManifestFile(file79);
        fileEntryIterator73.root = file79;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file83 = explodedArchive82.manifestFile;
        java.io.File file84 = explodedArchive82.manifestFile;
        java.io.File file85 = null;
        java.io.File file86 = explodedArchive82.getManifestFile(file85);
        java.util.Iterator<java.io.File> fileItor87 = fileEntryIterator73.listFiles(file86);
        fileEntryIterator68.root = file86;
        explodedArchive30.root = file86;
        java.io.File file90 = explodedArchive30.root;
        java.io.File file91 = explodedArchive30.root;
        java.io.File file92 = explodedArchive0.getManifestFile(file91);
        java.lang.String str93 = explodedArchive0.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor94 = explodedArchive0.iterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "exploded archive" + "'", str4, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor25);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNotNull(fileItorQueue48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNotNull(fileItorQueue74);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNull(file78);
        org.junit.Assert.assertNotNull(file80);
        org.junit.Assert.assertEquals(file80.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file80.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertNull(file84);
        org.junit.Assert.assertNotNull(file86);
        org.junit.Assert.assertEquals(file86.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file86.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor87);
        org.junit.Assert.assertNotNull(file90);
        org.junit.Assert.assertEquals(file90.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file90.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file91);
        org.junit.Assert.assertEquals(file91.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file91.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file92);
        org.junit.Assert.assertEquals(file92.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file92.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "exploded archive" + "'", str93, "exploded archive");
    }

    @Test
    public void test4279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4279");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        boolean boolean14 = uRL3.sameFile(uRL9);
        int int15 = uRL3.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean18 = fileEntryIterator17.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean20 = explodedArchive19.recursive;
        java.io.File file21 = explodedArchive19.manifestFile;
        java.util.jar.Manifest manifest22 = null;
        explodedArchive19.manifest = manifest22;
        java.io.File file24 = explodedArchive19.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.io.File file28 = fileEntryIterator25.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file30 = explodedArchive29.manifestFile;
        java.io.File file31 = explodedArchive29.manifestFile;
        java.io.File file32 = null;
        java.io.File file33 = explodedArchive29.getManifestFile(file32);
        fileEntryIterator25.current = file33;
        explodedArchive19.root = file33;
        fileEntryIterator17.root = file33;
        explodedArchive16.root = file33;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator38 = explodedArchive16.spliterator();
        java.io.File file39 = explodedArchive16.root;
        java.util.jar.Manifest manifest40 = explodedArchive16.manifest;
        java.io.File file41 = explodedArchive16.manifestFile;
        java.util.jar.Manifest manifest42 = null;
        explodedArchive16.manifest = manifest42;
        java.net.URL uRL44 = explodedArchive16.getUrl();
        boolean boolean45 = uRL3.sameFile(uRL44);
        java.lang.String str46 = uRL44.getRef();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator38);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(uRL44);
// flaky:         org.junit.Assert.assertEquals(uRL44.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(str46);
    }

    @Test
    public void test4280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4280");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        fileEntryIterator0.root = file6;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.manifestFile;
        java.io.File file11 = explodedArchive9.manifestFile;
        java.io.File file12 = null;
        java.io.File file13 = explodedArchive9.getManifestFile(file12);
        java.util.Iterator<java.io.File> fileItor14 = fileEntryIterator0.listFiles(file13);
        boolean boolean15 = fileEntryIterator0.hasNext();
        boolean boolean16 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.io.File file19 = fileEntryIterator17.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.manifestFile;
        java.io.File file22 = explodedArchive20.manifestFile;
        java.io.File file23 = null;
        java.io.File file24 = explodedArchive20.getManifestFile(file23);
        fileEntryIterator17.root = file23;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file27 = explodedArchive26.manifestFile;
        java.io.File file28 = explodedArchive26.manifestFile;
        java.io.File file29 = null;
        java.io.File file30 = explodedArchive26.getManifestFile(file29);
        java.util.Iterator<java.io.File> fileItor31 = fileEntryIterator17.listFiles(file30);
        java.util.Iterator<java.io.File> fileItor32 = fileEntryIterator0.listFiles(file30);
        java.io.File file33 = fileEntryIterator0.root;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file13.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor31);
        org.junit.Assert.assertNotNull(fileItor32);
        org.junit.Assert.assertNull(file33);
    }

    @Test
    public void test4281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4281");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        fileEntryIterator0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator28.thenComparing(fileComparator31);
        fileEntryIterator23.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator28.thenComparing(fileComparator36);
        java.util.Comparator<java.io.File> fileComparator38 = fileComparator36.reversed();
        fileEntryIterator0.entryComparator = fileComparator36;
        fileEntryIterator0.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator0.stack;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileItorQueue42);
    }

    @Test
    public void test4282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4282");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.io.File file4 = fileEntryIterator0.poll();
        java.io.File file5 = fileEntryIterator0.poll();
        java.io.File file6 = fileEntryIterator0.root;
        java.io.File file7 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        boolean boolean10 = fileEntryIterator8.hasNext();
        java.io.File file11 = fileEntryIterator8.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        java.util.Comparator<java.io.File> fileComparator21 = fileComparator17.thenComparing(fileComparator20);
        fileEntryIterator12.entryComparator = fileComparator17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator17.thenComparing((java.util.Comparator<java.io.File>) entryComparator23);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator31.entryComparator;
        java.util.Comparator<java.io.File> fileComparator34 = fileComparator30.thenComparing(fileComparator33);
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator27.thenComparing(fileComparator33);
        java.util.Comparator<java.io.File> fileComparator36 = entryComparator23.thenComparing(fileComparator35);
        java.util.Comparator<java.io.File> fileComparator37 = entryComparator23.reversed();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator38.entryComparator;
        java.util.Comparator<java.io.File> fileComparator66 = entryComparator23.thenComparing(fileComparator65);
        fileEntryIterator8.entryComparator = entryComparator23;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean69 = explodedArchive68.recursive;
        java.io.File file70 = explodedArchive68.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator71 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file72 = fileEntryIterator71.current;
        java.io.File file73 = fileEntryIterator71.poll();
        java.io.File file74 = fileEntryIterator71.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue75 = fileEntryIterator71.stack;
        java.io.File file76 = fileEntryIterator71.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator77 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue78 = fileEntryIterator77.stack;
        java.io.File file79 = fileEntryIterator77.current;
        java.io.File file80 = fileEntryIterator77.current;
        fileEntryIterator77.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file84 = explodedArchive83.manifestFile;
        java.io.File file85 = explodedArchive83.manifestFile;
        java.io.File file86 = null;
        java.io.File file87 = explodedArchive83.getManifestFile(file86);
        fileEntryIterator77.root = file87;
        fileEntryIterator71.root = file87;
        java.io.File file90 = explodedArchive68.getManifestFile(file87);
        java.util.Iterator<java.io.File> fileItor91 = fileEntryIterator8.listFiles(file90);
        java.util.Iterator<java.io.File> fileItor92 = fileEntryIterator0.listFiles(file90);
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNotNull(fileItorQueue75);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNotNull(fileItorQueue78);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNull(file84);
        org.junit.Assert.assertNull(file85);
        org.junit.Assert.assertNotNull(file87);
        org.junit.Assert.assertEquals(file87.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file87.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file90);
        org.junit.Assert.assertEquals(file90.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file90.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor91);
        org.junit.Assert.assertNotNull(fileItor92);
    }

    @Test
    public void test4283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4283");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = explodedArchive0.manifest;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator37 = explodedArchive0.spliterator();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator38 = explodedArchive0.spliterator();
        java.util.jar.Manifest manifest39 = null;
        explodedArchive0.manifest = manifest39;
        java.net.URL uRL41 = explodedArchive0.getUrl();
        java.util.jar.Manifest manifest42 = null;
        explodedArchive0.manifest = manifest42;
        java.net.URL uRL44 = explodedArchive0.getUrl();
        java.lang.String str45 = uRL44.toString();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNotNull(entrySpliterator37);
        org.junit.Assert.assertNotNull(entrySpliterator38);
        org.junit.Assert.assertNotNull(uRL41);
// flaky:         org.junit.Assert.assertEquals(uRL41.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRL44);
// flaky:         org.junit.Assert.assertEquals(uRL44.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str45 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str45, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4284");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str73 = uRL72.getFile();
        java.lang.String str74 = uRL72.getQuery();
        java.net.URL uRL76 = new java.net.URL(uRL72, "");
        java.lang.String str77 = uRL76.getAuthority();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str73, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertEquals(uRL76.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
    }

    @Test
    public void test4285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4285");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        fileEntryIterator0.root = file6;
        boolean boolean9 = fileEntryIterator0.recursive;
        java.io.File file10 = fileEntryIterator0.current;
        java.io.File file11 = fileEntryIterator0.poll();
        java.io.File file12 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator18.thenComparing(fileComparator21);
        fileEntryIterator13.entryComparator = fileComparator18;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator18.thenComparing((java.util.Comparator<java.io.File>) entryComparator24);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file27 = fileEntryIterator26.current;
        java.io.File file28 = null;
        fileEntryIterator26.current = file28;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean31 = explodedArchive30.recursive;
        java.io.File file32 = explodedArchive30.manifestFile;
        java.util.jar.Manifest manifest33 = null;
        explodedArchive30.manifest = manifest33;
        java.io.File file35 = explodedArchive30.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        java.io.File file39 = fileEntryIterator36.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.manifestFile;
        java.io.File file42 = explodedArchive40.manifestFile;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive40.getManifestFile(file43);
        fileEntryIterator36.current = file44;
        explodedArchive30.root = file44;
        fileEntryIterator26.root = file44;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file49 = explodedArchive48.manifestFile;
        java.io.File file50 = explodedArchive48.manifestFile;
        java.io.File file51 = null;
        java.io.File file52 = explodedArchive48.getManifestFile(file51);
        boolean boolean53 = explodedArchive48.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        fileEntryIterator54.recursive = true;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator54.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator62.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator65.stack;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator65.entryComparator;
        java.util.Comparator<java.io.File> fileComparator68 = fileComparator64.thenComparing(fileComparator67);
        fileEntryIterator59.entryComparator = fileComparator64;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator70 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue71 = fileEntryIterator70.stack;
        java.util.Comparator<java.io.File> fileComparator72 = fileEntryIterator70.entryComparator;
        java.util.Comparator<java.io.File> fileComparator73 = fileComparator64.thenComparing(fileComparator72);
        fileEntryIterator54.entryComparator = fileComparator73;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file76 = explodedArchive75.manifestFile;
        java.io.File file77 = explodedArchive75.manifestFile;
        java.io.File file78 = null;
        java.io.File file79 = explodedArchive75.getManifestFile(file78);
        fileEntryIterator54.root = file79;
        explodedArchive48.root = file79;
        explodedArchive48.recursive = false;
        java.util.jar.Manifest manifest84 = null;
        explodedArchive48.manifest = manifest84;
        java.lang.String str86 = explodedArchive48.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter87 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList88 = explodedArchive48.getNestedArchives(entryFilter87);
        java.io.File file89 = explodedArchive48.root;
        int int90 = entryComparator24.compare(file44, file89);
        java.util.Iterator<java.io.File> fileItor91 = fileEntryIterator0.listFiles(file89);
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileItorQueue71);
        org.junit.Assert.assertNotNull(fileComparator72);
        org.junit.Assert.assertNotNull(fileComparator73);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file79.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str86 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str86, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList88);
        org.junit.Assert.assertNotNull(file89);
        org.junit.Assert.assertEquals(file89.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file89.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertNotNull(fileItor91);
    }

    @Test
    public void test4286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4286");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = explodedArchive0.manifest;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator37 = explodedArchive0.spliterator();
        java.net.URL uRL38 = explodedArchive0.getUrl();
        int int39 = uRL38.getDefaultPort();
        java.net.URLConnection uRLConnection40 = uRL38.openConnection();
        java.net.URLStreamHandler uRLStreamHandler42 = null;
        java.net.URL uRL43 = new java.net.URL(uRL38, "file", uRLStreamHandler42);
        java.net.URL uRL44 = null;
        java.net.URLStreamHandler uRLStreamHandler46 = null;
        java.net.URL uRL47 = new java.net.URL(uRL44, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler46);
        java.lang.String str48 = uRL47.getHost();
        java.lang.String str49 = uRL47.getAuthority();
        java.lang.String str50 = uRL47.getQuery();
        int int51 = uRL47.getDefaultPort();
        java.lang.String str52 = uRL47.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler54 = null;
        java.net.URL uRL55 = new java.net.URL(uRL47, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler54);
        java.net.URLStreamHandler uRLStreamHandler57 = null;
        java.net.URL uRL58 = new java.net.URL(uRL47, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler57);
        int int59 = uRL47.getPort();
        boolean boolean60 = uRL43.sameFile(uRL47);
        java.net.URL uRL62 = new java.net.URL(uRL43, "");
        java.lang.String str63 = uRL62.toString();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNotNull(entrySpliterator37);
        org.junit.Assert.assertNotNull(uRL38);
// flaky:         org.junit.Assert.assertEquals(uRL38.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(uRLConnection40);
// flaky:         org.junit.Assert.assertEquals(uRL43.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertEquals(uRL55.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL58.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
// flaky:         org.junit.Assert.assertEquals(uRL62.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
// flaky:         org.junit.Assert.assertEquals("'" + str63 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file" + "'", str63, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
    }

    @Test
    public void test4287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4287");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.lang.String str6 = uRL3.getProtocol();
        int int7 = uRL3.getPort();
        java.lang.String str8 = uRL3.toExternalForm();
        java.lang.String str9 = uRL3.getPath();
        java.lang.String str10 = uRL3.getProtocol();
        java.net.URI uRI11 = uRL3.toURI();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file" + "'", str6, "file");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "file" + "'", str10, "file");
        org.junit.Assert.assertNotNull(uRI11);
    }

    @Test
    public void test4288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4288");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "file", uRLStreamHandler13);
        int int15 = uRL14.getPort();
        java.net.URLStreamHandler uRLStreamHandler20 = null;
        java.net.URL uRL21 = new java.net.URL("file", "exploded archive", 0, "", uRLStreamHandler20);
        java.lang.String str22 = uRL21.getPath();
        java.lang.String str23 = uRL21.getHost();
        boolean boolean24 = uRL14.sameFile(uRL21);
        java.net.URL uRL25 = null;
        java.net.URLStreamHandler uRLStreamHandler27 = null;
        java.net.URL uRL28 = new java.net.URL(uRL25, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler27);
        java.lang.String str29 = uRL28.getHost();
        int int30 = uRL28.getPort();
        java.net.URLStreamHandler uRLStreamHandler32 = null;
        java.net.URL uRL33 = new java.net.URL(uRL28, "hi!", uRLStreamHandler32);
        java.lang.String str34 = uRL28.toExternalForm();
        boolean boolean35 = uRL21.sameFile(uRL28);
        java.lang.String str36 = uRL21.getRef();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals(uRL21.toString(), "file://exploded archive:0");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "exploded archive" + "'", str23, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals(uRL28.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertEquals(uRL33.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test4289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4289");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", "file://exploded archive:0", (int) 'a', "exploded archive", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4290");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        java.lang.String str5 = fileEntry0.getName();
        java.io.File file6 = fileEntry0.getFile();
        java.io.File file7 = fileEntry0.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        fileEntryIterator8.recursive = true;
        java.io.File file12 = fileEntryIterator8.poll();
        fileEntryIterator8.recursive = true;
        boolean boolean15 = fileEntryIterator8.recursive;
        boolean boolean16 = fileEntryIterator8.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.io.File file19 = fileEntryIterator17.current;
        java.io.File file20 = fileEntryIterator17.current;
        fileEntryIterator17.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.manifestFile;
        java.io.File file25 = explodedArchive23.manifestFile;
        java.io.File file26 = null;
        java.io.File file27 = explodedArchive23.getManifestFile(file26);
        fileEntryIterator17.root = file27;
        java.util.Iterator<java.io.File> fileItor29 = fileEntryIterator8.listFiles(file27);
        fileEntry0.file = file27;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file27.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor29);
    }

    @Test
    public void test4291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4291");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLConnection uRLConnection7 = uRL3.openConnection();
        java.lang.String str8 = uRL3.getFile();
        java.net.URL uRL10 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str11 = uRL10.getProtocol();
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL10, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", uRLStreamHandler13);
        java.lang.String str15 = uRL10.getProtocol();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream16 = uRL10.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL10.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "file" + "'", str11, "file");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "file" + "'", str15, "file");
    }

    @Test
    public void test4292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4292");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.io.File file4 = explodedArchive0.root;
        boolean boolean5 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive0.manifest = manifest6;
        java.lang.String str8 = explodedArchive0.toString();
        java.lang.String str9 = explodedArchive0.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor10 = explodedArchive0.iterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "exploded archive" + "'", str8, "exploded archive");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "exploded archive" + "'", str9, "exploded archive");
    }

    @Test
    public void test4293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4293");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.io.File file4 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.io.File file7 = fileEntryIterator5.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        fileEntryIterator8.recursive = true;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator18.thenComparing(fileComparator21);
        fileEntryIterator13.entryComparator = fileComparator18;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator18.thenComparing(fileComparator26);
        fileEntryIterator8.entryComparator = fileComparator27;
        fileEntryIterator8.recursive = true;
        fileEntryIterator8.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator8.stack;
        fileEntryIterator5.stack = fileItorQueue33;
        fileEntryIterator0.stack = fileItorQueue33;
        java.io.File file36 = fileEntryIterator0.poll();
        fileEntryIterator0.recursive = false;
        boolean boolean39 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.manifestFile;
        java.io.File file42 = explodedArchive40.manifestFile;
        java.lang.String str43 = explodedArchive40.toString();
        java.util.jar.Manifest manifest44 = null;
        explodedArchive40.manifest = manifest44;
        java.lang.String str46 = explodedArchive40.toString();
        java.lang.String str47 = explodedArchive40.toString();
        java.lang.String str48 = explodedArchive40.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str50 = fileEntry49.getName();
        fileEntry49.name = "exploded archive";
        fileEntry49.name = "hi!";
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file56 = explodedArchive55.manifestFile;
        java.io.File file57 = explodedArchive55.manifestFile;
        java.lang.String str58 = explodedArchive55.toString();
        java.lang.String str59 = explodedArchive55.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean61 = fileEntryIterator60.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean63 = explodedArchive62.recursive;
        java.io.File file64 = explodedArchive62.manifestFile;
        java.util.jar.Manifest manifest65 = null;
        explodedArchive62.manifest = manifest65;
        java.io.File file67 = explodedArchive62.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        java.io.File file71 = fileEntryIterator68.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file73 = explodedArchive72.manifestFile;
        java.io.File file74 = explodedArchive72.manifestFile;
        java.io.File file75 = null;
        java.io.File file76 = explodedArchive72.getManifestFile(file75);
        fileEntryIterator68.current = file76;
        explodedArchive62.root = file76;
        fileEntryIterator60.root = file76;
        java.io.File file80 = explodedArchive55.getManifestFile(file76);
        fileEntry49.file = file80;
        fileEntry49.name = "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF";
        java.io.File file84 = fileEntry49.file;
        java.io.File file85 = fileEntry49.file;
        explodedArchive40.root = file85;
        fileEntryIterator0.current = file85;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "exploded archive" + "'", str43, "exploded archive");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "exploded archive" + "'", str46, "exploded archive");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "exploded archive" + "'", str47, "exploded archive");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "exploded archive" + "'", str48, "exploded archive");
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "exploded archive" + "'", str58, "exploded archive");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "exploded archive" + "'", str59, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file76.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file80);
        org.junit.Assert.assertEquals(file80.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file80.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file84.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file85);
        org.junit.Assert.assertEquals(file85.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file85.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4294");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        java.util.jar.Manifest manifest24 = explodedArchive0.manifest;
        java.net.URL uRL25 = explodedArchive0.getUrl();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive0.getNestedArchives(entryFilter26);
        java.net.URL uRL28 = explodedArchive0.getUrl();
        java.lang.String str29 = uRL28.getUserInfo();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertNotNull(uRL25);
// flaky:         org.junit.Assert.assertEquals(uRL25.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNotNull(uRL28);
// flaky:         org.junit.Assert.assertEquals(uRL28.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test4295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4295");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.root;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator5 = explodedArchive0.spliterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
    }

    @Test
    public void test4296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4296");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.io.File file4 = explodedArchive0.root;
        boolean boolean5 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive0.manifest = manifest6;
        java.lang.String str8 = explodedArchive0.toString();
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest11 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest12 = null;
        explodedArchive0.manifest = manifest12;
        java.lang.String str14 = explodedArchive0.toString();
        java.util.jar.Manifest manifest15 = null;
        explodedArchive0.manifest = manifest15;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "exploded archive" + "'", str8, "exploded archive");
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "exploded archive" + "'", str14, "exploded archive");
    }

    @Test
    public void test4297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4297");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.manifestFile;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.io.File file6 = null;
        java.io.File file7 = explodedArchive3.getManifestFile(file6);
        fileEntryIterator0.root = file6;
        boolean boolean9 = fileEntryIterator0.recursive;
        fileEntryIterator0.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator0.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator0.entryComparator;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(file7);
        org.junit.Assert.assertEquals(file7.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file7.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
    }

    @Test
    public void test4298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4298");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        boolean boolean41 = explodedArchive0.recursive;
        java.io.File file42 = null;
        explodedArchive0.manifestFile = file42;
        java.io.File file44 = explodedArchive0.root;
        java.lang.String str45 = explodedArchive0.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest46 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str45 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str45, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4299");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        java.io.File file3 = fileEntryIterator0.current;
        fileEntryIterator0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.manifestFile;
        java.io.File file8 = explodedArchive6.manifestFile;
        java.io.File file9 = null;
        java.io.File file10 = explodedArchive6.getManifestFile(file9);
        fileEntryIterator0.root = file10;
        boolean boolean12 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file14 = fileEntryIterator13.current;
        java.io.File file15 = fileEntryIterator13.poll();
        java.io.File file16 = fileEntryIterator13.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator13.stack;
        java.io.File file18 = fileEntryIterator13.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.io.File file21 = fileEntryIterator19.current;
        java.io.File file22 = fileEntryIterator19.current;
        fileEntryIterator19.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.manifestFile;
        java.io.File file27 = explodedArchive25.manifestFile;
        java.io.File file28 = null;
        java.io.File file29 = explodedArchive25.getManifestFile(file28);
        fileEntryIterator19.root = file29;
        fileEntryIterator13.root = file29;
        java.io.File file32 = null;
        fileEntryIterator13.current = file32;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file35 = explodedArchive34.manifestFile;
        java.io.File file36 = explodedArchive34.manifestFile;
        java.io.File file37 = null;
        java.io.File file38 = explodedArchive34.getManifestFile(file37);
        boolean boolean39 = explodedArchive34.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator40.stack;
        fileEntryIterator40.recursive = true;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator40.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator45.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        java.util.Comparator<java.io.File> fileComparator54 = fileComparator50.thenComparing(fileComparator53);
        fileEntryIterator45.entryComparator = fileComparator50;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        java.util.Comparator<java.io.File> fileComparator59 = fileComparator50.thenComparing(fileComparator58);
        fileEntryIterator40.entryComparator = fileComparator59;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file62 = explodedArchive61.manifestFile;
        java.io.File file63 = explodedArchive61.manifestFile;
        java.io.File file64 = null;
        java.io.File file65 = explodedArchive61.getManifestFile(file64);
        fileEntryIterator40.root = file65;
        explodedArchive34.root = file65;
        java.lang.String str68 = explodedArchive34.toString();
        java.util.jar.Manifest manifest69 = explodedArchive34.manifest;
        java.io.File file70 = null;
        explodedArchive34.root = file70;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry72 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry72.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator75 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue76 = fileEntryIterator75.stack;
        java.io.File file77 = fileEntryIterator75.current;
        boolean boolean78 = fileEntryIterator75.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue79 = fileEntryIterator75.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive80 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean81 = explodedArchive80.recursive;
        boolean boolean82 = explodedArchive80.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file84 = explodedArchive83.manifestFile;
        java.io.File file85 = explodedArchive83.manifestFile;
        java.io.File file86 = null;
        java.io.File file87 = explodedArchive83.getManifestFile(file86);
        explodedArchive80.root = file87;
        fileEntryIterator75.root = file87;
        fileEntry72.file = file87;
        explodedArchive34.manifestFile = file87;
        fileEntryIterator13.root = file87;
        fileEntryIterator0.current = file87;
        org.springframework.boot.loader.archive.Archive.Entry entry94 = fileEntryIterator0.next();
        boolean boolean95 = fileEntryIterator0.hasNext();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(fileItorQueue41);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file65.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str68 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str68, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest69);
        org.junit.Assert.assertNotNull(fileItorQueue76);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(fileItorQueue79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(file84);
        org.junit.Assert.assertNull(file85);
        org.junit.Assert.assertNotNull(file87);
        org.junit.Assert.assertEquals(file87.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file87.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entry94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test4300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4300");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getUserInfo();
        java.lang.String str14 = uRL11.getProtocol();
        int int15 = uRL11.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler20 = null;
        java.net.URL uRL21 = new java.net.URL("file", "exploded archive", 0, "", uRLStreamHandler20);
        boolean boolean22 = uRL11.sameFile(uRL21);
        java.lang.String str23 = uRL11.toExternalForm();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals(uRL21.toString(), "file://exploded archive:0");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str23, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4301");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator3.entryComparator;
        fileEntryIterator0.entryComparator = fileComparator5;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.manifestFile;
        java.io.File file9 = explodedArchive7.manifestFile;
        java.io.File file10 = null;
        java.io.File file11 = explodedArchive7.getManifestFile(file10);
        fileEntryIterator0.root = file10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator18.thenComparing(fileComparator21);
        fileEntryIterator13.entryComparator = fileComparator18;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator18.thenComparing((java.util.Comparator<java.io.File>) entryComparator24);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator31.thenComparing(fileComparator34);
        java.util.Comparator<java.io.File> fileComparator36 = fileComparator28.thenComparing(fileComparator34);
        java.util.Comparator<java.io.File> fileComparator37 = entryComparator24.thenComparing(fileComparator36);
        fileEntryIterator0.entryComparator = fileComparator36;
        fileEntryIterator0.recursive = true;
        boolean boolean41 = fileEntryIterator0.recursive;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test4302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4302");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        java.lang.String str34 = explodedArchive0.toString();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator35 = explodedArchive0.spliterator();
        java.util.jar.Manifest manifest36 = explodedArchive0.manifest;
        java.net.URL uRL37 = explodedArchive0.getUrl();
        java.lang.String str38 = uRL37.getPath();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNotNull(uRL37);
// flaky:         org.junit.Assert.assertEquals(uRL37.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4303");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.util.jar.Manifest manifest38 = explodedArchive0.manifest;
        java.lang.String str39 = explodedArchive0.toString();
        java.io.File file40 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean42 = explodedArchive41.recursive;
        boolean boolean43 = explodedArchive41.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.manifestFile;
        java.io.File file46 = explodedArchive44.manifestFile;
        java.io.File file47 = null;
        java.io.File file48 = explodedArchive44.getManifestFile(file47);
        explodedArchive41.root = file48;
        explodedArchive0.manifestFile = file48;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter51 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList52 = explodedArchive0.getNestedArchives(entryFilter51);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter53 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList54 = explodedArchive0.getNestedArchives(entryFilter53);
        java.util.jar.Manifest manifest55 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest56 = explodedArchive0.manifest;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest38);
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str39, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file40.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList52);
        org.junit.Assert.assertNotNull(archiveList54);
        org.junit.Assert.assertNull(manifest55);
        org.junit.Assert.assertNull(manifest56);
    }

    @Test
    public void test4304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4304");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = explodedArchive0.manifest;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator37 = explodedArchive0.spliterator();
        java.net.URL uRL38 = explodedArchive0.getUrl();
        int int39 = uRL38.getDefaultPort();
        java.net.URLConnection uRLConnection40 = uRL38.openConnection();
        java.lang.String str41 = uRL38.getRef();
        java.lang.String str42 = uRL38.getPath();
        java.net.URL uRL43 = null;
        java.net.URLStreamHandler uRLStreamHandler45 = null;
        java.net.URL uRL46 = new java.net.URL(uRL43, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler45);
        java.lang.String str47 = uRL46.getHost();
        int int48 = uRL46.getPort();
        java.net.URL uRL49 = null;
        java.net.URLStreamHandler uRLStreamHandler51 = null;
        java.net.URL uRL52 = new java.net.URL(uRL49, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler51);
        java.lang.String str53 = uRL52.getHost();
        int int54 = uRL52.getPort();
        java.net.URL uRL55 = null;
        java.net.URLStreamHandler uRLStreamHandler57 = null;
        java.net.URL uRL58 = new java.net.URL(uRL55, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler57);
        java.lang.String str59 = uRL58.getHost();
        java.lang.String str60 = uRL58.getAuthority();
        java.lang.String str61 = uRL58.getQuery();
        int int62 = uRL58.getDefaultPort();
        boolean boolean63 = uRL52.sameFile(uRL58);
        boolean boolean64 = uRL46.sameFile(uRL52);
        java.net.URI uRI65 = uRL46.toURI();
        java.lang.String str66 = uRL46.getAuthority();
        boolean boolean67 = uRL38.equals((java.lang.Object) uRL46);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNotNull(entrySpliterator37);
        org.junit.Assert.assertNotNull(uRL38);
// flaky:         org.junit.Assert.assertEquals(uRL38.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(uRLConnection40);
        org.junit.Assert.assertNull(str41);
// flaky:         org.junit.Assert.assertEquals("'" + str42 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str42, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL46.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertEquals(uRL52.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertEquals(uRL58.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(uRI65);
        org.junit.Assert.assertNull(str66);
// flaky:         org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test4305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4305");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        java.io.File file3 = explodedArchive0.root;
        java.io.File file4 = explodedArchive0.root;
        explodedArchive0.recursive = false;
        java.io.File file7 = explodedArchive0.root;
        java.util.jar.Manifest manifest8 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        fileEntryIterator9.recursive = true;
        boolean boolean13 = fileEntryIterator9.hasNext();
        fileEntryIterator9.recursive = true;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator9.entryComparator;
        java.io.File file17 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file19 = fileEntryIterator18.current;
        java.io.File file20 = fileEntryIterator18.poll();
        java.io.File file21 = fileEntryIterator18.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator18.stack;
        java.io.File file23 = fileEntryIterator18.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.io.File file26 = fileEntryIterator24.current;
        java.io.File file27 = fileEntryIterator24.current;
        fileEntryIterator24.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.manifestFile;
        java.io.File file32 = explodedArchive30.manifestFile;
        java.io.File file33 = null;
        java.io.File file34 = explodedArchive30.getManifestFile(file33);
        fileEntryIterator24.root = file34;
        fileEntryIterator18.root = file34;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean40 = fileEntryIterator39.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean42 = explodedArchive41.recursive;
        java.io.File file43 = explodedArchive41.manifestFile;
        java.util.jar.Manifest manifest44 = null;
        explodedArchive41.manifest = manifest44;
        java.io.File file46 = explodedArchive41.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue48 = fileEntryIterator47.stack;
        java.util.Comparator<java.io.File> fileComparator49 = fileEntryIterator47.entryComparator;
        java.io.File file50 = fileEntryIterator47.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file52 = explodedArchive51.manifestFile;
        java.io.File file53 = explodedArchive51.manifestFile;
        java.io.File file54 = null;
        java.io.File file55 = explodedArchive51.getManifestFile(file54);
        fileEntryIterator47.current = file55;
        explodedArchive41.root = file55;
        fileEntryIterator39.root = file55;
        explodedArchive38.root = file55;
        fileEntryIterator18.root = file55;
        java.io.File file61 = fileEntryIterator18.current;
        java.io.File file62 = fileEntryIterator18.root;
        java.util.Iterator<java.io.File> fileItor63 = fileEntryIterator9.listFiles(file62);
        explodedArchive0.manifestFile = file62;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive(file62, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(fileItorQueue48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor63);
    }

    @Test
    public void test4306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4306");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        java.io.File file3 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file5 = fileEntryIterator4.current;
        boolean boolean6 = fileEntryIterator4.hasNext();
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator4.entryComparator;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator4.entryComparator;
        fileEntryIterator0.entryComparator = fileComparator8;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        fileEntryIterator0.stack = fileItorQueue11;
        boolean boolean13 = fileEntryIterator0.recursive;
        java.io.File file14 = fileEntryIterator0.current;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(file14);
    }

    @Test
    public void test4307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4307");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        java.io.File file3 = fileEntryIterator0.current;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator0.entryComparator;
        java.io.File file7 = fileEntryIterator0.poll();
        boolean boolean8 = fileEntryIterator0.hasNext();
        boolean boolean9 = fileEntryIterator0.recursive;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test4308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4308");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        java.net.URL uRL5 = new java.net.URL("file", "exploded archive", 0, "", uRLStreamHandler4);
        java.lang.String str6 = uRL5.getPath();
        java.lang.String str7 = uRL5.getQuery();
        java.lang.String str8 = uRL5.getPath();
        java.lang.String str9 = uRL5.getHost();
        java.net.URL uRL11 = new java.net.URL(uRL5, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.Class[] classArray12 = new java.lang.Class[] {};
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj13 = uRL11.getContent(classArray12);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL5.toString(), "file://exploded archive:0");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "exploded archive" + "'", str9, "exploded archive");
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(classArray12);
    }

    @Test
    public void test4309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4309");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        boolean boolean14 = uRL3.sameFile(uRL9);
        java.lang.String str15 = uRL3.getQuery();
        java.net.URLStreamHandler uRLStreamHandler17 = null;
        java.net.URL uRL18 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler17);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean21 = fileEntryIterator20.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean23 = explodedArchive22.recursive;
        java.io.File file24 = explodedArchive22.manifestFile;
        java.util.jar.Manifest manifest25 = null;
        explodedArchive22.manifest = manifest25;
        java.io.File file27 = explodedArchive22.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        java.io.File file31 = fileEntryIterator28.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        fileEntryIterator28.current = file36;
        explodedArchive22.root = file36;
        fileEntryIterator20.root = file36;
        explodedArchive19.root = file36;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator41 = explodedArchive19.spliterator();
        java.io.File file42 = explodedArchive19.root;
        java.util.jar.Manifest manifest43 = explodedArchive19.manifest;
        java.net.URL uRL44 = explodedArchive19.getUrl();
        java.lang.String str45 = uRL44.getRef();
        java.net.URL uRL47 = new java.net.URL(uRL44, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        boolean boolean48 = uRL3.sameFile(uRL47);
        int int49 = uRL47.getDefaultPort();
        java.net.URL uRL50 = null;
        java.net.URLStreamHandler uRLStreamHandler52 = null;
        java.net.URL uRL53 = new java.net.URL(uRL50, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler52);
        java.lang.String str54 = uRL53.getHost();
        java.net.URI uRI55 = uRL53.toURI();
        java.lang.String str56 = uRL53.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler58 = null;
        java.net.URL uRL59 = new java.net.URL(uRL53, "file", uRLStreamHandler58);
        java.net.URLStreamHandler uRLStreamHandler61 = null;
        java.net.URL uRL62 = new java.net.URL(uRL53, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler61);
        java.net.URL uRL63 = null;
        java.net.URLStreamHandler uRLStreamHandler65 = null;
        java.net.URL uRL66 = new java.net.URL(uRL63, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler65);
        java.lang.String str67 = uRL66.getHost();
        java.lang.String str68 = uRL66.getAuthority();
        java.lang.String str69 = uRL66.toExternalForm();
        java.net.URLConnection uRLConnection70 = uRL66.openConnection();
        java.lang.String str71 = uRL66.getFile();
        boolean boolean72 = uRL53.sameFile(uRL66);
        int int73 = uRL66.getDefaultPort();
        int int74 = uRL66.getDefaultPort();
        java.lang.String str75 = uRL66.getPath();
        java.lang.String str76 = uRL66.getAuthority();
        boolean boolean77 = uRL47.sameFile(uRL66);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals(uRL18.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertNotNull(uRL44);
// flaky:         org.junit.Assert.assertEquals(uRL44.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertEquals(uRL47.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertEquals(uRL53.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(uRI55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str56, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL59.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals(uRL62.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL66.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str71, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str75, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test4310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4310");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.net.URL uRL13 = new java.net.URL(uRL3, "file://exploded archive");
        int int14 = uRL13.getPort();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL13.toString(), "file://exploded archive");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test4311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4311");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", "file");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/file");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4312");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        boolean boolean3 = fileEntryIterator0.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean6 = explodedArchive5.recursive;
        boolean boolean7 = explodedArchive5.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive8.getManifestFile(file11);
        explodedArchive5.root = file12;
        fileEntryIterator0.root = file12;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator20.thenComparing(fileComparator23);
        fileEntryIterator15.entryComparator = fileComparator20;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        java.util.Comparator<java.io.File> fileComparator29 = fileComparator20.thenComparing(fileComparator28);
        fileEntryIterator0.entryComparator = fileComparator29;
        java.io.File file31 = fileEntryIterator0.root;
        java.io.File file32 = fileEntryIterator0.root;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator0.entryComparator;
        java.util.Comparator<java.io.File> fileComparator34 = fileComparator33.reversed();
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator33.reversed();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file32.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
    }

    @Test
    public void test4313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4313");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.hasNext();
        java.io.File file2 = fileEntryIterator0.root;
        boolean boolean3 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        fileEntryIterator4.recursive = true;
        java.io.File file8 = fileEntryIterator4.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.io.File file11 = fileEntryIterator9.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        fileEntryIterator12.recursive = true;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        java.util.Comparator<java.io.File> fileComparator26 = fileComparator22.thenComparing(fileComparator25);
        fileEntryIterator17.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        java.util.Comparator<java.io.File> fileComparator31 = fileComparator22.thenComparing(fileComparator30);
        fileEntryIterator12.entryComparator = fileComparator31;
        fileEntryIterator12.recursive = true;
        fileEntryIterator12.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator12.stack;
        fileEntryIterator9.stack = fileItorQueue37;
        fileEntryIterator4.stack = fileItorQueue37;
        fileEntryIterator0.stack = fileItorQueue37;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        boolean boolean43 = fileEntryIterator41.hasNext();
        java.io.File file44 = fileEntryIterator41.poll();
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator41.entryComparator;
        fileEntryIterator0.entryComparator = fileComparator45;
        java.io.File file47 = fileEntryIterator0.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file49 = explodedArchive48.manifestFile;
        java.io.File file50 = explodedArchive48.manifestFile;
        java.io.File file51 = null;
        java.io.File file52 = explodedArchive48.getManifestFile(file51);
        boolean boolean53 = explodedArchive48.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        fileEntryIterator54.recursive = true;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator54.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator62.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator65.stack;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator65.entryComparator;
        java.util.Comparator<java.io.File> fileComparator68 = fileComparator64.thenComparing(fileComparator67);
        fileEntryIterator59.entryComparator = fileComparator64;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator70 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue71 = fileEntryIterator70.stack;
        java.util.Comparator<java.io.File> fileComparator72 = fileEntryIterator70.entryComparator;
        java.util.Comparator<java.io.File> fileComparator73 = fileComparator64.thenComparing(fileComparator72);
        fileEntryIterator54.entryComparator = fileComparator73;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file76 = explodedArchive75.manifestFile;
        java.io.File file77 = explodedArchive75.manifestFile;
        java.io.File file78 = null;
        java.io.File file79 = explodedArchive75.getManifestFile(file78);
        fileEntryIterator54.root = file79;
        explodedArchive48.root = file79;
        explodedArchive48.recursive = false;
        java.util.jar.Manifest manifest84 = null;
        explodedArchive48.manifest = manifest84;
        java.lang.String str86 = explodedArchive48.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter87 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList88 = explodedArchive48.getNestedArchives(entryFilter87);
        java.io.File file89 = explodedArchive48.root;
        explodedArchive48.recursive = true;
        java.lang.String str92 = explodedArchive48.toString();
        java.util.jar.Manifest manifest93 = null;
        explodedArchive48.manifest = manifest93;
        java.io.File file95 = explodedArchive48.root;
        fileEntryIterator0.current = file95;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileItorQueue71);
        org.junit.Assert.assertNotNull(fileComparator72);
        org.junit.Assert.assertNotNull(fileComparator73);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file79.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str86 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str86, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList88);
        org.junit.Assert.assertNotNull(file89);
        org.junit.Assert.assertEquals(file89.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file89.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str92 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str92, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file95);
        org.junit.Assert.assertEquals(file95.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file95.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test4314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4314");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        int int8 = uRL3.getPort();
        java.lang.String str9 = uRL3.getRef();
        java.net.URL uRL11 = new java.net.URL(uRL3, "hi!");
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "", uRLStreamHandler13);
        int int15 = uRL14.getDefaultPort();
        java.net.URL uRL17 = new java.net.URL(uRL14, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        java.lang.String str18 = uRL14.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler20 = null;
        java.net.URL uRL21 = new java.net.URL(uRL14, "file://hi!hi!", uRLStreamHandler20);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals(uRL21.toString(), "file://hi!hi!");
    }

    @Test
    public void test4315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4315");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        java.lang.String str5 = fileEntry0.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        boolean boolean8 = fileEntryIterator6.hasNext();
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator15.thenComparing(fileComparator18);
        fileEntryIterator10.entryComparator = fileComparator15;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator15.thenComparing((java.util.Comparator<java.io.File>) entryComparator21);
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator21);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean25 = fileEntryIterator24.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean27 = explodedArchive26.recursive;
        java.io.File file28 = explodedArchive26.manifestFile;
        java.util.jar.Manifest manifest29 = null;
        explodedArchive26.manifest = manifest29;
        java.io.File file31 = explodedArchive26.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.io.File file35 = fileEntryIterator32.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file37 = explodedArchive36.manifestFile;
        java.io.File file38 = explodedArchive36.manifestFile;
        java.io.File file39 = null;
        java.io.File file40 = explodedArchive36.getManifestFile(file39);
        fileEntryIterator32.current = file40;
        explodedArchive26.root = file40;
        fileEntryIterator24.root = file40;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.manifestFile;
        java.io.File file46 = explodedArchive44.manifestFile;
        java.io.File file47 = null;
        java.io.File file48 = explodedArchive44.getManifestFile(file47);
        boolean boolean49 = explodedArchive44.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        fileEntryIterator50.recursive = true;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator50.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        java.util.Comparator<java.io.File> fileComparator64 = fileComparator60.thenComparing(fileComparator63);
        fileEntryIterator55.entryComparator = fileComparator60;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator66 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue67 = fileEntryIterator66.stack;
        java.util.Comparator<java.io.File> fileComparator68 = fileEntryIterator66.entryComparator;
        java.util.Comparator<java.io.File> fileComparator69 = fileComparator60.thenComparing(fileComparator68);
        fileEntryIterator50.entryComparator = fileComparator69;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file72 = explodedArchive71.manifestFile;
        java.io.File file73 = explodedArchive71.manifestFile;
        java.io.File file74 = null;
        java.io.File file75 = explodedArchive71.getManifestFile(file74);
        fileEntryIterator50.root = file75;
        explodedArchive44.root = file75;
        int int78 = entryComparator21.compare(file40, file75);
        fileEntry0.file = file75;
        fileEntry0.name = "exploded archive";
        fileEntry0.name = "file://exploded archive";
        java.io.File file84 = fileEntry0.getFile();
        java.io.File file85 = fileEntry0.getFile();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file40.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file75.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file84.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file85);
        org.junit.Assert.assertEquals(file85.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file85.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test4316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4316");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("exploded archive", "", (int) ' ', "file://hi!:100hi!", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4317");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        boolean boolean2 = fileEntryIterator0.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = null;
        fileEntryIterator0.stack = fileItorQueue3;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator10.thenComparing((java.util.Comparator<java.io.File>) entryComparator16);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator23.thenComparing(fileComparator26);
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator20.thenComparing(fileComparator26);
        java.util.Comparator<java.io.File> fileComparator29 = entryComparator16.thenComparing(fileComparator28);
        java.util.Comparator<java.io.File> fileComparator30 = entryComparator16.reversed();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        fileEntryIterator31.recursive = true;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator31.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator39.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator42.entryComparator;
        java.util.Comparator<java.io.File> fileComparator45 = fileComparator41.thenComparing(fileComparator44);
        fileEntryIterator36.entryComparator = fileComparator41;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue48 = fileEntryIterator47.stack;
        java.util.Comparator<java.io.File> fileComparator49 = fileEntryIterator47.entryComparator;
        java.util.Comparator<java.io.File> fileComparator50 = fileComparator41.thenComparing(fileComparator49);
        fileEntryIterator31.entryComparator = fileComparator50;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.manifestFile;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.io.File file55 = null;
        java.io.File file56 = explodedArchive52.getManifestFile(file55);
        fileEntryIterator31.root = file56;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator31.entryComparator;
        java.util.Comparator<java.io.File> fileComparator59 = entryComparator16.thenComparing(fileComparator58);
        fileEntryIterator0.entryComparator = fileComparator58;
        boolean boolean61 = fileEntryIterator0.recursive;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test4318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4318");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file39 = fileEntryIterator38.current;
        java.io.File file40 = fileEntryIterator38.poll();
        java.io.File file41 = fileEntryIterator38.poll();
        java.io.File file42 = fileEntryIterator38.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.io.File file45 = fileEntryIterator43.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        fileEntryIterator43.root = file49;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.manifestFile;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.io.File file55 = null;
        java.io.File file56 = explodedArchive52.getManifestFile(file55);
        java.util.Iterator<java.io.File> fileItor57 = fileEntryIterator43.listFiles(file56);
        fileEntryIterator38.root = file56;
        explodedArchive0.root = file56;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter60 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList61 = explodedArchive0.getNestedArchives(entryFilter60);
        java.net.URL uRL62 = explodedArchive0.getUrl();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file64 = explodedArchive63.manifestFile;
        java.io.File file65 = explodedArchive63.manifestFile;
        java.io.File file66 = null;
        java.io.File file67 = explodedArchive63.getManifestFile(file66);
        explodedArchive0.manifestFile = file67;
        java.util.jar.Manifest manifest69 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest70 = null;
        explodedArchive0.manifest = manifest70;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor57);
        org.junit.Assert.assertNotNull(archiveList61);
        org.junit.Assert.assertNotNull(uRL62);
// flaky:         org.junit.Assert.assertEquals(uRL62.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file67.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest69);
    }

    @Test
    public void test4319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4319");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.getRef();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.toExternalForm();
        java.net.URL uRL13 = new java.net.URL("file", "hi!", (int) ' ', "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        int int14 = uRL13.getDefaultPort();
        boolean boolean15 = uRL3.equals((java.lang.Object) int14);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL13.toString(), "file://hi!:32file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test4320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4320");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getAuthority();
        java.net.URL uRL71 = null;
        java.net.URLStreamHandler uRLStreamHandler73 = null;
        java.net.URL uRL74 = new java.net.URL(uRL71, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler73);
        java.lang.String str75 = uRL74.getHost();
        int int76 = uRL74.getPort();
        java.net.URL uRL77 = null;
        java.net.URLStreamHandler uRLStreamHandler79 = null;
        java.net.URL uRL80 = new java.net.URL(uRL77, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler79);
        java.lang.String str81 = uRL80.getHost();
        int int82 = uRL80.getPort();
        java.net.URL uRL83 = null;
        java.net.URLStreamHandler uRLStreamHandler85 = null;
        java.net.URL uRL86 = new java.net.URL(uRL83, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler85);
        java.lang.String str87 = uRL86.getHost();
        java.lang.String str88 = uRL86.getAuthority();
        java.lang.String str89 = uRL86.getQuery();
        int int90 = uRL86.getDefaultPort();
        boolean boolean91 = uRL80.sameFile(uRL86);
        boolean boolean92 = uRL74.sameFile(uRL80);
        boolean boolean93 = uRL69.sameFile(uRL74);
        java.lang.String str94 = uRL69.getProtocol();
        java.lang.String str95 = uRL69.getPath();
        java.lang.String str96 = uRL69.getAuthority();
        java.net.URL uRL98 = new java.net.URL(uRL69, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        java.lang.String str99 = uRL69.getQuery();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertEquals(uRL80.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertEquals(uRL86.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
// flaky:         org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "file" + "'", str94, "file");
// flaky:         org.junit.Assert.assertEquals("'" + str95 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str95, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "" + "'", str96, "");
        org.junit.Assert.assertEquals(uRL98.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertNull(str99);
    }

    @Test
    public void test4321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4321");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator0.stack;
        java.io.File file5 = fileEntryIterator0.current;
        boolean boolean6 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator12.thenComparing(fileComparator15);
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator9.thenComparing(fileComparator15);
        fileEntryIterator0.entryComparator = fileComparator15;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator24.thenComparing(fileComparator27);
        fileEntryIterator19.entryComparator = fileComparator24;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator31 = fileComparator24.thenComparing((java.util.Comparator<java.io.File>) entryComparator30);
        java.util.Comparator<java.io.File> fileComparator32 = entryComparator30.reversed();
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator32.reversed();
        java.util.Comparator<java.io.File> fileComparator34 = fileComparator32.reversed();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file36 = fileEntryIterator35.current;
        java.io.File file37 = fileEntryIterator35.poll();
        java.io.File file38 = fileEntryIterator35.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator39.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator42.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator45.entryComparator;
        java.util.Comparator<java.io.File> fileComparator48 = fileComparator44.thenComparing(fileComparator47);
        fileEntryIterator39.entryComparator = fileComparator44;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator51 = fileComparator44.thenComparing((java.util.Comparator<java.io.File>) entryComparator50);
        fileEntryIterator35.entryComparator = entryComparator50;
        java.io.File file53 = fileEntryIterator35.current;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator35.entryComparator;
        java.util.Comparator<java.io.File> fileComparator55 = fileComparator54.reversed();
        java.util.Comparator<java.io.File> fileComparator56 = fileComparator55.reversed();
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator32.thenComparing(fileComparator55);
        java.util.Comparator<java.io.File> fileComparator58 = fileComparator15.thenComparing(fileComparator55);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileComparator58);
    }

    @Test
    public void test4322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4322");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator15);
        fileEntryIterator0.entryComparator = entryComparator15;
        java.io.File file18 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean21 = fileEntryIterator20.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean23 = explodedArchive22.recursive;
        java.io.File file24 = explodedArchive22.manifestFile;
        java.util.jar.Manifest manifest25 = null;
        explodedArchive22.manifest = manifest25;
        java.io.File file27 = explodedArchive22.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        java.io.File file31 = fileEntryIterator28.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        fileEntryIterator28.current = file36;
        explodedArchive22.root = file36;
        fileEntryIterator20.root = file36;
        explodedArchive19.root = file36;
        fileEntryIterator0.current = file36;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean43 = explodedArchive42.recursive;
        boolean boolean44 = explodedArchive42.recursive;
        java.io.File file45 = explodedArchive42.root;
        java.io.File file46 = null;
        java.io.File file47 = explodedArchive42.getManifestFile(file46);
        fileEntryIterator0.current = file47;
        boolean boolean49 = fileEntryIterator0.hasNext();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test4323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4323");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file39 = fileEntryIterator38.current;
        java.io.File file40 = fileEntryIterator38.poll();
        java.io.File file41 = fileEntryIterator38.poll();
        java.io.File file42 = fileEntryIterator38.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.io.File file45 = fileEntryIterator43.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        fileEntryIterator43.root = file49;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.manifestFile;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.io.File file55 = null;
        java.io.File file56 = explodedArchive52.getManifestFile(file55);
        java.util.Iterator<java.io.File> fileItor57 = fileEntryIterator43.listFiles(file56);
        fileEntryIterator38.root = file56;
        explodedArchive0.root = file56;
        explodedArchive0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean63 = explodedArchive62.recursive;
        boolean boolean64 = explodedArchive62.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file66 = explodedArchive65.manifestFile;
        java.io.File file67 = explodedArchive65.manifestFile;
        java.io.File file68 = null;
        java.io.File file69 = explodedArchive65.getManifestFile(file68);
        explodedArchive62.root = file69;
        explodedArchive62.recursive = false;
        java.io.File file73 = explodedArchive62.root;
        java.io.File file74 = explodedArchive0.getManifestFile(file73);
        java.net.URL uRL75 = explodedArchive0.getUrl();
        java.net.URL uRL76 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler78 = null;
        java.net.URL uRL79 = new java.net.URL(uRL76, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", uRLStreamHandler78);
        java.lang.String str80 = uRL76.getQuery();
        java.lang.String str81 = uRL76.getAuthority();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor57);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file73.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file74.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRL75);
// flaky:         org.junit.Assert.assertEquals(uRL75.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRL76);
// flaky:         org.junit.Assert.assertEquals(uRL76.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL79.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
    }

    @Test
    public void test4324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4324");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.net.URI uRI4 = uRL3.toURI();
        java.lang.String str5 = uRL3.getFile();
        java.lang.String str6 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        int int11 = uRL9.getPort();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str5, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test4325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4325");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.io.File file4 = fileEntryIterator0.poll();
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator0.entryComparator;
        java.io.File file8 = fileEntryIterator0.poll();
        fileEntryIterator0.recursive = true;
        boolean boolean11 = fileEntryIterator0.recursive;
        java.io.File file12 = fileEntryIterator0.poll();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test4326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4326");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file://exploded archive", "exploded archive", (int) 'a', "file://filefile://exploded archive:0", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file://exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4327");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor22 = explodedArchive0.iterator();
        java.lang.String str23 = explodedArchive0.toString();
        java.lang.Class<?> wildcardClass24 = explodedArchive0.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entryItor22);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str23, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test4328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4328");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.io.File file9 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        fileEntryIterator6.current = file14;
        explodedArchive0.root = file14;
        java.util.jar.Manifest manifest17 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.manifestFile;
        java.io.File file20 = explodedArchive18.manifestFile;
        java.io.File file21 = null;
        java.io.File file22 = explodedArchive18.getManifestFile(file21);
        boolean boolean23 = explodedArchive18.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        fileEntryIterator24.recursive = true;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator24.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator35.entryComparator;
        java.util.Comparator<java.io.File> fileComparator38 = fileComparator34.thenComparing(fileComparator37);
        fileEntryIterator29.entryComparator = fileComparator34;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator40.stack;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator40.entryComparator;
        java.util.Comparator<java.io.File> fileComparator43 = fileComparator34.thenComparing(fileComparator42);
        fileEntryIterator24.entryComparator = fileComparator43;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file46 = explodedArchive45.manifestFile;
        java.io.File file47 = explodedArchive45.manifestFile;
        java.io.File file48 = null;
        java.io.File file49 = explodedArchive45.getManifestFile(file48);
        fileEntryIterator24.root = file49;
        explodedArchive18.root = file49;
        java.io.File file52 = explodedArchive0.getManifestFile(file49);
        java.lang.String str53 = explodedArchive0.toString();
        java.lang.String str54 = explodedArchive0.toString();
        boolean boolean55 = explodedArchive0.recursive;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileItorQueue41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str53 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str53, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str54 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str54, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test4329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4329");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.lang.String str10 = uRL3.getFile();
        java.net.URL uRL11 = null;
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getHost();
        java.lang.String str16 = uRL14.getAuthority();
        java.lang.String str17 = uRL14.getAuthority();
        java.lang.String str18 = uRL14.getRef();
        java.net.URL uRL19 = null;
        java.net.URLStreamHandler uRLStreamHandler21 = null;
        java.net.URL uRL22 = new java.net.URL(uRL19, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler21);
        java.lang.String str23 = uRL22.getHost();
        java.lang.String str24 = uRL22.getAuthority();
        java.lang.String str25 = uRL22.getQuery();
        int int26 = uRL22.getDefaultPort();
        java.lang.String str27 = uRL22.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler29 = null;
        java.net.URL uRL30 = new java.net.URL(uRL22, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler29);
        java.lang.String str31 = uRL30.getFile();
        boolean boolean32 = uRL14.sameFile(uRL30);
        boolean boolean33 = uRL3.sameFile(uRL30);
        java.lang.String str34 = uRL30.getFile();
        java.net.URL uRL36 = new java.net.URL(uRL30, "file");
        java.lang.String str37 = uRL36.toExternalForm();
        java.lang.String str38 = uRL36.getProtocol();
        java.lang.String str39 = uRL36.getAuthority();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals(uRL30.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str31, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str34, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL36.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file" + "'", str37, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file" + "'", str38, "file");
        org.junit.Assert.assertNull(str39);
    }

    @Test
    public void test4330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4330");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry0.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.util.Comparator<java.io.File> fileComparator12 = fileComparator8.thenComparing(fileComparator11);
        fileEntryIterator3.entryComparator = fileComparator8;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator15 = fileComparator8.thenComparing((java.util.Comparator<java.io.File>) entryComparator14);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator21.thenComparing(fileComparator24);
        java.util.Comparator<java.io.File> fileComparator26 = fileComparator18.thenComparing(fileComparator24);
        java.util.Comparator<java.io.File> fileComparator27 = entryComparator14.thenComparing(fileComparator26);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file29 = fileEntryIterator28.current;
        java.io.File file30 = null;
        fileEntryIterator28.current = file30;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean33 = explodedArchive32.recursive;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.util.jar.Manifest manifest35 = null;
        explodedArchive32.manifest = manifest35;
        java.io.File file37 = explodedArchive32.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        java.io.File file41 = fileEntryIterator38.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.io.File file45 = null;
        java.io.File file46 = explodedArchive42.getManifestFile(file45);
        fileEntryIterator38.current = file46;
        explodedArchive32.root = file46;
        fileEntryIterator28.root = file46;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        fileEntryIterator50.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file55 = explodedArchive54.manifestFile;
        java.io.File file56 = explodedArchive54.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        fileEntryIterator57.recursive = true;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator62.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator65.stack;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator65.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        java.util.Comparator<java.io.File> fileComparator71 = fileComparator67.thenComparing(fileComparator70);
        fileEntryIterator62.entryComparator = fileComparator67;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator73 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue74 = fileEntryIterator73.stack;
        java.util.Comparator<java.io.File> fileComparator75 = fileEntryIterator73.entryComparator;
        java.util.Comparator<java.io.File> fileComparator76 = fileComparator67.thenComparing(fileComparator75);
        fileEntryIterator57.entryComparator = fileComparator76;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file79 = explodedArchive78.manifestFile;
        java.io.File file80 = explodedArchive78.manifestFile;
        java.io.File file81 = null;
        java.io.File file82 = explodedArchive78.getManifestFile(file81);
        fileEntryIterator57.root = file82;
        explodedArchive54.manifestFile = file82;
        fileEntryIterator50.current = file82;
        int int86 = entryComparator14.compare(file46, file82);
        fileEntry0.file = file82;
        java.io.File file88 = fileEntry0.file;
        java.lang.String str89 = fileEntry0.getName();
        java.lang.String str90 = fileEntry0.name;
        java.io.File file91 = fileEntry0.getFile();
        java.lang.String str92 = fileEntry0.getName();
        boolean boolean93 = fileEntry0.isDirectory();
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileItorQueue74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(file88);
        org.junit.Assert.assertEquals(file88.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file88.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "exploded archive" + "'", str89, "exploded archive");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "exploded archive" + "'", str90, "exploded archive");
        org.junit.Assert.assertNotNull(file91);
        org.junit.Assert.assertEquals(file91.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file91.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "exploded archive" + "'", str92, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test4331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4331");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        java.lang.String str5 = fileEntry0.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        boolean boolean8 = fileEntryIterator6.hasNext();
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator15.thenComparing(fileComparator18);
        fileEntryIterator10.entryComparator = fileComparator15;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator15.thenComparing((java.util.Comparator<java.io.File>) entryComparator21);
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator21);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean25 = fileEntryIterator24.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean27 = explodedArchive26.recursive;
        java.io.File file28 = explodedArchive26.manifestFile;
        java.util.jar.Manifest manifest29 = null;
        explodedArchive26.manifest = manifest29;
        java.io.File file31 = explodedArchive26.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.io.File file35 = fileEntryIterator32.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file37 = explodedArchive36.manifestFile;
        java.io.File file38 = explodedArchive36.manifestFile;
        java.io.File file39 = null;
        java.io.File file40 = explodedArchive36.getManifestFile(file39);
        fileEntryIterator32.current = file40;
        explodedArchive26.root = file40;
        fileEntryIterator24.root = file40;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.manifestFile;
        java.io.File file46 = explodedArchive44.manifestFile;
        java.io.File file47 = null;
        java.io.File file48 = explodedArchive44.getManifestFile(file47);
        boolean boolean49 = explodedArchive44.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        fileEntryIterator50.recursive = true;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator50.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        java.util.Comparator<java.io.File> fileComparator64 = fileComparator60.thenComparing(fileComparator63);
        fileEntryIterator55.entryComparator = fileComparator60;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator66 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue67 = fileEntryIterator66.stack;
        java.util.Comparator<java.io.File> fileComparator68 = fileEntryIterator66.entryComparator;
        java.util.Comparator<java.io.File> fileComparator69 = fileComparator60.thenComparing(fileComparator68);
        fileEntryIterator50.entryComparator = fileComparator69;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file72 = explodedArchive71.manifestFile;
        java.io.File file73 = explodedArchive71.manifestFile;
        java.io.File file74 = null;
        java.io.File file75 = explodedArchive71.getManifestFile(file74);
        fileEntryIterator50.root = file75;
        explodedArchive44.root = file75;
        int int78 = entryComparator21.compare(file40, file75);
        fileEntry0.file = file75;
        java.lang.String str80 = fileEntry0.getName();
        java.io.File file81 = fileEntry0.getFile();
        java.io.File file82 = fileEntry0.file;
        boolean boolean83 = fileEntry0.isDirectory();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file40.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file75.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file81.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test4332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4332");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.lang.String str10 = uRL3.getFile();
        java.net.URL uRL11 = null;
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getHost();
        java.lang.String str16 = uRL14.getAuthority();
        java.lang.String str17 = uRL14.getAuthority();
        java.lang.String str18 = uRL14.getRef();
        java.net.URL uRL19 = null;
        java.net.URLStreamHandler uRLStreamHandler21 = null;
        java.net.URL uRL22 = new java.net.URL(uRL19, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler21);
        java.lang.String str23 = uRL22.getHost();
        java.lang.String str24 = uRL22.getAuthority();
        java.lang.String str25 = uRL22.getQuery();
        int int26 = uRL22.getDefaultPort();
        java.lang.String str27 = uRL22.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler29 = null;
        java.net.URL uRL30 = new java.net.URL(uRL22, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler29);
        java.lang.String str31 = uRL30.getFile();
        boolean boolean32 = uRL14.sameFile(uRL30);
        boolean boolean33 = uRL3.sameFile(uRL30);
        java.net.URL uRL34 = null;
        java.net.URLStreamHandler uRLStreamHandler36 = null;
        java.net.URL uRL37 = new java.net.URL(uRL34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler36);
        java.lang.String str38 = uRL37.getHost();
        java.lang.String str39 = uRL37.getAuthority();
        java.lang.String str40 = uRL37.getAuthority();
        java.lang.String str41 = uRL37.getFile();
        int int42 = uRL37.getPort();
        java.lang.String str43 = uRL37.getRef();
        java.net.URL uRL45 = new java.net.URL(uRL37, "hi!");
        boolean boolean46 = uRL3.sameFile(uRL45);
        int int47 = uRL3.getDefaultPort();
        java.net.URL uRL48 = null;
        java.net.URLStreamHandler uRLStreamHandler50 = null;
        java.net.URL uRL51 = new java.net.URL(uRL48, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler50);
        java.lang.String str52 = uRL51.getHost();
        int int53 = uRL51.getPort();
        java.net.URLStreamHandler uRLStreamHandler55 = null;
        java.net.URL uRL56 = new java.net.URL(uRL51, "hi!", uRLStreamHandler55);
        java.net.URLConnection uRLConnection57 = uRL56.openConnection();
        boolean boolean58 = uRL3.sameFile(uRL56);
        java.lang.String str59 = uRL3.getRef();
        java.lang.String str60 = uRL3.getFile();
        java.lang.String str61 = uRL3.getUserInfo();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals(uRL30.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str31, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals(uRL37.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str41, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals(uRL45.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertEquals(uRL51.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertEquals(uRL56.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNotNull(uRLConnection57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str60, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str61);
    }

    @Test
    public void test4333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4333");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = explodedArchive0.manifest;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator37 = explodedArchive0.spliterator();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator38 = explodedArchive0.spliterator();
        java.util.jar.Manifest manifest39 = null;
        explodedArchive0.manifest = manifest39;
        explodedArchive0.recursive = true;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter43 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList44 = explodedArchive0.getNestedArchives(entryFilter43);
        java.io.File file45 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive0.getNestedArchives(entryFilter46);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNotNull(entrySpliterator37);
        org.junit.Assert.assertNotNull(entrySpliterator38);
        org.junit.Assert.assertNotNull(archiveList44);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList47);
    }

    @Test
    public void test4334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4334");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        int int11 = uRL9.getPort();
        java.net.URL uRL12 = null;
        java.net.URLStreamHandler uRLStreamHandler14 = null;
        java.net.URL uRL15 = new java.net.URL(uRL12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler14);
        java.lang.String str16 = uRL15.getHost();
        java.lang.String str17 = uRL15.getAuthority();
        java.lang.String str18 = uRL15.getQuery();
        int int19 = uRL15.getDefaultPort();
        boolean boolean20 = uRL9.sameFile(uRL15);
        boolean boolean21 = uRL3.sameFile(uRL9);
        int int22 = uRL3.getPort();
        java.lang.String str23 = uRL3.toExternalForm();
        java.lang.String str24 = uRL3.getProtocol();
        java.lang.String str25 = uRL3.getRef();
        java.lang.String str26 = uRL3.getProtocol();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj27 = uRL3.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str23, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "file" + "'", str24, "file");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "file" + "'", str26, "file");
    }

    @Test
    public void test4335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4335");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator2.stack;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator2.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        java.util.Comparator<java.io.File> fileComparator11 = fileComparator7.thenComparing(fileComparator10);
        fileEntryIterator2.entryComparator = fileComparator7;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator7.thenComparing(fileComparator15);
        fileEntryIterator0.entryComparator = fileComparator16;
        java.io.File file18 = fileEntryIterator0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        fileEntryIterator0.entryComparator = entryComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator29.thenComparing(fileComparator32);
        java.util.Comparator<java.io.File> fileComparator34 = fileComparator26.thenComparing(fileComparator32);
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator23.thenComparing(fileComparator32);
        java.util.Comparator<java.io.File> fileComparator36 = entryComparator19.thenComparing(fileComparator23);
        java.util.Comparator<java.io.File> fileComparator37 = entryComparator19.reversed();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.manifestFile;
        java.io.File file42 = explodedArchive40.manifestFile;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive40.getManifestFile(file43);
        fileEntryIterator38.current = file43;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator38.entryComparator;
        fileEntryIterator38.recursive = false;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator38.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator37.thenComparing(fileComparator51);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
    }

    @Test
    public void test4336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4336");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        int int8 = uRL3.getPort();
        java.lang.String str9 = uRL3.getRef();
        java.net.URL uRL11 = new java.net.URL(uRL3, "hi!");
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "", uRLStreamHandler13);
        java.lang.String str15 = uRL11.getQuery();
        java.net.URL uRL17 = new java.net.URL(uRL11, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        java.lang.String str18 = uRL17.getProtocol();
        java.lang.Class[] classArray19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj20 = uRL17.getContent(classArray19);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "file" + "'", str18, "file");
    }

    @Test
    public void test4337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4337");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLConnection uRLConnection7 = uRL3.openConnection();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.net.URLConnection uRLConnection12 = uRL3.openConnection();
        java.net.URI uRI13 = uRL3.toURI();
        java.lang.String str14 = uRL3.getQuery();
        java.net.Proxy proxy15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection16 = uRL3.openConnection(proxy15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection12);
        org.junit.Assert.assertNotNull(uRI13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test4338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4338");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL71 = null;
        java.net.URLStreamHandler uRLStreamHandler73 = null;
        java.net.URL uRL74 = new java.net.URL(uRL71, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler73);
        java.lang.String str75 = uRL74.getHost();
        java.lang.String str76 = uRL74.getAuthority();
        java.lang.String str77 = uRL74.getAuthority();
        java.lang.String str78 = uRL74.getFile();
        int int79 = uRL74.getPort();
        java.lang.String str80 = uRL74.getRef();
        java.net.URL uRL82 = new java.net.URL(uRL74, "hi!");
        boolean boolean83 = uRL69.sameFile(uRL82);
        int int84 = uRL69.getPort();
        java.net.URI uRI85 = uRL69.toURI();
        java.net.Proxy proxy86 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection87 = uRL69.openConnection(proxy86);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str78, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertEquals(uRL82.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(uRI85);
    }

    @Test
    public void test4339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4339");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.util.jar.Manifest manifest38 = explodedArchive0.manifest;
        java.lang.String str39 = explodedArchive0.toString();
        java.lang.String str40 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        java.io.File file43 = fileEntryIterator41.current;
        boolean boolean44 = fileEntryIterator41.hasNext();
        fileEntryIterator41.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue48 = fileEntryIterator47.stack;
        fileEntryIterator47.recursive = true;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator47.entryComparator;
        fileEntryIterator47.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.io.File file56 = fileEntryIterator54.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        fileEntryIterator54.entryComparator = fileComparator59;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file62 = explodedArchive61.manifestFile;
        java.io.File file63 = explodedArchive61.manifestFile;
        java.io.File file64 = null;
        java.io.File file65 = explodedArchive61.getManifestFile(file64);
        fileEntryIterator54.root = file64;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file68 = fileEntryIterator67.current;
        java.io.File file69 = null;
        fileEntryIterator67.current = file69;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean72 = explodedArchive71.recursive;
        java.io.File file73 = explodedArchive71.manifestFile;
        java.util.jar.Manifest manifest74 = null;
        explodedArchive71.manifest = manifest74;
        java.io.File file76 = explodedArchive71.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator77 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue78 = fileEntryIterator77.stack;
        java.util.Comparator<java.io.File> fileComparator79 = fileEntryIterator77.entryComparator;
        java.io.File file80 = fileEntryIterator77.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive81 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file82 = explodedArchive81.manifestFile;
        java.io.File file83 = explodedArchive81.manifestFile;
        java.io.File file84 = null;
        java.io.File file85 = explodedArchive81.getManifestFile(file84);
        fileEntryIterator77.current = file85;
        explodedArchive71.root = file85;
        fileEntryIterator67.root = file85;
        fileEntryIterator54.current = file85;
        java.util.Iterator<java.io.File> fileItor90 = fileEntryIterator47.listFiles(file85);
        fileEntryIterator41.root = file85;
        explodedArchive0.root = file85;
        java.net.URL uRL93 = explodedArchive0.getUrl();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator94 = explodedArchive0.spliterator();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator95 = explodedArchive0.spliterator();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest38);
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str39, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str40, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(fileItorQueue48);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file65.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNotNull(fileItorQueue78);
        org.junit.Assert.assertNotNull(fileComparator79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertNotNull(file85);
        org.junit.Assert.assertEquals(file85.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file85.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor90);
        org.junit.Assert.assertNotNull(uRL93);
// flaky:         org.junit.Assert.assertEquals(uRL93.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator94);
        org.junit.Assert.assertNotNull(entrySpliterator95);
    }

    @Test
    public void test4340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4340");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str1 = fileEntry0.getName();
        fileEntry0.name = "exploded archive";
        java.io.File file4 = fileEntry0.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file6 = fileEntryIterator5.current;
        boolean boolean7 = fileEntryIterator5.hasNext();
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        fileEntryIterator9.recursive = true;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator9.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator19.thenComparing(fileComparator22);
        fileEntryIterator14.entryComparator = fileComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator19.thenComparing(fileComparator27);
        fileEntryIterator9.entryComparator = fileComparator28;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file31 = fileEntryIterator30.current;
        java.io.File file32 = fileEntryIterator30.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file34 = fileEntryIterator33.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator35.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        java.util.Comparator<java.io.File> fileComparator43 = fileEntryIterator41.entryComparator;
        java.util.Comparator<java.io.File> fileComparator44 = fileComparator40.thenComparing(fileComparator43);
        fileEntryIterator35.entryComparator = fileComparator40;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        java.util.Comparator<java.io.File> fileComparator49 = fileComparator40.thenComparing(fileComparator48);
        fileEntryIterator33.entryComparator = fileComparator49;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator33.stack;
        fileEntryIterator30.stack = fileItorQueue51;
        fileEntryIterator9.stack = fileItorQueue51;
        fileEntryIterator5.stack = fileItorQueue51;
        fileEntryIterator5.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.manifestFile;
        java.io.File file59 = explodedArchive57.manifestFile;
        java.io.File file60 = null;
        java.io.File file61 = explodedArchive57.getManifestFile(file60);
        boolean boolean62 = explodedArchive57.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        fileEntryIterator63.recursive = true;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator63.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator71 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue72 = fileEntryIterator71.stack;
        java.util.Comparator<java.io.File> fileComparator73 = fileEntryIterator71.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator74 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue75 = fileEntryIterator74.stack;
        java.util.Comparator<java.io.File> fileComparator76 = fileEntryIterator74.entryComparator;
        java.util.Comparator<java.io.File> fileComparator77 = fileComparator73.thenComparing(fileComparator76);
        fileEntryIterator68.entryComparator = fileComparator73;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator79 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue80 = fileEntryIterator79.stack;
        java.util.Comparator<java.io.File> fileComparator81 = fileEntryIterator79.entryComparator;
        java.util.Comparator<java.io.File> fileComparator82 = fileComparator73.thenComparing(fileComparator81);
        fileEntryIterator63.entryComparator = fileComparator82;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive84 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file85 = explodedArchive84.manifestFile;
        java.io.File file86 = explodedArchive84.manifestFile;
        java.io.File file87 = null;
        java.io.File file88 = explodedArchive84.getManifestFile(file87);
        fileEntryIterator63.root = file88;
        explodedArchive57.root = file88;
        java.util.Iterator<java.io.File> fileItor91 = fileEntryIterator5.listFiles(file88);
        fileEntry0.file = file88;
        java.lang.String str93 = fileEntry0.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file61.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileItorQueue72);
        org.junit.Assert.assertNotNull(fileComparator73);
        org.junit.Assert.assertNotNull(fileItorQueue75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNotNull(fileComparator77);
        org.junit.Assert.assertNotNull(fileItorQueue80);
        org.junit.Assert.assertNotNull(fileComparator81);
        org.junit.Assert.assertNotNull(fileComparator82);
        org.junit.Assert.assertNull(file85);
        org.junit.Assert.assertNull(file86);
        org.junit.Assert.assertNotNull(file88);
        org.junit.Assert.assertEquals(file88.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file88.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor91);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "exploded archive" + "'", str93, "exploded archive");
    }

    @Test
    public void test4341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4341");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getPort();
        java.lang.String str8 = uRL3.getQuery();
        java.net.URLConnection uRLConnection9 = uRL3.openConnection();
        java.net.URL uRL11 = new java.net.URL(uRL3, "file://exploded archive");
        java.lang.String str12 = uRL11.toExternalForm();
        java.net.URL uRL14 = new java.net.URL(uRL11, "file://exploded archive:0/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(uRLConnection9);
        org.junit.Assert.assertEquals(uRL11.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file://exploded archive" + "'", str12, "file://exploded archive");
        org.junit.Assert.assertEquals(uRL14.toString(), "file://exploded archive:0/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
    }

    @Test
    public void test4342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4342");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        java.io.File file3 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file5 = fileEntryIterator4.current;
        java.io.File file6 = fileEntryIterator4.poll();
        java.io.File file7 = fileEntryIterator4.poll();
        java.io.File file8 = fileEntryIterator4.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.io.File file11 = fileEntryIterator9.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.manifestFile;
        java.io.File file14 = explodedArchive12.manifestFile;
        java.io.File file15 = null;
        java.io.File file16 = explodedArchive12.getManifestFile(file15);
        fileEntryIterator9.root = file15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.manifestFile;
        java.io.File file20 = explodedArchive18.manifestFile;
        java.io.File file21 = null;
        java.io.File file22 = explodedArchive18.getManifestFile(file21);
        java.util.Iterator<java.io.File> fileItor23 = fileEntryIterator9.listFiles(file22);
        fileEntryIterator4.root = file22;
        boolean boolean25 = fileEntryIterator4.hasNext();
        fileEntryIterator4.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean29 = explodedArchive28.recursive;
        java.io.File file30 = explodedArchive28.manifestFile;
        java.util.jar.Manifest manifest31 = null;
        explodedArchive28.manifest = manifest31;
        java.io.File file33 = explodedArchive28.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.io.File file37 = fileEntryIterator34.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        fileEntryIterator34.current = file42;
        explodedArchive28.root = file42;
        java.util.jar.Manifest manifest45 = explodedArchive28.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        boolean boolean51 = explodedArchive46.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        fileEntryIterator52.recursive = true;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        java.util.Comparator<java.io.File> fileComparator62 = fileEntryIterator60.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator63.entryComparator;
        java.util.Comparator<java.io.File> fileComparator66 = fileComparator62.thenComparing(fileComparator65);
        fileEntryIterator57.entryComparator = fileComparator62;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        java.util.Comparator<java.io.File> fileComparator71 = fileComparator62.thenComparing(fileComparator70);
        fileEntryIterator52.entryComparator = fileComparator71;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file74 = explodedArchive73.manifestFile;
        java.io.File file75 = explodedArchive73.manifestFile;
        java.io.File file76 = null;
        java.io.File file77 = explodedArchive73.getManifestFile(file76);
        fileEntryIterator52.root = file77;
        explodedArchive46.root = file77;
        java.io.File file80 = explodedArchive28.getManifestFile(file77);
        fileEntryIterator4.current = file80;
        explodedArchive0.manifestFile = file80;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file16.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest45);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file77.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file80);
        org.junit.Assert.assertEquals(file80.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file80.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4343");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.root;
        boolean boolean3 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest4 = null;
        explodedArchive0.manifest = manifest4;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive0.manifest = manifest6;
        java.io.File file8 = explodedArchive0.root;
        boolean boolean9 = explodedArchive0.recursive;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test4344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4344");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        java.net.URL uRL8 = null;
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL8, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.getHost();
        java.net.URI uRI13 = uRL11.toURI();
        java.lang.String str14 = uRL11.toExternalForm();
        boolean boolean15 = uRL3.sameFile(uRL11);
        java.lang.String str16 = uRL11.toExternalForm();
        java.lang.String str17 = uRL11.getPath();
        int int18 = uRL11.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean21 = fileEntryIterator20.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean23 = explodedArchive22.recursive;
        java.io.File file24 = explodedArchive22.manifestFile;
        java.util.jar.Manifest manifest25 = null;
        explodedArchive22.manifest = manifest25;
        java.io.File file27 = explodedArchive22.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        java.io.File file31 = fileEntryIterator28.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        fileEntryIterator28.current = file36;
        explodedArchive22.root = file36;
        fileEntryIterator20.root = file36;
        explodedArchive19.root = file36;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator41 = explodedArchive19.spliterator();
        java.io.File file42 = explodedArchive19.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str44 = fileEntry43.name;
        java.io.File file45 = fileEntry43.file;
        fileEntry43.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        boolean boolean50 = fileEntryIterator48.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file52 = explodedArchive51.manifestFile;
        java.io.File file53 = explodedArchive51.manifestFile;
        java.io.File file54 = null;
        java.io.File file55 = explodedArchive51.getManifestFile(file54);
        boolean boolean56 = explodedArchive51.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        fileEntryIterator57.recursive = true;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator62.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator65.stack;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator65.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        java.util.Comparator<java.io.File> fileComparator71 = fileComparator67.thenComparing(fileComparator70);
        fileEntryIterator62.entryComparator = fileComparator67;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator73 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue74 = fileEntryIterator73.stack;
        java.util.Comparator<java.io.File> fileComparator75 = fileEntryIterator73.entryComparator;
        java.util.Comparator<java.io.File> fileComparator76 = fileComparator67.thenComparing(fileComparator75);
        fileEntryIterator57.entryComparator = fileComparator76;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file79 = explodedArchive78.manifestFile;
        java.io.File file80 = explodedArchive78.manifestFile;
        java.io.File file81 = null;
        java.io.File file82 = explodedArchive78.getManifestFile(file81);
        fileEntryIterator57.root = file82;
        explodedArchive51.root = file82;
        java.util.Iterator<java.io.File> fileItor85 = fileEntryIterator48.listFiles(file82);
        fileEntry43.file = file82;
        explodedArchive19.root = file82;
        java.net.URL uRL88 = explodedArchive19.getUrl();
        java.net.URLStreamHandler uRLStreamHandler90 = null;
        java.net.URL uRL91 = new java.net.URL(uRL88, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler90);
        java.lang.String str92 = uRL88.getUserInfo();
        java.net.URLConnection uRLConnection93 = uRL88.openConnection();
        java.net.URLStreamHandler uRLStreamHandler95 = null;
        java.net.URL uRL96 = new java.net.URL(uRL88, "file://exploded archive", uRLStreamHandler95);
        boolean boolean97 = uRL11.sameFile(uRL88);
        java.net.URLConnection uRLConnection98 = uRL11.openConnection();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(uRI13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str14, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str16, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str17, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator41);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileItorQueue74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor85);
        org.junit.Assert.assertNotNull(uRL88);
// flaky:         org.junit.Assert.assertEquals(uRL88.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL91.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertNotNull(uRLConnection93);
        org.junit.Assert.assertEquals(uRL96.toString(), "file://exploded archive");
// flaky:         org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertNotNull(uRLConnection98);
    }

    @Test
    public void test4345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4345");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.io.File file9 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        fileEntryIterator6.current = file14;
        explodedArchive0.root = file14;
        java.util.jar.Manifest manifest17 = explodedArchive0.manifest;
        java.lang.String str18 = explodedArchive0.toString();
        java.io.File file19 = explodedArchive0.manifestFile;
        java.io.File file20 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive0.getNestedArchives(entryFilter21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean24 = explodedArchive23.recursive;
        java.io.File file25 = explodedArchive23.manifestFile;
        java.util.jar.Manifest manifest26 = null;
        explodedArchive23.manifest = manifest26;
        java.io.File file28 = explodedArchive23.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.io.File file32 = fileEntryIterator29.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file34 = explodedArchive33.manifestFile;
        java.io.File file35 = explodedArchive33.manifestFile;
        java.io.File file36 = null;
        java.io.File file37 = explodedArchive33.getManifestFile(file36);
        fileEntryIterator29.current = file37;
        explodedArchive23.root = file37;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean41 = explodedArchive40.recursive;
        java.lang.String str42 = explodedArchive40.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean45 = fileEntryIterator44.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean47 = explodedArchive46.recursive;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.util.jar.Manifest manifest49 = null;
        explodedArchive46.manifest = manifest49;
        java.io.File file51 = explodedArchive46.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator52.entryComparator;
        java.io.File file55 = fileEntryIterator52.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file57 = explodedArchive56.manifestFile;
        java.io.File file58 = explodedArchive56.manifestFile;
        java.io.File file59 = null;
        java.io.File file60 = explodedArchive56.getManifestFile(file59);
        fileEntryIterator52.current = file60;
        explodedArchive46.root = file60;
        fileEntryIterator44.root = file60;
        explodedArchive43.root = file60;
        java.io.File file65 = explodedArchive43.root;
        explodedArchive40.manifestFile = file65;
        java.io.File file67 = explodedArchive40.manifestFile;
        java.io.File file68 = explodedArchive40.manifestFile;
        java.io.File file69 = explodedArchive23.getManifestFile(file68);
        explodedArchive0.root = file68;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest17);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str18, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file20.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "exploded archive" + "'", str42, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file60.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file65.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file67.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file68.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4346");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.lang.String str73 = uRL69.getUserInfo();
        java.net.URLConnection uRLConnection74 = uRL69.openConnection();
        int int75 = uRL69.getDefaultPort();
        java.lang.String str76 = uRL69.getUserInfo();
        java.net.URLStreamHandler uRLStreamHandler78 = null;
        java.net.URL uRL79 = new java.net.URL(uRL69, "", uRLStreamHandler78);
        java.lang.String str80 = uRL69.getQuery();
        java.lang.String str81 = uRL69.getUserInfo();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(uRLConnection74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNull(str76);
// flaky:         org.junit.Assert.assertEquals(uRL79.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNull(str81);
    }

    @Test
    public void test4347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4347");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getRef();
        java.net.URL uRL7 = null;
        java.net.URLStreamHandler uRLStreamHandler9 = null;
        java.net.URL uRL10 = new java.net.URL(uRL7, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler9);
        java.lang.String str11 = uRL10.getHost();
        java.lang.String str12 = uRL10.getAuthority();
        java.lang.String str13 = uRL10.getAuthority();
        java.lang.String str14 = uRL10.getFile();
        int int15 = uRL10.getPort();
        java.lang.String str16 = uRL10.getRef();
        java.net.URL uRL18 = new java.net.URL(uRL10, "hi!");
        java.net.URLStreamHandler uRLStreamHandler20 = null;
        java.net.URL uRL21 = new java.net.URL(uRL18, "", uRLStreamHandler20);
        boolean boolean22 = uRL3.sameFile(uRL18);
        java.net.URLStreamHandler uRLStreamHandler24 = null;
        java.net.URL uRL25 = new java.net.URL(uRL18, "hi!", uRLStreamHandler24);
        java.net.Proxy proxy26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection27 = uRL18.openConnection(proxy26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals(uRL10.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str14, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals(uRL18.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL21.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals(uRL25.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test4348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4348");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        java.io.File file41 = explodedArchive0.root;
        explodedArchive0.recursive = true;
        java.lang.String str44 = explodedArchive0.toString();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator45 = explodedArchive0.spliterator();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive0.getNestedArchives(entryFilter46);
        boolean boolean48 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest49 = null;
        explodedArchive0.manifest = manifest49;
        java.net.URL uRL51 = explodedArchive0.getUrl();
        java.net.URL uRL52 = null;
        java.net.URLStreamHandler uRLStreamHandler54 = null;
        java.net.URL uRL55 = new java.net.URL(uRL52, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler54);
        java.lang.String str56 = uRL55.getHost();
        int int57 = uRL55.getPort();
        java.net.URL uRL58 = null;
        java.net.URLStreamHandler uRLStreamHandler60 = null;
        java.net.URL uRL61 = new java.net.URL(uRL58, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler60);
        java.lang.String str62 = uRL61.getHost();
        int int63 = uRL61.getPort();
        java.net.URL uRL64 = null;
        java.net.URLStreamHandler uRLStreamHandler66 = null;
        java.net.URL uRL67 = new java.net.URL(uRL64, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler66);
        java.lang.String str68 = uRL67.getHost();
        java.lang.String str69 = uRL67.getAuthority();
        java.lang.String str70 = uRL67.getQuery();
        int int71 = uRL67.getDefaultPort();
        boolean boolean72 = uRL61.sameFile(uRL67);
        boolean boolean73 = uRL55.sameFile(uRL61);
        java.lang.String str74 = uRL61.toExternalForm();
        java.net.URL uRL76 = new java.net.URL(uRL61, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str77 = uRL76.getPath();
        java.lang.String str78 = uRL76.getProtocol();
        boolean boolean79 = uRL51.equals((java.lang.Object) str78);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str44, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator45);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(uRL51);
// flaky:         org.junit.Assert.assertEquals(uRL51.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL55.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertEquals(uRL61.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertEquals(uRL67.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str74, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL76.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str77, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "file" + "'", str78, "file");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test4349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4349");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.lang.String str2 = explodedArchive0.toString();
        boolean boolean3 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.manifestFile;
        java.io.File file6 = explodedArchive4.manifestFile;
        java.io.File file7 = null;
        java.io.File file8 = explodedArchive4.getManifestFile(file7);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file10 = fileEntry9.getFile();
        java.lang.String str11 = fileEntry9.name;
        java.io.File file12 = fileEntry9.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        boolean boolean15 = fileEntryIterator13.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.manifestFile;
        java.io.File file18 = explodedArchive16.manifestFile;
        java.io.File file19 = null;
        java.io.File file20 = explodedArchive16.getManifestFile(file19);
        boolean boolean21 = explodedArchive16.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        fileEntryIterator22.recursive = true;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator22.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        java.util.Comparator<java.io.File> fileComparator36 = fileComparator32.thenComparing(fileComparator35);
        fileEntryIterator27.entryComparator = fileComparator32;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        java.util.Comparator<java.io.File> fileComparator41 = fileComparator32.thenComparing(fileComparator40);
        fileEntryIterator22.entryComparator = fileComparator41;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file44 = explodedArchive43.manifestFile;
        java.io.File file45 = explodedArchive43.manifestFile;
        java.io.File file46 = null;
        java.io.File file47 = explodedArchive43.getManifestFile(file46);
        fileEntryIterator22.root = file47;
        explodedArchive16.root = file47;
        java.util.Iterator<java.io.File> fileItor50 = fileEntryIterator13.listFiles(file47);
        fileEntry9.file = file47;
        explodedArchive4.manifestFile = file47;
        explodedArchive0.manifestFile = file47;
        java.lang.String str54 = explodedArchive0.toString();
        java.io.File file55 = explodedArchive0.root;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "exploded archive" + "'", str2, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(file8);
        org.junit.Assert.assertEquals(file8.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file8.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file20.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "exploded archive" + "'", str54, "exploded archive");
        org.junit.Assert.assertNull(file55);
    }

    @Test
    public void test4350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4350");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        java.net.URL uRL5 = new java.net.URL("file", "exploded archive", (int) (byte) -1, "", uRLStreamHandler4);
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler16);
        java.lang.String str18 = uRL17.toExternalForm();
        java.lang.String str19 = uRL17.getUserInfo();
        java.lang.String str20 = uRL17.getProtocol();
        java.net.URLConnection uRLConnection21 = uRL17.openConnection();
        java.net.URL uRL23 = new java.net.URL(uRL17, "file://exploded archive");
        java.lang.String str24 = uRL17.getRef();
        java.lang.String str25 = uRL17.getFile();
        java.lang.String str26 = uRL17.getRef();
        boolean boolean27 = uRL5.sameFile(uRL17);
        java.lang.String str28 = uRL5.getAuthority();
        java.lang.String str29 = uRL5.getRef();
        java.lang.String str30 = uRL5.getUserInfo();
        java.net.Proxy proxy31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection32 = uRL5.openConnection(proxy31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL5.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str18, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "file" + "'", str20, "file");
        org.junit.Assert.assertNotNull(uRLConnection21);
        org.junit.Assert.assertEquals(uRL23.toString(), "file://exploded archive");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str25, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "exploded archive" + "'", str28, "exploded archive");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test4351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4351");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.getName();
        java.lang.String str3 = fileEntry0.getName();
        fileEntry0.name = "";
        java.io.File file6 = fileEntry0.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        boolean boolean9 = fileEntryIterator7.hasNext();
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator7.entryComparator;
        fileEntryIterator7.recursive = true;
        java.io.File file13 = fileEntryIterator7.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry14.name = "exploded archive";
        java.lang.String str17 = fileEntry14.getName();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.manifestFile;
        java.io.File file20 = explodedArchive18.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        fileEntryIterator21.recursive = true;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator31.thenComparing(fileComparator34);
        fileEntryIterator26.entryComparator = fileComparator31;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator31.thenComparing(fileComparator39);
        fileEntryIterator21.entryComparator = fileComparator40;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.io.File file45 = null;
        java.io.File file46 = explodedArchive42.getManifestFile(file45);
        fileEntryIterator21.root = file46;
        explodedArchive18.manifestFile = file46;
        java.util.jar.Manifest manifest49 = explodedArchive18.manifest;
        java.util.jar.Manifest manifest50 = explodedArchive18.manifest;
        java.util.jar.Manifest manifest51 = explodedArchive18.getManifest();
        java.util.jar.Manifest manifest52 = explodedArchive18.getManifest();
        java.io.File file53 = explodedArchive18.root;
        java.io.File file54 = explodedArchive18.manifestFile;
        java.io.File file55 = explodedArchive18.manifestFile;
        fileEntry14.file = file55;
        fileEntryIterator7.root = file55;
        fileEntry0.file = file55;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive(file55, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "exploded archive" + "'", str17, "exploded archive");
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest49);
        org.junit.Assert.assertNull(manifest50);
        org.junit.Assert.assertNull(manifest51);
        org.junit.Assert.assertNull(manifest52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test4352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4352");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        boolean boolean41 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest42 = explodedArchive0.manifest;
        java.net.URL uRL43 = explodedArchive0.getUrl();
        java.lang.String str44 = uRL43.getProtocol();
        java.lang.String str45 = uRL43.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str47 = fileEntry46.getName();
        fileEntry46.name = "exploded archive";
        fileEntry46.name = "hi!";
        java.lang.String str52 = fileEntry46.name;
        fileEntry46.name = "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF";
        boolean boolean55 = uRL43.equals((java.lang.Object) "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(manifest42);
        org.junit.Assert.assertNotNull(uRL43);
// flaky:         org.junit.Assert.assertEquals(uRL43.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "file" + "'", str44, "file");
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test4353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4353");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.name;
        java.lang.String str3 = fileEntry0.getName();
        java.lang.String str4 = fileEntry0.getName();
        java.lang.String str5 = fileEntry0.name;
        java.io.File file6 = fileEntry0.file;
        java.io.File file7 = fileEntry0.file;
        java.io.File file8 = fileEntry0.file;
        fileEntry0.name = "";
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
    }

    @Test
    public void test4354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4354");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        boolean boolean2 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = true;
        boolean boolean5 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str7 = explodedArchive6.toString();
        boolean boolean8 = explodedArchive6.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file10 = fileEntryIterator9.current;
        java.io.File file11 = null;
        fileEntryIterator9.current = file11;
        java.io.File file13 = fileEntryIterator9.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file15 = fileEntry14.getFile();
        java.lang.String str16 = fileEntry14.name;
        java.io.File file17 = fileEntry14.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        boolean boolean20 = fileEntryIterator18.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file22 = explodedArchive21.manifestFile;
        java.io.File file23 = explodedArchive21.manifestFile;
        java.io.File file24 = null;
        java.io.File file25 = explodedArchive21.getManifestFile(file24);
        boolean boolean26 = explodedArchive21.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        fileEntryIterator27.recursive = true;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator27.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator35.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        java.util.Comparator<java.io.File> fileComparator41 = fileComparator37.thenComparing(fileComparator40);
        fileEntryIterator32.entryComparator = fileComparator37;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        java.util.Comparator<java.io.File> fileComparator46 = fileComparator37.thenComparing(fileComparator45);
        fileEntryIterator27.entryComparator = fileComparator46;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file49 = explodedArchive48.manifestFile;
        java.io.File file50 = explodedArchive48.manifestFile;
        java.io.File file51 = null;
        java.io.File file52 = explodedArchive48.getManifestFile(file51);
        fileEntryIterator27.root = file52;
        explodedArchive21.root = file52;
        java.util.Iterator<java.io.File> fileItor55 = fileEntryIterator18.listFiles(file52);
        fileEntry14.file = file52;
        fileEntryIterator9.current = file52;
        explodedArchive6.root = file52;
        java.util.Iterator<java.io.File> fileItor59 = fileEntryIterator0.listFiles(file52);
        boolean boolean60 = fileEntryIterator0.recursive;
        fileEntryIterator0.recursive = true;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "exploded archive" + "'", str7, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file25.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file52.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor55);
        org.junit.Assert.assertNotNull(fileItor59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test4355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4355");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.name;
        java.lang.String str3 = fileEntry0.getName();
        java.lang.String str4 = fileEntry0.getName();
        java.lang.String str5 = fileEntry0.name;
        fileEntry0.name = "hi!";
        java.io.File file8 = fileEntry0.file;
        fileEntry0.name = "";
        java.lang.String str11 = fileEntry0.getName();
        java.io.File file12 = fileEntry0.file;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test4356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4356");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getPort();
        java.lang.String str8 = uRL3.getQuery();
        java.lang.String str9 = uRL3.toExternalForm();
        java.lang.String str10 = uRL3.getPath();
        java.net.URL uRL11 = null;
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getHost();
        java.lang.String str16 = uRL14.getAuthority();
        java.lang.String str17 = uRL14.getAuthority();
        java.lang.String str18 = uRL14.getFile();
        int int19 = uRL14.getPort();
        java.lang.String str20 = uRL14.getRef();
        java.net.URL uRL22 = new java.net.URL(uRL14, "hi!");
        int int23 = uRL14.getPort();
        java.lang.String str24 = uRL14.getAuthority();
        java.lang.String str25 = uRL14.getProtocol();
        int int26 = uRL14.getPort();
        boolean boolean27 = uRL3.sameFile(uRL14);
        java.lang.String str28 = uRL14.getRef();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str9, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str18, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "file" + "'", str25, "file");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test4357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4357");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.io.File file4 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file6 = fileEntry5.getFile();
        java.io.File file7 = fileEntry5.file;
        java.io.File file8 = null;
        fileEntry5.file = file8;
        java.lang.String str10 = fileEntry5.getName();
        java.io.File file11 = fileEntry5.getFile();
        java.io.File file12 = fileEntry5.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        fileEntryIterator13.recursive = true;
        java.io.File file17 = fileEntryIterator13.poll();
        fileEntryIterator13.recursive = true;
        boolean boolean20 = fileEntryIterator13.recursive;
        boolean boolean21 = fileEntryIterator13.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.io.File file24 = fileEntryIterator22.current;
        java.io.File file25 = fileEntryIterator22.current;
        fileEntryIterator22.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file29 = explodedArchive28.manifestFile;
        java.io.File file30 = explodedArchive28.manifestFile;
        java.io.File file31 = null;
        java.io.File file32 = explodedArchive28.getManifestFile(file31);
        fileEntryIterator22.root = file32;
        java.util.Iterator<java.io.File> fileItor34 = fileEntryIterator13.listFiles(file32);
        fileEntry5.file = file32;
        java.io.File file36 = fileEntry5.file;
        fileEntryIterator0.current = file36;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator0.entryComparator;
        java.util.Comparator<java.io.File> fileComparator39 = fileComparator38.reversed();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file32.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileComparator39);
    }

    @Test
    public void test4358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4358");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.util.Comparator<java.io.File> fileComparator2 = fileEntryIterator0.entryComparator;
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean5 = explodedArchive4.recursive;
        java.io.File file6 = explodedArchive4.manifestFile;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive4.manifest = manifest7;
        java.io.File file9 = explodedArchive4.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.io.File file13 = fileEntryIterator10.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.manifestFile;
        java.io.File file16 = explodedArchive14.manifestFile;
        java.io.File file17 = null;
        java.io.File file18 = explodedArchive14.getManifestFile(file17);
        fileEntryIterator10.current = file18;
        explodedArchive4.root = file18;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file22 = fileEntry21.getFile();
        java.io.File file23 = fileEntry21.file;
        fileEntry21.name = "";
        java.lang.String str26 = fileEntry21.name;
        java.io.File file27 = fileEntry21.file;
        java.io.File file28 = fileEntry21.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file30 = explodedArchive29.manifestFile;
        java.io.File file31 = explodedArchive29.manifestFile;
        java.io.File file32 = null;
        java.io.File file33 = explodedArchive29.getManifestFile(file32);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file35 = fileEntry34.getFile();
        java.lang.String str36 = fileEntry34.name;
        java.io.File file37 = fileEntry34.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        boolean boolean40 = fileEntryIterator38.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file42 = explodedArchive41.manifestFile;
        java.io.File file43 = explodedArchive41.manifestFile;
        java.io.File file44 = null;
        java.io.File file45 = explodedArchive41.getManifestFile(file44);
        boolean boolean46 = explodedArchive41.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue48 = fileEntryIterator47.stack;
        fileEntryIterator47.recursive = true;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator47.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        java.util.Comparator<java.io.File> fileComparator61 = fileComparator57.thenComparing(fileComparator60);
        fileEntryIterator52.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator63.entryComparator;
        java.util.Comparator<java.io.File> fileComparator66 = fileComparator57.thenComparing(fileComparator65);
        fileEntryIterator47.entryComparator = fileComparator66;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file69 = explodedArchive68.manifestFile;
        java.io.File file70 = explodedArchive68.manifestFile;
        java.io.File file71 = null;
        java.io.File file72 = explodedArchive68.getManifestFile(file71);
        fileEntryIterator47.root = file72;
        explodedArchive41.root = file72;
        java.util.Iterator<java.io.File> fileItor75 = fileEntryIterator38.listFiles(file72);
        fileEntry34.file = file72;
        explodedArchive29.manifestFile = file72;
        fileEntry21.file = file72;
        explodedArchive4.root = file72;
        fileEntryIterator0.current = file72;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue81 = fileEntryIterator0.stack;
        boolean boolean82 = fileEntryIterator0.recursive;
        java.util.Comparator<java.io.File> fileComparator83 = fileEntryIterator0.entryComparator;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(fileItorQueue48);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNotNull(file72);
        org.junit.Assert.assertEquals(file72.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file72.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor75);
        org.junit.Assert.assertNotNull(fileItorQueue81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(fileComparator83);
    }

    @Test
    public void test4359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4359");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.getRef();
        int int7 = uRL3.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler9 = null;
        java.net.URL uRL10 = new java.net.URL(uRL3, "", uRLStreamHandler9);
        java.net.URL uRL11 = null;
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getHost();
        java.net.URI uRI16 = uRL14.toURI();
        java.lang.String str17 = uRL14.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler19 = null;
        java.net.URL uRL20 = new java.net.URL(uRL14, "file", uRLStreamHandler19);
        java.lang.String str21 = uRL14.getFile();
        java.net.URL uRL22 = null;
        java.net.URLStreamHandler uRLStreamHandler24 = null;
        java.net.URL uRL25 = new java.net.URL(uRL22, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler24);
        java.lang.String str26 = uRL25.getHost();
        java.lang.String str27 = uRL25.getAuthority();
        java.lang.String str28 = uRL25.getAuthority();
        java.lang.String str29 = uRL25.getRef();
        java.net.URL uRL30 = null;
        java.net.URLStreamHandler uRLStreamHandler32 = null;
        java.net.URL uRL33 = new java.net.URL(uRL30, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler32);
        java.lang.String str34 = uRL33.getHost();
        java.lang.String str35 = uRL33.getAuthority();
        java.lang.String str36 = uRL33.getQuery();
        int int37 = uRL33.getDefaultPort();
        java.lang.String str38 = uRL33.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler40 = null;
        java.net.URL uRL41 = new java.net.URL(uRL33, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler40);
        java.lang.String str42 = uRL41.getFile();
        boolean boolean43 = uRL25.sameFile(uRL41);
        boolean boolean44 = uRL14.sameFile(uRL41);
        java.net.URL uRL45 = null;
        java.net.URLStreamHandler uRLStreamHandler47 = null;
        java.net.URL uRL48 = new java.net.URL(uRL45, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler47);
        java.lang.String str49 = uRL48.getHost();
        java.lang.String str50 = uRL48.getAuthority();
        java.lang.String str51 = uRL48.getAuthority();
        java.lang.String str52 = uRL48.getFile();
        int int53 = uRL48.getPort();
        java.lang.String str54 = uRL48.getRef();
        java.net.URL uRL56 = new java.net.URL(uRL48, "hi!");
        boolean boolean57 = uRL14.sameFile(uRL56);
        int int58 = uRL14.getDefaultPort();
        boolean boolean59 = uRL10.sameFile(uRL14);
        java.net.URLStreamHandler uRLStreamHandler61 = null;
        java.net.URL uRL62 = new java.net.URL(uRL14, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", uRLStreamHandler61);
        java.lang.String str63 = uRL62.toExternalForm();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals(uRL10.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(uRI16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str17, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL20.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str21, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL25.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals(uRL33.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals(uRL41.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str42, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals(uRL48.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str52, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals(uRL56.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals(uRL62.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file" + "'", str63, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
    }

    @Test
    public void test4360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4360");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.root;
        boolean boolean3 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest4 = null;
        explodedArchive0.manifest = manifest4;
        boolean boolean6 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test4361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4361");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        fileEntry0.name = "";
        java.lang.String str5 = fileEntry0.name;
        java.io.File file6 = fileEntry0.file;
        java.io.File file7 = fileEntry0.getFile();
        fileEntry0.name = "";
        java.io.File file10 = fileEntry0.file;
        java.io.File file11 = fileEntry0.getFile();
        fileEntry0.name = "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF";
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
    }

    @Test
    public void test4362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4362");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("file", "file://hi!:100hi!", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: Illegal character found in host: '/'");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4363");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.io.File file4 = explodedArchive0.root;
        boolean boolean5 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive0.manifest = manifest6;
        java.lang.String str8 = explodedArchive0.toString();
        explodedArchive0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file12 = fileEntry11.getFile();
        java.io.File file13 = fileEntry11.file;
        fileEntry11.name = "";
        java.io.File file16 = fileEntry11.file;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean18 = explodedArchive17.recursive;
        boolean boolean19 = explodedArchive17.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.manifestFile;
        java.io.File file22 = explodedArchive20.manifestFile;
        java.io.File file23 = null;
        java.io.File file24 = explodedArchive20.getManifestFile(file23);
        explodedArchive17.root = file24;
        explodedArchive17.recursive = false;
        java.io.File file28 = explodedArchive17.root;
        fileEntry11.file = file28;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean31 = explodedArchive30.recursive;
        boolean boolean32 = explodedArchive30.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file34 = explodedArchive33.manifestFile;
        java.io.File file35 = explodedArchive33.manifestFile;
        java.io.File file36 = null;
        java.io.File file37 = explodedArchive33.getManifestFile(file36);
        explodedArchive30.root = file37;
        fileEntry11.file = file37;
        java.io.File file40 = fileEntry11.file;
        boolean boolean41 = fileEntry11.isDirectory();
        boolean boolean42 = fileEntry11.isDirectory();
        java.lang.String str43 = fileEntry11.name;
        java.io.File file44 = fileEntry11.getFile();
        java.io.File file45 = explodedArchive0.getManifestFile(file44);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "exploded archive" + "'", str8, "exploded archive");
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file40.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4364");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.util.jar.Manifest manifest4 = explodedArchive0.manifest;
        java.io.File file5 = explodedArchive0.manifestFile;
        boolean boolean6 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file8 = fileEntry7.getFile();
        java.io.File file9 = fileEntry7.file;
        java.io.File file10 = null;
        fileEntry7.file = file10;
        java.lang.String str12 = fileEntry7.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file14 = fileEntryIterator13.current;
        java.io.File file15 = null;
        fileEntryIterator13.current = file15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean18 = explodedArchive17.recursive;
        java.io.File file19 = explodedArchive17.manifestFile;
        java.util.jar.Manifest manifest20 = null;
        explodedArchive17.manifest = manifest20;
        java.io.File file22 = explodedArchive17.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        java.io.File file26 = fileEntryIterator23.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator23.current = file31;
        explodedArchive17.root = file31;
        fileEntryIterator13.root = file31;
        fileEntry7.file = file31;
        java.io.File file36 = fileEntry7.getFile();
        java.io.File file37 = fileEntry7.file;
        explodedArchive0.manifestFile = file37;
        boolean boolean39 = explodedArchive0.recursive;
        boolean boolean40 = explodedArchive0.recursive;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor41 = explodedArchive0.iterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test4365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4365");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.net.URLStreamHandler uRLStreamHandler11 = null;
        java.net.URL uRL12 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler11);
        java.lang.String str13 = uRL12.getHost();
        java.lang.String str14 = uRL12.getQuery();
        java.net.Proxy proxy15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection16 = uRL12.openConnection(proxy15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals(uRL12.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test4366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4366");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL3, "file", uRLStreamHandler8);
        java.lang.String str10 = uRL3.getFile();
        java.net.URL uRL11 = null;
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getHost();
        java.lang.String str16 = uRL14.getAuthority();
        java.lang.String str17 = uRL14.getAuthority();
        java.lang.String str18 = uRL14.getRef();
        java.net.URL uRL19 = null;
        java.net.URLStreamHandler uRLStreamHandler21 = null;
        java.net.URL uRL22 = new java.net.URL(uRL19, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler21);
        java.lang.String str23 = uRL22.getHost();
        java.lang.String str24 = uRL22.getAuthority();
        java.lang.String str25 = uRL22.getQuery();
        int int26 = uRL22.getDefaultPort();
        java.lang.String str27 = uRL22.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler29 = null;
        java.net.URL uRL30 = new java.net.URL(uRL22, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler29);
        java.lang.String str31 = uRL30.getFile();
        boolean boolean32 = uRL14.sameFile(uRL30);
        boolean boolean33 = uRL3.sameFile(uRL30);
        java.net.URL uRL34 = null;
        java.net.URLStreamHandler uRLStreamHandler36 = null;
        java.net.URL uRL37 = new java.net.URL(uRL34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler36);
        java.lang.String str38 = uRL37.getHost();
        java.lang.String str39 = uRL37.getAuthority();
        java.lang.String str40 = uRL37.getAuthority();
        java.lang.String str41 = uRL37.getFile();
        int int42 = uRL37.getPort();
        java.lang.String str43 = uRL37.getRef();
        java.net.URL uRL45 = new java.net.URL(uRL37, "hi!");
        boolean boolean46 = uRL3.sameFile(uRL45);
        int int47 = uRL45.getPort();
        java.lang.String str48 = uRL45.toExternalForm();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals(uRL30.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str31, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals(uRL37.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str41, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals(uRL45.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!" + "'", str48, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test4367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4367");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.net.URL uRL74 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str75 = uRL69.getRef();
        java.lang.String str76 = uRL69.getQuery();
        java.lang.String str77 = uRL69.getPath();
        java.net.URLStreamHandler uRLStreamHandler79 = null;
        java.net.URL uRL80 = new java.net.URL(uRL69, "file://exploded archive:0/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", uRLStreamHandler79);
        java.lang.String str81 = uRL69.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(str76);
// flaky:         org.junit.Assert.assertEquals("'" + str77 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str77, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL80.toString(), "file://exploded archive:0/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
// flaky:         org.junit.Assert.assertEquals("'" + str81 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str81, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4368");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getRef();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getRef();
        int int9 = uRL3.getPort();
        java.net.URI uRI10 = uRL3.toURI();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(uRI10);
    }

    @Test
    public void test4369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4369");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        fileEntryIterator0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file7 = fileEntryIterator6.current;
        java.io.File file8 = fileEntryIterator6.poll();
        java.io.File file9 = fileEntryIterator6.poll();
        java.io.File file10 = fileEntryIterator6.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.io.File file13 = fileEntryIterator11.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        fileEntryIterator14.recursive = true;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator24.thenComparing(fileComparator27);
        fileEntryIterator19.entryComparator = fileComparator24;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator24.thenComparing(fileComparator32);
        fileEntryIterator14.entryComparator = fileComparator33;
        fileEntryIterator14.recursive = true;
        fileEntryIterator14.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator14.stack;
        fileEntryIterator11.stack = fileItorQueue39;
        fileEntryIterator6.stack = fileItorQueue39;
        fileEntryIterator0.stack = fileItorQueue39;
        java.io.File file43 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        fileEntryIterator44.recursive = true;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator44.entryComparator;
        java.util.Comparator<java.io.File> fileComparator49 = fileEntryIterator44.entryComparator;
        java.util.Comparator<java.io.File> fileComparator50 = fileComparator49.reversed();
        fileEntryIterator0.entryComparator = fileComparator50;
        java.io.File file52 = fileEntryIterator0.root;
        fileEntryIterator0.recursive = true;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(fileComparator3);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNull(file52);
    }

    @Test
    public void test4370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4370");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.manifestFile;
        java.io.File file9 = explodedArchive7.manifestFile;
        explodedArchive7.recursive = true;
        java.util.jar.Manifest manifest12 = null;
        explodedArchive7.manifest = manifest12;
        java.lang.String str14 = explodedArchive7.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file16 = fileEntry15.getFile();
        java.io.File file17 = fileEntry15.file;
        java.io.File file18 = null;
        fileEntry15.file = file18;
        java.lang.String str20 = fileEntry15.getName();
        java.io.File file21 = fileEntry15.getFile();
        java.io.File file22 = fileEntry15.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file24 = fileEntryIterator23.current;
        java.io.File file25 = fileEntryIterator23.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file27 = fileEntryIterator26.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.util.Comparator<java.io.File> fileComparator33 = fileEntryIterator31.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        java.util.Comparator<java.io.File> fileComparator37 = fileComparator33.thenComparing(fileComparator36);
        fileEntryIterator28.entryComparator = fileComparator33;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator39.entryComparator;
        java.util.Comparator<java.io.File> fileComparator42 = fileComparator33.thenComparing(fileComparator41);
        fileEntryIterator26.entryComparator = fileComparator42;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator26.stack;
        fileEntryIterator23.stack = fileItorQueue44;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        explodedArchive46.recursive = true;
        java.util.jar.Manifest manifest51 = null;
        explodedArchive46.manifest = manifest51;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        fileEntryIterator53.recursive = true;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator53.entryComparator;
        fileEntryIterator53.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue61 = fileEntryIterator60.stack;
        fileEntryIterator53.stack = fileItorQueue61;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file64 = fileEntryIterator63.current;
        java.io.File file65 = fileEntryIterator63.poll();
        java.io.File file66 = fileEntryIterator63.poll();
        java.io.File file67 = fileEntryIterator63.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.io.File file70 = fileEntryIterator68.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file72 = explodedArchive71.manifestFile;
        java.io.File file73 = explodedArchive71.manifestFile;
        java.io.File file74 = null;
        java.io.File file75 = explodedArchive71.getManifestFile(file74);
        fileEntryIterator68.root = file74;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file78 = explodedArchive77.manifestFile;
        java.io.File file79 = explodedArchive77.manifestFile;
        java.io.File file80 = null;
        java.io.File file81 = explodedArchive77.getManifestFile(file80);
        java.util.Iterator<java.io.File> fileItor82 = fileEntryIterator68.listFiles(file81);
        fileEntryIterator63.root = file81;
        java.util.Iterator<java.io.File> fileItor84 = fileEntryIterator53.listFiles(file81);
        explodedArchive46.manifestFile = file81;
        fileEntryIterator23.root = file81;
        fileEntry15.file = file81;
        java.io.File file88 = fileEntry15.getFile();
        explodedArchive7.root = file88;
        java.io.File file90 = explodedArchive0.getManifestFile(file88);
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest91 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "exploded archive" + "'", str6, "exploded archive");
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "exploded archive" + "'", str14, "exploded archive");
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue61);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file75.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file78);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file81.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor82);
        org.junit.Assert.assertNotNull(fileItor84);
        org.junit.Assert.assertNotNull(file88);
        org.junit.Assert.assertEquals(file88.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file88.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file90);
        org.junit.Assert.assertEquals(file90.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file90.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4371");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getUserInfo();
        java.lang.String str14 = uRL11.getProtocol();
        java.net.URLConnection uRLConnection15 = uRL11.openConnection();
        java.net.URL uRL17 = new java.net.URL(uRL11, "file://exploded archive");
        java.lang.String str18 = uRL11.getRef();
        java.net.URL uRL20 = new java.net.URL(uRL11, "exploded archive");
        java.lang.String str21 = uRL11.getRef();
        java.lang.String str22 = uRL11.getProtocol();
        java.lang.String str23 = uRL11.getProtocol();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj24 = uRL11.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertNotNull(uRLConnection15);
        org.junit.Assert.assertEquals(uRL17.toString(), "file://exploded archive");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals(uRL20.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "file" + "'", str22, "file");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "file" + "'", str23, "file");
    }

    @Test
    public void test4372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4372");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.net.URL uRL74 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str75 = uRL69.getRef();
        java.lang.String str76 = uRL69.getFile();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj77 = uRL69.getContent();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str75);
// flaky:         org.junit.Assert.assertEquals("'" + str76 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str76, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4373");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        fileEntry0.name = "";
        java.io.File file5 = fileEntry0.file;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean7 = explodedArchive6.recursive;
        boolean boolean8 = explodedArchive6.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.manifestFile;
        java.io.File file11 = explodedArchive9.manifestFile;
        java.io.File file12 = null;
        java.io.File file13 = explodedArchive9.getManifestFile(file12);
        explodedArchive6.root = file13;
        explodedArchive6.recursive = false;
        java.io.File file17 = explodedArchive6.root;
        fileEntry0.file = file17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean20 = explodedArchive19.recursive;
        boolean boolean21 = explodedArchive19.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file23 = explodedArchive22.manifestFile;
        java.io.File file24 = explodedArchive22.manifestFile;
        java.io.File file25 = null;
        java.io.File file26 = explodedArchive22.getManifestFile(file25);
        explodedArchive19.root = file26;
        fileEntry0.file = file26;
        java.io.File file29 = fileEntry0.file;
        java.io.File file30 = fileEntry0.file;
        java.io.File file31 = fileEntry0.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator35 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue36 = fileEntryIterator35.stack;
        fileEntryIterator35.recursive = true;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator35.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator40.stack;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator40.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        java.util.Comparator<java.io.File> fileComparator49 = fileComparator45.thenComparing(fileComparator48);
        fileEntryIterator40.entryComparator = fileComparator45;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        java.util.Comparator<java.io.File> fileComparator54 = fileComparator45.thenComparing(fileComparator53);
        fileEntryIterator35.entryComparator = fileComparator54;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file57 = explodedArchive56.manifestFile;
        java.io.File file58 = explodedArchive56.manifestFile;
        java.io.File file59 = null;
        java.io.File file60 = explodedArchive56.getManifestFile(file59);
        fileEntryIterator35.root = file60;
        explodedArchive32.manifestFile = file60;
        java.util.jar.Manifest manifest63 = explodedArchive32.manifest;
        boolean boolean64 = explodedArchive32.recursive;
        java.util.jar.Manifest manifest65 = explodedArchive32.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator66 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file67 = fileEntryIterator66.current;
        java.io.File file68 = fileEntryIterator66.poll();
        java.io.File file69 = fileEntryIterator66.poll();
        java.io.File file70 = fileEntryIterator66.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator71 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue72 = fileEntryIterator71.stack;
        java.io.File file73 = fileEntryIterator71.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file75 = explodedArchive74.manifestFile;
        java.io.File file76 = explodedArchive74.manifestFile;
        java.io.File file77 = null;
        java.io.File file78 = explodedArchive74.getManifestFile(file77);
        fileEntryIterator71.root = file77;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive80 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file81 = explodedArchive80.manifestFile;
        java.io.File file82 = explodedArchive80.manifestFile;
        java.io.File file83 = null;
        java.io.File file84 = explodedArchive80.getManifestFile(file83);
        java.util.Iterator<java.io.File> fileItor85 = fileEntryIterator71.listFiles(file84);
        fileEntryIterator66.root = file84;
        explodedArchive32.manifestFile = file84;
        fileEntry0.file = file84;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file13.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(fileItorQueue36);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileItorQueue41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file60.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(manifest65);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNotNull(fileItorQueue72);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file78.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file84.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor85);
    }

    @Test
    public void test4374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4374");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file4 = fileEntryIterator3.current;
        java.io.File file5 = fileEntryIterator3.poll();
        java.io.File file6 = fileEntryIterator3.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator3.stack;
        java.io.File file8 = fileEntryIterator3.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.io.File file11 = fileEntryIterator9.current;
        java.io.File file12 = fileEntryIterator9.current;
        fileEntryIterator9.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.manifestFile;
        java.io.File file17 = explodedArchive15.manifestFile;
        java.io.File file18 = null;
        java.io.File file19 = explodedArchive15.getManifestFile(file18);
        fileEntryIterator9.root = file19;
        fileEntryIterator3.root = file19;
        java.io.File file22 = explodedArchive0.getManifestFile(file19);
        explodedArchive0.recursive = true;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator25 = explodedArchive0.spliterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file19.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4375");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.io.File file5 = fileEntryIterator3.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.manifestFile;
        java.io.File file8 = explodedArchive6.manifestFile;
        java.io.File file9 = null;
        java.io.File file10 = explodedArchive6.getManifestFile(file9);
        fileEntryIterator3.root = file9;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.manifestFile;
        java.io.File file14 = explodedArchive12.manifestFile;
        java.io.File file15 = null;
        java.io.File file16 = explodedArchive12.getManifestFile(file15);
        java.util.Iterator<java.io.File> fileItor17 = fileEntryIterator3.listFiles(file16);
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator3.stack;
        fileEntryIterator0.stack = fileItorQueue18;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.manifestFile;
        java.io.File file22 = explodedArchive20.manifestFile;
        java.io.File file23 = null;
        java.io.File file24 = explodedArchive20.getManifestFile(file23);
        java.io.File file25 = explodedArchive20.manifestFile;
        java.io.File file26 = explodedArchive20.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        java.util.Comparator<java.io.File> fileComparator36 = fileComparator32.thenComparing(fileComparator35);
        fileEntryIterator27.entryComparator = fileComparator32;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean39 = fileEntryIterator38.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean41 = explodedArchive40.recursive;
        java.io.File file42 = explodedArchive40.manifestFile;
        java.util.jar.Manifest manifest43 = null;
        explodedArchive40.manifest = manifest43;
        java.io.File file45 = explodedArchive40.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        java.io.File file49 = fileEntryIterator46.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file51 = explodedArchive50.manifestFile;
        java.io.File file52 = explodedArchive50.manifestFile;
        java.io.File file53 = null;
        java.io.File file54 = explodedArchive50.getManifestFile(file53);
        fileEntryIterator46.current = file54;
        explodedArchive40.root = file54;
        fileEntryIterator38.root = file54;
        fileEntryIterator27.root = file54;
        java.io.File file59 = explodedArchive20.getManifestFile(file54);
        java.util.Iterator<java.io.File> fileItor60 = fileEntryIterator0.listFiles(file59);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file64 = explodedArchive63.manifestFile;
        java.io.File file65 = explodedArchive63.manifestFile;
        java.io.File file66 = null;
        java.io.File file67 = explodedArchive63.getManifestFile(file66);
        fileEntryIterator61.current = file66;
        fileEntryIterator61.recursive = true;
        java.util.Comparator<java.io.File> fileComparator71 = fileEntryIterator61.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator72 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue73 = fileEntryIterator72.stack;
        boolean boolean74 = fileEntryIterator72.hasNext();
        boolean boolean75 = fileEntryIterator72.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator76 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue77 = fileEntryIterator76.stack;
        java.util.Comparator<java.io.File> fileComparator78 = fileEntryIterator76.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator79 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue80 = fileEntryIterator79.stack;
        java.util.Comparator<java.io.File> fileComparator81 = fileEntryIterator79.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator82 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue83 = fileEntryIterator82.stack;
        java.util.Comparator<java.io.File> fileComparator84 = fileEntryIterator82.entryComparator;
        java.util.Comparator<java.io.File> fileComparator85 = fileComparator81.thenComparing(fileComparator84);
        fileEntryIterator76.entryComparator = fileComparator81;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator87 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue88 = fileEntryIterator87.stack;
        java.util.Comparator<java.io.File> fileComparator89 = fileEntryIterator87.entryComparator;
        java.util.Comparator<java.io.File> fileComparator90 = fileComparator81.thenComparing(fileComparator89);
        java.util.Comparator<java.io.File> fileComparator91 = fileComparator89.reversed();
        fileEntryIterator72.entryComparator = fileComparator89;
        java.util.Comparator<java.io.File> fileComparator93 = fileComparator71.thenComparing(fileComparator89);
        fileEntryIterator0.entryComparator = fileComparator93;
        java.io.File file95 = fileEntryIterator0.current;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file16.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor17);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file24.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file54.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file59.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file67.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileItorQueue73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(fileItorQueue77);
        org.junit.Assert.assertNotNull(fileComparator78);
        org.junit.Assert.assertNotNull(fileItorQueue80);
        org.junit.Assert.assertNotNull(fileComparator81);
        org.junit.Assert.assertNotNull(fileItorQueue83);
        org.junit.Assert.assertNotNull(fileComparator84);
        org.junit.Assert.assertNotNull(fileComparator85);
        org.junit.Assert.assertNotNull(fileItorQueue88);
        org.junit.Assert.assertNotNull(fileComparator89);
        org.junit.Assert.assertNotNull(fileComparator90);
        org.junit.Assert.assertNotNull(fileComparator91);
        org.junit.Assert.assertNotNull(fileComparator93);
        org.junit.Assert.assertNull(file95);
    }

    @Test
    public void test4376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4376");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        explodedArchive0.recursive = false;
        explodedArchive0.recursive = true;
        java.io.File file45 = explodedArchive0.root;
        java.util.jar.Manifest manifest46 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest47 = null;
        explodedArchive0.manifest = manifest47;
        explodedArchive0.recursive = false;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest46);
    }

    @Test
    public void test4377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4377");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.io.File file4 = explodedArchive0.root;
        explodedArchive0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file8 = fileEntryIterator7.current;
        java.io.File file9 = fileEntryIterator7.poll();
        java.io.File file10 = fileEntryIterator7.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator7.stack;
        java.io.File file12 = fileEntryIterator7.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.io.File file15 = fileEntryIterator13.current;
        java.io.File file16 = fileEntryIterator13.current;
        fileEntryIterator13.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.manifestFile;
        java.io.File file21 = explodedArchive19.manifestFile;
        java.io.File file22 = null;
        java.io.File file23 = explodedArchive19.getManifestFile(file22);
        fileEntryIterator13.root = file23;
        fileEntryIterator7.root = file23;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean29 = fileEntryIterator28.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean31 = explodedArchive30.recursive;
        java.io.File file32 = explodedArchive30.manifestFile;
        java.util.jar.Manifest manifest33 = null;
        explodedArchive30.manifest = manifest33;
        java.io.File file35 = explodedArchive30.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        java.io.File file39 = fileEntryIterator36.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.manifestFile;
        java.io.File file42 = explodedArchive40.manifestFile;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive40.getManifestFile(file43);
        fileEntryIterator36.current = file44;
        explodedArchive30.root = file44;
        fileEntryIterator28.root = file44;
        explodedArchive27.root = file44;
        fileEntryIterator7.root = file44;
        explodedArchive0.manifestFile = file44;
        java.util.jar.Manifest manifest51 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest52 = explodedArchive0.manifest;
        java.io.File file53 = explodedArchive0.root;
        java.lang.String str54 = explodedArchive0.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator55 = explodedArchive0.spliterator();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest51);
        org.junit.Assert.assertNull(manifest52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "exploded archive" + "'", str54, "exploded archive");
    }

    @Test
    public void test4378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4378");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str1 = fileEntry0.name;
        java.io.File file2 = fileEntry0.file;
        fileEntry0.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        boolean boolean7 = fileEntryIterator5.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive8.getManifestFile(file11);
        boolean boolean13 = explodedArchive8.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        fileEntryIterator14.recursive = true;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator24.thenComparing(fileComparator27);
        fileEntryIterator19.entryComparator = fileComparator24;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        java.util.Comparator<java.io.File> fileComparator33 = fileComparator24.thenComparing(fileComparator32);
        fileEntryIterator14.entryComparator = fileComparator33;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.manifestFile;
        java.io.File file37 = explodedArchive35.manifestFile;
        java.io.File file38 = null;
        java.io.File file39 = explodedArchive35.getManifestFile(file38);
        fileEntryIterator14.root = file39;
        explodedArchive8.root = file39;
        java.util.Iterator<java.io.File> fileItor42 = fileEntryIterator5.listFiles(file39);
        fileEntry0.file = file39;
        java.lang.String str44 = fileEntry0.getName();
        fileEntry0.name = "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!";
        java.io.File file47 = fileEntry0.file;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive(file47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileComparator33);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "exploded archive" + "'", str44, "exploded archive");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test4379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4379");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getQuery();
        java.net.URLStreamHandler uRLStreamHandler9 = null;
        java.net.URL uRL10 = new java.net.URL(uRL3, "", uRLStreamHandler9);
        java.net.URLStreamHandler uRLStreamHandler12 = null;
        java.net.URL uRL13 = new java.net.URL(uRL10, "file://exploded archive", uRLStreamHandler12);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals(uRL10.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL13.toString(), "file://exploded archive");
    }

    @Test
    public void test4380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4380");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.io.File file4 = fileEntryIterator0.poll();
        boolean boolean5 = fileEntryIterator0.hasNext();
        java.io.File file6 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean8 = fileEntryIterator7.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        fileEntryIterator7.stack = fileItorQueue10;
        java.io.File file12 = fileEntryIterator7.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file14 = fileEntryIterator13.current;
        java.io.File file15 = fileEntryIterator13.poll();
        java.io.File file16 = fileEntryIterator13.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator13.stack;
        fileEntryIterator7.stack = fileItorQueue17;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        java.util.Comparator<java.io.File> fileComparator29 = fileComparator25.thenComparing(fileComparator28);
        java.util.Comparator<java.io.File> fileComparator30 = fileComparator22.thenComparing(fileComparator28);
        java.util.Comparator<java.io.File> fileComparator31 = fileComparator19.thenComparing(fileComparator30);
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator31.reversed();
        fileEntryIterator0.entryComparator = fileComparator32;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
    }

    @Test
    public void test4381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4381");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", (int) (short) 100, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file:/home/cin/lmps2/semantic-conflict-study/smat/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/meta-inf/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4382");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.io.File file4 = fileEntryIterator0.poll();
        fileEntryIterator0.recursive = true;
        boolean boolean7 = fileEntryIterator0.recursive;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator0.stack;
        boolean boolean9 = fileEntryIterator0.recursive;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test4383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4383");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        boolean boolean2 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file4 = fileEntryIterator3.current;
        java.io.File file5 = null;
        fileEntryIterator3.current = file5;
        java.io.File file7 = fileEntryIterator3.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file9 = fileEntry8.getFile();
        java.lang.String str10 = fileEntry8.name;
        java.io.File file11 = fileEntry8.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        boolean boolean14 = fileEntryIterator12.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.manifestFile;
        java.io.File file17 = explodedArchive15.manifestFile;
        java.io.File file18 = null;
        java.io.File file19 = explodedArchive15.getManifestFile(file18);
        boolean boolean20 = explodedArchive15.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        fileEntryIterator21.recursive = true;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator31.thenComparing(fileComparator34);
        fileEntryIterator26.entryComparator = fileComparator31;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator31.thenComparing(fileComparator39);
        fileEntryIterator21.entryComparator = fileComparator40;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.io.File file45 = null;
        java.io.File file46 = explodedArchive42.getManifestFile(file45);
        fileEntryIterator21.root = file46;
        explodedArchive15.root = file46;
        java.util.Iterator<java.io.File> fileItor49 = fileEntryIterator12.listFiles(file46);
        fileEntry8.file = file46;
        fileEntryIterator3.current = file46;
        explodedArchive0.root = file46;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator53 = explodedArchive0.spliterator();
        java.lang.String str54 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file56 = fileEntry55.getFile();
        java.io.File file57 = fileEntry55.file;
        java.io.File file58 = null;
        fileEntry55.file = file58;
        java.lang.String str60 = fileEntry55.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file62 = fileEntryIterator61.current;
        java.io.File file63 = null;
        fileEntryIterator61.current = file63;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean66 = explodedArchive65.recursive;
        java.io.File file67 = explodedArchive65.manifestFile;
        java.util.jar.Manifest manifest68 = null;
        explodedArchive65.manifest = manifest68;
        java.io.File file70 = explodedArchive65.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator71 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue72 = fileEntryIterator71.stack;
        java.util.Comparator<java.io.File> fileComparator73 = fileEntryIterator71.entryComparator;
        java.io.File file74 = fileEntryIterator71.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file76 = explodedArchive75.manifestFile;
        java.io.File file77 = explodedArchive75.manifestFile;
        java.io.File file78 = null;
        java.io.File file79 = explodedArchive75.getManifestFile(file78);
        fileEntryIterator71.current = file79;
        explodedArchive65.root = file79;
        fileEntryIterator61.root = file79;
        fileEntry55.file = file79;
        java.io.File file84 = fileEntry55.getFile();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive85 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: File must exist");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "exploded archive" + "'", str1, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file19.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor49);
        org.junit.Assert.assertNotNull(entrySpliterator53);
// flaky:         org.junit.Assert.assertEquals("'" + str54 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str54, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNotNull(fileItorQueue72);
        org.junit.Assert.assertNotNull(fileComparator73);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file79.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file84.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test4384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4384");
        java.net.URL uRL1 = new java.net.URL("file://exploded archive");
        java.lang.String str2 = uRL1.getProtocol();
        java.net.URL uRL3 = null;
        java.net.URLStreamHandler uRLStreamHandler5 = null;
        java.net.URL uRL6 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler5);
        java.lang.String str7 = uRL6.getHost();
        java.lang.String str8 = uRL6.getAuthority();
        java.lang.String str9 = uRL6.getHost();
        int int10 = uRL6.getPort();
        java.lang.String str11 = uRL6.getPath();
        java.lang.String str12 = uRL6.getHost();
        java.net.URL uRL13 = null;
        java.net.URLStreamHandler uRLStreamHandler15 = null;
        java.net.URL uRL16 = new java.net.URL(uRL13, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler15);
        java.lang.String str17 = uRL16.getHost();
        java.net.URI uRI18 = uRL16.toURI();
        java.lang.String str19 = uRL16.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler21 = null;
        java.net.URL uRL22 = new java.net.URL(uRL16, "file", uRLStreamHandler21);
        java.net.URLStreamHandler uRLStreamHandler24 = null;
        java.net.URL uRL25 = new java.net.URL(uRL16, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler24);
        boolean boolean26 = uRL6.sameFile(uRL16);
        boolean boolean27 = uRL1.sameFile(uRL16);
        java.net.URLStreamHandler uRLStreamHandler29 = null;
        java.net.URL uRL30 = new java.net.URL(uRL16, "exploded archive", uRLStreamHandler29);
        org.junit.Assert.assertEquals(uRL1.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "file" + "'", str2, "file");
        org.junit.Assert.assertEquals(uRL6.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str11, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals(uRL16.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(uRI18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str19, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals(uRL25.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals(uRL30.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
    }

    @Test
    public void test4385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4385");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file39 = fileEntryIterator38.current;
        java.io.File file40 = fileEntryIterator38.poll();
        java.io.File file41 = fileEntryIterator38.poll();
        java.io.File file42 = fileEntryIterator38.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.io.File file45 = fileEntryIterator43.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        fileEntryIterator43.root = file49;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.manifestFile;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.io.File file55 = null;
        java.io.File file56 = explodedArchive52.getManifestFile(file55);
        java.util.Iterator<java.io.File> fileItor57 = fileEntryIterator43.listFiles(file56);
        fileEntryIterator38.root = file56;
        explodedArchive0.root = file56;
        explodedArchive0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean63 = explodedArchive62.recursive;
        boolean boolean64 = explodedArchive62.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file66 = explodedArchive65.manifestFile;
        java.io.File file67 = explodedArchive65.manifestFile;
        java.io.File file68 = null;
        java.io.File file69 = explodedArchive65.getManifestFile(file68);
        explodedArchive62.root = file69;
        explodedArchive62.recursive = false;
        java.io.File file73 = explodedArchive62.root;
        java.io.File file74 = explodedArchive0.getManifestFile(file73);
        java.net.URL uRL75 = explodedArchive0.getUrl();
        java.lang.String str76 = uRL75.toExternalForm();
        java.lang.String str77 = uRL75.getQuery();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor57);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file69.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file73.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file74.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRL75);
// flaky:         org.junit.Assert.assertEquals(uRL75.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str76 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str76, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str77);
    }

    @Test
    public void test4386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4386");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str1 = fileEntry0.getName();
        fileEntry0.name = "exploded archive";
        fileEntry0.name = "hi!";
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.manifestFile;
        java.io.File file8 = explodedArchive6.manifestFile;
        java.lang.String str9 = explodedArchive6.toString();
        java.lang.String str10 = explodedArchive6.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean12 = fileEntryIterator11.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean14 = explodedArchive13.recursive;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.util.jar.Manifest manifest16 = null;
        explodedArchive13.manifest = manifest16;
        java.io.File file18 = explodedArchive13.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.io.File file22 = fileEntryIterator19.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.manifestFile;
        java.io.File file25 = explodedArchive23.manifestFile;
        java.io.File file26 = null;
        java.io.File file27 = explodedArchive23.getManifestFile(file26);
        fileEntryIterator19.current = file27;
        explodedArchive13.root = file27;
        fileEntryIterator11.root = file27;
        java.io.File file31 = explodedArchive6.getManifestFile(file27);
        fileEntry0.file = file31;
        fileEntry0.name = "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF";
        boolean boolean35 = fileEntry0.isDirectory();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "exploded archive" + "'", str9, "exploded archive");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "exploded archive" + "'", str10, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file27.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test4387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4387");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        fileEntryIterator3.recursive = true;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator3.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.manifestFile;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.io.File file27 = null;
        java.io.File file28 = explodedArchive24.getManifestFile(file27);
        fileEntryIterator3.root = file28;
        explodedArchive0.manifestFile = file28;
        java.util.jar.Manifest manifest31 = explodedArchive0.manifest;
        boolean boolean32 = explodedArchive0.recursive;
        java.io.File file33 = explodedArchive0.manifestFile;
        explodedArchive0.recursive = false;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file28.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test4388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4388");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator2.stack;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator2.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        java.util.Comparator<java.io.File> fileComparator11 = fileComparator7.thenComparing(fileComparator10);
        fileEntryIterator2.entryComparator = fileComparator7;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator7.thenComparing(fileComparator15);
        fileEntryIterator0.entryComparator = fileComparator16;
        java.io.File file18 = fileEntryIterator0.root;
        boolean boolean19 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.manifestFile;
        explodedArchive20.recursive = true;
        java.lang.String str24 = explodedArchive20.toString();
        boolean boolean25 = explodedArchive20.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file27 = fileEntryIterator26.current;
        java.io.File file28 = fileEntryIterator26.poll();
        java.io.File file29 = fileEntryIterator26.poll();
        java.io.File file30 = fileEntryIterator26.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.io.File file33 = fileEntryIterator31.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file35 = explodedArchive34.manifestFile;
        java.io.File file36 = explodedArchive34.manifestFile;
        java.io.File file37 = null;
        java.io.File file38 = explodedArchive34.getManifestFile(file37);
        fileEntryIterator31.root = file37;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.manifestFile;
        java.io.File file42 = explodedArchive40.manifestFile;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive40.getManifestFile(file43);
        java.util.Iterator<java.io.File> fileItor45 = fileEntryIterator31.listFiles(file44);
        fileEntryIterator26.root = file44;
        explodedArchive20.manifestFile = file44;
        fileEntryIterator0.root = file44;
        java.io.File file49 = fileEntryIterator0.poll();
        java.io.File file50 = fileEntryIterator0.root;
        boolean boolean51 = fileEntryIterator0.hasNext();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "exploded archive" + "'", str24, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor45);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test4389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4389");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getProtocol();
        java.lang.String str5 = uRL3.getUserInfo();
        java.net.URLConnection uRLConnection6 = uRL3.openConnection();
        java.net.Proxy proxy7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection8 = uRL3.openConnection(proxy7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "file" + "'", str4, "file");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(uRLConnection6);
    }

    @Test
    public void test4390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4390");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        boolean boolean4 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean8 = fileEntryIterator7.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.manifestFile;
        java.io.File file11 = explodedArchive9.manifestFile;
        java.lang.String str12 = explodedArchive9.toString();
        java.lang.String str13 = explodedArchive9.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean15 = fileEntryIterator14.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean17 = explodedArchive16.recursive;
        java.io.File file18 = explodedArchive16.manifestFile;
        java.util.jar.Manifest manifest19 = null;
        explodedArchive16.manifest = manifest19;
        java.io.File file21 = explodedArchive16.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.io.File file25 = fileEntryIterator22.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file27 = explodedArchive26.manifestFile;
        java.io.File file28 = explodedArchive26.manifestFile;
        java.io.File file29 = null;
        java.io.File file30 = explodedArchive26.getManifestFile(file29);
        fileEntryIterator22.current = file30;
        explodedArchive16.root = file30;
        fileEntryIterator14.root = file30;
        java.io.File file34 = explodedArchive9.getManifestFile(file30);
        java.util.Iterator<java.io.File> fileItor35 = fileEntryIterator7.listFiles(file34);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file37 = explodedArchive36.manifestFile;
        java.io.File file38 = explodedArchive36.manifestFile;
        java.io.File file39 = null;
        java.io.File file40 = explodedArchive36.getManifestFile(file39);
        boolean boolean41 = explodedArchive36.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        fileEntryIterator42.recursive = true;
        java.util.Comparator<java.io.File> fileComparator46 = fileEntryIterator42.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue48 = fileEntryIterator47.stack;
        java.util.Comparator<java.io.File> fileComparator49 = fileEntryIterator47.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        java.util.Comparator<java.io.File> fileComparator52 = fileEntryIterator50.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        java.util.Comparator<java.io.File> fileComparator56 = fileComparator52.thenComparing(fileComparator55);
        fileEntryIterator47.entryComparator = fileComparator52;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        java.util.Comparator<java.io.File> fileComparator61 = fileComparator52.thenComparing(fileComparator60);
        fileEntryIterator42.entryComparator = fileComparator61;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file64 = explodedArchive63.manifestFile;
        java.io.File file65 = explodedArchive63.manifestFile;
        java.io.File file66 = null;
        java.io.File file67 = explodedArchive63.getManifestFile(file66);
        fileEntryIterator42.root = file67;
        explodedArchive36.root = file67;
        explodedArchive36.recursive = false;
        java.util.jar.Manifest manifest72 = null;
        explodedArchive36.manifest = manifest72;
        java.lang.String str74 = explodedArchive36.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter75 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList76 = explodedArchive36.getNestedArchives(entryFilter75);
        java.io.File file77 = explodedArchive36.root;
        explodedArchive36.recursive = true;
        java.io.File file80 = explodedArchive36.root;
        java.io.File file81 = explodedArchive36.root;
        java.util.Iterator<java.io.File> fileItor82 = fileEntryIterator7.listFiles(file81);
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue83 = fileEntryIterator7.stack;
        fileEntryIterator0.stack = fileItorQueue83;
        java.io.File file85 = fileEntryIterator0.root;
        java.io.File file86 = fileEntryIterator0.root;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "exploded archive" + "'", str12, "exploded archive");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "exploded archive" + "'", str13, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file30.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file34.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor35);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file40.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNotNull(fileItorQueue48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file67.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str74 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str74, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList76);
        org.junit.Assert.assertNotNull(file77);
        org.junit.Assert.assertEquals(file77.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file77.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file80);
        org.junit.Assert.assertEquals(file80.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file80.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file81.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor82);
        org.junit.Assert.assertNotNull(fileItorQueue83);
        org.junit.Assert.assertNull(file85);
        org.junit.Assert.assertNull(file86);
    }

    @Test
    public void test4391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4391");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.name;
        java.io.File file3 = fileEntry0.file;
        java.io.File file4 = fileEntry0.getFile();
        java.lang.String str5 = fileEntry0.name;
        fileEntry0.name = "file://hi!hi!";
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test4392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4392");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.lang.String str6 = uRL3.getProtocol();
        java.lang.String str7 = uRL3.getPath();
        java.lang.String str8 = uRL3.getRef();
        java.net.URL uRL10 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.net.URL uRL11 = null;
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getHost();
        int int16 = uRL14.getPort();
        java.lang.String str17 = uRL14.getHost();
        boolean boolean18 = uRL10.sameFile(uRL14);
        java.net.URL uRL19 = null;
        java.net.URLStreamHandler uRLStreamHandler21 = null;
        java.net.URL uRL22 = new java.net.URL(uRL19, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler21);
        java.lang.String str23 = uRL22.getHost();
        java.lang.String str24 = uRL22.getAuthority();
        java.lang.String str25 = uRL22.getAuthority();
        java.lang.String str26 = uRL22.getFile();
        int int27 = uRL22.getPort();
        java.lang.String str28 = uRL22.getRef();
        java.net.URL uRL30 = new java.net.URL(uRL22, "hi!");
        java.net.URLStreamHandler uRLStreamHandler32 = null;
        java.net.URL uRL33 = new java.net.URL(uRL30, "", uRLStreamHandler32);
        java.net.URL uRL35 = new java.net.URL(uRL33, "hi!");
        boolean boolean36 = uRL14.sameFile(uRL33);
        int int37 = uRL33.getDefaultPort();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file" + "'", str6, "file");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL10.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str26, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals(uRL30.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL33.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
    }

    @Test
    public void test4393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4393");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL71 = null;
        java.net.URLStreamHandler uRLStreamHandler73 = null;
        java.net.URL uRL74 = new java.net.URL(uRL71, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler73);
        java.lang.String str75 = uRL74.getHost();
        java.lang.String str76 = uRL74.getAuthority();
        java.lang.String str77 = uRL74.getAuthority();
        java.lang.String str78 = uRL74.getFile();
        int int79 = uRL74.getPort();
        java.lang.String str80 = uRL74.getRef();
        java.net.URL uRL82 = new java.net.URL(uRL74, "hi!");
        boolean boolean83 = uRL69.sameFile(uRL82);
        java.net.URL uRL84 = null;
        java.net.URLStreamHandler uRLStreamHandler86 = null;
        java.net.URL uRL87 = new java.net.URL(uRL84, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler86);
        java.lang.String str88 = uRL87.getHost();
        java.lang.String str89 = uRL87.getAuthority();
        java.lang.String str90 = uRL87.getQuery();
        int int91 = uRL87.getDefaultPort();
        int int92 = uRL87.getPort();
        boolean boolean93 = uRL82.sameFile(uRL87);
        int int94 = uRL87.getDefaultPort();
        int int95 = uRL87.getPort();
        java.net.Proxy proxy96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection97 = uRL87.openConnection(proxy96);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str78, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertEquals(uRL82.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals(uRL87.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
    }

    @Test
    public void test4394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4394");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        java.io.File file3 = fileEntryIterator0.poll();
        java.io.File file4 = fileEntryIterator0.root;
        java.io.File file5 = fileEntryIterator0.root;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator0.entryComparator;
        boolean boolean7 = fileEntryIterator0.hasNext();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test4395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4395");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.name;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        java.io.File file5 = fileEntry0.file;
        java.lang.String str6 = fileEntry0.name;
        java.io.File file7 = fileEntry0.file;
        java.io.File file8 = fileEntry0.file;
        java.lang.String str9 = fileEntry0.name;
        java.lang.String str10 = fileEntry0.name;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test4396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4396");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        int int11 = uRL9.getPort();
        java.net.URL uRL12 = null;
        java.net.URLStreamHandler uRLStreamHandler14 = null;
        java.net.URL uRL15 = new java.net.URL(uRL12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler14);
        java.lang.String str16 = uRL15.getHost();
        java.lang.String str17 = uRL15.getAuthority();
        java.lang.String str18 = uRL15.getQuery();
        int int19 = uRL15.getDefaultPort();
        boolean boolean20 = uRL9.sameFile(uRL15);
        boolean boolean21 = uRL3.sameFile(uRL9);
        int int22 = uRL3.getDefaultPort();
        java.lang.String str23 = uRL3.getFile();
        java.net.URL uRL24 = null;
        java.net.URLStreamHandler uRLStreamHandler26 = null;
        java.net.URL uRL27 = new java.net.URL(uRL24, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler26);
        java.lang.String str28 = uRL27.getHost();
        java.lang.String str29 = uRL27.getAuthority();
        java.lang.String str30 = uRL27.getQuery();
        int int31 = uRL27.getDefaultPort();
        java.lang.String str32 = uRL27.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler34 = null;
        java.net.URL uRL35 = new java.net.URL(uRL27, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL27, "file://exploded archive");
        java.lang.String str38 = uRL37.getProtocol();
        java.lang.String str39 = uRL37.getHost();
        java.lang.String str40 = uRL37.getFile();
        java.lang.String str41 = uRL37.getQuery();
        int int42 = uRL37.getPort();
        boolean boolean43 = uRL3.sameFile(uRL37);
        int int44 = uRL3.getDefaultPort();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str23, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL27.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals(uRL35.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL37.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file" + "'", str38, "file");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "exploded archive" + "'", str39, "exploded archive");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
    }

    @Test
    public void test4397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4397");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        java.lang.String str34 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive0.getNestedArchives(entryFilter35);
        java.util.jar.Manifest manifest37 = explodedArchive0.manifest;
        java.io.File file38 = explodedArchive0.manifestFile;
        boolean boolean39 = explodedArchive0.recursive;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test4398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4398");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.lang.String str73 = uRL69.getUserInfo();
        java.net.URLConnection uRLConnection74 = uRL69.openConnection();
        int int75 = uRL69.getDefaultPort();
        java.lang.String str76 = uRL69.getUserInfo();
        java.net.URL uRL77 = null;
        java.net.URLStreamHandler uRLStreamHandler79 = null;
        java.net.URL uRL80 = new java.net.URL(uRL77, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler79);
        java.lang.String str81 = uRL80.getHost();
        java.lang.String str82 = uRL80.getAuthority();
        java.lang.String str83 = uRL80.getAuthority();
        java.lang.String str84 = uRL80.getFile();
        int int85 = uRL80.getPort();
        java.lang.String str86 = uRL80.getRef();
        java.net.URL uRL88 = new java.net.URL(uRL80, "hi!");
        int int89 = uRL80.getPort();
        java.lang.String str90 = uRL80.getFile();
        java.net.URI uRI91 = uRL80.toURI();
        boolean boolean92 = uRL69.sameFile(uRL80);
        java.net.URLStreamHandler uRLStreamHandler94 = null;
        java.net.URL uRL95 = new java.net.URL(uRL69, "file://hi!hi!", uRLStreamHandler94);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(uRLConnection74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertEquals(uRL80.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str84, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertEquals(uRL88.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str90, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI91);
// flaky:         org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertEquals(uRL95.toString(), "file://hi!hi!");
    }

    @Test
    public void test4399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4399");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getRef();
        java.lang.String str8 = uRL3.getPath();
        int int9 = uRL3.getPort();
        java.lang.String str10 = uRL3.toExternalForm();
        java.lang.String str11 = uRL3.getRef();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str8, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test4400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4400");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        java.util.jar.Manifest manifest24 = explodedArchive0.manifest;
        java.io.File file25 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest26 = null;
        explodedArchive0.manifest = manifest26;
        java.net.URL uRL28 = explodedArchive0.getUrl();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file30 = fileEntry29.getFile();
        java.io.File file31 = fileEntry29.file;
        java.io.File file32 = null;
        fileEntry29.file = file32;
        java.lang.String str34 = fileEntry29.getName();
        java.io.File file35 = fileEntry29.getFile();
        java.io.File file36 = fileEntry29.getFile();
        java.io.File file37 = fileEntry29.getFile();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive38 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(uRL28);
// flaky:         org.junit.Assert.assertEquals(uRL28.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
    }

    @Test
    public void test4401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4401");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file4 = fileEntry3.getFile();
        java.io.File file5 = fileEntry3.file;
        java.io.File file6 = null;
        fileEntry3.file = file6;
        java.lang.String str8 = fileEntry3.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file10 = fileEntryIterator9.current;
        java.io.File file11 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file13 = fileEntryIterator12.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator19.thenComparing(fileComparator22);
        fileEntryIterator14.entryComparator = fileComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator19.thenComparing(fileComparator27);
        fileEntryIterator12.entryComparator = fileComparator28;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator12.stack;
        fileEntryIterator9.stack = fileItorQueue30;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file33 = fileEntryIterator32.current;
        java.io.File file34 = fileEntryIterator32.poll();
        java.io.File file35 = fileEntryIterator32.poll();
        java.io.File file36 = fileEntryIterator32.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.io.File file39 = fileEntryIterator37.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.manifestFile;
        java.io.File file42 = explodedArchive40.manifestFile;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive40.getManifestFile(file43);
        fileEntryIterator37.root = file43;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.manifestFile;
        java.io.File file48 = explodedArchive46.manifestFile;
        java.io.File file49 = null;
        java.io.File file50 = explodedArchive46.getManifestFile(file49);
        java.util.Iterator<java.io.File> fileItor51 = fileEntryIterator37.listFiles(file50);
        fileEntryIterator32.root = file50;
        java.util.Iterator<java.io.File> fileItor53 = fileEntryIterator9.listFiles(file50);
        fileEntry3.file = file50;
        fileEntryIterator2.root = file50;
        explodedArchive0.root = file50;
        java.lang.String str57 = explodedArchive0.toString();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor51);
        org.junit.Assert.assertNotNull(fileItor53);
// flaky:         org.junit.Assert.assertEquals("'" + str57 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str57, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4402");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        java.io.File file3 = fileEntryIterator0.current;
        fileEntryIterator0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.manifestFile;
        java.io.File file8 = explodedArchive6.manifestFile;
        java.io.File file9 = null;
        java.io.File file10 = explodedArchive6.getManifestFile(file9);
        fileEntryIterator0.root = file10;
        boolean boolean12 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file14 = fileEntryIterator13.current;
        java.io.File file15 = fileEntryIterator13.poll();
        java.io.File file16 = fileEntryIterator13.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator13.stack;
        java.io.File file18 = fileEntryIterator13.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.io.File file21 = fileEntryIterator19.current;
        java.io.File file22 = fileEntryIterator19.current;
        fileEntryIterator19.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.manifestFile;
        java.io.File file27 = explodedArchive25.manifestFile;
        java.io.File file28 = null;
        java.io.File file29 = explodedArchive25.getManifestFile(file28);
        fileEntryIterator19.root = file29;
        fileEntryIterator13.root = file29;
        java.io.File file32 = null;
        fileEntryIterator13.current = file32;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file35 = explodedArchive34.manifestFile;
        java.io.File file36 = explodedArchive34.manifestFile;
        java.io.File file37 = null;
        java.io.File file38 = explodedArchive34.getManifestFile(file37);
        boolean boolean39 = explodedArchive34.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator40.stack;
        fileEntryIterator40.recursive = true;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator40.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator45.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        java.util.Comparator<java.io.File> fileComparator54 = fileComparator50.thenComparing(fileComparator53);
        fileEntryIterator45.entryComparator = fileComparator50;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        java.util.Comparator<java.io.File> fileComparator59 = fileComparator50.thenComparing(fileComparator58);
        fileEntryIterator40.entryComparator = fileComparator59;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file62 = explodedArchive61.manifestFile;
        java.io.File file63 = explodedArchive61.manifestFile;
        java.io.File file64 = null;
        java.io.File file65 = explodedArchive61.getManifestFile(file64);
        fileEntryIterator40.root = file65;
        explodedArchive34.root = file65;
        java.lang.String str68 = explodedArchive34.toString();
        java.util.jar.Manifest manifest69 = explodedArchive34.manifest;
        java.io.File file70 = null;
        explodedArchive34.root = file70;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry72 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry72.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator75 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue76 = fileEntryIterator75.stack;
        java.io.File file77 = fileEntryIterator75.current;
        boolean boolean78 = fileEntryIterator75.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue79 = fileEntryIterator75.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive80 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean81 = explodedArchive80.recursive;
        boolean boolean82 = explodedArchive80.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file84 = explodedArchive83.manifestFile;
        java.io.File file85 = explodedArchive83.manifestFile;
        java.io.File file86 = null;
        java.io.File file87 = explodedArchive83.getManifestFile(file86);
        explodedArchive80.root = file87;
        fileEntryIterator75.root = file87;
        fileEntry72.file = file87;
        explodedArchive34.manifestFile = file87;
        fileEntryIterator13.root = file87;
        fileEntryIterator0.current = file87;
        java.io.File file94 = fileEntryIterator0.root;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(fileItorQueue41);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file65.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str68 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str68, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest69);
        org.junit.Assert.assertNotNull(fileItorQueue76);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(fileItorQueue79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(file84);
        org.junit.Assert.assertNull(file85);
        org.junit.Assert.assertNotNull(file87);
        org.junit.Assert.assertEquals(file87.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file87.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file94);
        org.junit.Assert.assertEquals(file94.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file94.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test4403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4403");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        int int11 = uRL9.getPort();
        java.net.URL uRL12 = null;
        java.net.URLStreamHandler uRLStreamHandler14 = null;
        java.net.URL uRL15 = new java.net.URL(uRL12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler14);
        java.lang.String str16 = uRL15.getHost();
        java.lang.String str17 = uRL15.getAuthority();
        java.lang.String str18 = uRL15.getQuery();
        int int19 = uRL15.getDefaultPort();
        boolean boolean20 = uRL9.sameFile(uRL15);
        boolean boolean21 = uRL3.sameFile(uRL9);
        java.net.URLStreamHandler uRLStreamHandler23 = null;
        java.net.URL uRL24 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler23);
        java.lang.String str25 = uRL24.getRef();
        java.lang.String str26 = uRL24.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals(uRL24.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str26, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4404");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        boolean boolean2 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file4 = fileEntryIterator3.current;
        java.io.File file5 = fileEntryIterator3.poll();
        java.io.File file6 = fileEntryIterator3.poll();
        java.io.File file7 = fileEntryIterator3.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.io.File file10 = fileEntryIterator8.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.manifestFile;
        java.io.File file13 = explodedArchive11.manifestFile;
        java.io.File file14 = null;
        java.io.File file15 = explodedArchive11.getManifestFile(file14);
        fileEntryIterator8.root = file14;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file18 = explodedArchive17.manifestFile;
        java.io.File file19 = explodedArchive17.manifestFile;
        java.io.File file20 = null;
        java.io.File file21 = explodedArchive17.getManifestFile(file20);
        java.util.Iterator<java.io.File> fileItor22 = fileEntryIterator8.listFiles(file21);
        fileEntryIterator3.root = file21;
        java.io.File file24 = fileEntryIterator3.poll();
        java.io.File file25 = fileEntryIterator3.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        fileEntryIterator26.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.manifestFile;
        java.io.File file32 = explodedArchive30.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        fileEntryIterator33.recursive = true;
        java.util.Comparator<java.io.File> fileComparator37 = fileEntryIterator33.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        java.util.Comparator<java.io.File> fileComparator40 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        java.util.Comparator<java.io.File> fileComparator43 = fileEntryIterator41.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        java.util.Comparator<java.io.File> fileComparator46 = fileEntryIterator44.entryComparator;
        java.util.Comparator<java.io.File> fileComparator47 = fileComparator43.thenComparing(fileComparator46);
        fileEntryIterator38.entryComparator = fileComparator43;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator43.thenComparing(fileComparator51);
        fileEntryIterator33.entryComparator = fileComparator52;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file55 = explodedArchive54.manifestFile;
        java.io.File file56 = explodedArchive54.manifestFile;
        java.io.File file57 = null;
        java.io.File file58 = explodedArchive54.getManifestFile(file57);
        fileEntryIterator33.root = file58;
        explodedArchive30.manifestFile = file58;
        fileEntryIterator26.current = file58;
        java.io.File file62 = fileEntryIterator26.current;
        java.util.Iterator<java.io.File> fileItor63 = fileEntryIterator3.listFiles(file62);
        explodedArchive0.root = file62;
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest65 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file15.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor22);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file58.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor63);
    }

    @Test
    public void test4405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4405");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getPort();
        java.lang.String str8 = uRL3.getQuery();
        java.net.URLConnection uRLConnection9 = uRL3.openConnection();
        java.net.URL uRL11 = new java.net.URL(uRL3, "file://exploded archive");
        java.lang.String str12 = uRL3.getHost();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream13 = uRL3.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(uRLConnection9);
        org.junit.Assert.assertEquals(uRL11.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test4406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4406");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        java.net.URL uRL41 = explodedArchive0.getUrl();
        java.lang.String str42 = uRL41.getUserInfo();
        java.lang.String str43 = uRL41.getQuery();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(uRL41);
// flaky:         org.junit.Assert.assertEquals(uRL41.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
    }

    @Test
    public void test4407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4407");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        fileEntryIterator0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        fileEntryIterator0.stack = fileItorQueue8;
        fileEntryIterator0.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator0.stack;
        boolean boolean13 = fileEntryIterator0.hasNext();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test4408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4408");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator2.stack;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator2.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        java.util.Comparator<java.io.File> fileComparator11 = fileComparator7.thenComparing(fileComparator10);
        fileEntryIterator2.entryComparator = fileComparator7;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator7.thenComparing(fileComparator15);
        fileEntryIterator0.entryComparator = fileComparator16;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator0.stack;
        java.io.File file19 = fileEntryIterator0.current;
        java.io.File file20 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file22 = fileEntryIterator21.current;
        java.io.File file23 = fileEntryIterator21.poll();
        java.io.File file24 = fileEntryIterator21.poll();
        java.io.File file25 = fileEntryIterator21.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.io.File file28 = fileEntryIterator26.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file30 = explodedArchive29.manifestFile;
        java.io.File file31 = explodedArchive29.manifestFile;
        java.io.File file32 = null;
        java.io.File file33 = explodedArchive29.getManifestFile(file32);
        fileEntryIterator26.root = file32;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.manifestFile;
        java.io.File file37 = explodedArchive35.manifestFile;
        java.io.File file38 = null;
        java.io.File file39 = explodedArchive35.getManifestFile(file38);
        java.util.Iterator<java.io.File> fileItor40 = fileEntryIterator26.listFiles(file39);
        fileEntryIterator21.root = file39;
        java.io.File file42 = fileEntryIterator21.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file44 = fileEntryIterator43.current;
        java.io.File file45 = fileEntryIterator43.poll();
        java.io.File file46 = fileEntryIterator43.poll();
        java.io.File file47 = fileEntryIterator43.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.io.File file50 = fileEntryIterator48.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        fileEntryIterator51.recursive = true;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator51.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator62.entryComparator;
        java.util.Comparator<java.io.File> fileComparator65 = fileComparator61.thenComparing(fileComparator64);
        fileEntryIterator56.entryComparator = fileComparator61;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue68 = fileEntryIterator67.stack;
        java.util.Comparator<java.io.File> fileComparator69 = fileEntryIterator67.entryComparator;
        java.util.Comparator<java.io.File> fileComparator70 = fileComparator61.thenComparing(fileComparator69);
        fileEntryIterator51.entryComparator = fileComparator70;
        fileEntryIterator51.recursive = true;
        fileEntryIterator51.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue76 = fileEntryIterator51.stack;
        fileEntryIterator48.stack = fileItorQueue76;
        fileEntryIterator43.stack = fileItorQueue76;
        fileEntryIterator21.stack = fileItorQueue76;
        fileEntryIterator0.stack = fileItorQueue76;
        java.io.File file81 = fileEntryIterator0.current;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry82 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file33.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor40);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileItorQueue68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileItorQueue76);
        org.junit.Assert.assertNull(file81);
    }

    @Test
    public void test4409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4409");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        fileEntryIterator0.recursive = false;
        java.io.File file7 = fileEntryIterator0.poll();
        boolean boolean8 = fileEntryIterator0.recursive;
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test4410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4410");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("file://filefile://exploded archive:0", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", "file://exploded archive/exploded archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file://filefile://exploded archive:0");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4411");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("exploded archive", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file", (int) (byte) 0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4412");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("", "exploded archive:0", "file:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: ");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4413");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.util.Comparator<java.io.File> fileComparator2 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        boolean boolean5 = fileEntryIterator3.hasNext();
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator3.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator12.thenComparing(fileComparator15);
        fileEntryIterator7.entryComparator = fileComparator12;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator12.thenComparing((java.util.Comparator<java.io.File>) entryComparator18);
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator6.thenComparing((java.util.Comparator<java.io.File>) entryComparator18);
        java.util.Comparator<java.io.File> fileComparator21 = fileComparator6.reversed();
        fileEntryIterator0.entryComparator = fileComparator21;
        java.lang.Class<?> wildcardClass23 = fileEntryIterator0.getClass();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test4414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4414");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file23 = fileEntryIterator22.current;
        java.io.File file24 = null;
        fileEntryIterator22.current = file24;
        java.io.File file26 = fileEntryIterator22.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file28 = fileEntry27.getFile();
        java.lang.String str29 = fileEntry27.name;
        java.io.File file30 = fileEntry27.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        boolean boolean33 = fileEntryIterator31.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file35 = explodedArchive34.manifestFile;
        java.io.File file36 = explodedArchive34.manifestFile;
        java.io.File file37 = null;
        java.io.File file38 = explodedArchive34.getManifestFile(file37);
        boolean boolean39 = explodedArchive34.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator40.stack;
        fileEntryIterator40.recursive = true;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator40.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue46 = fileEntryIterator45.stack;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator45.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        java.util.Comparator<java.io.File> fileComparator54 = fileComparator50.thenComparing(fileComparator53);
        fileEntryIterator45.entryComparator = fileComparator50;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        java.util.Comparator<java.io.File> fileComparator59 = fileComparator50.thenComparing(fileComparator58);
        fileEntryIterator40.entryComparator = fileComparator59;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file62 = explodedArchive61.manifestFile;
        java.io.File file63 = explodedArchive61.manifestFile;
        java.io.File file64 = null;
        java.io.File file65 = explodedArchive61.getManifestFile(file64);
        fileEntryIterator40.root = file65;
        explodedArchive34.root = file65;
        java.util.Iterator<java.io.File> fileItor68 = fileEntryIterator31.listFiles(file65);
        fileEntry27.file = file65;
        fileEntryIterator22.current = file65;
        explodedArchive0.manifestFile = file65;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator72 = explodedArchive0.spliterator();
        java.io.File file73 = explodedArchive0.root;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor74 = explodedArchive0.iterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(fileItorQueue41);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileItorQueue46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file65.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor68);
        org.junit.Assert.assertNotNull(entrySpliterator72);
        org.junit.Assert.assertNotNull(file73);
        org.junit.Assert.assertEquals(file73.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file73.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entryItor74);
    }

    @Test
    public void test4415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4415");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLConnection uRLConnection9 = uRL3.openConnection();
        java.lang.String str10 = uRL3.getAuthority();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(uRLConnection9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test4416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4416");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.io.File file4 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.io.File file7 = fileEntryIterator5.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive8.getManifestFile(file11);
        fileEntryIterator5.root = file11;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.manifestFile;
        java.io.File file16 = explodedArchive14.manifestFile;
        java.io.File file17 = null;
        java.io.File file18 = explodedArchive14.getManifestFile(file17);
        java.util.Iterator<java.io.File> fileItor19 = fileEntryIterator5.listFiles(file18);
        fileEntryIterator0.root = file18;
        boolean boolean21 = fileEntryIterator0.hasNext();
        java.io.File file22 = fileEntryIterator0.poll();
        java.io.File file23 = fileEntryIterator0.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator0.stack;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(fileItorQueue24);
    }

    @Test
    public void test4417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4417");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.io.File file4 = explodedArchive0.root;
        boolean boolean5 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive0.manifest = manifest6;
        java.lang.String str8 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.manifestFile;
        java.io.File file11 = explodedArchive9.manifestFile;
        java.lang.String str12 = explodedArchive9.toString();
        java.util.jar.Manifest manifest13 = explodedArchive9.manifest;
        java.io.File file14 = explodedArchive9.manifestFile;
        boolean boolean15 = explodedArchive9.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file17 = fileEntry16.getFile();
        java.io.File file18 = fileEntry16.file;
        java.io.File file19 = null;
        fileEntry16.file = file19;
        java.lang.String str21 = fileEntry16.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file23 = fileEntryIterator22.current;
        java.io.File file24 = null;
        fileEntryIterator22.current = file24;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean27 = explodedArchive26.recursive;
        java.io.File file28 = explodedArchive26.manifestFile;
        java.util.jar.Manifest manifest29 = null;
        explodedArchive26.manifest = manifest29;
        java.io.File file31 = explodedArchive26.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.io.File file35 = fileEntryIterator32.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file37 = explodedArchive36.manifestFile;
        java.io.File file38 = explodedArchive36.manifestFile;
        java.io.File file39 = null;
        java.io.File file40 = explodedArchive36.getManifestFile(file39);
        fileEntryIterator32.current = file40;
        explodedArchive26.root = file40;
        fileEntryIterator22.root = file40;
        fileEntry16.file = file40;
        java.io.File file45 = fileEntry16.getFile();
        java.io.File file46 = fileEntry16.file;
        explodedArchive9.manifestFile = file46;
        java.io.File file48 = explodedArchive9.manifestFile;
        java.io.File file49 = explodedArchive0.getManifestFile(file48);
        explodedArchive0.recursive = false;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL52 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "exploded archive" + "'", str8, "exploded archive");
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "exploded archive" + "'", str12, "exploded archive");
        org.junit.Assert.assertNull(manifest13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file40.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4418");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.io.File file22 = explodedArchive0.root;
        java.util.jar.Manifest manifest23 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.io.File file29 = fileEntryIterator27.current;
        boolean boolean30 = fileEntryIterator27.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator27.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean33 = explodedArchive32.recursive;
        boolean boolean34 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.manifestFile;
        java.io.File file37 = explodedArchive35.manifestFile;
        java.io.File file38 = null;
        java.io.File file39 = explodedArchive35.getManifestFile(file38);
        explodedArchive32.root = file39;
        fileEntryIterator27.root = file39;
        fileEntry24.file = file39;
        java.io.File file43 = fileEntry24.getFile();
        java.lang.String str44 = fileEntry24.name;
        java.lang.String str45 = fileEntry24.name;
        java.lang.String str46 = fileEntry24.getName();
        java.io.File file47 = fileEntry24.file;
        java.io.File file48 = explodedArchive0.getManifestFile(file47);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive(file48, true);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file22.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file39.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file43.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "exploded archive" + "'", str44, "exploded archive");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "exploded archive" + "'", str45, "exploded archive");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "exploded archive" + "'", str46, "exploded archive");
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4419");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        boolean boolean2 = explodedArchive0.recursive;
        java.io.File file3 = explodedArchive0.manifestFile;
        boolean boolean4 = explodedArchive0.recursive;
        java.io.File file5 = explodedArchive0.manifestFile;
        java.io.File file6 = explodedArchive0.manifestFile;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
    }

    @Test
    public void test4420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4420");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        java.lang.String str34 = explodedArchive0.toString();
        java.util.jar.Manifest manifest35 = explodedArchive0.manifest;
        java.io.File file36 = null;
        explodedArchive0.root = file36;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest40 = null;
        explodedArchive0.manifest = manifest40;
        boolean boolean42 = explodedArchive0.recursive;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test4421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4421");
        java.net.URL uRL1 = new java.net.URL("file://exploded archive");
        java.lang.String str2 = uRL1.getProtocol();
        java.net.URL uRL3 = null;
        java.net.URLStreamHandler uRLStreamHandler5 = null;
        java.net.URL uRL6 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler5);
        java.lang.String str7 = uRL6.getHost();
        java.lang.String str8 = uRL6.getAuthority();
        java.lang.String str9 = uRL6.getHost();
        int int10 = uRL6.getPort();
        java.lang.String str11 = uRL6.getPath();
        java.lang.String str12 = uRL6.getHost();
        java.net.URL uRL13 = null;
        java.net.URLStreamHandler uRLStreamHandler15 = null;
        java.net.URL uRL16 = new java.net.URL(uRL13, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler15);
        java.lang.String str17 = uRL16.getHost();
        java.net.URI uRI18 = uRL16.toURI();
        java.lang.String str19 = uRL16.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler21 = null;
        java.net.URL uRL22 = new java.net.URL(uRL16, "file", uRLStreamHandler21);
        java.net.URLStreamHandler uRLStreamHandler24 = null;
        java.net.URL uRL25 = new java.net.URL(uRL16, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler24);
        boolean boolean26 = uRL6.sameFile(uRL16);
        boolean boolean27 = uRL1.sameFile(uRL16);
        java.net.URLStreamHandler uRLStreamHandler29 = null;
        java.net.URL uRL30 = new java.net.URL(uRL16, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler29);
        java.net.URLStreamHandler uRLStreamHandler32 = null;
        java.net.URL uRL33 = new java.net.URL(uRL30, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", uRLStreamHandler32);
        java.lang.String str34 = uRL33.toString();
        org.junit.Assert.assertEquals(uRL1.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "file" + "'", str2, "file");
        org.junit.Assert.assertEquals(uRL6.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str11, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals(uRL16.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(uRI18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str19, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals(uRL25.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals(uRL30.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL33.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!" + "'", str34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test4422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4422");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("hi!:10", "hi!:10", "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!:10");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4423");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        java.lang.String str34 = explodedArchive0.toString();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator35 = explodedArchive0.spliterator();
        java.util.jar.Manifest manifest36 = explodedArchive0.manifest;
        java.net.URL uRL37 = explodedArchive0.getUrl();
        java.net.URLConnection uRLConnection38 = uRL37.openConnection();
        java.net.URLStreamHandler uRLStreamHandler40 = null;
        java.net.URL uRL41 = new java.net.URL(uRL37, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler40);
        java.lang.String str42 = uRL41.getPath();
        int int43 = uRL41.getDefaultPort();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNotNull(uRL37);
// flaky:         org.junit.Assert.assertEquals(uRL37.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection38);
        org.junit.Assert.assertEquals(uRL41.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str42, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
    }

    @Test
    public void test4424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4424");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str73 = uRL72.getFile();
        java.lang.String str74 = uRL72.getUserInfo();
        java.lang.String str75 = uRL72.getPath();
        java.lang.String str76 = uRL72.getAuthority();
        int int77 = uRL72.getDefaultPort();
        java.lang.String str78 = uRL72.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str73, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str75, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str78, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4425");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.lang.String str3 = explodedArchive0.toString();
        java.io.File file4 = explodedArchive0.root;
        boolean boolean5 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive0.manifest = manifest6;
        java.lang.String str8 = explodedArchive0.toString();
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest11 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str13 = fileEntry12.name;
        java.io.File file14 = fileEntry12.file;
        fileEntry12.name = "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF";
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive17 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "exploded archive" + "'", str8, "exploded archive");
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(file14);
    }

    @Test
    public void test4426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4426");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.io.File file6 = fileEntryIterator4.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.manifestFile;
        java.io.File file9 = explodedArchive7.manifestFile;
        java.io.File file10 = null;
        java.io.File file11 = explodedArchive7.getManifestFile(file10);
        fileEntryIterator4.root = file10;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        java.util.Iterator<java.io.File> fileItor18 = fileEntryIterator4.listFiles(file17);
        explodedArchive0.manifestFile = file17;
        java.util.jar.Manifest manifest20 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean23 = fileEntryIterator22.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean25 = explodedArchive24.recursive;
        java.io.File file26 = explodedArchive24.manifestFile;
        java.util.jar.Manifest manifest27 = null;
        explodedArchive24.manifest = manifest27;
        java.io.File file29 = explodedArchive24.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        java.io.File file33 = fileEntryIterator30.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file35 = explodedArchive34.manifestFile;
        java.io.File file36 = explodedArchive34.manifestFile;
        java.io.File file37 = null;
        java.io.File file38 = explodedArchive34.getManifestFile(file37);
        fileEntryIterator30.current = file38;
        explodedArchive24.root = file38;
        fileEntryIterator22.root = file38;
        explodedArchive21.root = file38;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator43 = explodedArchive21.spliterator();
        java.io.File file44 = explodedArchive21.root;
        java.util.jar.Manifest manifest45 = explodedArchive21.manifest;
        java.io.File file46 = explodedArchive21.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file48 = fileEntryIterator47.current;
        java.io.File file49 = null;
        fileEntryIterator47.current = file49;
        java.io.File file51 = fileEntryIterator47.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file53 = fileEntry52.getFile();
        java.lang.String str54 = fileEntry52.name;
        java.io.File file55 = fileEntry52.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        boolean boolean58 = fileEntryIterator56.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        boolean boolean64 = explodedArchive59.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator65.stack;
        fileEntryIterator65.recursive = true;
        java.util.Comparator<java.io.File> fileComparator69 = fileEntryIterator65.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator70 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue71 = fileEntryIterator70.stack;
        java.util.Comparator<java.io.File> fileComparator72 = fileEntryIterator70.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator73 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue74 = fileEntryIterator73.stack;
        java.util.Comparator<java.io.File> fileComparator75 = fileEntryIterator73.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator76 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue77 = fileEntryIterator76.stack;
        java.util.Comparator<java.io.File> fileComparator78 = fileEntryIterator76.entryComparator;
        java.util.Comparator<java.io.File> fileComparator79 = fileComparator75.thenComparing(fileComparator78);
        fileEntryIterator70.entryComparator = fileComparator75;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator81 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue82 = fileEntryIterator81.stack;
        java.util.Comparator<java.io.File> fileComparator83 = fileEntryIterator81.entryComparator;
        java.util.Comparator<java.io.File> fileComparator84 = fileComparator75.thenComparing(fileComparator83);
        fileEntryIterator65.entryComparator = fileComparator84;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive86 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file87 = explodedArchive86.manifestFile;
        java.io.File file88 = explodedArchive86.manifestFile;
        java.io.File file89 = null;
        java.io.File file90 = explodedArchive86.getManifestFile(file89);
        fileEntryIterator65.root = file90;
        explodedArchive59.root = file90;
        java.util.Iterator<java.io.File> fileItor93 = fileEntryIterator56.listFiles(file90);
        fileEntry52.file = file90;
        fileEntryIterator47.current = file90;
        explodedArchive21.root = file90;
        explodedArchive0.root = file90;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor18);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNotNull(fileItorQueue71);
        org.junit.Assert.assertNotNull(fileComparator72);
        org.junit.Assert.assertNotNull(fileItorQueue74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNotNull(fileItorQueue77);
        org.junit.Assert.assertNotNull(fileComparator78);
        org.junit.Assert.assertNotNull(fileComparator79);
        org.junit.Assert.assertNotNull(fileItorQueue82);
        org.junit.Assert.assertNotNull(fileComparator83);
        org.junit.Assert.assertNotNull(fileComparator84);
        org.junit.Assert.assertNull(file87);
        org.junit.Assert.assertNull(file88);
        org.junit.Assert.assertNotNull(file90);
        org.junit.Assert.assertEquals(file90.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file90.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor93);
    }

    @Test
    public void test4427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4427");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.lang.String str71 = uRL69.getHost();
        java.net.URI uRI72 = uRL69.toURI();
        java.lang.String str73 = uRL69.getQuery();
        java.lang.String str74 = uRL69.getPath();
        java.net.URL uRL75 = null;
        java.net.URLStreamHandler uRLStreamHandler77 = null;
        java.net.URL uRL78 = new java.net.URL(uRL75, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler77);
        java.lang.String str79 = uRL78.getProtocol();
        java.net.URL uRL81 = new java.net.URL(uRL78, "file");
        java.lang.String str82 = uRL78.getFile();
        java.net.URL uRL84 = new java.net.URL(uRL78, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        boolean boolean85 = uRL69.sameFile(uRL78);
        java.lang.String str86 = uRL78.getPath();
        java.lang.String str87 = uRL78.getRef();
        java.lang.String str88 = uRL78.getUserInfo();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(uRI72);
        org.junit.Assert.assertNull(str73);
// flaky:         org.junit.Assert.assertEquals("'" + str74 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str74, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL78.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "file" + "'", str79, "file");
        org.junit.Assert.assertEquals(uRL81.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str82, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL84.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
// flaky:         org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str86, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNull(str88);
    }

    @Test
    public void test4428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4428");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str1 = fileEntry0.name;
        java.lang.String str2 = fileEntry0.getName();
        java.io.File file3 = fileEntry0.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry4.name = "exploded archive";
        java.lang.String str7 = fileEntry4.getName();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        fileEntryIterator11.recursive = true;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator21.thenComparing(fileComparator24);
        fileEntryIterator16.entryComparator = fileComparator21;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        java.util.Comparator<java.io.File> fileComparator30 = fileComparator21.thenComparing(fileComparator29);
        fileEntryIterator11.entryComparator = fileComparator30;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        fileEntryIterator11.root = file36;
        explodedArchive8.manifestFile = file36;
        java.util.jar.Manifest manifest39 = explodedArchive8.manifest;
        java.util.jar.Manifest manifest40 = explodedArchive8.manifest;
        java.util.jar.Manifest manifest41 = explodedArchive8.getManifest();
        java.util.jar.Manifest manifest42 = explodedArchive8.getManifest();
        java.io.File file43 = explodedArchive8.root;
        java.io.File file44 = explodedArchive8.manifestFile;
        java.io.File file45 = explodedArchive8.manifestFile;
        fileEntry4.file = file45;
        fileEntry0.file = file45;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file45, false);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "exploded archive" + "'", str7, "exploded archive");
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest39);
        org.junit.Assert.assertNull(manifest40);
        org.junit.Assert.assertNull(manifest41);
        org.junit.Assert.assertNull(manifest42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test4429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4429");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getProtocol();
        java.lang.String str5 = uRL3.getUserInfo();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler16);
        boolean boolean18 = uRL3.sameFile(uRL17);
        java.lang.String str19 = uRL3.getProtocol();
        java.net.URLStreamHandler uRLStreamHandler21 = null;
        java.net.URL uRL22 = new java.net.URL(uRL3, "hi!", uRLStreamHandler21);
        java.lang.String str23 = uRL3.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.io.File file26 = fileEntryIterator24.current;
        java.io.File file27 = fileEntryIterator24.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file29 = fileEntryIterator28.current;
        boolean boolean30 = fileEntryIterator28.hasNext();
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator28.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator28.entryComparator;
        fileEntryIterator24.entryComparator = fileComparator32;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        fileEntryIterator24.stack = fileItorQueue35;
        java.io.File file37 = fileEntryIterator24.poll();
        java.io.File file38 = fileEntryIterator24.poll();
        boolean boolean39 = uRL3.equals((java.lang.Object) file38);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "file" + "'", str4, "file");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "file" + "'", str19, "file");
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test4430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4430");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.net.URL uRL74 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str75 = uRL69.getRef();
        java.lang.String str76 = uRL69.getQuery();
        java.net.URL uRL78 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        java.lang.String str79 = uRL78.getHost();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL74.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertEquals(uRL78.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
    }

    @Test
    public void test4431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4431");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.io.File file9 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        fileEntryIterator6.current = file14;
        explodedArchive0.root = file14;
        java.util.jar.Manifest manifest17 = explodedArchive0.manifest;
        java.net.URL uRL18 = explodedArchive0.getUrl();
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor19 = explodedArchive0.iterator();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertNotNull(uRL18);
// flaky:         org.junit.Assert.assertEquals(uRL18.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entryItor19);
    }

    @Test
    public void test4432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4432");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.lang.String str9 = uRL3.getQuery();
        java.lang.String str10 = uRL3.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.manifestFile;
        java.io.File file13 = explodedArchive11.manifestFile;
        java.io.File file14 = null;
        java.io.File file15 = explodedArchive11.getManifestFile(file14);
        boolean boolean16 = explodedArchive11.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        fileEntryIterator17.recursive = true;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue26 = fileEntryIterator25.stack;
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator25.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        java.util.Comparator<java.io.File> fileComparator31 = fileComparator27.thenComparing(fileComparator30);
        fileEntryIterator22.entryComparator = fileComparator27;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        java.util.Comparator<java.io.File> fileComparator36 = fileComparator27.thenComparing(fileComparator35);
        fileEntryIterator17.entryComparator = fileComparator36;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.manifestFile;
        java.io.File file40 = explodedArchive38.manifestFile;
        java.io.File file41 = null;
        java.io.File file42 = explodedArchive38.getManifestFile(file41);
        fileEntryIterator17.root = file42;
        explodedArchive11.root = file42;
        explodedArchive11.recursive = false;
        java.util.jar.Manifest manifest47 = explodedArchive11.manifest;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator48 = explodedArchive11.spliterator();
        java.net.URL uRL49 = explodedArchive11.getUrl();
        int int50 = uRL49.getDefaultPort();
        java.net.URI uRI51 = uRL49.toURI();
        java.lang.String str52 = uRL49.toExternalForm();
        boolean boolean53 = uRL3.equals((java.lang.Object) str52);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file15.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file42.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest47);
        org.junit.Assert.assertNotNull(entrySpliterator48);
        org.junit.Assert.assertNotNull(uRL49);
// flaky:         org.junit.Assert.assertEquals(uRL49.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(uRI51);
// flaky:         org.junit.Assert.assertEquals("'" + str52 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str52, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test4433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4433");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.util.jar.Manifest manifest38 = explodedArchive0.manifest;
        java.lang.String str39 = explodedArchive0.toString();
        java.io.File file40 = explodedArchive0.root;
        explodedArchive0.recursive = false;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor43 = explodedArchive0.iterator();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest38);
// flaky:         org.junit.Assert.assertEquals("'" + str39 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str39, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file40.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entryItor43);
    }

    @Test
    public void test4434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4434");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.net.URLStreamHandler uRLStreamHandler71 = null;
        java.net.URL uRL72 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler71);
        java.net.URLStreamHandler uRLStreamHandler74 = null;
        java.net.URL uRL75 = new java.net.URL(uRL69, "", uRLStreamHandler74);
        java.lang.String str76 = uRL69.getProtocol();
        java.lang.String str77 = uRL69.getHost();
        java.lang.String str78 = uRL69.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL72.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals(uRL75.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "file" + "'", str76, "file");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
// flaky:         org.junit.Assert.assertEquals("'" + str78 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str78, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4435");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.name;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        java.lang.String str5 = fileEntry0.name;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file7 = fileEntryIterator6.current;
        boolean boolean8 = fileEntryIterator6.hasNext();
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file11 = fileEntryIterator10.current;
        java.io.File file12 = null;
        fileEntryIterator10.current = file12;
        java.io.File file14 = fileEntryIterator10.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file16 = fileEntry15.getFile();
        java.lang.String str17 = fileEntry15.name;
        java.io.File file18 = fileEntry15.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        boolean boolean21 = fileEntryIterator19.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file23 = explodedArchive22.manifestFile;
        java.io.File file24 = explodedArchive22.manifestFile;
        java.io.File file25 = null;
        java.io.File file26 = explodedArchive22.getManifestFile(file25);
        boolean boolean27 = explodedArchive22.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        fileEntryIterator28.recursive = true;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator28.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator39.entryComparator;
        java.util.Comparator<java.io.File> fileComparator42 = fileComparator38.thenComparing(fileComparator41);
        fileEntryIterator33.entryComparator = fileComparator38;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        java.util.Comparator<java.io.File> fileComparator46 = fileEntryIterator44.entryComparator;
        java.util.Comparator<java.io.File> fileComparator47 = fileComparator38.thenComparing(fileComparator46);
        fileEntryIterator28.entryComparator = fileComparator47;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file50 = explodedArchive49.manifestFile;
        java.io.File file51 = explodedArchive49.manifestFile;
        java.io.File file52 = null;
        java.io.File file53 = explodedArchive49.getManifestFile(file52);
        fileEntryIterator28.root = file53;
        explodedArchive22.root = file53;
        java.util.Iterator<java.io.File> fileItor56 = fileEntryIterator19.listFiles(file53);
        fileEntry15.file = file53;
        fileEntryIterator10.current = file53;
        java.util.Iterator<java.io.File> fileItor59 = fileEntryIterator6.listFiles(file53);
        fileEntry0.file = file53;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor56);
        org.junit.Assert.assertNotNull(fileItor59);
    }

    @Test
    public void test4436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4436");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        int int13 = uRL11.getDefaultPort();
        java.lang.String str14 = uRL11.getRef();
        java.net.URL uRL15 = null;
        java.net.URLStreamHandler uRLStreamHandler17 = null;
        java.net.URL uRL18 = new java.net.URL(uRL15, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler17);
        java.lang.String str19 = uRL18.getHost();
        java.lang.String str20 = uRL18.getAuthority();
        java.lang.String str21 = uRL18.getHost();
        java.lang.String str22 = uRL18.getQuery();
        java.lang.String str23 = uRL18.getPath();
        java.lang.String str24 = uRL18.getRef();
        java.net.URI uRI25 = uRL18.toURI();
        boolean boolean26 = uRL11.sameFile(uRL18);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals(uRL18.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str23, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(uRI25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test4437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4437");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        explodedArchive0.recursive = false;
        explodedArchive0.recursive = true;
        java.io.File file45 = explodedArchive0.root;
        java.util.jar.Manifest manifest46 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest47 = null;
        explodedArchive0.manifest = manifest47;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str50 = fileEntry49.getName();
        fileEntry49.name = "exploded archive";
        fileEntry49.name = "hi!";
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file56 = explodedArchive55.manifestFile;
        java.io.File file57 = explodedArchive55.manifestFile;
        java.lang.String str58 = explodedArchive55.toString();
        java.lang.String str59 = explodedArchive55.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator60 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean61 = fileEntryIterator60.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean63 = explodedArchive62.recursive;
        java.io.File file64 = explodedArchive62.manifestFile;
        java.util.jar.Manifest manifest65 = null;
        explodedArchive62.manifest = manifest65;
        java.io.File file67 = explodedArchive62.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        java.io.File file71 = fileEntryIterator68.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file73 = explodedArchive72.manifestFile;
        java.io.File file74 = explodedArchive72.manifestFile;
        java.io.File file75 = null;
        java.io.File file76 = explodedArchive72.getManifestFile(file75);
        fileEntryIterator68.current = file76;
        explodedArchive62.root = file76;
        fileEntryIterator60.root = file76;
        java.io.File file80 = explodedArchive55.getManifestFile(file76);
        fileEntry49.file = file80;
        fileEntry49.name = "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF";
        java.io.File file84 = fileEntry49.file;
        explodedArchive0.manifestFile = file84;
        java.util.jar.Manifest manifest86 = explodedArchive0.manifest;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "exploded archive" + "'", str58, "exploded archive");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "exploded archive" + "'", str59, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file76.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file80);
        org.junit.Assert.assertEquals(file80.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file80.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file84);
        org.junit.Assert.assertEquals(file84.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file84.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest86);
    }

    @Test
    public void test4438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4438");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator0.stack;
        java.io.File file5 = fileEntryIterator0.current;
        boolean boolean6 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator12.thenComparing(fileComparator15);
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator9.thenComparing(fileComparator15);
        fileEntryIterator0.entryComparator = fileComparator15;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator0.stack;
        java.io.File file20 = fileEntryIterator0.current;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNull(file20);
    }

    @Test
    public void test4439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4439");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        java.lang.String str7 = uRL3.getRef();
        java.lang.String str8 = uRL3.getRef();
        java.net.URL uRL10 = new java.net.URL("file://exploded archive");
        java.lang.String str11 = uRL10.getProtocol();
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL10, "", uRLStreamHandler13);
        java.lang.String str15 = uRL10.getQuery();
        java.net.URL uRL17 = new java.net.URL(uRL10, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        boolean boolean18 = uRL3.sameFile(uRL10);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream19 = uRL3.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL10.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "file" + "'", str11, "file");
        org.junit.Assert.assertEquals(uRL14.toString(), "file://exploded archive");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test4440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4440");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        java.io.File file3 = fileEntryIterator0.current;
        fileEntryIterator0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.manifestFile;
        java.io.File file8 = explodedArchive6.manifestFile;
        java.io.File file9 = null;
        java.io.File file10 = explodedArchive6.getManifestFile(file9);
        fileEntryIterator0.root = file10;
        boolean boolean12 = fileEntryIterator0.hasNext();
        java.io.File file13 = fileEntryIterator0.root;
        java.io.File file14 = fileEntryIterator0.current;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass15 = file14.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file10.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file13.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file14);
    }

    @Test
    public void test4441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4441");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        boolean boolean69 = explodedArchive0.recursive;
        java.util.Iterator<org.springframework.boot.loader.archive.Archive.Entry> entryItor70 = explodedArchive0.iterator();
        java.lang.String str71 = explodedArchive0.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(entryItor70);
// flaky:         org.junit.Assert.assertEquals("'" + str71 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str71, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4442");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry0.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.io.File file5 = fileEntryIterator3.current;
        boolean boolean6 = fileEntryIterator3.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator3.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean9 = explodedArchive8.recursive;
        boolean boolean10 = explodedArchive8.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.manifestFile;
        java.io.File file13 = explodedArchive11.manifestFile;
        java.io.File file14 = null;
        java.io.File file15 = explodedArchive11.getManifestFile(file14);
        explodedArchive8.root = file15;
        fileEntryIterator3.root = file15;
        fileEntry0.file = file15;
        java.lang.String str19 = fileEntry0.name;
        boolean boolean20 = fileEntry0.isDirectory();
        fileEntry0.name = "file://exploded archive/exploded archive";
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file15.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "exploded archive" + "'", str19, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test4443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4443");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLConnection uRLConnection7 = uRL3.openConnection();
        java.lang.String str8 = uRL3.getUserInfo();
        java.lang.String str9 = uRL3.getRef();
        java.lang.String str10 = uRL3.getPath();
        java.net.URI uRI11 = uRL3.toURI();
        java.lang.String str12 = uRL3.getFile();
        java.net.URL uRL13 = null;
        java.net.URLStreamHandler uRLStreamHandler15 = null;
        java.net.URL uRL16 = new java.net.URL(uRL13, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler15);
        java.lang.String str17 = uRL16.getHost();
        java.lang.String str18 = uRL16.getAuthority();
        java.lang.String str19 = uRL16.getHost();
        java.lang.String str20 = uRL16.getQuery();
        java.lang.String str21 = uRL16.getAuthority();
        int int22 = uRL16.getPort();
        boolean boolean23 = uRL3.sameFile(uRL16);
        java.lang.String str24 = uRL16.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL16.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str24, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4444");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL5 = new java.net.URL("file://exploded archive", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive", (int) 'a', "", uRLStreamHandler4);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file://exploded archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4445");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.getRef();
        int int7 = uRL3.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler9 = null;
        java.net.URL uRL10 = new java.net.URL(uRL3, "", uRLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.toExternalForm();
        java.net.URI uRI13 = uRL10.toURI();
        int int14 = uRL10.getDefaultPort();
        java.net.URLConnection uRLConnection15 = uRL10.openConnection();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals(uRL10.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str11, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRI13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(uRLConnection15);
    }

    @Test
    public void test4446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4446");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        boolean boolean2 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file4 = fileEntryIterator3.current;
        java.io.File file5 = null;
        fileEntryIterator3.current = file5;
        java.io.File file7 = fileEntryIterator3.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file9 = fileEntry8.getFile();
        java.lang.String str10 = fileEntry8.name;
        java.io.File file11 = fileEntry8.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        boolean boolean14 = fileEntryIterator12.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.manifestFile;
        java.io.File file17 = explodedArchive15.manifestFile;
        java.io.File file18 = null;
        java.io.File file19 = explodedArchive15.getManifestFile(file18);
        boolean boolean20 = explodedArchive15.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        fileEntryIterator21.recursive = true;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator31.thenComparing(fileComparator34);
        fileEntryIterator26.entryComparator = fileComparator31;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator31.thenComparing(fileComparator39);
        fileEntryIterator21.entryComparator = fileComparator40;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.manifestFile;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.io.File file45 = null;
        java.io.File file46 = explodedArchive42.getManifestFile(file45);
        fileEntryIterator21.root = file46;
        explodedArchive15.root = file46;
        java.util.Iterator<java.io.File> fileItor49 = fileEntryIterator12.listFiles(file46);
        fileEntry8.file = file46;
        fileEntryIterator3.current = file46;
        explodedArchive0.root = file46;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator53 = explodedArchive0.spliterator();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter54 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList55 = explodedArchive0.getNestedArchives(entryFilter54);
        boolean boolean56 = explodedArchive0.recursive;
        boolean boolean57 = explodedArchive0.recursive;
        java.lang.String str58 = explodedArchive0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "exploded archive" + "'", str1, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file19.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor49);
        org.junit.Assert.assertNotNull(entrySpliterator53);
        org.junit.Assert.assertNotNull(archiveList55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str58 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str58, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4447");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.manifestFile;
        java.io.File file8 = explodedArchive6.manifestFile;
        java.lang.String str9 = explodedArchive6.toString();
        java.util.jar.Manifest manifest10 = null;
        explodedArchive6.manifest = manifest10;
        java.lang.String str12 = explodedArchive6.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        boolean boolean15 = fileEntryIterator13.hasNext();
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue21 = fileEntryIterator20.stack;
        java.util.Comparator<java.io.File> fileComparator22 = fileEntryIterator20.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        java.util.Comparator<java.io.File> fileComparator26 = fileComparator22.thenComparing(fileComparator25);
        fileEntryIterator17.entryComparator = fileComparator22;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator29 = fileComparator22.thenComparing((java.util.Comparator<java.io.File>) entryComparator28);
        java.util.Comparator<java.io.File> fileComparator30 = fileComparator16.thenComparing((java.util.Comparator<java.io.File>) entryComparator28);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean32 = fileEntryIterator31.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean34 = explodedArchive33.recursive;
        java.io.File file35 = explodedArchive33.manifestFile;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive33.manifest = manifest36;
        java.io.File file38 = explodedArchive33.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator39.entryComparator;
        java.io.File file42 = fileEntryIterator39.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file44 = explodedArchive43.manifestFile;
        java.io.File file45 = explodedArchive43.manifestFile;
        java.io.File file46 = null;
        java.io.File file47 = explodedArchive43.getManifestFile(file46);
        fileEntryIterator39.current = file47;
        explodedArchive33.root = file47;
        fileEntryIterator31.root = file47;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file52 = explodedArchive51.manifestFile;
        java.io.File file53 = explodedArchive51.manifestFile;
        java.io.File file54 = null;
        java.io.File file55 = explodedArchive51.getManifestFile(file54);
        boolean boolean56 = explodedArchive51.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        fileEntryIterator57.recursive = true;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator62.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator65.stack;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator65.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        java.util.Comparator<java.io.File> fileComparator71 = fileComparator67.thenComparing(fileComparator70);
        fileEntryIterator62.entryComparator = fileComparator67;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator73 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue74 = fileEntryIterator73.stack;
        java.util.Comparator<java.io.File> fileComparator75 = fileEntryIterator73.entryComparator;
        java.util.Comparator<java.io.File> fileComparator76 = fileComparator67.thenComparing(fileComparator75);
        fileEntryIterator57.entryComparator = fileComparator76;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file79 = explodedArchive78.manifestFile;
        java.io.File file80 = explodedArchive78.manifestFile;
        java.io.File file81 = null;
        java.io.File file82 = explodedArchive78.getManifestFile(file81);
        fileEntryIterator57.root = file82;
        explodedArchive51.root = file82;
        int int85 = entryComparator28.compare(file47, file82);
        java.io.File file86 = explodedArchive6.getManifestFile(file47);
        java.io.File file87 = explodedArchive0.getManifestFile(file47);
        java.io.File file88 = explodedArchive0.root;
        java.io.File file89 = explodedArchive0.manifestFile;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL90 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "exploded archive" + "'", str9, "exploded archive");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "exploded archive" + "'", str12, "exploded archive");
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(file47);
        org.junit.Assert.assertEquals(file47.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file47.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file55.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileItorQueue74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(file86);
        org.junit.Assert.assertEquals(file86.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file86.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file87);
        org.junit.Assert.assertEquals(file87.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file87.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file88);
        org.junit.Assert.assertNull(file89);
    }

    @Test
    public void test4448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4448");
        java.net.URL uRL1 = new java.net.URL("file://exploded archive");
        java.lang.String str2 = uRL1.getProtocol();
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        java.net.URL uRL5 = new java.net.URL(uRL1, "", uRLStreamHandler4);
        java.lang.String str6 = uRL5.getUserInfo();
        java.lang.String str7 = uRL5.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler9 = null;
        java.net.URL uRL10 = new java.net.URL(uRL5, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", uRLStreamHandler9);
        org.junit.Assert.assertEquals(uRL1.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "file" + "'", str2, "file");
        org.junit.Assert.assertEquals(uRL5.toString(), "file://exploded archive");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "file://exploded archive" + "'", str7, "file://exploded archive");
        org.junit.Assert.assertEquals(uRL10.toString(), "file://exploded archive/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test4449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4449");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.io.File file4 = fileEntryIterator0.current;
        boolean boolean5 = fileEntryIterator0.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean8 = explodedArchive7.recursive;
        java.io.File file9 = explodedArchive7.manifestFile;
        java.util.jar.Manifest manifest10 = null;
        explodedArchive7.manifest = manifest10;
        java.io.File file12 = explodedArchive7.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.io.File file16 = fileEntryIterator13.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file18 = explodedArchive17.manifestFile;
        java.io.File file19 = explodedArchive17.manifestFile;
        java.io.File file20 = null;
        java.io.File file21 = explodedArchive17.getManifestFile(file20);
        fileEntryIterator13.current = file21;
        explodedArchive7.root = file21;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file25 = fileEntryIterator24.current;
        boolean boolean26 = fileEntryIterator24.hasNext();
        fileEntryIterator24.recursive = true;
        boolean boolean29 = fileEntryIterator24.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        boolean boolean32 = explodedArchive30.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file34 = fileEntryIterator33.current;
        java.io.File file35 = null;
        fileEntryIterator33.current = file35;
        java.io.File file37 = fileEntryIterator33.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file39 = fileEntry38.getFile();
        java.lang.String str40 = fileEntry38.name;
        java.io.File file41 = fileEntry38.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        boolean boolean44 = fileEntryIterator42.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file46 = explodedArchive45.manifestFile;
        java.io.File file47 = explodedArchive45.manifestFile;
        java.io.File file48 = null;
        java.io.File file49 = explodedArchive45.getManifestFile(file48);
        boolean boolean50 = explodedArchive45.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        fileEntryIterator51.recursive = true;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator51.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator62.entryComparator;
        java.util.Comparator<java.io.File> fileComparator65 = fileComparator61.thenComparing(fileComparator64);
        fileEntryIterator56.entryComparator = fileComparator61;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue68 = fileEntryIterator67.stack;
        java.util.Comparator<java.io.File> fileComparator69 = fileEntryIterator67.entryComparator;
        java.util.Comparator<java.io.File> fileComparator70 = fileComparator61.thenComparing(fileComparator69);
        fileEntryIterator51.entryComparator = fileComparator70;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file73 = explodedArchive72.manifestFile;
        java.io.File file74 = explodedArchive72.manifestFile;
        java.io.File file75 = null;
        java.io.File file76 = explodedArchive72.getManifestFile(file75);
        fileEntryIterator51.root = file76;
        explodedArchive45.root = file76;
        java.util.Iterator<java.io.File> fileItor79 = fileEntryIterator42.listFiles(file76);
        fileEntry38.file = file76;
        fileEntryIterator33.current = file76;
        explodedArchive30.root = file76;
        java.util.Iterator<java.io.File> fileItor83 = fileEntryIterator24.listFiles(file76);
        explodedArchive7.root = file76;
        fileEntryIterator0.root = file76;
        java.util.Comparator<java.io.File> fileComparator86 = fileEntryIterator0.entryComparator;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "exploded archive" + "'", str31, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file49.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileItorQueue68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file76.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor79);
        org.junit.Assert.assertNotNull(fileItor83);
        org.junit.Assert.assertNotNull(fileComparator86);
    }

    @Test
    public void test4450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4450");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLConnection uRLConnection7 = uRL3.openConnection();
        java.net.URL uRL9 = new java.net.URL(uRL3, "exploded archive");
        java.lang.String str10 = uRL3.getAuthority();
        java.lang.String str11 = uRL3.toExternalForm();
        java.net.URL uRL12 = null;
        java.net.URLStreamHandler uRLStreamHandler14 = null;
        java.net.URL uRL15 = new java.net.URL(uRL12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler14);
        java.lang.String str16 = uRL15.getHost();
        java.lang.String str17 = uRL15.getAuthority();
        java.lang.String str18 = uRL15.getQuery();
        int int19 = uRL15.getDefaultPort();
        java.lang.String str20 = uRL15.getAuthority();
        java.net.URL uRL22 = new java.net.URL(uRL15, "");
        boolean boolean23 = uRL3.sameFile(uRL22);
        java.lang.String str24 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler26 = null;
        java.net.URL uRL27 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", uRLStreamHandler26);
        java.net.URI uRI28 = uRL3.toURI();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection7);
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals(uRL22.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals(uRL27.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNotNull(uRI28);
    }

    @Test
    public void test4451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4451");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.io.File file4 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.io.File file7 = fileEntryIterator5.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.manifestFile;
        java.io.File file10 = explodedArchive8.manifestFile;
        java.io.File file11 = null;
        java.io.File file12 = explodedArchive8.getManifestFile(file11);
        fileEntryIterator5.root = file11;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.manifestFile;
        java.io.File file16 = explodedArchive14.manifestFile;
        java.io.File file17 = null;
        java.io.File file18 = explodedArchive14.getManifestFile(file17);
        java.util.Iterator<java.io.File> fileItor19 = fileEntryIterator5.listFiles(file18);
        fileEntryIterator0.root = file18;
        boolean boolean21 = fileEntryIterator0.hasNext();
        java.io.File file22 = fileEntryIterator0.poll();
        fileEntryIterator0.recursive = true;
        boolean boolean25 = fileEntryIterator0.recursive;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file12.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test4452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4452");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        fileEntry0.name = "";
        java.lang.String str4 = fileEntry0.getName();
        java.lang.String str5 = fileEntry0.getName();
        java.io.File file6 = fileEntry0.file;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(file6);
    }

    @Test
    public void test4453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4453");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        java.io.File file41 = explodedArchive0.root;
        explodedArchive0.recursive = true;
        java.lang.String str44 = explodedArchive0.toString();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator45 = explodedArchive0.spliterator();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive0.getNestedArchives(entryFilter46);
        boolean boolean48 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest49 = null;
        explodedArchive0.manifest = manifest49;
        java.net.URL uRL51 = explodedArchive0.getUrl();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file53 = fileEntry52.getFile();
        java.lang.String str54 = fileEntry52.getName();
        java.lang.String str55 = fileEntry52.getName();
        fileEntry52.name = "";
        java.io.File file58 = fileEntry52.file;
        java.io.File file59 = fileEntry52.getFile();
        fileEntry52.name = "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!";
        java.io.File file62 = fileEntry52.file;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive63 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str44, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator45);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(uRL51);
// flaky:         org.junit.Assert.assertEquals(uRL51.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNull(file62);
    }

    @Test
    public void test4454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4454");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator2.stack;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator2.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        java.util.Comparator<java.io.File> fileComparator11 = fileComparator7.thenComparing(fileComparator10);
        fileEntryIterator2.entryComparator = fileComparator7;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator7.thenComparing(fileComparator15);
        fileEntryIterator0.entryComparator = fileComparator16;
        java.io.File file18 = fileEntryIterator0.root;
        boolean boolean19 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.manifestFile;
        explodedArchive20.recursive = true;
        java.lang.String str24 = explodedArchive20.toString();
        boolean boolean25 = explodedArchive20.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file27 = fileEntryIterator26.current;
        java.io.File file28 = fileEntryIterator26.poll();
        java.io.File file29 = fileEntryIterator26.poll();
        java.io.File file30 = fileEntryIterator26.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        java.io.File file33 = fileEntryIterator31.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file35 = explodedArchive34.manifestFile;
        java.io.File file36 = explodedArchive34.manifestFile;
        java.io.File file37 = null;
        java.io.File file38 = explodedArchive34.getManifestFile(file37);
        fileEntryIterator31.root = file37;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.manifestFile;
        java.io.File file42 = explodedArchive40.manifestFile;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive40.getManifestFile(file43);
        java.util.Iterator<java.io.File> fileItor45 = fileEntryIterator31.listFiles(file44);
        fileEntryIterator26.root = file44;
        explodedArchive20.manifestFile = file44;
        fileEntryIterator0.root = file44;
        java.io.File file49 = fileEntryIterator0.poll();
        java.io.File file50 = fileEntryIterator0.root;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry51 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "exploded archive" + "'", str24, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor45);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file50.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test4455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4455");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator39 = explodedArchive0.spliterator();
        java.io.File file40 = explodedArchive0.manifestFile;
        boolean boolean41 = explodedArchive0.recursive;
        java.util.jar.Manifest manifest42 = null;
        explodedArchive0.manifest = manifest42;
        java.util.jar.Manifest manifest44 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest45 = null;
        explodedArchive0.manifest = manifest45;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(manifest44);
    }

    @Test
    public void test4456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4456");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.net.URI uRI5 = uRL3.toURI();
        java.lang.String str6 = uRL3.getRef();
        int int7 = uRL3.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler9 = null;
        java.net.URL uRL10 = new java.net.URL(uRL3, "", uRLStreamHandler9);
        java.lang.String str11 = uRL10.getPath();
        java.lang.String str12 = uRL10.toExternalForm();
        java.net.URL uRL14 = new java.net.URL(uRL10, "file://exploded archive:0");
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(uRI5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertEquals(uRL10.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str11, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file://exploded archive:0");
    }

    @Test
    public void test4457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4457");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.lang.String str9 = uRL3.getPath();
        java.lang.String str10 = uRL3.toExternalForm();
        java.lang.String str11 = uRL3.toExternalForm();
        java.lang.String str12 = uRL3.getRef();
        java.lang.String str13 = uRL3.getPath();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream14 = uRL3.openStream();
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str10, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str11, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str13, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4458");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.io.File file4 = fileEntryIterator0.poll();
        fileEntryIterator0.recursive = true;
        boolean boolean7 = fileEntryIterator0.recursive;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator0.stack;
        java.io.File file9 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        fileEntryIterator10.recursive = true;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator10.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator20.thenComparing(fileComparator23);
        fileEntryIterator15.entryComparator = fileComparator20;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        java.util.Comparator<java.io.File> fileComparator29 = fileComparator20.thenComparing(fileComparator28);
        fileEntryIterator10.entryComparator = fileComparator29;
        fileEntryIterator10.recursive = true;
        fileEntryIterator10.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator10.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean37 = explodedArchive36.recursive;
        boolean boolean38 = explodedArchive36.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file40 = explodedArchive39.manifestFile;
        java.io.File file41 = explodedArchive39.manifestFile;
        java.io.File file42 = null;
        java.io.File file43 = explodedArchive39.getManifestFile(file42);
        explodedArchive36.root = file43;
        fileEntryIterator10.root = file43;
        boolean boolean46 = fileEntryIterator10.recursive;
        java.io.File file47 = fileEntryIterator10.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        fileEntryIterator48.recursive = true;
        java.io.File file52 = fileEntryIterator48.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator48.entryComparator;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator48.stack;
        fileEntryIterator10.stack = fileItorQueue55;
        fileEntryIterator0.stack = fileItorQueue55;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file43.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue55);
    }

    @Test
    public void test4459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4459");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        fileEntry0.name = "file";
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.manifestFile;
        java.io.File file9 = explodedArchive7.manifestFile;
        java.io.File file10 = null;
        java.io.File file11 = explodedArchive7.getManifestFile(file10);
        boolean boolean12 = explodedArchive7.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        fileEntryIterator13.recursive = true;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator18.stack;
        java.util.Comparator<java.io.File> fileComparator20 = fileEntryIterator18.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue22 = fileEntryIterator21.stack;
        java.util.Comparator<java.io.File> fileComparator23 = fileEntryIterator21.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator24.stack;
        java.util.Comparator<java.io.File> fileComparator26 = fileEntryIterator24.entryComparator;
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator23.thenComparing(fileComparator26);
        fileEntryIterator18.entryComparator = fileComparator23;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.util.Comparator<java.io.File> fileComparator32 = fileComparator23.thenComparing(fileComparator31);
        fileEntryIterator13.entryComparator = fileComparator32;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file35 = explodedArchive34.manifestFile;
        java.io.File file36 = explodedArchive34.manifestFile;
        java.io.File file37 = null;
        java.io.File file38 = explodedArchive34.getManifestFile(file37);
        fileEntryIterator13.root = file38;
        explodedArchive7.root = file38;
        explodedArchive7.recursive = false;
        java.util.jar.Manifest manifest43 = explodedArchive7.manifest;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator44 = explodedArchive7.spliterator();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator45 = explodedArchive7.spliterator();
        java.io.File file46 = explodedArchive7.root;
        fileEntry0.file = file46;
        boolean boolean48 = fileEntry0.isDirectory();
        boolean boolean49 = fileEntry0.isDirectory();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file38.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertNotNull(entrySpliterator44);
        org.junit.Assert.assertNotNull(entrySpliterator45);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test4460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4460");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator1 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean2 = fileEntryIterator1.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean4 = explodedArchive3.recursive;
        java.io.File file5 = explodedArchive3.manifestFile;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive3.manifest = manifest6;
        java.io.File file8 = explodedArchive3.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator9 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator9.stack;
        java.util.Comparator<java.io.File> fileComparator11 = fileEntryIterator9.entryComparator;
        java.io.File file12 = fileEntryIterator9.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.manifestFile;
        java.io.File file15 = explodedArchive13.manifestFile;
        java.io.File file16 = null;
        java.io.File file17 = explodedArchive13.getManifestFile(file16);
        fileEntryIterator9.current = file17;
        explodedArchive3.root = file17;
        fileEntryIterator1.root = file17;
        explodedArchive0.root = file17;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator22 = explodedArchive0.spliterator();
        java.io.File file23 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str25 = fileEntry24.name;
        java.io.File file26 = fileEntry24.file;
        fileEntry24.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        boolean boolean31 = fileEntryIterator29.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        boolean boolean37 = explodedArchive32.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        fileEntryIterator38.recursive = true;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator38.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator49 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator49.stack;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator49.entryComparator;
        java.util.Comparator<java.io.File> fileComparator52 = fileComparator48.thenComparing(fileComparator51);
        fileEntryIterator43.entryComparator = fileComparator48;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator48.thenComparing(fileComparator56);
        fileEntryIterator38.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.manifestFile;
        java.io.File file61 = explodedArchive59.manifestFile;
        java.io.File file62 = null;
        java.io.File file63 = explodedArchive59.getManifestFile(file62);
        fileEntryIterator38.root = file63;
        explodedArchive32.root = file63;
        java.util.Iterator<java.io.File> fileItor66 = fileEntryIterator29.listFiles(file63);
        fileEntry24.file = file63;
        explodedArchive0.root = file63;
        java.net.URL uRL69 = explodedArchive0.getUrl();
        java.lang.String str70 = uRL69.getUserInfo();
        java.lang.String str71 = uRL69.getHost();
        java.net.URL uRL73 = new java.net.URL(uRL69, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        java.lang.String str74 = uRL73.getRef();
        int int75 = uRL73.getDefaultPort();
        java.lang.String str76 = uRL73.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler78 = null;
        java.net.URL uRL79 = new java.net.URL(uRL73, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!", uRLStreamHandler78);
        java.lang.String str80 = uRL79.getFile();
        java.lang.String str81 = uRL79.getQuery();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(file17);
        org.junit.Assert.assertEquals(file17.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file17.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator22);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file23.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file63.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor66);
        org.junit.Assert.assertNotNull(uRL69);
// flaky:         org.junit.Assert.assertEquals(uRL69.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertEquals(uRL73.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertEquals(uRL79.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!" + "'", str80, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertNull(str81);
    }

    @Test
    public void test4461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4461");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.lang.String str2 = fileEntry0.name;
        java.io.File file3 = fileEntry0.file;
        java.io.File file4 = fileEntry0.file;
        java.lang.String str5 = fileEntry0.name;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file7 = fileEntryIterator6.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        java.util.Comparator<java.io.File> fileComparator17 = fileComparator13.thenComparing(fileComparator16);
        fileEntryIterator8.entryComparator = fileComparator13;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator13.thenComparing(fileComparator21);
        fileEntryIterator6.entryComparator = fileComparator22;
        java.io.File file24 = fileEntryIterator6.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator25 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean26 = fileEntryIterator25.recursive;
        boolean boolean27 = fileEntryIterator25.recursive;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator25.entryComparator;
        java.io.File file29 = fileEntryIterator25.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file31 = fileEntryIterator30.current;
        java.io.File file32 = fileEntryIterator30.poll();
        java.io.File file33 = fileEntryIterator30.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        java.util.Comparator<java.io.File> fileComparator36 = fileEntryIterator34.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue41 = fileEntryIterator40.stack;
        java.util.Comparator<java.io.File> fileComparator42 = fileEntryIterator40.entryComparator;
        java.util.Comparator<java.io.File> fileComparator43 = fileComparator39.thenComparing(fileComparator42);
        fileEntryIterator34.entryComparator = fileComparator39;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator46 = fileComparator39.thenComparing((java.util.Comparator<java.io.File>) entryComparator45);
        fileEntryIterator30.entryComparator = entryComparator45;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        fileEntryIterator48.recursive = true;
        java.util.Comparator<java.io.File> fileComparator52 = fileEntryIterator48.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.util.Comparator<java.io.File> fileComparator55 = fileEntryIterator53.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        java.util.Comparator<java.io.File> fileComparator62 = fileComparator58.thenComparing(fileComparator61);
        fileEntryIterator53.entryComparator = fileComparator58;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        java.util.Comparator<java.io.File> fileComparator66 = fileEntryIterator64.entryComparator;
        java.util.Comparator<java.io.File> fileComparator67 = fileComparator58.thenComparing(fileComparator66);
        fileEntryIterator48.entryComparator = fileComparator67;
        java.util.Comparator<java.io.File> fileComparator69 = entryComparator45.thenComparing(fileComparator67);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file71 = explodedArchive70.manifestFile;
        java.io.File file72 = explodedArchive70.manifestFile;
        java.io.File file73 = null;
        java.io.File file74 = explodedArchive70.getManifestFile(file73);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator75 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean76 = fileEntryIterator75.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean78 = explodedArchive77.recursive;
        java.io.File file79 = explodedArchive77.manifestFile;
        java.util.jar.Manifest manifest80 = null;
        explodedArchive77.manifest = manifest80;
        java.io.File file82 = explodedArchive77.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator83 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue84 = fileEntryIterator83.stack;
        java.util.Comparator<java.io.File> fileComparator85 = fileEntryIterator83.entryComparator;
        java.io.File file86 = fileEntryIterator83.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive87 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file88 = explodedArchive87.manifestFile;
        java.io.File file89 = explodedArchive87.manifestFile;
        java.io.File file90 = null;
        java.io.File file91 = explodedArchive87.getManifestFile(file90);
        fileEntryIterator83.current = file91;
        explodedArchive77.root = file91;
        fileEntryIterator75.root = file91;
        int int95 = entryComparator45.compare(file74, file91);
        java.util.Iterator<java.io.File> fileItor96 = fileEntryIterator25.listFiles(file91);
        fileEntryIterator6.root = file91;
        fileEntry0.file = file91;
        java.lang.String str99 = fileEntry0.name;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileItorQueue41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNotNull(fileComparator55);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file74.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertNotNull(fileItorQueue84);
        org.junit.Assert.assertNotNull(fileComparator85);
        org.junit.Assert.assertNull(file86);
        org.junit.Assert.assertNull(file88);
        org.junit.Assert.assertNull(file89);
        org.junit.Assert.assertNotNull(file91);
        org.junit.Assert.assertEquals(file91.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file91.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
        org.junit.Assert.assertNotNull(fileItor96);
        org.junit.Assert.assertNull(str99);
    }

    @Test
    public void test4462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4462");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URLConnection uRLConnection7 = uRL3.openConnection();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.getQuery();
        java.lang.String str13 = uRL11.getRef();
        java.lang.String str14 = uRL11.getFile();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(uRLConnection7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str14, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4463");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean1 = fileEntryIterator0.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator2 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue3 = fileEntryIterator2.stack;
        fileEntryIterator0.stack = fileItorQueue3;
        java.io.File file5 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file7 = fileEntryIterator6.current;
        java.io.File file8 = fileEntryIterator6.poll();
        java.io.File file9 = fileEntryIterator6.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue10 = fileEntryIterator6.stack;
        fileEntryIterator0.stack = fileItorQueue10;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator18.thenComparing(fileComparator21);
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator15.thenComparing(fileComparator21);
        java.util.Comparator<java.io.File> fileComparator24 = fileComparator21.reversed();
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator21.reversed();
        java.util.Comparator<java.io.File> fileComparator26 = fileComparator25.reversed();
        java.util.Comparator<java.io.File> fileComparator27 = fileComparator12.thenComparing(fileComparator26);
        java.util.Comparator<java.io.File> fileComparator28 = fileComparator26.reversed();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(fileItorQueue3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(fileItorQueue10);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileComparator26);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNotNull(fileComparator28);
    }

    @Test
    public void test4464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4464");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.current;
        java.util.Comparator<java.io.File> fileComparator3 = fileEntryIterator0.entryComparator;
        java.io.File file4 = fileEntryIterator0.current;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry5 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileComparator3);
        org.junit.Assert.assertNull(file4);
    }

    @Test
    public void test4465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4465");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator16 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator15);
        fileEntryIterator0.entryComparator = entryComparator15;
        java.io.File file18 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator20 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean21 = fileEntryIterator20.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean23 = explodedArchive22.recursive;
        java.io.File file24 = explodedArchive22.manifestFile;
        java.util.jar.Manifest manifest25 = null;
        explodedArchive22.manifest = manifest25;
        java.io.File file27 = explodedArchive22.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        java.util.Comparator<java.io.File> fileComparator30 = fileEntryIterator28.entryComparator;
        java.io.File file31 = fileEntryIterator28.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.manifestFile;
        java.io.File file34 = explodedArchive32.manifestFile;
        java.io.File file35 = null;
        java.io.File file36 = explodedArchive32.getManifestFile(file35);
        fileEntryIterator28.current = file36;
        explodedArchive22.root = file36;
        fileEntryIterator20.root = file36;
        explodedArchive19.root = file36;
        fileEntryIterator0.current = file36;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        boolean boolean44 = fileEntryIterator42.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator45 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean46 = fileEntryIterator45.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue48 = fileEntryIterator47.stack;
        fileEntryIterator45.stack = fileItorQueue48;
        fileEntryIterator42.stack = fileItorQueue48;
        boolean boolean51 = fileEntryIterator42.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file53 = fileEntryIterator52.current;
        java.io.File file54 = fileEntryIterator52.poll();
        java.io.File file55 = fileEntryIterator52.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        java.util.Comparator<java.io.File> fileComparator58 = fileEntryIterator56.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator62.entryComparator;
        java.util.Comparator<java.io.File> fileComparator65 = fileComparator61.thenComparing(fileComparator64);
        fileEntryIterator56.entryComparator = fileComparator61;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator68 = fileComparator61.thenComparing((java.util.Comparator<java.io.File>) entryComparator67);
        fileEntryIterator52.entryComparator = entryComparator67;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator70 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue71 = fileEntryIterator70.stack;
        fileEntryIterator70.recursive = true;
        java.util.Comparator<java.io.File> fileComparator74 = fileEntryIterator70.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator75 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue76 = fileEntryIterator75.stack;
        java.util.Comparator<java.io.File> fileComparator77 = fileEntryIterator75.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator78 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue79 = fileEntryIterator78.stack;
        java.util.Comparator<java.io.File> fileComparator80 = fileEntryIterator78.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator81 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue82 = fileEntryIterator81.stack;
        java.util.Comparator<java.io.File> fileComparator83 = fileEntryIterator81.entryComparator;
        java.util.Comparator<java.io.File> fileComparator84 = fileComparator80.thenComparing(fileComparator83);
        fileEntryIterator75.entryComparator = fileComparator80;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator86 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue87 = fileEntryIterator86.stack;
        java.util.Comparator<java.io.File> fileComparator88 = fileEntryIterator86.entryComparator;
        java.util.Comparator<java.io.File> fileComparator89 = fileComparator80.thenComparing(fileComparator88);
        fileEntryIterator70.entryComparator = fileComparator89;
        java.util.Comparator<java.io.File> fileComparator91 = entryComparator67.thenComparing(fileComparator89);
        java.util.Comparator<java.io.File> fileComparator92 = fileComparator89.reversed();
        java.util.Comparator<java.io.File> fileComparator93 = fileComparator92.reversed();
        fileEntryIterator42.entryComparator = fileComparator92;
        fileEntryIterator0.entryComparator = fileComparator92;
        java.io.File file96 = fileEntryIterator0.current;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file36.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(fileItorQueue48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator58);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileItorQueue71);
        org.junit.Assert.assertNotNull(fileComparator74);
        org.junit.Assert.assertNotNull(fileItorQueue76);
        org.junit.Assert.assertNotNull(fileComparator77);
        org.junit.Assert.assertNotNull(fileItorQueue79);
        org.junit.Assert.assertNotNull(fileComparator80);
        org.junit.Assert.assertNotNull(fileItorQueue82);
        org.junit.Assert.assertNotNull(fileComparator83);
        org.junit.Assert.assertNotNull(fileComparator84);
        org.junit.Assert.assertNotNull(fileItorQueue87);
        org.junit.Assert.assertNotNull(fileComparator88);
        org.junit.Assert.assertNotNull(fileComparator89);
        org.junit.Assert.assertNotNull(fileComparator91);
        org.junit.Assert.assertNotNull(fileComparator92);
        org.junit.Assert.assertNotNull(fileComparator93);
        org.junit.Assert.assertNotNull(file96);
        org.junit.Assert.assertEquals(file96.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file96.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test4466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4466");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        int int13 = uRL11.getDefaultPort();
        java.lang.String str14 = uRL11.getUserInfo();
        java.lang.String str15 = uRL11.getRef();
        java.lang.String str16 = uRL11.getPath();
        java.lang.String str17 = uRL11.getProtocol();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str16, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "file" + "'", str17, "file");
    }

    @Test
    public void test4467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4467");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        boolean boolean41 = explodedArchive0.recursive;
        java.io.File file42 = null;
        explodedArchive0.manifestFile = file42;
        java.io.File file44 = explodedArchive0.root;
        java.util.jar.Manifest manifest45 = null;
        explodedArchive0.manifest = manifest45;
        java.util.jar.Manifest manifest47 = null;
        explodedArchive0.manifest = manifest47;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test4468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4468");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = fileEntryIterator0.poll();
        java.io.File file3 = fileEntryIterator0.poll();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator0.stack;
        java.io.File file5 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.io.File file8 = fileEntryIterator6.current;
        java.io.File file9 = fileEntryIterator6.current;
        fileEntryIterator6.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.manifestFile;
        java.io.File file14 = explodedArchive12.manifestFile;
        java.io.File file15 = null;
        java.io.File file16 = explodedArchive12.getManifestFile(file15);
        fileEntryIterator6.root = file16;
        fileEntryIterator0.root = file16;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean22 = fileEntryIterator21.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean24 = explodedArchive23.recursive;
        java.io.File file25 = explodedArchive23.manifestFile;
        java.util.jar.Manifest manifest26 = null;
        explodedArchive23.manifest = manifest26;
        java.io.File file28 = explodedArchive23.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        java.io.File file32 = fileEntryIterator29.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file34 = explodedArchive33.manifestFile;
        java.io.File file35 = explodedArchive33.manifestFile;
        java.io.File file36 = null;
        java.io.File file37 = explodedArchive33.getManifestFile(file36);
        fileEntryIterator29.current = file37;
        explodedArchive23.root = file37;
        fileEntryIterator21.root = file37;
        explodedArchive20.root = file37;
        fileEntryIterator0.root = file37;
        java.io.File file43 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean45 = fileEntryIterator44.hasNext();
        java.io.File file46 = fileEntryIterator44.root;
        boolean boolean47 = fileEntryIterator44.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        fileEntryIterator48.recursive = true;
        java.io.File file52 = fileEntryIterator48.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator53 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue54 = fileEntryIterator53.stack;
        java.io.File file55 = fileEntryIterator53.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator56 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue57 = fileEntryIterator56.stack;
        fileEntryIterator56.recursive = true;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator56.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator64 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue65 = fileEntryIterator64.stack;
        java.util.Comparator<java.io.File> fileComparator66 = fileEntryIterator64.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator67 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue68 = fileEntryIterator67.stack;
        java.util.Comparator<java.io.File> fileComparator69 = fileEntryIterator67.entryComparator;
        java.util.Comparator<java.io.File> fileComparator70 = fileComparator66.thenComparing(fileComparator69);
        fileEntryIterator61.entryComparator = fileComparator66;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator72 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue73 = fileEntryIterator72.stack;
        java.util.Comparator<java.io.File> fileComparator74 = fileEntryIterator72.entryComparator;
        java.util.Comparator<java.io.File> fileComparator75 = fileComparator66.thenComparing(fileComparator74);
        fileEntryIterator56.entryComparator = fileComparator75;
        fileEntryIterator56.recursive = true;
        fileEntryIterator56.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue81 = fileEntryIterator56.stack;
        fileEntryIterator53.stack = fileItorQueue81;
        fileEntryIterator48.stack = fileItorQueue81;
        fileEntryIterator44.stack = fileItorQueue81;
        fileEntryIterator0.stack = fileItorQueue81;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry86 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file16.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file37.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(fileItorQueue54);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNotNull(fileItorQueue57);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileItorQueue65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNotNull(fileItorQueue68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileItorQueue73);
        org.junit.Assert.assertNotNull(fileComparator74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNotNull(fileItorQueue81);
    }

    @Test
    public void test4469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4469");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "file", uRLStreamHandler13);
        int int15 = uRL14.getPort();
        java.net.URLStreamHandler uRLStreamHandler20 = null;
        java.net.URL uRL21 = new java.net.URL("file", "exploded archive", 0, "", uRLStreamHandler20);
        java.lang.String str22 = uRL21.getPath();
        java.lang.String str23 = uRL21.getHost();
        boolean boolean24 = uRL14.sameFile(uRL21);
        java.net.URL uRL25 = null;
        java.net.URLStreamHandler uRLStreamHandler27 = null;
        java.net.URL uRL28 = new java.net.URL(uRL25, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler27);
        java.lang.String str29 = uRL28.getHost();
        int int30 = uRL28.getPort();
        java.net.URLStreamHandler uRLStreamHandler32 = null;
        java.net.URL uRL33 = new java.net.URL(uRL28, "hi!", uRLStreamHandler32);
        java.lang.String str34 = uRL28.toExternalForm();
        boolean boolean35 = uRL21.sameFile(uRL28);
        java.lang.String str36 = uRL28.toExternalForm();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals(uRL21.toString(), "file://exploded archive:0");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "exploded archive" + "'", str23, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals(uRL28.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertEquals(uRL33.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str34, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str36, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4470");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        int int5 = uRL3.getPort();
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        int int11 = uRL9.getPort();
        java.net.URL uRL12 = null;
        java.net.URLStreamHandler uRLStreamHandler14 = null;
        java.net.URL uRL15 = new java.net.URL(uRL12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler14);
        java.lang.String str16 = uRL15.getHost();
        java.lang.String str17 = uRL15.getAuthority();
        java.lang.String str18 = uRL15.getQuery();
        int int19 = uRL15.getDefaultPort();
        boolean boolean20 = uRL9.sameFile(uRL15);
        boolean boolean21 = uRL3.sameFile(uRL9);
        java.lang.String str22 = uRL3.getRef();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test4471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4471");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        java.io.File file41 = explodedArchive0.root;
        explodedArchive0.recursive = true;
        java.lang.String str44 = explodedArchive0.toString();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator45 = explodedArchive0.spliterator();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive0.getNestedArchives(entryFilter46);
        java.io.File file48 = explodedArchive0.manifestFile;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str44, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator45);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertNull(file48);
    }

    @Test
    public void test4472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4472");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator3 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue4 = fileEntryIterator3.stack;
        java.util.Comparator<java.io.File> fileComparator5 = fileEntryIterator3.entryComparator;
        fileEntryIterator0.entryComparator = fileComparator5;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.manifestFile;
        java.io.File file9 = explodedArchive7.manifestFile;
        java.io.File file10 = null;
        java.io.File file11 = explodedArchive7.getManifestFile(file10);
        fileEntryIterator0.root = file10;
        java.io.File file13 = fileEntryIterator0.current;
        boolean boolean14 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.io.File file17 = fileEntryIterator15.current;
        boolean boolean18 = fileEntryIterator15.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue19 = fileEntryIterator15.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean21 = explodedArchive20.recursive;
        boolean boolean22 = explodedArchive20.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.manifestFile;
        java.io.File file25 = explodedArchive23.manifestFile;
        java.io.File file26 = null;
        java.io.File file27 = explodedArchive23.getManifestFile(file26);
        explodedArchive20.root = file27;
        fileEntryIterator15.root = file27;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        java.util.Comparator<java.io.File> fileComparator39 = fileComparator35.thenComparing(fileComparator38);
        fileEntryIterator30.entryComparator = fileComparator35;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator41 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator41.stack;
        java.util.Comparator<java.io.File> fileComparator43 = fileEntryIterator41.entryComparator;
        java.util.Comparator<java.io.File> fileComparator44 = fileComparator35.thenComparing(fileComparator43);
        fileEntryIterator15.entryComparator = fileComparator44;
        java.util.Comparator<java.io.File> fileComparator46 = fileEntryIterator15.entryComparator;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator15.stack;
        fileEntryIterator0.stack = fileItorQueue47;
        boolean boolean49 = fileEntryIterator0.recursive;
        boolean boolean50 = fileEntryIterator0.recursive;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(fileItorQueue4);
        org.junit.Assert.assertNotNull(fileComparator5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file11.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(fileItorQueue19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file27.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test4473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4473");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file1 = fileEntry0.getFile();
        java.io.File file2 = fileEntry0.file;
        java.io.File file3 = null;
        fileEntry0.file = file3;
        java.lang.String str5 = fileEntry0.getName();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        boolean boolean8 = fileEntryIterator6.hasNext();
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue14 = fileEntryIterator13.stack;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator13.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator15.thenComparing(fileComparator18);
        fileEntryIterator10.entryComparator = fileComparator15;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator22 = fileComparator15.thenComparing((java.util.Comparator<java.io.File>) entryComparator21);
        java.util.Comparator<java.io.File> fileComparator23 = fileComparator9.thenComparing((java.util.Comparator<java.io.File>) entryComparator21);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean25 = fileEntryIterator24.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean27 = explodedArchive26.recursive;
        java.io.File file28 = explodedArchive26.manifestFile;
        java.util.jar.Manifest manifest29 = null;
        explodedArchive26.manifest = manifest29;
        java.io.File file31 = explodedArchive26.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.io.File file35 = fileEntryIterator32.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file37 = explodedArchive36.manifestFile;
        java.io.File file38 = explodedArchive36.manifestFile;
        java.io.File file39 = null;
        java.io.File file40 = explodedArchive36.getManifestFile(file39);
        fileEntryIterator32.current = file40;
        explodedArchive26.root = file40;
        fileEntryIterator24.root = file40;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.manifestFile;
        java.io.File file46 = explodedArchive44.manifestFile;
        java.io.File file47 = null;
        java.io.File file48 = explodedArchive44.getManifestFile(file47);
        boolean boolean49 = explodedArchive44.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        fileEntryIterator50.recursive = true;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator50.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator61 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue62 = fileEntryIterator61.stack;
        java.util.Comparator<java.io.File> fileComparator63 = fileEntryIterator61.entryComparator;
        java.util.Comparator<java.io.File> fileComparator64 = fileComparator60.thenComparing(fileComparator63);
        fileEntryIterator55.entryComparator = fileComparator60;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator66 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue67 = fileEntryIterator66.stack;
        java.util.Comparator<java.io.File> fileComparator68 = fileEntryIterator66.entryComparator;
        java.util.Comparator<java.io.File> fileComparator69 = fileComparator60.thenComparing(fileComparator68);
        fileEntryIterator50.entryComparator = fileComparator69;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file72 = explodedArchive71.manifestFile;
        java.io.File file73 = explodedArchive71.manifestFile;
        java.io.File file74 = null;
        java.io.File file75 = explodedArchive71.getManifestFile(file74);
        fileEntryIterator50.root = file75;
        explodedArchive44.root = file75;
        int int78 = entryComparator21.compare(file40, file75);
        fileEntry0.file = file75;
        fileEntry0.name = "exploded archive";
        fileEntry0.name = "file://exploded archive";
        fileEntry0.name = "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive";
        fileEntry0.name = "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive";
        fileEntry0.name = "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF";
        java.io.File file90 = fileEntry0.getFile();
        boolean boolean91 = fileEntry0.isDirectory();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileItorQueue14);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator22);
        org.junit.Assert.assertNotNull(fileComparator23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file40.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file48.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileItorQueue62);
        org.junit.Assert.assertNotNull(fileComparator63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue67);
        org.junit.Assert.assertNotNull(fileComparator68);
        org.junit.Assert.assertNotNull(fileComparator69);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file75.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(file90);
        org.junit.Assert.assertEquals(file90.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file90.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test4474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4474");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.io.File file9 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        fileEntryIterator6.current = file14;
        explodedArchive0.root = file14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file18 = fileEntry17.getFile();
        java.io.File file19 = fileEntry17.file;
        fileEntry17.name = "";
        java.lang.String str22 = fileEntry17.name;
        java.io.File file23 = fileEntry17.file;
        java.io.File file24 = fileEntry17.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.manifestFile;
        java.io.File file27 = explodedArchive25.manifestFile;
        java.io.File file28 = null;
        java.io.File file29 = explodedArchive25.getManifestFile(file28);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file31 = fileEntry30.getFile();
        java.lang.String str32 = fileEntry30.name;
        java.io.File file33 = fileEntry30.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator34 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue35 = fileEntryIterator34.stack;
        boolean boolean36 = fileEntryIterator34.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file38 = explodedArchive37.manifestFile;
        java.io.File file39 = explodedArchive37.manifestFile;
        java.io.File file40 = null;
        java.io.File file41 = explodedArchive37.getManifestFile(file40);
        boolean boolean42 = explodedArchive37.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        fileEntryIterator43.recursive = true;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator43.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        java.util.Comparator<java.io.File> fileComparator57 = fileComparator53.thenComparing(fileComparator56);
        fileEntryIterator48.entryComparator = fileComparator53;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator59 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue60 = fileEntryIterator59.stack;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator59.entryComparator;
        java.util.Comparator<java.io.File> fileComparator62 = fileComparator53.thenComparing(fileComparator61);
        fileEntryIterator43.entryComparator = fileComparator62;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file65 = explodedArchive64.manifestFile;
        java.io.File file66 = explodedArchive64.manifestFile;
        java.io.File file67 = null;
        java.io.File file68 = explodedArchive64.getManifestFile(file67);
        fileEntryIterator43.root = file68;
        explodedArchive37.root = file68;
        java.util.Iterator<java.io.File> fileItor71 = fileEntryIterator34.listFiles(file68);
        fileEntry30.file = file68;
        explodedArchive25.manifestFile = file68;
        fileEntry17.file = file68;
        explodedArchive0.root = file68;
        java.net.URL uRL76 = explodedArchive0.getUrl();
        java.lang.String str77 = uRL76.getQuery();
        java.net.URLStreamHandler uRLStreamHandler79 = null;
        java.net.URL uRL80 = new java.net.URL(uRL76, "exploded archive:0", uRLStreamHandler79);
        java.lang.String str81 = uRL80.toString();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(fileItorQueue35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file41.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileComparator62);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNull(file66);
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file68.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor71);
        org.junit.Assert.assertNotNull(uRL76);
// flaky:         org.junit.Assert.assertEquals(uRL76.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str77);
// flaky:         org.junit.Assert.assertEquals(uRL80.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive:0");
// flaky:         org.junit.Assert.assertEquals("'" + str81 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive:0" + "'", str81, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive:0");
    }

    @Test
    public void test4475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4475");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        boolean boolean3 = fileEntryIterator0.hasNext();
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        boolean boolean5 = fileEntryIterator0.hasNext();
        java.io.File file6 = fileEntryIterator0.poll();
        java.io.File file7 = fileEntryIterator0.current;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator0.entryComparator;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(fileComparator8);
    }

    @Test
    public void test4476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4476");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.io.File file4 = fileEntryIterator0.poll();
        boolean boolean5 = fileEntryIterator0.hasNext();
        java.io.File file6 = fileEntryIterator0.current;
        boolean boolean7 = fileEntryIterator0.hasNext();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test4477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4477");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.toExternalForm();
        java.lang.String str13 = uRL11.getUserInfo();
        java.lang.String str14 = uRL11.getProtocol();
        int int15 = uRL11.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler20 = null;
        java.net.URL uRL21 = new java.net.URL("file", "exploded archive", 0, "", uRLStreamHandler20);
        boolean boolean22 = uRL11.sameFile(uRL21);
        java.lang.String str23 = uRL11.getProtocol();
        java.net.URL uRL24 = null;
        java.net.URLStreamHandler uRLStreamHandler26 = null;
        java.net.URL uRL27 = new java.net.URL(uRL24, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler26);
        java.lang.String str28 = uRL27.getHost();
        int int29 = uRL27.getPort();
        java.net.URL uRL30 = null;
        java.net.URLStreamHandler uRLStreamHandler32 = null;
        java.net.URL uRL33 = new java.net.URL(uRL30, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler32);
        java.lang.String str34 = uRL33.getHost();
        java.lang.String str35 = uRL33.getAuthority();
        java.lang.String str36 = uRL33.getQuery();
        int int37 = uRL33.getDefaultPort();
        boolean boolean38 = uRL27.sameFile(uRL33);
        java.lang.String str39 = uRL33.getFile();
        boolean boolean40 = uRL11.sameFile(uRL33);
        java.net.URL uRL41 = null;
        java.net.URLStreamHandler uRLStreamHandler43 = null;
        java.net.URL uRL44 = new java.net.URL(uRL41, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler43);
        java.lang.String str45 = uRL44.getHost();
        java.lang.String str46 = uRL44.getAuthority();
        java.lang.String str47 = uRL44.getQuery();
        int int48 = uRL44.getDefaultPort();
        java.lang.String str49 = uRL44.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler51 = null;
        java.net.URL uRL52 = new java.net.URL(uRL44, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler51);
        java.net.URL uRL54 = new java.net.URL(uRL44, "file://exploded archive");
        java.lang.String str55 = uRL54.getProtocol();
        java.lang.String str56 = uRL54.getHost();
        java.lang.String str57 = uRL54.getFile();
        boolean boolean58 = uRL33.sameFile(uRL54);
        java.lang.String str59 = uRL54.getRef();
        java.lang.String str60 = uRL54.getPath();
        java.lang.String str61 = uRL54.getFile();
        int int62 = uRL54.getPort();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "file" + "'", str14, "file");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals(uRL21.toString(), "file://exploded archive:0");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "file" + "'", str23, "file");
        org.junit.Assert.assertEquals(uRL27.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals(uRL33.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str39, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals(uRL44.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals(uRL52.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL54.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "file" + "'", str55, "file");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "exploded archive" + "'", str56, "exploded archive");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
    }

    @Test
    public void test4478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4478");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        int int8 = uRL3.getPort();
        java.lang.String str9 = uRL3.getRef();
        java.net.URL uRL11 = new java.net.URL(uRL3, "hi!");
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "", uRLStreamHandler13);
        java.lang.String str15 = uRL11.getProtocol();
        java.lang.String str16 = uRL11.getRef();
        java.lang.String str17 = uRL11.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "file" + "'", str15, "file");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!" + "'", str17, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test4479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4479");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        java.net.URL uRL5 = new java.net.URL("file", "exploded archive", (int) (byte) -1, "", uRLStreamHandler4);
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler16);
        java.lang.String str18 = uRL17.toExternalForm();
        java.lang.String str19 = uRL17.getUserInfo();
        java.lang.String str20 = uRL17.getProtocol();
        java.net.URLConnection uRLConnection21 = uRL17.openConnection();
        java.net.URL uRL23 = new java.net.URL(uRL17, "file://exploded archive");
        java.lang.String str24 = uRL17.getRef();
        java.lang.String str25 = uRL17.getFile();
        java.lang.String str26 = uRL17.getRef();
        boolean boolean27 = uRL5.sameFile(uRL17);
        java.lang.String str28 = uRL17.toExternalForm();
        int int29 = uRL17.getDefaultPort();
        org.junit.Assert.assertEquals(uRL5.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str18, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "file" + "'", str20, "file");
        org.junit.Assert.assertNotNull(uRLConnection21);
        org.junit.Assert.assertEquals(uRL23.toString(), "file://exploded archive");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str25, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str28, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
    }

    @Test
    public void test4480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4480");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.recursive;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        java.util.Comparator<java.io.File> fileComparator8 = fileEntryIterator6.entryComparator;
        java.io.File file9 = fileEntryIterator6.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.manifestFile;
        java.io.File file12 = explodedArchive10.manifestFile;
        java.io.File file13 = null;
        java.io.File file14 = explodedArchive10.getManifestFile(file13);
        fileEntryIterator6.current = file14;
        explodedArchive0.root = file14;
        java.util.jar.Manifest manifest17 = explodedArchive0.manifest;
        java.lang.String str18 = explodedArchive0.toString();
        java.lang.String str19 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive0.getNestedArchives(entryFilter20);
        boolean boolean22 = explodedArchive0.recursive;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file14.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest17);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str18, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str19, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test4481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4481");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file1 = fileEntryIterator0.current;
        java.io.File file2 = null;
        fileEntryIterator0.current = file2;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean5 = explodedArchive4.recursive;
        java.io.File file6 = explodedArchive4.manifestFile;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive4.manifest = manifest7;
        java.io.File file9 = explodedArchive4.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.io.File file13 = fileEntryIterator10.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.manifestFile;
        java.io.File file16 = explodedArchive14.manifestFile;
        java.io.File file17 = null;
        java.io.File file18 = explodedArchive14.getManifestFile(file17);
        fileEntryIterator10.current = file18;
        explodedArchive4.root = file18;
        fileEntryIterator0.root = file18;
        fileEntryIterator0.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file25 = fileEntryIterator24.current;
        boolean boolean26 = fileEntryIterator24.hasNext();
        java.util.Comparator<java.io.File> fileComparator27 = fileEntryIterator24.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file29 = fileEntryIterator28.current;
        java.io.File file30 = null;
        fileEntryIterator28.current = file30;
        java.io.File file32 = fileEntryIterator28.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file34 = fileEntry33.getFile();
        java.lang.String str35 = fileEntry33.name;
        java.io.File file36 = fileEntry33.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        boolean boolean39 = fileEntryIterator37.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.manifestFile;
        java.io.File file42 = explodedArchive40.manifestFile;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive40.getManifestFile(file43);
        boolean boolean45 = explodedArchive40.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        fileEntryIterator46.recursive = true;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator46.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator51 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue52 = fileEntryIterator51.stack;
        java.util.Comparator<java.io.File> fileComparator53 = fileEntryIterator51.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator54 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue55 = fileEntryIterator54.stack;
        java.util.Comparator<java.io.File> fileComparator56 = fileEntryIterator54.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        java.util.Comparator<java.io.File> fileComparator59 = fileEntryIterator57.entryComparator;
        java.util.Comparator<java.io.File> fileComparator60 = fileComparator56.thenComparing(fileComparator59);
        fileEntryIterator51.entryComparator = fileComparator56;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator62.entryComparator;
        java.util.Comparator<java.io.File> fileComparator65 = fileComparator56.thenComparing(fileComparator64);
        fileEntryIterator46.entryComparator = fileComparator65;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file68 = explodedArchive67.manifestFile;
        java.io.File file69 = explodedArchive67.manifestFile;
        java.io.File file70 = null;
        java.io.File file71 = explodedArchive67.getManifestFile(file70);
        fileEntryIterator46.root = file71;
        explodedArchive40.root = file71;
        java.util.Iterator<java.io.File> fileItor74 = fileEntryIterator37.listFiles(file71);
        fileEntry33.file = file71;
        fileEntryIterator28.current = file71;
        java.util.Iterator<java.io.File> fileItor77 = fileEntryIterator24.listFiles(file71);
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue78 = fileEntryIterator24.stack;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue79 = fileEntryIterator24.stack;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator80 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue81 = fileEntryIterator80.stack;
        boolean boolean82 = fileEntryIterator80.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator83 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean84 = fileEntryIterator83.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator85 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue86 = fileEntryIterator85.stack;
        fileEntryIterator83.stack = fileItorQueue86;
        fileEntryIterator80.stack = fileItorQueue86;
        fileEntryIterator24.stack = fileItorQueue86;
        fileEntryIterator0.stack = fileItorQueue86;
        boolean boolean91 = fileEntryIterator0.recursive;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry92 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file18.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(fileComparator27);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNotNull(fileItorQueue52);
        org.junit.Assert.assertNotNull(fileComparator53);
        org.junit.Assert.assertNotNull(fileItorQueue55);
        org.junit.Assert.assertNotNull(fileComparator56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file71.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor74);
        org.junit.Assert.assertNotNull(fileItor77);
        org.junit.Assert.assertNotNull(fileItorQueue78);
        org.junit.Assert.assertNotNull(fileItorQueue79);
        org.junit.Assert.assertNotNull(fileItorQueue81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(fileItorQueue86);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test4482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4482");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.manifestFile;
        java.io.File file9 = explodedArchive7.manifestFile;
        explodedArchive7.recursive = true;
        java.util.jar.Manifest manifest12 = null;
        explodedArchive7.manifest = manifest12;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str15 = fileEntry14.name;
        java.io.File file16 = fileEntry14.file;
        fileEntry14.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        boolean boolean21 = fileEntryIterator19.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file23 = explodedArchive22.manifestFile;
        java.io.File file24 = explodedArchive22.manifestFile;
        java.io.File file25 = null;
        java.io.File file26 = explodedArchive22.getManifestFile(file25);
        boolean boolean27 = explodedArchive22.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator28 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue29 = fileEntryIterator28.stack;
        fileEntryIterator28.recursive = true;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator28.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator39.entryComparator;
        java.util.Comparator<java.io.File> fileComparator42 = fileComparator38.thenComparing(fileComparator41);
        fileEntryIterator33.entryComparator = fileComparator38;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator44 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue45 = fileEntryIterator44.stack;
        java.util.Comparator<java.io.File> fileComparator46 = fileEntryIterator44.entryComparator;
        java.util.Comparator<java.io.File> fileComparator47 = fileComparator38.thenComparing(fileComparator46);
        fileEntryIterator28.entryComparator = fileComparator47;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file50 = explodedArchive49.manifestFile;
        java.io.File file51 = explodedArchive49.manifestFile;
        java.io.File file52 = null;
        java.io.File file53 = explodedArchive49.getManifestFile(file52);
        fileEntryIterator28.root = file53;
        explodedArchive22.root = file53;
        java.util.Iterator<java.io.File> fileItor56 = fileEntryIterator19.listFiles(file53);
        fileEntry14.file = file53;
        explodedArchive7.manifestFile = file53;
        boolean boolean59 = uRL3.equals((java.lang.Object) explodedArchive7);
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file26.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(fileItorQueue29);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue45);
        org.junit.Assert.assertNotNull(fileComparator46);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file53.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test4483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4483");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.toExternalForm();
        java.net.URL uRL8 = new java.net.URL(uRL3, "file://exploded archive");
        java.lang.String str9 = uRL3.getUserInfo();
        java.lang.String str10 = uRL3.getUserInfo();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL8.toString(), "file://exploded archive");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test4484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4484");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getProtocol();
        java.net.URL uRL6 = new java.net.URL(uRL3, "file");
        java.lang.String str7 = uRL6.getUserInfo();
        java.net.URLStreamHandler uRLStreamHandler9 = null;
        java.net.URL uRL10 = new java.net.URL(uRL6, "file://exploded archive", uRLStreamHandler9);
        java.lang.String str11 = uRL6.getFile();
        java.net.URL uRL12 = null;
        java.net.URLStreamHandler uRLStreamHandler14 = null;
        java.net.URL uRL15 = new java.net.URL(uRL12, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler14);
        java.lang.String str16 = uRL15.getHost();
        java.lang.String str17 = uRL15.getAuthority();
        java.lang.String str18 = uRL15.getQuery();
        int int19 = uRL15.getDefaultPort();
        java.lang.String str20 = uRL15.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler22 = null;
        java.net.URL uRL23 = new java.net.URL(uRL15, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler22);
        java.lang.String str24 = uRL23.toExternalForm();
        java.lang.String str25 = uRL23.getUserInfo();
        java.lang.String str26 = uRL23.getProtocol();
        java.net.URLConnection uRLConnection27 = uRL23.openConnection();
        java.net.URL uRL29 = new java.net.URL(uRL23, "file://exploded archive");
        java.lang.String str30 = uRL29.getPath();
        java.net.URL uRL32 = new java.net.URL(uRL29, "exploded archive");
        java.lang.String str33 = uRL32.getRef();
        java.lang.Class<?> wildcardClass34 = uRL32.getClass();
        java.net.URL uRL35 = null;
        java.net.URLStreamHandler uRLStreamHandler37 = null;
        java.net.URL uRL38 = new java.net.URL(uRL35, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler37);
        java.lang.String str39 = uRL38.getHost();
        java.net.URI uRI40 = uRL38.toURI();
        java.lang.String str41 = uRL38.toExternalForm();
        java.net.URLStreamHandler uRLStreamHandler43 = null;
        java.net.URL uRL44 = new java.net.URL(uRL38, "file", uRLStreamHandler43);
        java.lang.String str45 = uRL38.getFile();
        int int46 = uRL38.getPort();
        java.lang.String str47 = uRL38.toExternalForm();
        java.net.URL uRL48 = null;
        java.net.URLStreamHandler uRLStreamHandler50 = null;
        java.net.URL uRL51 = new java.net.URL(uRL48, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler50);
        java.lang.String str52 = uRL51.getHost();
        java.lang.String str53 = uRL51.getAuthority();
        java.lang.String str54 = uRL51.getQuery();
        int int55 = uRL51.getDefaultPort();
        java.lang.String str56 = uRL51.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler58 = null;
        java.net.URL uRL59 = new java.net.URL(uRL51, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler58);
        java.net.URLStreamHandler uRLStreamHandler61 = null;
        java.net.URL uRL62 = new java.net.URL(uRL51, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler61);
        java.lang.String str63 = uRL62.getQuery();
        boolean boolean64 = uRL38.sameFile(uRL62);
        java.lang.Class<?> wildcardClass65 = uRL62.getClass();
        java.lang.Class[] classArray66 = new java.lang.Class[] { wildcardClass34, wildcardClass65 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj67 = uRL6.getContent(classArray66);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "file" + "'", str4, "file");
        org.junit.Assert.assertEquals(uRL6.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals(uRL10.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file" + "'", str11, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals(uRL15.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals(uRL23.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str24, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "file" + "'", str26, "file");
        org.junit.Assert.assertNotNull(uRLConnection27);
        org.junit.Assert.assertEquals(uRL29.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals(uRL32.toString(), "file://exploded archive/exploded archive");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertEquals(uRL38.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(uRI40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str41, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL44.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/file");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str45, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str47, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL51.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertEquals(uRL59.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL62.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(classArray66);
    }

    @Test
    public void test4485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4485");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getFile();
        int int8 = uRL3.getPort();
        java.lang.String str9 = uRL3.getRef();
        java.net.URL uRL11 = new java.net.URL(uRL3, "hi!");
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL11, "", uRLStreamHandler13);
        java.net.URL uRL16 = new java.net.URL(uRL14, "hi!");
        java.lang.String str17 = uRL14.toString();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str7, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL16.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!" + "'", str17, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
    }

    @Test
    public void test4486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4486");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        fileEntryIterator0.recursive = true;
        fileEntryIterator0.recursive = true;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue25 = fileEntryIterator0.stack;
        boolean boolean26 = fileEntryIterator0.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator0.stack;
        boolean boolean28 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.lang.String str30 = fileEntry29.getName();
        fileEntry29.name = "exploded archive";
        fileEntry29.name = "hi!";
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.manifestFile;
        java.io.File file37 = explodedArchive35.manifestFile;
        java.lang.String str38 = explodedArchive35.toString();
        java.lang.String str39 = explodedArchive35.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator40 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean41 = fileEntryIterator40.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean43 = explodedArchive42.recursive;
        java.io.File file44 = explodedArchive42.manifestFile;
        java.util.jar.Manifest manifest45 = null;
        explodedArchive42.manifest = manifest45;
        java.io.File file47 = explodedArchive42.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator48 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue49 = fileEntryIterator48.stack;
        java.util.Comparator<java.io.File> fileComparator50 = fileEntryIterator48.entryComparator;
        java.io.File file51 = fileEntryIterator48.poll();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.manifestFile;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.io.File file55 = null;
        java.io.File file56 = explodedArchive52.getManifestFile(file55);
        fileEntryIterator48.current = file56;
        explodedArchive42.root = file56;
        fileEntryIterator40.root = file56;
        java.io.File file60 = explodedArchive35.getManifestFile(file56);
        fileEntry29.file = file60;
        java.util.Iterator<java.io.File> fileItor62 = fileEntryIterator0.listFiles(file60);
        boolean boolean63 = fileEntryIterator0.hasNext();
        // The following exception was thrown during execution in test generation
        try {
            fileEntryIterator0.remove();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: remove");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileItorQueue25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "exploded archive" + "'", str38, "exploded archive");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "exploded archive" + "'", str39, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(fileItorQueue49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file60.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test4487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4487");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getAuthority();
        java.lang.String str7 = uRL3.getRef();
        java.net.URL uRL8 = null;
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL8, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.lang.String str12 = uRL11.getHost();
        java.lang.String str13 = uRL11.getAuthority();
        java.lang.String str14 = uRL11.getQuery();
        int int15 = uRL11.getDefaultPort();
        java.lang.String str16 = uRL11.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler18 = null;
        java.net.URL uRL19 = new java.net.URL(uRL11, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler18);
        java.lang.String str20 = uRL19.getFile();
        boolean boolean21 = uRL3.sameFile(uRL19);
        java.lang.String str22 = uRL19.getUserInfo();
        int int23 = uRL19.getDefaultPort();
        java.lang.String str24 = uRL19.getHost();
        java.net.URLStreamHandler uRLStreamHandler26 = null;
        java.net.URL uRL27 = new java.net.URL(uRL19, "exploded archive", uRLStreamHandler26);
        java.lang.String str28 = uRL27.getHost();
        java.lang.Class[] classArray29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj30 = uRL27.getContent(classArray29);
            org.junit.Assert.fail("Expected exception of type java.io.FileNotFoundException; message: /home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive (No such file or directory)");
        } catch (java.io.FileNotFoundException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals(uRL19.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str20, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals(uRL27.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/exploded archive");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
    }

    @Test
    public void test4488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4488");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator4 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator5 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator5.stack;
        java.util.Comparator<java.io.File> fileComparator7 = fileEntryIterator5.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator8 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue9 = fileEntryIterator8.stack;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator8.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        java.util.Comparator<java.io.File> fileComparator14 = fileComparator10.thenComparing(fileComparator13);
        fileEntryIterator5.entryComparator = fileComparator10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator10.thenComparing(fileComparator18);
        fileEntryIterator0.entryComparator = fileComparator19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator21 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file22 = fileEntryIterator21.current;
        java.io.File file23 = fileEntryIterator21.poll();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator24 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file25 = fileEntryIterator24.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator26 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue27 = fileEntryIterator26.stack;
        java.util.Comparator<java.io.File> fileComparator28 = fileEntryIterator26.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator29 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue30 = fileEntryIterator29.stack;
        java.util.Comparator<java.io.File> fileComparator31 = fileEntryIterator29.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator32 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue33 = fileEntryIterator32.stack;
        java.util.Comparator<java.io.File> fileComparator34 = fileEntryIterator32.entryComparator;
        java.util.Comparator<java.io.File> fileComparator35 = fileComparator31.thenComparing(fileComparator34);
        fileEntryIterator26.entryComparator = fileComparator31;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator37 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue38 = fileEntryIterator37.stack;
        java.util.Comparator<java.io.File> fileComparator39 = fileEntryIterator37.entryComparator;
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator31.thenComparing(fileComparator39);
        fileEntryIterator24.entryComparator = fileComparator40;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue42 = fileEntryIterator24.stack;
        fileEntryIterator21.stack = fileItorQueue42;
        fileEntryIterator0.stack = fileItorQueue42;
        java.util.Comparator<java.io.File> fileComparator45 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        boolean boolean47 = fileEntryIterator46.hasNext();
        fileEntryIterator46.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator50 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue51 = fileEntryIterator50.stack;
        fileEntryIterator50.recursive = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file55 = explodedArchive54.manifestFile;
        java.io.File file56 = explodedArchive54.manifestFile;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator57 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue58 = fileEntryIterator57.stack;
        fileEntryIterator57.recursive = true;
        java.util.Comparator<java.io.File> fileComparator61 = fileEntryIterator57.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator62 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue63 = fileEntryIterator62.stack;
        java.util.Comparator<java.io.File> fileComparator64 = fileEntryIterator62.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator65 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue66 = fileEntryIterator65.stack;
        java.util.Comparator<java.io.File> fileComparator67 = fileEntryIterator65.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator68 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue69 = fileEntryIterator68.stack;
        java.util.Comparator<java.io.File> fileComparator70 = fileEntryIterator68.entryComparator;
        java.util.Comparator<java.io.File> fileComparator71 = fileComparator67.thenComparing(fileComparator70);
        fileEntryIterator62.entryComparator = fileComparator67;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator73 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue74 = fileEntryIterator73.stack;
        java.util.Comparator<java.io.File> fileComparator75 = fileEntryIterator73.entryComparator;
        java.util.Comparator<java.io.File> fileComparator76 = fileComparator67.thenComparing(fileComparator75);
        fileEntryIterator57.entryComparator = fileComparator76;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file79 = explodedArchive78.manifestFile;
        java.io.File file80 = explodedArchive78.manifestFile;
        java.io.File file81 = null;
        java.io.File file82 = explodedArchive78.getManifestFile(file81);
        fileEntryIterator57.root = file82;
        explodedArchive54.manifestFile = file82;
        fileEntryIterator50.current = file82;
        java.io.File file86 = fileEntryIterator50.current;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue87 = fileEntryIterator50.stack;
        fileEntryIterator46.stack = fileItorQueue87;
        fileEntryIterator0.stack = fileItorQueue87;
        boolean boolean90 = fileEntryIterator0.recursive;
        boolean boolean91 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = false;
        boolean boolean94 = fileEntryIterator0.recursive;
        boolean boolean95 = fileEntryIterator0.hasNext();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNotNull(fileComparator4);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNotNull(fileComparator7);
        org.junit.Assert.assertNotNull(fileItorQueue9);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(fileItorQueue27);
        org.junit.Assert.assertNotNull(fileComparator28);
        org.junit.Assert.assertNotNull(fileItorQueue30);
        org.junit.Assert.assertNotNull(fileComparator31);
        org.junit.Assert.assertNotNull(fileItorQueue33);
        org.junit.Assert.assertNotNull(fileComparator34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue38);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileItorQueue42);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(fileItorQueue51);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(fileItorQueue58);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileItorQueue63);
        org.junit.Assert.assertNotNull(fileComparator64);
        org.junit.Assert.assertNotNull(fileItorQueue66);
        org.junit.Assert.assertNotNull(fileComparator67);
        org.junit.Assert.assertNotNull(fileItorQueue69);
        org.junit.Assert.assertNotNull(fileComparator70);
        org.junit.Assert.assertNotNull(fileComparator71);
        org.junit.Assert.assertNotNull(fileItorQueue74);
        org.junit.Assert.assertNotNull(fileComparator75);
        org.junit.Assert.assertNotNull(fileComparator76);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file82.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file86);
        org.junit.Assert.assertEquals(file86.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file86.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue87);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test4489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4489");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive0.getNestedArchives(entryFilter39);
        java.net.URL uRL41 = explodedArchive0.getUrl();
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator42 = explodedArchive0.spliterator();
        java.io.File file43 = explodedArchive0.manifestFile;
        java.util.jar.Manifest manifest44 = explodedArchive0.manifest;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(uRL41);
// flaky:         org.junit.Assert.assertEquals(uRL41.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(entrySpliterator42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNull(manifest44);
    }

    @Test
    public void test4490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4490");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        boolean boolean2 = fileEntryIterator0.hasNext();
        boolean boolean3 = fileEntryIterator0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue5 = fileEntryIterator4.stack;
        java.util.Comparator<java.io.File> fileComparator6 = fileEntryIterator4.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator7 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue8 = fileEntryIterator7.stack;
        java.util.Comparator<java.io.File> fileComparator9 = fileEntryIterator7.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator10 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue11 = fileEntryIterator10.stack;
        java.util.Comparator<java.io.File> fileComparator12 = fileEntryIterator10.entryComparator;
        java.util.Comparator<java.io.File> fileComparator13 = fileComparator9.thenComparing(fileComparator12);
        fileEntryIterator4.entryComparator = fileComparator9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        java.util.Comparator<java.io.File> fileComparator17 = fileEntryIterator15.entryComparator;
        java.util.Comparator<java.io.File> fileComparator18 = fileComparator9.thenComparing(fileComparator17);
        java.util.Comparator<java.io.File> fileComparator19 = fileComparator17.reversed();
        fileEntryIterator0.entryComparator = fileComparator17;
        java.io.File file21 = fileEntryIterator0.poll();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive.Entry entry22 = fileEntryIterator0.next();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: null");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(fileItorQueue5);
        org.junit.Assert.assertNotNull(fileComparator6);
        org.junit.Assert.assertNotNull(fileItorQueue8);
        org.junit.Assert.assertNotNull(fileComparator9);
        org.junit.Assert.assertNotNull(fileItorQueue11);
        org.junit.Assert.assertNotNull(fileComparator12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNotNull(fileComparator17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNull(file21);
    }

    @Test
    public void test4491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4491");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = explodedArchive0.manifest;
        java.util.Spliterator<org.springframework.boot.loader.archive.Archive.Entry> entrySpliterator37 = explodedArchive0.spliterator();
        java.net.URL uRL38 = explodedArchive0.getUrl();
        java.util.jar.Manifest manifest39 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest40 = explodedArchive0.manifest;
        explodedArchive0.recursive = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry43.name = "exploded archive";
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator46 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue47 = fileEntryIterator46.stack;
        java.io.File file48 = fileEntryIterator46.current;
        boolean boolean49 = fileEntryIterator46.hasNext();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue50 = fileEntryIterator46.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean52 = explodedArchive51.recursive;
        boolean boolean53 = explodedArchive51.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file55 = explodedArchive54.manifestFile;
        java.io.File file56 = explodedArchive54.manifestFile;
        java.io.File file57 = null;
        java.io.File file58 = explodedArchive54.getManifestFile(file57);
        explodedArchive51.root = file58;
        fileEntryIterator46.root = file58;
        fileEntry43.file = file58;
        java.io.File file62 = explodedArchive0.getManifestFile(file58);
        explodedArchive0.recursive = false;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNotNull(entrySpliterator37);
        org.junit.Assert.assertNotNull(uRL38);
// flaky:         org.junit.Assert.assertEquals(uRL38.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(manifest39);
        org.junit.Assert.assertNull(manifest40);
        org.junit.Assert.assertNotNull(fileItorQueue47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(fileItorQueue50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file58.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "META-INF/MANIFEST.MF/META-INF");
        org.junit.Assert.assertEquals(file62.toString(), "META-INF/MANIFEST.MF/META-INF/MANIFEST.MF");
    }

    @Test
    public void test4492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4492");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.manifestFile;
        java.io.File file2 = explodedArchive0.manifestFile;
        java.io.File file3 = null;
        java.io.File file4 = explodedArchive0.getManifestFile(file3);
        boolean boolean5 = explodedArchive0.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator6 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator6.stack;
        fileEntryIterator6.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator6.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        java.util.Comparator<java.io.File> fileComparator13 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator14 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue15 = fileEntryIterator14.stack;
        java.util.Comparator<java.io.File> fileComparator16 = fileEntryIterator14.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator17 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue18 = fileEntryIterator17.stack;
        java.util.Comparator<java.io.File> fileComparator19 = fileEntryIterator17.entryComparator;
        java.util.Comparator<java.io.File> fileComparator20 = fileComparator16.thenComparing(fileComparator19);
        fileEntryIterator11.entryComparator = fileComparator16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator16.thenComparing(fileComparator24);
        fileEntryIterator6.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.manifestFile;
        java.io.File file29 = explodedArchive27.manifestFile;
        java.io.File file30 = null;
        java.io.File file31 = explodedArchive27.getManifestFile(file30);
        fileEntryIterator6.root = file31;
        explodedArchive0.root = file31;
        explodedArchive0.recursive = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive0.manifest = manifest36;
        java.lang.String str38 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean40 = explodedArchive39.recursive;
        boolean boolean41 = explodedArchive39.recursive;
        java.io.File file42 = explodedArchive39.root;
        java.io.File file43 = null;
        java.io.File file44 = explodedArchive39.getManifestFile(file43);
        explodedArchive0.manifestFile = file43;
        java.io.File file46 = explodedArchive0.root;
        explodedArchive0.recursive = false;
        // The following exception was thrown during execution in test generation
        try {
            java.util.jar.Manifest manifest49 = explodedArchive0.getManifest();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file4.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator13);
        org.junit.Assert.assertNotNull(fileItorQueue15);
        org.junit.Assert.assertNotNull(fileComparator16);
        org.junit.Assert.assertNotNull(fileItorQueue18);
        org.junit.Assert.assertNotNull(fileComparator19);
        org.junit.Assert.assertNotNull(fileComparator20);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file31.toString(), "META-INF/MANIFEST.MF");
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str38, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file44.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file46.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test4493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4493");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("file://exploded archive:0", "hi!", "file");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: file://exploded archive:0");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4494");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        fileEntryIterator0.recursive = true;
        java.io.File file4 = fileEntryIterator0.poll();
        fileEntryIterator0.recursive = false;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue7 = fileEntryIterator0.stack;
        java.io.File file8 = fileEntryIterator0.root;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(fileItorQueue7);
        org.junit.Assert.assertNull(file8);
    }

    @Test
    public void test4495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4495");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("hi!", "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test4496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4496");
        java.net.URL uRL0 = null;
        java.net.URLStreamHandler uRLStreamHandler2 = null;
        java.net.URL uRL3 = new java.net.URL(uRL0, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler2);
        java.lang.String str4 = uRL3.getHost();
        java.lang.String str5 = uRL3.getAuthority();
        java.lang.String str6 = uRL3.getQuery();
        int int7 = uRL3.getDefaultPort();
        java.lang.String str8 = uRL3.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler10 = null;
        java.net.URL uRL11 = new java.net.URL(uRL3, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler10);
        java.net.URLStreamHandler uRLStreamHandler13 = null;
        java.net.URL uRL14 = new java.net.URL(uRL3, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler13);
        java.lang.String str15 = uRL14.getQuery();
        java.lang.String str16 = uRL14.getUserInfo();
        java.lang.String str17 = uRL14.getProtocol();
        java.lang.String str18 = uRL14.getQuery();
        java.lang.String str19 = uRL14.getAuthority();
        org.junit.Assert.assertEquals(uRL3.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals(uRL11.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals(uRL14.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "file" + "'", str17, "file");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test4497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4497");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        fileEntry0.name = "exploded archive";
        java.lang.String str3 = fileEntry0.name;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator4 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file5 = fileEntryIterator4.current;
        boolean boolean6 = fileEntryIterator4.hasNext();
        fileEntryIterator4.recursive = true;
        boolean boolean9 = fileEntryIterator4.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str11 = explodedArchive10.toString();
        boolean boolean12 = explodedArchive10.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator13 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.io.File file14 = fileEntryIterator13.current;
        java.io.File file15 = null;
        fileEntryIterator13.current = file15;
        java.io.File file17 = fileEntryIterator13.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry18 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntry();
        java.io.File file19 = fileEntry18.getFile();
        java.lang.String str20 = fileEntry18.name;
        java.io.File file21 = fileEntry18.file;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        boolean boolean24 = fileEntryIterator22.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.manifestFile;
        java.io.File file27 = explodedArchive25.manifestFile;
        java.io.File file28 = null;
        java.io.File file29 = explodedArchive25.getManifestFile(file28);
        boolean boolean30 = explodedArchive25.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator31 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue32 = fileEntryIterator31.stack;
        fileEntryIterator31.recursive = true;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator31.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator36 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue37 = fileEntryIterator36.stack;
        java.util.Comparator<java.io.File> fileComparator38 = fileEntryIterator36.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator39 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue40 = fileEntryIterator39.stack;
        java.util.Comparator<java.io.File> fileComparator41 = fileEntryIterator39.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator42 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue43 = fileEntryIterator42.stack;
        java.util.Comparator<java.io.File> fileComparator44 = fileEntryIterator42.entryComparator;
        java.util.Comparator<java.io.File> fileComparator45 = fileComparator41.thenComparing(fileComparator44);
        fileEntryIterator36.entryComparator = fileComparator41;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue48 = fileEntryIterator47.stack;
        java.util.Comparator<java.io.File> fileComparator49 = fileEntryIterator47.entryComparator;
        java.util.Comparator<java.io.File> fileComparator50 = fileComparator41.thenComparing(fileComparator49);
        fileEntryIterator31.entryComparator = fileComparator50;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.manifestFile;
        java.io.File file54 = explodedArchive52.manifestFile;
        java.io.File file55 = null;
        java.io.File file56 = explodedArchive52.getManifestFile(file55);
        fileEntryIterator31.root = file56;
        explodedArchive25.root = file56;
        java.util.Iterator<java.io.File> fileItor59 = fileEntryIterator22.listFiles(file56);
        fileEntry18.file = file56;
        fileEntryIterator13.current = file56;
        explodedArchive10.root = file56;
        java.util.Iterator<java.io.File> fileItor63 = fileEntryIterator4.listFiles(file56);
        fileEntry0.file = file56;
        java.io.File file65 = fileEntry0.file;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive(file65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid source folder META-INF/MANIFEST.MF");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "exploded archive" + "'", str3, "exploded archive");
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "exploded archive" + "'", str11, "exploded archive");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file29.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(fileItorQueue32);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileItorQueue37);
        org.junit.Assert.assertNotNull(fileComparator38);
        org.junit.Assert.assertNotNull(fileItorQueue40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileItorQueue43);
        org.junit.Assert.assertNotNull(fileComparator44);
        org.junit.Assert.assertNotNull(fileComparator45);
        org.junit.Assert.assertNotNull(fileItorQueue48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileComparator50);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(file56);
        org.junit.Assert.assertEquals(file56.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file56.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor59);
        org.junit.Assert.assertNotNull(fileItor63);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file65.toString(), "META-INF/MANIFEST.MF");
    }

    @Test
    public void test4498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4498");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.manifestFile;
        java.io.File file4 = explodedArchive2.manifestFile;
        java.io.File file5 = null;
        java.io.File file6 = explodedArchive2.getManifestFile(file5);
        fileEntryIterator0.current = file5;
        fileEntryIterator0.recursive = true;
        java.util.Comparator<java.io.File> fileComparator10 = fileEntryIterator0.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator11 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue12 = fileEntryIterator11.stack;
        fileEntryIterator11.recursive = true;
        java.util.Comparator<java.io.File> fileComparator15 = fileEntryIterator11.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator16 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue17 = fileEntryIterator16.stack;
        java.util.Comparator<java.io.File> fileComparator18 = fileEntryIterator16.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator19 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue20 = fileEntryIterator19.stack;
        java.util.Comparator<java.io.File> fileComparator21 = fileEntryIterator19.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator22 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue23 = fileEntryIterator22.stack;
        java.util.Comparator<java.io.File> fileComparator24 = fileEntryIterator22.entryComparator;
        java.util.Comparator<java.io.File> fileComparator25 = fileComparator21.thenComparing(fileComparator24);
        fileEntryIterator16.entryComparator = fileComparator21;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        java.util.Comparator<java.io.File> fileComparator30 = fileComparator21.thenComparing(fileComparator29);
        fileEntryIterator11.entryComparator = fileComparator30;
        fileEntryIterator11.recursive = true;
        fileEntryIterator11.recursive = true;
        boolean boolean36 = fileEntryIterator11.hasNext();
        java.io.File file37 = fileEntryIterator11.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue39 = fileEntryIterator38.stack;
        boolean boolean40 = fileEntryIterator38.hasNext();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file42 = explodedArchive41.manifestFile;
        java.io.File file43 = explodedArchive41.manifestFile;
        java.io.File file44 = null;
        java.io.File file45 = explodedArchive41.getManifestFile(file44);
        boolean boolean46 = explodedArchive41.recursive;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator47 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue48 = fileEntryIterator47.stack;
        fileEntryIterator47.recursive = true;
        java.util.Comparator<java.io.File> fileComparator51 = fileEntryIterator47.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator52 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue53 = fileEntryIterator52.stack;
        java.util.Comparator<java.io.File> fileComparator54 = fileEntryIterator52.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator55 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue56 = fileEntryIterator55.stack;
        java.util.Comparator<java.io.File> fileComparator57 = fileEntryIterator55.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator58 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue59 = fileEntryIterator58.stack;
        java.util.Comparator<java.io.File> fileComparator60 = fileEntryIterator58.entryComparator;
        java.util.Comparator<java.io.File> fileComparator61 = fileComparator57.thenComparing(fileComparator60);
        fileEntryIterator52.entryComparator = fileComparator57;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator63 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue64 = fileEntryIterator63.stack;
        java.util.Comparator<java.io.File> fileComparator65 = fileEntryIterator63.entryComparator;
        java.util.Comparator<java.io.File> fileComparator66 = fileComparator57.thenComparing(fileComparator65);
        fileEntryIterator47.entryComparator = fileComparator66;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file69 = explodedArchive68.manifestFile;
        java.io.File file70 = explodedArchive68.manifestFile;
        java.io.File file71 = null;
        java.io.File file72 = explodedArchive68.getManifestFile(file71);
        fileEntryIterator47.root = file72;
        explodedArchive41.root = file72;
        java.util.Iterator<java.io.File> fileItor75 = fileEntryIterator38.listFiles(file72);
        java.util.Iterator<java.io.File> fileItor76 = fileEntryIterator11.listFiles(file72);
        fileEntryIterator0.current = file72;
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file6.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileComparator10);
        org.junit.Assert.assertNotNull(fileItorQueue12);
        org.junit.Assert.assertNotNull(fileComparator15);
        org.junit.Assert.assertNotNull(fileItorQueue17);
        org.junit.Assert.assertNotNull(fileComparator18);
        org.junit.Assert.assertNotNull(fileItorQueue20);
        org.junit.Assert.assertNotNull(fileComparator21);
        org.junit.Assert.assertNotNull(fileItorQueue23);
        org.junit.Assert.assertNotNull(fileComparator24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileComparator30);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(fileItorQueue39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file45.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(fileItorQueue48);
        org.junit.Assert.assertNotNull(fileComparator51);
        org.junit.Assert.assertNotNull(fileItorQueue53);
        org.junit.Assert.assertNotNull(fileComparator54);
        org.junit.Assert.assertNotNull(fileItorQueue56);
        org.junit.Assert.assertNotNull(fileComparator57);
        org.junit.Assert.assertNotNull(fileItorQueue59);
        org.junit.Assert.assertNotNull(fileComparator60);
        org.junit.Assert.assertNotNull(fileComparator61);
        org.junit.Assert.assertNotNull(fileItorQueue64);
        org.junit.Assert.assertNotNull(fileComparator65);
        org.junit.Assert.assertNotNull(fileComparator66);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNotNull(file72);
        org.junit.Assert.assertEquals(file72.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file72.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItor75);
        org.junit.Assert.assertNotNull(fileItor76);
    }

    @Test
    public void test4499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4499");
        java.net.URLStreamHandler uRLStreamHandler4 = null;
        java.net.URL uRL5 = new java.net.URL("file", "exploded archive", (int) (byte) -1, "", uRLStreamHandler4);
        java.net.URL uRL6 = null;
        java.net.URLStreamHandler uRLStreamHandler8 = null;
        java.net.URL uRL9 = new java.net.URL(uRL6, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getAuthority();
        java.lang.String str12 = uRL9.getQuery();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL9, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler16);
        java.lang.String str18 = uRL17.toExternalForm();
        java.lang.String str19 = uRL17.getUserInfo();
        java.lang.String str20 = uRL17.getProtocol();
        java.net.URLConnection uRLConnection21 = uRL17.openConnection();
        java.net.URL uRL23 = new java.net.URL(uRL17, "file://exploded archive");
        java.lang.String str24 = uRL17.getRef();
        java.lang.String str25 = uRL17.getFile();
        java.lang.String str26 = uRL17.getRef();
        boolean boolean27 = uRL5.sameFile(uRL17);
        java.lang.String str28 = uRL17.getHost();
        java.net.URL uRL29 = null;
        java.net.URLStreamHandler uRLStreamHandler31 = null;
        java.net.URL uRL32 = new java.net.URL(uRL29, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler31);
        java.lang.String str33 = uRL32.getProtocol();
        java.lang.String str34 = uRL32.getUserInfo();
        java.net.URL uRL35 = null;
        java.net.URLStreamHandler uRLStreamHandler37 = null;
        java.net.URL uRL38 = new java.net.URL(uRL35, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler37);
        java.lang.String str39 = uRL38.getHost();
        java.lang.String str40 = uRL38.getAuthority();
        java.lang.String str41 = uRL38.getQuery();
        int int42 = uRL38.getDefaultPort();
        java.lang.String str43 = uRL38.getAuthority();
        java.net.URLStreamHandler uRLStreamHandler45 = null;
        java.net.URL uRL46 = new java.net.URL(uRL38, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler45);
        boolean boolean47 = uRL32.sameFile(uRL46);
        java.lang.String str48 = uRL32.getProtocol();
        java.net.URLStreamHandler uRLStreamHandler50 = null;
        java.net.URL uRL51 = new java.net.URL(uRL32, "hi!", uRLStreamHandler50);
        java.net.URL uRL52 = null;
        java.net.URLStreamHandler uRLStreamHandler54 = null;
        java.net.URL uRL55 = new java.net.URL(uRL52, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF", uRLStreamHandler54);
        java.lang.String str56 = uRL55.getProtocol();
        boolean boolean57 = uRL32.sameFile(uRL55);
        boolean boolean58 = uRL17.sameFile(uRL55);
        java.net.URLConnection uRLConnection59 = uRL55.openConnection();
        java.net.Proxy proxy60 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection61 = uRL55.openConnection(proxy60);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals(uRL5.toString(), "file://exploded archive");
        org.junit.Assert.assertEquals(uRL9.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals(uRL17.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str18, "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "file" + "'", str20, "file");
        org.junit.Assert.assertNotNull(uRLConnection21);
        org.junit.Assert.assertEquals(uRL23.toString(), "file://exploded archive");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF" + "'", str25, "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals(uRL32.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "file" + "'", str33, "file");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals(uRL38.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals(uRL46.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "file" + "'", str48, "file");
        org.junit.Assert.assertEquals(uRL51.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/hi!");
        org.junit.Assert.assertEquals(uRL55.toString(), "file:/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/spring-boot/af20dc6cc45c032573413c401f9f73aa75371744/randoop_5/META-INF/MANIFEST.MF");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "file" + "'", str56, "file");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(uRLConnection59);
    }

    @Test
    public void test4500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test4500");
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator0 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue1 = fileEntryIterator0.stack;
        java.io.File file2 = fileEntryIterator0.current;
        boolean boolean3 = fileEntryIterator0.hasNext();
        fileEntryIterator0.recursive = false;
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue6 = fileEntryIterator0.stack;
        java.io.File file7 = fileEntryIterator0.current;
        java.io.File file8 = null;
        fileEntryIterator0.root = file8;
        java.io.File file10 = fileEntryIterator0.root;
        java.io.File file11 = fileEntryIterator0.current;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator12 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue13 = fileEntryIterator12.stack;
        java.util.Comparator<java.io.File> fileComparator14 = fileEntryIterator12.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator15 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue16 = fileEntryIterator15.stack;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file18 = explodedArchive17.manifestFile;
        java.io.File file19 = explodedArchive17.manifestFile;
        java.io.File file20 = null;
        java.io.File file21 = explodedArchive17.getManifestFile(file20);
        fileEntryIterator15.current = file20;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator23 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue24 = fileEntryIterator23.stack;
        java.util.Comparator<java.io.File> fileComparator25 = fileEntryIterator23.entryComparator;
        fileEntryIterator15.entryComparator = fileComparator25;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator27 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue28 = fileEntryIterator27.stack;
        java.util.Comparator<java.io.File> fileComparator29 = fileEntryIterator27.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator30 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue31 = fileEntryIterator30.stack;
        java.util.Comparator<java.io.File> fileComparator32 = fileEntryIterator30.entryComparator;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator33 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue34 = fileEntryIterator33.stack;
        java.util.Comparator<java.io.File> fileComparator35 = fileEntryIterator33.entryComparator;
        java.util.Comparator<java.io.File> fileComparator36 = fileComparator32.thenComparing(fileComparator35);
        fileEntryIterator27.entryComparator = fileComparator32;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator entryComparator38 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator.EntryComparator();
        java.util.Comparator<java.io.File> fileComparator39 = fileComparator32.thenComparing((java.util.Comparator<java.io.File>) entryComparator38);
        java.util.Comparator<java.io.File> fileComparator40 = fileComparator25.thenComparing(fileComparator32);
        java.util.Comparator<java.io.File> fileComparator41 = fileComparator25.reversed();
        java.util.Comparator<java.io.File> fileComparator42 = fileComparator14.thenComparing(fileComparator25);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator fileEntryIterator43 = new org.springframework.boot.loader.archive.ExplodedArchive.FileEntryIterator();
        java.util.Deque<java.util.Iterator<java.io.File>> fileItorQueue44 = fileEntryIterator43.stack;
        fileEntryIterator43.recursive = true;
        java.util.Comparator<java.io.File> fileComparator47 = fileEntryIterator43.entryComparator;
        java.util.Comparator<java.io.File> fileComparator48 = fileEntryIterator43.entryComparator;
        java.util.Comparator<java.io.File> fileComparator49 = fileComparator14.thenComparing(fileComparator48);
        fileEntryIterator0.entryComparator = fileComparator49;
        java.util.Comparator<java.io.File> fileComparator51 = fileComparator49.reversed();
        org.junit.Assert.assertNotNull(fileItorQueue1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(fileItorQueue6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(fileItorQueue13);
        org.junit.Assert.assertNotNull(fileComparator14);
        org.junit.Assert.assertNotNull(fileItorQueue16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "META-INF");
        org.junit.Assert.assertEquals(file21.toString(), "META-INF/MANIFEST.MF");
        org.junit.Assert.assertNotNull(fileItorQueue24);
        org.junit.Assert.assertNotNull(fileComparator25);
        org.junit.Assert.assertNotNull(fileItorQueue28);
        org.junit.Assert.assertNotNull(fileComparator29);
        org.junit.Assert.assertNotNull(fileItorQueue31);
        org.junit.Assert.assertNotNull(fileComparator32);
        org.junit.Assert.assertNotNull(fileItorQueue34);
        org.junit.Assert.assertNotNull(fileComparator35);
        org.junit.Assert.assertNotNull(fileComparator36);
        org.junit.Assert.assertNotNull(fileComparator39);
        org.junit.Assert.assertNotNull(fileComparator40);
        org.junit.Assert.assertNotNull(fileComparator41);
        org.junit.Assert.assertNotNull(fileComparator42);
        org.junit.Assert.assertNotNull(fileItorQueue44);
        org.junit.Assert.assertNotNull(fileComparator47);
        org.junit.Assert.assertNotNull(fileComparator48);
        org.junit.Assert.assertNotNull(fileComparator49);
        org.junit.Assert.assertNotNull(fileComparator51);
    }
}
