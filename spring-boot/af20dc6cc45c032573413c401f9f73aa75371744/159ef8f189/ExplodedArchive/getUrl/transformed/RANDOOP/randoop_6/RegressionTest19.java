import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest19 {

    public static boolean debug = false;

    @Test
    public void test09501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09501");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        java.lang.String str25 = uRL22.getRef();
        java.lang.String str26 = uRL22.toExternalForm();
        boolean boolean27 = uRL9.sameFile(uRL22);
        java.lang.String str28 = uRL22.getUserInfo();
        java.lang.String str29 = uRL22.getHost();
        java.lang.String str30 = uRL22.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive32.getNestedArchives(entryFilter34);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive32.getNestedArchives(entryFilter36);
        java.lang.String str38 = explodedArchive32.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler39 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL40 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler39);
        java.lang.String str41 = uRL40.toExternalForm();
        java.io.File file46 = null;
        java.io.File file47 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file49 = explodedArchive48.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter50 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList51 = explodedArchive48.getNestedArchives(entryFilter50);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter52 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList53 = explodedArchive48.getNestedArchives(entryFilter52);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap54 = explodedArchive48.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive(file47, asciiBytesMap54);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap56 = explodedArchive55.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive(file46, asciiBytesMap56);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler58 = explodedArchive57.new FilteredURLStreamHandler();
        java.net.URL uRL59 = new java.net.URL("", "archive://:10archive", (int) (short) 100, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler58);
        java.lang.String str60 = uRL59.toExternalForm();
        boolean boolean61 = uRL40.sameFile(uRL59);
        java.lang.String str62 = uRL40.getRef();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection63 = uRL40.openConnection();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!://:100" + "'", str26, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!://:100/hi!" + "'", str41, "hi!://:100/hi!");
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(archiveList51);
        org.junit.Assert.assertNotNull(archiveList53);
        org.junit.Assert.assertNotNull(asciiBytesMap54);
        org.junit.Assert.assertNotNull(asciiBytesMap56);
        org.junit.Assert.assertEquals(uRL59.toString(), "://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "://[archive://:10archive]:100archive://:10archive" + "'", str60, "://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(str62);
    }

    @Test
    public void test09502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09502");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry12.getName();
        java.io.File file14 = null;
        fileEntry12.file = file14;
        java.io.File file16 = fileEntry12.file;
        java.io.File file17 = null;
        fileEntry12.file = file17;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes19 = fileEntry12.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes20 = fileEntry12.name;
        java.io.File file21 = fileEntry12.getFile();
        java.io.File file22 = fileEntry12.file;
        java.io.File file23 = null;
        fileEntry12.file = file23;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(asciiBytes13);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(asciiBytes19);
        org.junit.Assert.assertNull(asciiBytes20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
    }

    @Test
    public void test09503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09503");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        java.io.File file6 = fileEntry4.file;
        java.io.File file7 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry4.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = null;
        fileEntry4.name = asciiBytes9;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = fileEntry4.getName();
        java.io.File file12 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = null;
        fileEntry4.name = asciiBytes13;
        java.io.File file15 = fileEntry4.getFile();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(asciiBytes11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file15);
    }

    @Test
    public void test09504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09504");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.lang.String str20 = explodedArchive14.toString();
        java.util.jar.Manifest manifest21 = explodedArchive14.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive14.entries;
        java.util.jar.Manifest manifest23 = explodedArchive14.getManifest();
        java.io.File file24 = null;
        explodedArchive14.root = file24;
        boolean boolean26 = explodedArchive14.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive14.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI29 = uRL28.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "archive" + "'", str20, "archive");
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100");
    }

    @Test
    public void test09505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09505");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive0.new FileEntry();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest8 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest9 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest10 = null;
        explodedArchive0.manifest = manifest10;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive0.getNestedArchives(entryFilter12);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNotNull(archiveList13);
    }

    @Test
    public void test09506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09506");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL37.getUserInfo();
        java.lang.String str39 = uRL37.getQuery();
        java.lang.String str40 = uRL37.getProtocol();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
    }

    @Test
    public void test09507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09507");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("/archive:///archive:0hi!://:100://[/hi!://:100/archive]:100", "archive://:10archive://:100", "/hi!://:100/hi!://:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /archive:///archive:0hi!://:100://[/hi!://:100/archive]:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test09508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09508");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getProtocol();
        java.lang.String str14 = uRL9.getPath();
        java.lang.String str15 = uRL9.getAuthority();
        int int16 = uRL9.getDefaultPort();
        java.net.URL uRL18 = new java.net.URL(uRL9, "hi!://:100/://[archive://:10archive]:100archive://:10archive");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI19 = uRL18.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100/hi!://:100/://[archive://:10archive]:100archive://:10archive");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + ":100" + "'", str15, ":100");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals(uRL18.toString(), "hi!://:100/hi!://:100/://[archive://:10archive]:100archive://:10archive");
    }

    @Test
    public void test09509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09509");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getProtocol();
        java.lang.String str14 = uRL9.getPath();
        java.lang.String str15 = uRL9.getAuthority();
        java.lang.String str16 = uRL9.getRef();
        int int17 = uRL9.getDefaultPort();
        java.lang.String str18 = uRL9.getProtocol();
        java.lang.String str19 = uRL9.getFile();
        java.lang.String str20 = uRL9.getFile();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + ":100" + "'", str15, ":100");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test09510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09510");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("[hi!://[hi!://:100/hi!]:0archive://:10:100]:10", ":100://[hi!://:100/hi!]:100hi!://:100/archive", "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: [hi!://[hi!://:100/hi!]:0archive://:10:100]:10");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test09511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09511");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        java.util.jar.Manifest manifest15 = explodedArchive12.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL17 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler16);
        java.lang.String str18 = uRL17.getQuery();
        java.lang.String str19 = uRL17.getRef();
        int int20 = uRL17.getPort();
        java.lang.String str21 = uRL17.getProtocol();
        java.lang.String str22 = uRL17.getPath();
        java.lang.String str23 = uRL17.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str30 = explodedArchive29.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection31 = explodedArchive29.getEntries();
        java.util.jar.Manifest manifest32 = explodedArchive29.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.lang.String str35 = uRL34.getFile();
        int int36 = uRL34.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str43 = explodedArchive42.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection44 = explodedArchive42.getEntries();
        java.util.jar.Manifest manifest45 = explodedArchive42.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler46 = explodedArchive42.new FilteredURLStreamHandler();
        java.net.URL uRL47 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler46);
        java.lang.String str48 = uRL47.getQuery();
        java.lang.String str49 = uRL47.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str56 = explodedArchive55.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection57 = explodedArchive55.getEntries();
        java.util.jar.Manifest manifest58 = explodedArchive55.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler59 = explodedArchive55.new FilteredURLStreamHandler();
        java.net.URL uRL60 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.net.URL uRL61 = new java.net.URL(uRL47, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.net.URL uRL62 = new java.net.URL(uRL34, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.net.URL uRL63 = new java.net.URL(uRL17, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.net.URL uRL64 = new java.net.URL(":100", "hi!://:100/hi!", (int) (byte) 0, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.net.URL uRL65 = new java.net.URL("[://[archive://:10archive]:100archive://:10archive]:100", "hi!://:100/hi!:1", (int) (byte) 0, "/hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.lang.String str66 = uRL65.getPath();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + ":100" + "'", str23, ":100");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "archive" + "'", str30, "archive");
        org.junit.Assert.assertNotNull(entryCollection31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertEquals(uRL34.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "archive" + "'", str43, "archive");
        org.junit.Assert.assertNotNull(entryCollection44);
        org.junit.Assert.assertNull(manifest45);
        org.junit.Assert.assertEquals(uRL47.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "archive" + "'", str56, "archive");
        org.junit.Assert.assertNotNull(entryCollection57);
        org.junit.Assert.assertNull(manifest58);
        org.junit.Assert.assertEquals(uRL60.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL64.toString(), ":100://[hi!://:100/hi!]:0archive://:10archive");
        org.junit.Assert.assertEquals(uRL65.toString(), "[://[archive://:10archive]:100archive://:10archive]:100://[hi!://:100/hi!:1]:0/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "/hi!://:100/hi!://:100" + "'", str66, "/hi!://:100/hi!://:100");
    }

    @Test
    public void test09512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09512");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        java.lang.String str25 = uRL22.getRef();
        java.lang.String str26 = uRL22.toExternalForm();
        boolean boolean27 = uRL9.sameFile(uRL22);
        int int28 = uRL22.getDefaultPort();
        int int29 = uRL22.getDefaultPort();
        int int30 = uRL22.getDefaultPort();
        java.lang.String str31 = uRL22.getPath();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!://:100" + "'", str26, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
    }

    @Test
    public void test09513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09513");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str29 = explodedArchive28.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive28.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.net.URL uRL33 = new java.net.URL(uRL13, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str34 = uRL33.getQuery();
        java.lang.String str35 = uRL33.getQuery();
        java.io.File file41 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter44 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList45 = explodedArchive42.getNestedArchives(entryFilter44);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive42.getNestedArchives(entryFilter46);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap48 = explodedArchive42.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file41, asciiBytesMap48);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection50 = explodedArchive49.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter51 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList52 = explodedArchive49.getNestedArchives(entryFilter51);
        java.util.jar.Manifest manifest53 = null;
        explodedArchive49.manifest = manifest53;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler55 = explodedArchive49.new FilteredURLStreamHandler();
        java.net.URL uRL56 = new java.net.URL("hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", "[://[archive://:10archive]:100archive://:10archive]:100", (int) '#', "hi!://:100/:100", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.net.URL uRL57 = new java.net.URL(uRL33, ":10", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.net.URL uRL58 = new java.net.URL("hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://:100/hi!://:100]:100hi!://:100/hi!:1", "hi!://:100/hi!:1", 35, "hi!://:100/hi!://:100/hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100/:100");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(archiveList45);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertNotNull(asciiBytesMap48);
        org.junit.Assert.assertNotNull(entryCollection50);
        org.junit.Assert.assertNotNull(archiveList52);
        org.junit.Assert.assertEquals(uRL56.toString(), "hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[://[archive://:10archive]:100archive://:10archive]:100:35hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL57.toString(), "hi!://:100/:10");
        org.junit.Assert.assertEquals(uRL58.toString(), "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://:100/hi!://:100]:100hi!://:100/hi!:1://[hi!://:100/hi!:1]:35hi!://:100/hi!://:100/hi!://:100/hi!");
    }

    @Test
    public void test09514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09514");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str42 = uRL41.getProtocol();
        int int43 = uRL41.getDefaultPort();
        java.lang.String str44 = uRL41.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str50 = explodedArchive49.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection51 = explodedArchive49.getEntries();
        java.util.jar.Manifest manifest52 = explodedArchive49.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler53 = explodedArchive49.new FilteredURLStreamHandler();
        java.net.URL uRL54 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        java.lang.String str55 = uRL54.getPath();
        java.lang.String str56 = uRL54.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str63 = explodedArchive62.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection64 = explodedArchive62.getEntries();
        java.util.jar.Manifest manifest65 = explodedArchive62.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler66 = explodedArchive62.new FilteredURLStreamHandler();
        java.net.URL uRL67 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.net.URL uRL68 = new java.net.URL(uRL54, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.lang.String str69 = uRL68.getQuery();
        java.lang.String str70 = uRL68.toExternalForm();
        java.lang.String str71 = uRL68.getRef();
        java.lang.String str72 = uRL68.getRef();
        boolean boolean73 = uRL41.sameFile(uRL68);
        java.lang.String str74 = uRL41.getRef();
        int int75 = uRL41.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "archive" + "'", str50, "archive");
        org.junit.Assert.assertNotNull(entryCollection51);
        org.junit.Assert.assertNull(manifest52);
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "archive" + "'", str63, "archive");
        org.junit.Assert.assertNotNull(entryCollection64);
        org.junit.Assert.assertNull(manifest65);
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!://:100/hi!://:100" + "'", str70, "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
    }

    @Test
    public void test09515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09515");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str2 = explodedArchive1.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection3 = explodedArchive1.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter4 = null;
        org.springframework.boot.loader.archive.Archive archive5 = explodedArchive1.getFilteredArchive(entryRenameFilter4);
        java.lang.String str6 = explodedArchive1.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive7.getNestedArchives(entryFilter9);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive7.getNestedArchives(entryFilter11);
        explodedArchive7.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive7.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter17 = null;
        org.springframework.boot.loader.archive.Archive archive18 = explodedArchive7.getFilteredArchive(entryRenameFilter17);
        java.io.File file19 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive20.getNestedArchives(entryFilter22);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = null;
        explodedArchive20.entries = asciiBytesMap24;
        boolean boolean26 = explodedArchive20.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive20.new FileEntry();
        java.io.File file28 = null;
        java.io.File file29 = null;
        java.io.File file30 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive31.getNestedArchives(entryFilter33);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive31.getNestedArchives(entryFilter35);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap37 = explodedArchive31.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file30, asciiBytesMap37);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive38.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file29, asciiBytesMap39);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file28, asciiBytesMap39);
        explodedArchive20.entries = asciiBytesMap39;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file19, asciiBytesMap39);
        java.io.File file44 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file46 = explodedArchive45.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter47 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList48 = explodedArchive45.getNestedArchives(entryFilter47);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter49 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList50 = explodedArchive45.getNestedArchives(entryFilter49);
        java.lang.String str51 = explodedArchive45.toString();
        java.util.jar.Manifest manifest52 = explodedArchive45.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap53 = explodedArchive45.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file44, asciiBytesMap53);
        explodedArchive43.entries = asciiBytesMap53;
        explodedArchive7.entries = asciiBytesMap53;
        explodedArchive1.entries = asciiBytesMap53;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap53);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "archive" + "'", str2, "archive");
        org.junit.Assert.assertNotNull(entryCollection3);
        org.junit.Assert.assertNotNull(archive5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archive18);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertNotNull(asciiBytesMap37);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(archiveList48);
        org.junit.Assert.assertNotNull(archiveList50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "archive" + "'", str51, "archive");
        org.junit.Assert.assertNull(manifest52);
        org.junit.Assert.assertNotNull(asciiBytesMap53);
    }

    @Test
    public void test09516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09516");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = null;
        explodedArchive1.entries = asciiBytesMap5;
        java.io.File file7 = explodedArchive1.root;
        java.io.File file8 = explodedArchive1.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        explodedArchive1.entries = asciiBytesMap15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap15);
        java.io.File file18 = null;
        explodedArchive17.root = file18;
        explodedArchive17.filtered = true;
        explodedArchive17.filtered = true;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
    }

    @Test
    public void test09517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09517");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes6 = null;
        fileEntry4.name = asciiBytes6;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry4.getName();
        java.io.File file9 = null;
        fileEntry4.file = file9;
        java.io.File file11 = fileEntry4.file;
        java.io.File file12 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = null;
        fileEntry4.name = asciiBytes13;
        java.io.File file15 = fileEntry4.file;
        java.io.File file16 = null;
        fileEntry4.file = file16;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file15);
    }

    @Test
    public void test09518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09518");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        java.lang.String str25 = uRL22.getRef();
        java.lang.String str26 = uRL22.toExternalForm();
        boolean boolean27 = uRL9.sameFile(uRL22);
        java.lang.String str28 = uRL22.getUserInfo();
        java.lang.String str29 = uRL22.getHost();
        java.lang.String str30 = uRL22.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive32.getNestedArchives(entryFilter34);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive32.getNestedArchives(entryFilter36);
        java.lang.String str38 = explodedArchive32.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler39 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL40 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler39);
        java.lang.String str41 = uRL22.getHost();
        java.lang.String str42 = uRL22.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str53 = explodedArchive52.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection54 = explodedArchive52.getEntries();
        java.util.jar.Manifest manifest55 = explodedArchive52.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler56 = explodedArchive52.new FilteredURLStreamHandler();
        java.net.URL uRL57 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler56);
        java.lang.String str58 = uRL57.getQuery();
        java.lang.String str59 = uRL57.getHost();
        int int60 = uRL57.getPort();
        java.lang.String str61 = uRL57.getQuery();
        java.net.URL uRL63 = new java.net.URL(uRL57, "");
        java.io.File file65 = null;
        java.io.File file66 = null;
        java.io.File file67 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file69 = explodedArchive68.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter70 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList71 = explodedArchive68.getNestedArchives(entryFilter70);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter72 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList73 = explodedArchive68.getNestedArchives(entryFilter72);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap74 = explodedArchive68.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive(file67, asciiBytesMap74);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap76 = explodedArchive75.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive(file66, asciiBytesMap76);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive(file65, asciiBytesMap76);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler79 = explodedArchive78.new FilteredURLStreamHandler();
        java.net.URL uRL80 = new java.net.URL(uRL63, "", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        java.net.URL uRL81 = new java.net.URL("hi!", "hi!://:100/hi!", (int) (short) 0, "archive://:10:100", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        java.net.URL uRL82 = new java.net.URL(uRL22, "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        java.lang.String str83 = uRL82.getQuery();
        int int84 = uRL82.getDefaultPort();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI85 = uRL82.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!://:100" + "'", str26, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + ":100" + "'", str42, ":100");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "archive" + "'", str53, "archive");
        org.junit.Assert.assertNotNull(entryCollection54);
        org.junit.Assert.assertNull(manifest55);
        org.junit.Assert.assertEquals(uRL57.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNotNull(archiveList71);
        org.junit.Assert.assertNotNull(archiveList73);
        org.junit.Assert.assertNotNull(asciiBytesMap74);
        org.junit.Assert.assertNotNull(asciiBytesMap76);
        org.junit.Assert.assertEquals(uRL80.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL81.toString(), "hi!://[hi!://:100/hi!]:0archive://:10:100");
        org.junit.Assert.assertEquals(uRL82.toString(), "hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
    }

    @Test
    public void test09519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09519");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap4 = null;
        explodedArchive0.entries = asciiBytesMap4;
        boolean boolean6 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        java.io.File file8 = fileEntry7.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry7.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = fileEntry7.getName();
        java.io.File file11 = null;
        fileEntry7.file = file11;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(asciiBytes9);
        org.junit.Assert.assertNull(asciiBytes10);
    }

    @Test
    public void test09520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09520");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap4 = null;
        explodedArchive0.entries = asciiBytesMap4;
        boolean boolean6 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry7.name;
        java.io.File file9 = null;
        fileEntry7.file = file9;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = fileEntry7.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = fileEntry7.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = null;
        fileEntry7.name = asciiBytes13;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes15 = fileEntry7.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes16 = fileEntry7.getName();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(asciiBytes11);
        org.junit.Assert.assertNull(asciiBytes12);
        org.junit.Assert.assertNull(asciiBytes15);
        org.junit.Assert.assertNull(asciiBytes16);
    }

    @Test
    public void test09521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09521");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = null;
        explodedArchive1.entries = asciiBytesMap5;
        java.io.File file7 = explodedArchive1.root;
        java.io.File file8 = explodedArchive1.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        explodedArchive1.entries = asciiBytesMap15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap15);
        java.util.jar.Manifest manifest18 = null;
        explodedArchive17.manifest = manifest18;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry20 = explodedArchive17.new FileEntry();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive17.entries;
        java.io.File file22 = null;
        java.io.File file23 = null;
        java.io.File file24 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive25.getNestedArchives(entryFilter27);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive25.getNestedArchives(entryFilter29);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap31 = explodedArchive25.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file24, asciiBytesMap31);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap31);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive33.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap34);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive35.new FilteredURLStreamHandler();
        java.io.File file37 = explodedArchive35.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry38 = explodedArchive35.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes39 = fileEntry38.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes40 = fileEntry38.getName();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive41 = explodedArchive17.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNotNull(asciiBytesMap31);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(asciiBytes39);
        org.junit.Assert.assertNull(asciiBytes40);
    }

    @Test
    public void test09522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09522");
        java.net.URLConnection.setDefaultRequestProperty("hi!://[hi!://:100/hi!]:0archive://:10:100", "[hi!://:100/hi!:1]:52");
    }

    @Test
    public void test09523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09523");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive1.new FileEntry();
        java.lang.String str6 = explodedArchive1.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive1.new FileEntry();
        java.util.jar.Manifest manifest8 = null;
        explodedArchive1.manifest = manifest8;
        java.lang.String str10 = explodedArchive1.toString();
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive13.getNestedArchives(entryFilter20);
        java.io.File file22 = null;
        java.io.File file23 = null;
        java.io.File file24 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive25.getNestedArchives(entryFilter27);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive25.getNestedArchives(entryFilter29);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap31 = explodedArchive25.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file24, asciiBytesMap31);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap33 = explodedArchive32.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap33);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap33);
        explodedArchive13.entries = asciiBytesMap33;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap33);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive37.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap38);
        explodedArchive1.entries = asciiBytesMap38;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap38);
        java.util.jar.Manifest manifest42 = null;
        explodedArchive41.manifest = manifest42;
        java.lang.String str44 = explodedArchive41.toString();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "archive" + "'", str10, "archive");
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNotNull(asciiBytesMap31);
        org.junit.Assert.assertNotNull(asciiBytesMap33);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "archive" + "'", str44, "archive");
    }

    @Test
    public void test09524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09524");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive0.getFilteredArchive(entryRenameFilter5);
        java.io.File file7 = null;
        explodedArchive0.root = file7;
        java.util.jar.Manifest manifest9 = null;
        explodedArchive0.manifest = manifest9;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = null;
        explodedArchive0.entries = asciiBytesMap11;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive14.getNestedArchives(entryFilter21);
        java.io.File file23 = null;
        explodedArchive14.root = file23;
        java.io.File file25 = null;
        explodedArchive14.root = file25;
        java.util.jar.Manifest manifest27 = null;
        explodedArchive14.manifest = manifest27;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str30 = explodedArchive29.toString();
        java.util.jar.Manifest manifest31 = null;
        explodedArchive29.manifest = manifest31;
        java.io.File file33 = null;
        explodedArchive29.root = file33;
        java.util.jar.Manifest manifest35 = null;
        explodedArchive29.manifest = manifest35;
        boolean boolean37 = explodedArchive29.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive29.entries;
        explodedArchive14.entries = asciiBytesMap38;
        explodedArchive0.entries = asciiBytesMap38;
        java.io.File file41 = null;
        explodedArchive0.root = file41;
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "archive" + "'", str30, "archive");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
    }

    @Test
    public void test09525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09525");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        java.io.File file14 = null;
        explodedArchive11.root = file14;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection16 = explodedArchive11.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive11.getEntries();
        java.lang.String str18 = explodedArchive11.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = fileEntry19.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(entryCollection16);
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
    }

    @Test
    public void test09526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09526");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str42 = uRL41.getProtocol();
        int int43 = uRL41.getDefaultPort();
        java.lang.String str44 = uRL41.getHost();
        java.io.File file50 = null;
        java.io.File file51 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter54 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList55 = explodedArchive52.getNestedArchives(entryFilter54);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter56 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList57 = explodedArchive52.getNestedArchives(entryFilter56);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap58 = explodedArchive52.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive(file51, asciiBytesMap58);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap60 = explodedArchive59.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive(file50, asciiBytesMap60);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler62 = explodedArchive61.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive61.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter64 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList65 = explodedArchive61.getNestedArchives(entryFilter64);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler66 = explodedArchive61.new FilteredURLStreamHandler();
        java.net.URL uRL67 = new java.net.URL("archive://:10:100", "/archive:///archive:0hi!://:100", (int) (byte) 1, "/archive", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.net.URL uRL68 = new java.net.URL(uRL41, "hi!://:100/hi!://:100/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj69 = uRL68.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(archiveList55);
        org.junit.Assert.assertNotNull(archiveList57);
        org.junit.Assert.assertNotNull(asciiBytesMap58);
        org.junit.Assert.assertNotNull(asciiBytesMap60);
        org.junit.Assert.assertNotNull(archiveList65);
        org.junit.Assert.assertEquals(uRL67.toString(), "archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive");
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100/hi!://:100/hi!://:100/archive:///archive:0hi!://:100");
    }

    @Test
    public void test09527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09527");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive0.getFilteredArchive(entryRenameFilter5);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection7 = explodedArchive0.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection8 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest9 = explodedArchive0.getManifest();
        java.lang.String str10 = explodedArchive0.toString();
        java.io.File file11 = null;
        explodedArchive0.root = file11;
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertNotNull(entryCollection7);
        org.junit.Assert.assertNotNull(entryCollection8);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "archive" + "'", str10, "archive");
    }

    @Test
    public void test09528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09528");
        java.net.URLConnection.setDefaultRequestProperty("/hi!://:100/hi!://:100/hi!://:100/hi!://:100", "hi!:1");
    }

    @Test
    public void test09529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09529");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str3 = explodedArchive2.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection4 = explodedArchive2.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive2.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter6 = null;
        org.springframework.boot.loader.archive.Archive archive7 = explodedArchive2.getFilteredArchive(entryRenameFilter6);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        boolean boolean10 = explodedArchive8.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter11 = null;
        org.springframework.boot.loader.archive.Archive archive12 = explodedArchive8.getFilteredArchive(entryRenameFilter11);
        explodedArchive8.filtered = true;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection15 = explodedArchive8.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive8.entries;
        explodedArchive2.entries = asciiBytesMap16;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap16);
        boolean boolean19 = explodedArchive18.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive20.getNestedArchives(entryFilter22);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive20.getNestedArchives(entryFilter24);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive20.getNestedArchives(entryFilter27);
        java.io.File file29 = null;
        java.io.File file30 = null;
        java.io.File file31 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive32.getNestedArchives(entryFilter34);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive32.getNestedArchives(entryFilter36);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive32.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file31, asciiBytesMap38);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap40 = explodedArchive39.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file30, asciiBytesMap40);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file29, asciiBytesMap40);
        explodedArchive20.entries = asciiBytesMap40;
        explodedArchive18.entries = asciiBytesMap40;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap40);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter46 = null;
        org.springframework.boot.loader.archive.Archive archive47 = explodedArchive45.getFilteredArchive(entryRenameFilter46);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "archive" + "'", str3, "archive");
        org.junit.Assert.assertNotNull(entryCollection4);
        org.junit.Assert.assertNotNull(archive7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(archive12);
        org.junit.Assert.assertNotNull(entryCollection15);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertNotNull(asciiBytesMap40);
        org.junit.Assert.assertNotNull(archive47);
    }

    @Test
    public void test09530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09530");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        java.util.jar.Manifest manifest14 = explodedArchive11.getManifest();
        java.util.jar.Manifest manifest15 = explodedArchive11.manifest;
        java.io.File file16 = null;
        explodedArchive11.root = file16;
        java.io.File file18 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive19.getNestedArchives(entryFilter21);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive19.getNestedArchives(entryFilter23);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive26.entries;
        explodedArchive11.entries = asciiBytesMap27;
        java.io.File file29 = null;
        explodedArchive11.root = file29;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection31 = explodedArchive11.getEntries();
        java.util.jar.Manifest manifest32 = explodedArchive11.getManifest();
        explodedArchive11.filtered = false;
        boolean boolean35 = explodedArchive11.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry36 = explodedArchive11.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes37 = fileEntry36.getName();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(manifest14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertNotNull(entryCollection31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(asciiBytes37);
    }

    @Test
    public void test09531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09531");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.io.File file11 = null;
        explodedArchive0.root = file11;
        java.util.jar.Manifest manifest13 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter14 = null;
        org.springframework.boot.loader.archive.Archive archive15 = explodedArchive0.getFilteredArchive(entryRenameFilter14);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter16 = null;
        org.springframework.boot.loader.archive.Archive archive17 = explodedArchive0.getFilteredArchive(entryRenameFilter16);
        java.io.File file18 = null;
        explodedArchive0.root = file18;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter20 = null;
        org.springframework.boot.loader.archive.Archive archive21 = explodedArchive0.getFilteredArchive(entryRenameFilter20);
        explodedArchive0.filtered = true;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection24 = explodedArchive0.getEntries();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNull(manifest13);
        org.junit.Assert.assertNotNull(archive15);
        org.junit.Assert.assertNotNull(archive17);
        org.junit.Assert.assertNotNull(archive21);
        org.junit.Assert.assertNotNull(entryCollection24);
    }

    @Test
    public void test09532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09532");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.toExternalForm();
        java.lang.String str14 = uRL9.getRef();
        java.lang.String str15 = uRL9.getProtocol();
        java.lang.String str16 = uRL9.toExternalForm();
        java.lang.String str17 = uRL9.getHost();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100" + "'", str13, "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!://:100" + "'", str16, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test09533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09533");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        java.io.File file6 = null;
        fileEntry4.file = file6;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry4.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry4.name;
        java.io.File file10 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = fileEntry4.name;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(asciiBytes9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(asciiBytes11);
    }

    @Test
    public void test09534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09534");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = null;
        fileEntry4.file = file5;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = null;
        fileEntry4.name = asciiBytes7;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry4.name;
        java.io.File file10 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = fileEntry4.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry4.name;
        java.io.File file14 = fileEntry4.getFile();
        java.io.File file15 = fileEntry4.file;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(asciiBytes11);
        org.junit.Assert.assertNull(asciiBytes12);
        org.junit.Assert.assertNull(asciiBytes13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
    }

    @Test
    public void test09535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09535");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive0.entries;
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        explodedArchive22.filtered = true;
        java.util.jar.Manifest manifest25 = explodedArchive22.getManifest();
        java.util.jar.Manifest manifest26 = explodedArchive22.manifest;
        java.io.File file27 = null;
        explodedArchive22.root = file27;
        java.io.File file29 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive30.getNestedArchives(entryFilter32);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive30.getNestedArchives(entryFilter34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = explodedArchive30.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file29, asciiBytesMap36);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive37.entries;
        explodedArchive22.entries = asciiBytesMap38;
        explodedArchive0.entries = asciiBytesMap38;
        boolean boolean41 = explodedArchive0.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest43 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter44 = null;
        org.springframework.boot.loader.archive.Archive archive45 = explodedArchive0.getFilteredArchive(entryRenameFilter44);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry46 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest47 = explodedArchive0.getManifest();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection48 = explodedArchive0.getEntries();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertNull(manifest26);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(asciiBytesMap36);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertNotNull(archive45);
        org.junit.Assert.assertNull(manifest47);
        org.junit.Assert.assertNotNull(entryCollection48);
    }

    @Test
    public void test09536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09536");
        java.net.URLConnection.setDefaultRequestProperty("hi!://:100/:100", "[archive://:10:100]:1");
    }

    @Test
    public void test09537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09537");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        boolean boolean5 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive0.entries;
        java.io.File file8 = null;
        java.io.File file9 = null;
        java.io.File file10 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive11.getNestedArchives(entryFilter13);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive11.getNestedArchives(entryFilter15);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive11.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive18.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap19);
        explodedArchive20.filtered = true;
        java.io.File file23 = null;
        explodedArchive20.root = file23;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection25 = explodedArchive20.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap26);
        explodedArchive0.entries = asciiBytesMap26;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive0.getNestedArchives(entryFilter29);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL31 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(asciiBytesMap17);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(entryCollection25);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNotNull(archiveList30);
    }

    @Test
    public void test09538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09538");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive0.new FileEntry();
        explodedArchive0.filtered = true;
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive0.getNestedArchives(entryFilter10);
        java.io.File file12 = explodedArchive0.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive0.entries;
        boolean boolean14 = explodedArchive0.filtered;
        java.io.File file15 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file15, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(asciiBytesMap13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test09539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09539");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.lang.String str17 = uRL16.getUserInfo();
        java.lang.String str18 = uRL16.getAuthority();
        int int19 = uRL16.getPort();
        java.lang.String str20 = uRL16.getProtocol();
        java.net.URL uRL22 = new java.net.URL(uRL16, "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!");
        java.lang.String str23 = uRL16.getProtocol();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + ":100" + "'", str18, ":100");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100/hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
    }

    @Test
    public void test09540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09540");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive4.entries = asciiBytesMap6;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive4.manifest = manifest8;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL11 = new java.net.URL("hi!", ":100", (int) '4', "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler10);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str41 = explodedArchive40.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive40.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler43 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL44 = new java.net.URL(uRL37, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        java.net.URL uRL45 = new java.net.URL(uRL25, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        java.net.URL uRL46 = new java.net.URL("hi!:1", "/archive", (int) (short) 0, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        boolean boolean47 = uRL11.sameFile(uRL46);
        java.lang.String str48 = uRL11.getQuery();
        java.net.URL uRL50 = new java.net.URL(uRL11, "hi!://:100/hi!");
        java.lang.String str51 = uRL11.getProtocol();
        int int52 = uRL11.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str58 = explodedArchive57.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection59 = explodedArchive57.getEntries();
        java.util.jar.Manifest manifest60 = explodedArchive57.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler61 = explodedArchive57.new FilteredURLStreamHandler();
        java.net.URL uRL62 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.lang.String str63 = uRL62.getFile();
        int int64 = uRL62.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str71 = explodedArchive70.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection72 = explodedArchive70.getEntries();
        java.util.jar.Manifest manifest73 = explodedArchive70.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler74 = explodedArchive70.new FilteredURLStreamHandler();
        java.net.URL uRL75 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler74);
        java.lang.String str76 = uRL75.getQuery();
        java.lang.String str77 = uRL75.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str84 = explodedArchive83.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection85 = explodedArchive83.getEntries();
        java.util.jar.Manifest manifest86 = explodedArchive83.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler87 = explodedArchive83.new FilteredURLStreamHandler();
        java.net.URL uRL88 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler87);
        java.net.URL uRL89 = new java.net.URL(uRL75, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler87);
        java.net.URL uRL90 = new java.net.URL(uRL62, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler87);
        java.lang.String str91 = uRL62.getPath();
        java.lang.String str92 = uRL62.getPath();
        java.lang.String str93 = uRL62.getUserInfo();
        java.lang.String str94 = uRL62.getHost();
        java.lang.String str95 = uRL62.getProtocol();
        boolean boolean96 = uRL11.sameFile(uRL62);
        java.lang.String str97 = uRL62.getPath();
        java.lang.Object obj98 = null;
        boolean boolean99 = uRL62.equals(obj98);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertEquals(uRL11.toString(), "hi!://[:100]:52hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "archive" + "'", str41, "archive");
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!:1:///archive:0archive");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://[:100]:52/hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "archive" + "'", str58, "archive");
        org.junit.Assert.assertNotNull(entryCollection59);
        org.junit.Assert.assertNull(manifest60);
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "archive" + "'", str71, "archive");
        org.junit.Assert.assertNotNull(entryCollection72);
        org.junit.Assert.assertNull(manifest73);
        org.junit.Assert.assertEquals(uRL75.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "archive" + "'", str84, "archive");
        org.junit.Assert.assertNotNull(entryCollection85);
        org.junit.Assert.assertNull(manifest86);
        org.junit.Assert.assertEquals(uRL88.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL89.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL90.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "" + "'", str91, "");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
        org.junit.Assert.assertNull(str93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "" + "'", str94, "");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "hi!" + "'", str95, "hi!");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "" + "'", str97, "");
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test09541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09541");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive1.new FileEntry();
        java.lang.String str6 = explodedArchive1.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.jar.Manifest manifest9 = explodedArchive8.getManifest();
        java.util.jar.Manifest manifest10 = explodedArchive8.manifest;
        java.io.File file11 = explodedArchive8.root;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNull(file11);
    }

    @Test
    public void test09542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09542");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = explodedArchive2.new FileEntry();
        java.lang.String str7 = explodedArchive2.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive2.new FileEntry();
        java.util.jar.Manifest manifest9 = null;
        explodedArchive2.manifest = manifest9;
        java.lang.String str11 = explodedArchive2.toString();
        java.io.File file12 = null;
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive14.getNestedArchives(entryFilter21);
        java.io.File file23 = null;
        java.io.File file24 = null;
        java.io.File file25 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file27 = explodedArchive26.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive26.getNestedArchives(entryFilter28);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive26.getNestedArchives(entryFilter30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file25, asciiBytesMap32);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive33.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file24, asciiBytesMap34);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap34);
        explodedArchive14.entries = asciiBytesMap34;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive38.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap39);
        explodedArchive2.entries = asciiBytesMap39;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap39);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap39);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter44 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList45 = explodedArchive43.getNestedArchives(entryFilter44);
        java.util.jar.Manifest manifest46 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter47 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList48 = explodedArchive43.getNestedArchives(entryFilter47);
        java.lang.String str49 = explodedArchive43.toString();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "archive" + "'", str11, "archive");
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertNotNull(archiveList45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertNotNull(archiveList48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "archive" + "'", str49, "archive");
    }

    @Test
    public void test09543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09543");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap4 = null;
        explodedArchive0.entries = asciiBytesMap4;
        java.io.File file6 = explodedArchive0.root;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive0.entries;
        boolean boolean10 = explodedArchive0.filtered;
        java.io.File file11 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive0.new FilteredURLStreamHandler();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(asciiBytesMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(file11);
    }

    @Test
    public void test09544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09544");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler3 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file4 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive0.getNestedArchives(entryFilter5);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter7 = null;
        org.springframework.boot.loader.archive.Archive archive8 = explodedArchive0.getFilteredArchive(entryRenameFilter7);
        java.io.File file9 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.lang.String str16 = explodedArchive10.toString();
        java.util.jar.Manifest manifest17 = explodedArchive10.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap18);
        explodedArchive0.entries = asciiBytesMap18;
        boolean boolean21 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive0.getNestedArchives(entryFilter22);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(archive8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "archive" + "'", str16, "archive");
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(archiveList23);
    }

    @Test
    public void test09545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09545");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        java.lang.String str11 = uRL9.getFile();
        java.net.URL uRL13 = new java.net.URL(uRL9, "hi!://:100");
        java.lang.String str14 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive31.getNestedArchives(entryFilter33);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry35 = explodedArchive31.new FileEntry();
        java.lang.String str36 = explodedArchive31.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry37 = explodedArchive31.new FileEntry();
        explodedArchive31.filtered = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler40 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL41 = new java.net.URL("hi!://:100/hi!:1", ":100", (int) (short) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler40);
        java.net.URL uRL42 = new java.net.URL("/archive:///archive:0hi!://:100", "/:100", (int) (byte) 0, "hi!://:100/hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler40);
        java.net.URL uRL43 = new java.net.URL("hi!://:100/hi!://:100/hi!://:100", "hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]", (-1), "hi!://:100/hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler40);
        java.net.URL uRL44 = new java.net.URL("hi!://:100/hi!://:100/hi!://:100", "hi!://[hi!://:100/hi!]:0archive://:10:100", 10, "", (java.net.URLStreamHandler) filteredURLStreamHandler40);
        boolean boolean45 = uRL9.sameFile(uRL44);
        java.lang.String str46 = uRL9.getHost();
        java.lang.String str47 = uRL9.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "archive" + "'", str36, "archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100/hi!:1://[:100]:1hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL42.toString(), "/archive:///archive:0hi!://:100://[/:100]:0hi!://:100/hi!:1");
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://:100/hi!://:100/hi!://:100://[hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]]hi!://:100/hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100/hi!://:100/hi!://:100://[hi!://[hi!://:100/hi!]:0archive://:10:100]:10");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!://:100" + "'", str47, "hi!://:100");
    }

    @Test
    public void test09546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09546");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        explodedArchive4.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive4.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("[://[archive://:10archive]:100archive://:10archive]:0", "/:100", 0, "archive://:10:100", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection14 = uRL13.openConnection();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertEquals(uRL13.toString(), "[://[archive://:10archive]:100archive://:10archive]:0://[/:100]:0archive://:10:100");
    }

    @Test
    public void test09547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09547");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getQuery();
        java.lang.String str15 = uRL13.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL27 = new java.net.URL(uRL13, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL28 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str29 = uRL28.getQuery();
        java.lang.String str30 = uRL28.getFile();
        java.lang.String str31 = uRL28.toExternalForm();
        int int32 = uRL28.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file34 = explodedArchive33.root;
        java.util.jar.Manifest manifest35 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry36 = explodedArchive33.new FileEntry();
        boolean boolean37 = uRL28.equals((java.lang.Object) explodedArchive33);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL28.toString(), "archive://:10archive");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "archive" + "'", str30, "archive");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive://:10archive" + "'", str31, "archive://:10archive");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test09548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09548");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.lang.String str3 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        explodedArchive0.filtered = false;
        java.io.File file8 = null;
        explodedArchive0.root = file8;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str11 = explodedArchive10.toString();
        java.util.jar.Manifest manifest12 = null;
        explodedArchive10.manifest = manifest12;
        java.io.File file14 = null;
        explodedArchive10.root = file14;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter16 = null;
        org.springframework.boot.loader.archive.Archive archive17 = explodedArchive10.getFilteredArchive(entryRenameFilter16);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry18 = explodedArchive10.new FileEntry();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive19 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "archive" + "'", str3, "archive");
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "archive" + "'", str11, "archive");
        org.junit.Assert.assertNotNull(archive17);
    }

    @Test
    public void test09549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09549");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = null;
        explodedArchive8.entries = asciiBytesMap10;
        java.util.jar.Manifest manifest12 = null;
        explodedArchive8.manifest = manifest12;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler14 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL15 = new java.net.URL("hi!", ":100", (int) '4', "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler14);
        java.net.URL uRL16 = new java.net.URL("hi!://:100/hi!://:100/hi!", "/hi!://:100/archive", (-1), "", (java.net.URLStreamHandler) filteredURLStreamHandler14);
        int int17 = uRL16.getDefaultPort();
        java.lang.String str18 = uRL16.getRef();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection19 = uRL16.openConnection();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://[:100]:52hi!");
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test09550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09550");
        java.lang.String str1 = java.net.URLConnection.getDefaultRequestProperty("hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://:100/hi!]:32hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test09551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09551");
        java.lang.String str1 = java.net.URLConnection.getDefaultRequestProperty("/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test09552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09552");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        java.io.File file5 = explodedArchive0.root;
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive7.getNestedArchives(entryFilter9);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive7.getNestedArchives(entryFilter11);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive7.entries;
        java.lang.String str14 = explodedArchive7.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive15.getNestedArchives(entryFilter17);
        explodedArchive15.filtered = false;
        java.util.jar.Manifest manifest21 = explodedArchive15.manifest;
        java.io.File file22 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive23.getNestedArchives(entryFilter25);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive23.getNestedArchives(entryFilter27);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive23.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap29);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap31 = explodedArchive30.entries;
        explodedArchive15.entries = asciiBytesMap31;
        explodedArchive7.entries = asciiBytesMap31;
        explodedArchive0.entries = asciiBytesMap31;
        java.io.File file35 = null;
        java.io.File file36 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file38 = explodedArchive37.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive37.getNestedArchives(entryFilter39);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter41 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList42 = explodedArchive37.getNestedArchives(entryFilter41);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap43 = explodedArchive37.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive(file36, asciiBytesMap43);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap45 = explodedArchive44.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file35, asciiBytesMap45);
        explodedArchive46.filtered = true;
        java.io.File file49 = null;
        explodedArchive46.root = file49;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection51 = explodedArchive46.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter52 = null;
        org.springframework.boot.loader.archive.Archive archive53 = explodedArchive46.getFilteredArchive(entryRenameFilter52);
        java.io.File file54 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file56 = explodedArchive55.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter57 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList58 = explodedArchive55.getNestedArchives(entryFilter57);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter59 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList60 = explodedArchive55.getNestedArchives(entryFilter59);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap61 = explodedArchive55.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter62 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList63 = explodedArchive55.getNestedArchives(entryFilter62);
        java.io.File file64 = null;
        java.io.File file65 = null;
        java.io.File file66 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file68 = explodedArchive67.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter69 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList70 = explodedArchive67.getNestedArchives(entryFilter69);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter71 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList72 = explodedArchive67.getNestedArchives(entryFilter71);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap73 = explodedArchive67.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive(file66, asciiBytesMap73);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap75 = explodedArchive74.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive(file65, asciiBytesMap75);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive(file64, asciiBytesMap75);
        explodedArchive55.entries = asciiBytesMap75;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = new org.springframework.boot.loader.archive.ExplodedArchive(file54, asciiBytesMap75);
        explodedArchive46.entries = asciiBytesMap75;
        explodedArchive0.entries = asciiBytesMap75;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler82 = explodedArchive0.new FilteredURLStreamHandler();
        explodedArchive0.filtered = false;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(asciiBytesMap13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "archive" + "'", str14, "archive");
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNotNull(asciiBytesMap29);
        org.junit.Assert.assertNotNull(asciiBytesMap31);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(archiveList42);
        org.junit.Assert.assertNotNull(asciiBytesMap43);
        org.junit.Assert.assertNotNull(asciiBytesMap45);
        org.junit.Assert.assertNotNull(entryCollection51);
        org.junit.Assert.assertNotNull(archive53);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(archiveList58);
        org.junit.Assert.assertNotNull(archiveList60);
        org.junit.Assert.assertNotNull(asciiBytesMap61);
        org.junit.Assert.assertNotNull(archiveList63);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNotNull(archiveList70);
        org.junit.Assert.assertNotNull(archiveList72);
        org.junit.Assert.assertNotNull(asciiBytesMap73);
        org.junit.Assert.assertNotNull(asciiBytesMap75);
    }

    @Test
    public void test09553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09553");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getProtocol();
        java.lang.String str14 = uRL9.getPath();
        java.lang.String str15 = uRL9.getAuthority();
        java.lang.String str16 = uRL9.getRef();
        int int17 = uRL9.getPort();
        java.lang.String str18 = uRL9.toExternalForm();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str24 = explodedArchive23.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection25 = explodedArchive23.getEntries();
        java.util.jar.Manifest manifest26 = explodedArchive23.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive23.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.lang.String str29 = uRL28.getQuery();
        java.lang.String str30 = uRL28.getRef();
        java.lang.String str31 = uRL28.getRef();
        java.net.URL uRL33 = new java.net.URL(uRL28, "hi!");
        boolean boolean34 = uRL9.sameFile(uRL33);
        java.lang.String str35 = uRL9.getUserInfo();
        int int36 = uRL9.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + ":100" + "'", str15, ":100");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!://:100" + "'", str18, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "archive" + "'", str24, "archive");
        org.junit.Assert.assertNotNull(entryCollection25);
        org.junit.Assert.assertNull(manifest26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
    }

    @Test
    public void test09554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09554");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getHost();
        int int24 = uRL21.getPort();
        boolean boolean25 = uRL9.sameFile(uRL21);
        int int26 = uRL9.getPort();
        java.lang.String str27 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getQuery();
        java.lang.String str39 = uRL37.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection47 = explodedArchive45.getEntries();
        java.util.jar.Manifest manifest48 = explodedArchive45.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.net.URL uRL51 = new java.net.URL(uRL37, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str57 = explodedArchive56.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection58 = explodedArchive56.getEntries();
        java.util.jar.Manifest manifest59 = explodedArchive56.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler60 = explodedArchive56.new FilteredURLStreamHandler();
        java.net.URL uRL61 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.lang.String str62 = uRL61.getFile();
        boolean boolean63 = uRL51.sameFile(uRL61);
        int int64 = uRL61.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str70 = explodedArchive69.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection71 = explodedArchive69.getEntries();
        java.util.jar.Manifest manifest72 = explodedArchive69.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler73 = explodedArchive69.new FilteredURLStreamHandler();
        java.net.URL uRL74 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler73);
        java.lang.String str75 = uRL74.getQuery();
        java.lang.String str76 = uRL74.getRef();
        java.lang.String str77 = uRL74.getRef();
        java.net.URL uRL79 = new java.net.URL(uRL74, "hi!");
        boolean boolean80 = uRL61.sameFile(uRL79);
        java.lang.String str81 = uRL79.getAuthority();
        java.lang.String str82 = uRL79.getHost();
        boolean boolean83 = uRL9.sameFile(uRL79);
        java.lang.Object obj84 = null;
        boolean boolean85 = uRL9.equals(obj84);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertNotNull(entryCollection47);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "archive" + "'", str57, "archive");
        org.junit.Assert.assertNotNull(entryCollection58);
        org.junit.Assert.assertNull(manifest59);
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "archive" + "'", str70, "archive");
        org.junit.Assert.assertNotNull(entryCollection71);
        org.junit.Assert.assertNull(manifest72);
        org.junit.Assert.assertEquals(uRL74.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertEquals(uRL79.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + ":100" + "'", str81, ":100");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test09555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09555");
        java.lang.String str1 = java.net.URLConnection.getDefaultRequestProperty("[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:1");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test09556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09556");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        java.util.jar.Manifest manifest13 = null;
        explodedArchive11.manifest = manifest13;
        java.util.jar.Manifest manifest15 = null;
        explodedArchive11.manifest = manifest15;
        java.io.File file17 = null;
        explodedArchive11.root = file17;
        java.lang.String str19 = explodedArchive11.toString();
        java.util.jar.Manifest manifest20 = explodedArchive11.getManifest();
        java.util.jar.Manifest manifest21 = explodedArchive11.manifest;
        java.util.jar.Manifest manifest22 = null;
        explodedArchive11.manifest = manifest22;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "archive" + "'", str19, "archive");
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertNull(manifest21);
    }

    @Test
    public void test09557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09557");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        boolean boolean5 = explodedArchive0.filtered;
        java.io.File file6 = null;
        explodedArchive0.root = file6;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection8 = explodedArchive0.getEntries();
        java.lang.Class<?> wildcardClass9 = entryCollection8.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(entryCollection8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test09558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09558");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive8.getEntries();
        java.io.File file10 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive8.getNestedArchives(entryFilter11);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection13 = explodedArchive8.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter14 = null;
        org.springframework.boot.loader.archive.Archive archive15 = explodedArchive8.getFilteredArchive(entryRenameFilter14);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter16 = null;
        org.springframework.boot.loader.archive.Archive archive17 = explodedArchive8.getFilteredArchive(entryRenameFilter16);
        explodedArchive8.filtered = true;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = explodedArchive8.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(entryCollection13);
        org.junit.Assert.assertNotNull(archive15);
        org.junit.Assert.assertNotNull(archive17);
    }

    @Test
    public void test09559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09559");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        java.util.jar.Manifest manifest15 = explodedArchive12.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL17 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler16);
        java.lang.String str18 = uRL17.getQuery();
        java.lang.String str19 = uRL17.getRef();
        int int20 = uRL17.getPort();
        java.lang.String str21 = uRL17.getProtocol();
        java.lang.String str22 = uRL17.getPath();
        java.lang.String str23 = uRL17.getPath();
        java.lang.String str24 = uRL17.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getFile();
        int int37 = uRL35.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str44 = explodedArchive43.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive43.getEntries();
        java.util.jar.Manifest manifest46 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.lang.String str49 = uRL48.getQuery();
        java.lang.String str50 = uRL48.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str57 = explodedArchive56.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection58 = explodedArchive56.getEntries();
        java.util.jar.Manifest manifest59 = explodedArchive56.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler60 = explodedArchive56.new FilteredURLStreamHandler();
        java.net.URL uRL61 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL62 = new java.net.URL(uRL48, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL63 = new java.net.URL(uRL35, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.lang.String str64 = uRL63.getUserInfo();
        java.io.File file66 = null;
        java.io.File file67 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file69 = explodedArchive68.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter70 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList71 = explodedArchive68.getNestedArchives(entryFilter70);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter72 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList73 = explodedArchive68.getNestedArchives(entryFilter72);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap74 = explodedArchive68.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive(file67, asciiBytesMap74);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive(file66, asciiBytesMap74);
        boolean boolean77 = explodedArchive76.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler78 = explodedArchive76.new FilteredURLStreamHandler();
        java.net.URL uRL79 = new java.net.URL(uRL63, "/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler78);
        java.net.URL uRL80 = new java.net.URL(uRL17, "://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler78);
        java.net.URL uRL81 = new java.net.URL("hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", "/hi!://:100/archive", (int) (short) -1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler78);
        java.net.URL uRL82 = new java.net.URL("archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive", ":10", 0, "archive://:0hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler78);
        int int83 = uRL82.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "archive" + "'", str44, "archive");
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "archive" + "'", str57, "archive");
        org.junit.Assert.assertNotNull(entryCollection58);
        org.junit.Assert.assertNull(manifest59);
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/archive");
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNotNull(archiveList71);
        org.junit.Assert.assertNotNull(archiveList73);
        org.junit.Assert.assertNotNull(asciiBytesMap74);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals(uRL79.toString(), "hi!://:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals(uRL80.toString(), "hi!://:100/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL81.toString(), "hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]://[/hi!://:100/archive]hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL82.toString(), "archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive://[:10]:0archive://:0hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
    }

    @Test
    public void test09560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09560");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str42 = uRL41.getProtocol();
        int int43 = uRL41.getDefaultPort();
        java.lang.String str44 = uRL41.getHost();
        java.lang.String str45 = uRL41.getUserInfo();
        java.lang.String str46 = uRL41.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str52 = explodedArchive51.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection53 = explodedArchive51.getEntries();
        java.util.jar.Manifest manifest54 = explodedArchive51.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler55 = explodedArchive51.new FilteredURLStreamHandler();
        java.net.URL uRL56 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.lang.String str57 = uRL56.getFile();
        int int58 = uRL56.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str65 = explodedArchive64.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection66 = explodedArchive64.getEntries();
        java.util.jar.Manifest manifest67 = explodedArchive64.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler68 = explodedArchive64.new FilteredURLStreamHandler();
        java.net.URL uRL69 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler68);
        java.lang.String str70 = uRL69.getQuery();
        java.lang.String str71 = uRL69.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str78 = explodedArchive77.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection79 = explodedArchive77.getEntries();
        java.util.jar.Manifest manifest80 = explodedArchive77.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler81 = explodedArchive77.new FilteredURLStreamHandler();
        java.net.URL uRL82 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler81);
        java.net.URL uRL83 = new java.net.URL(uRL69, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler81);
        java.net.URL uRL84 = new java.net.URL(uRL56, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler81);
        java.lang.String str85 = uRL56.toExternalForm();
        java.lang.String str86 = uRL56.getQuery();
        java.lang.String str87 = uRL56.getQuery();
        java.lang.String str88 = uRL56.getProtocol();
        java.lang.String str89 = uRL56.getUserInfo();
        boolean boolean90 = uRL41.sameFile(uRL56);
        int int91 = uRL41.getDefaultPort();
        java.lang.String str92 = uRL41.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "archive" + "'", str52, "archive");
        org.junit.Assert.assertNotNull(entryCollection53);
        org.junit.Assert.assertNull(manifest54);
        org.junit.Assert.assertEquals(uRL56.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "archive" + "'", str65, "archive");
        org.junit.Assert.assertNotNull(entryCollection66);
        org.junit.Assert.assertNull(manifest67);
        org.junit.Assert.assertEquals(uRL69.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "archive" + "'", str78, "archive");
        org.junit.Assert.assertNotNull(entryCollection79);
        org.junit.Assert.assertNull(manifest80);
        org.junit.Assert.assertEquals(uRL82.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL83.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL84.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "hi!://:100" + "'", str85, "hi!://:100");
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "hi!" + "'", str88, "hi!");
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "hi!://:100" + "'", str92, "hi!://:100");
    }

    @Test
    public void test09561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09561");
        java.net.URLConnection.setDefaultRequestProperty("hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/archive", ":52");
    }

    @Test
    public void test09562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09562");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        java.util.jar.Manifest manifest14 = explodedArchive11.getManifest();
        java.util.jar.Manifest manifest15 = explodedArchive11.manifest;
        java.io.File file16 = null;
        explodedArchive11.root = file16;
        java.io.File file18 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive19.getNestedArchives(entryFilter21);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive19.getNestedArchives(entryFilter23);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive26.entries;
        explodedArchive11.entries = asciiBytesMap27;
        java.io.File file29 = null;
        explodedArchive11.root = file29;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection31 = explodedArchive11.getEntries();
        java.util.jar.Manifest manifest32 = explodedArchive11.getManifest();
        java.lang.String str33 = explodedArchive11.toString();
        java.io.File file34 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive11.buildEntries(file34, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(manifest14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertNotNull(entryCollection31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
    }

    @Test
    public void test09563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09563");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str42 = uRL41.getProtocol();
        int int43 = uRL41.getDefaultPort();
        java.lang.String str44 = uRL41.getHost();
        java.lang.String str45 = uRL41.getUserInfo();
        java.lang.String str46 = uRL41.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str52 = explodedArchive51.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection53 = explodedArchive51.getEntries();
        java.util.jar.Manifest manifest54 = explodedArchive51.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler55 = explodedArchive51.new FilteredURLStreamHandler();
        java.net.URL uRL56 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.lang.String str57 = uRL56.getFile();
        int int58 = uRL56.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str65 = explodedArchive64.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection66 = explodedArchive64.getEntries();
        java.util.jar.Manifest manifest67 = explodedArchive64.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler68 = explodedArchive64.new FilteredURLStreamHandler();
        java.net.URL uRL69 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler68);
        java.lang.String str70 = uRL69.getQuery();
        java.lang.String str71 = uRL69.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str78 = explodedArchive77.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection79 = explodedArchive77.getEntries();
        java.util.jar.Manifest manifest80 = explodedArchive77.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler81 = explodedArchive77.new FilteredURLStreamHandler();
        java.net.URL uRL82 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler81);
        java.net.URL uRL83 = new java.net.URL(uRL69, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler81);
        java.net.URL uRL84 = new java.net.URL(uRL56, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler81);
        java.lang.String str85 = uRL56.toExternalForm();
        java.lang.String str86 = uRL56.getQuery();
        java.lang.String str87 = uRL56.getQuery();
        java.lang.String str88 = uRL56.getProtocol();
        java.lang.String str89 = uRL56.getUserInfo();
        boolean boolean90 = uRL41.sameFile(uRL56);
        int int91 = uRL41.getDefaultPort();
        int int92 = uRL41.getDefaultPort();
        java.lang.String str93 = uRL41.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "archive" + "'", str52, "archive");
        org.junit.Assert.assertNotNull(entryCollection53);
        org.junit.Assert.assertNull(manifest54);
        org.junit.Assert.assertEquals(uRL56.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "archive" + "'", str65, "archive");
        org.junit.Assert.assertNotNull(entryCollection66);
        org.junit.Assert.assertNull(manifest67);
        org.junit.Assert.assertEquals(uRL69.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "archive" + "'", str78, "archive");
        org.junit.Assert.assertNotNull(entryCollection79);
        org.junit.Assert.assertNull(manifest80);
        org.junit.Assert.assertEquals(uRL82.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL83.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL84.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "hi!://:100" + "'", str85, "hi!://:100");
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "hi!" + "'", str88, "hi!");
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "hi!://:100" + "'", str93, "hi!://:100");
    }

    @Test
    public void test09564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09564");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.lang.String str17 = uRL16.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str23 = explodedArchive22.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection24 = explodedArchive22.getEntries();
        java.util.jar.Manifest manifest25 = explodedArchive22.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler26 = explodedArchive22.new FilteredURLStreamHandler();
        java.net.URL uRL27 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler26);
        java.lang.String str28 = uRL27.getQuery();
        java.lang.String str29 = uRL27.getHost();
        int int30 = uRL27.getPort();
        java.lang.String str31 = uRL27.getQuery();
        java.net.URL uRL33 = new java.net.URL(uRL27, "");
        java.io.File file35 = null;
        java.io.File file36 = null;
        java.io.File file37 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter40 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList41 = explodedArchive38.getNestedArchives(entryFilter40);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive38.getNestedArchives(entryFilter42);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap44 = explodedArchive38.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive(file37, asciiBytesMap44);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap46 = explodedArchive45.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive(file36, asciiBytesMap46);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive(file35, asciiBytesMap46);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL(uRL33, "", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        boolean boolean51 = uRL16.sameFile(uRL33);
        java.io.File file52 = null;
        java.io.File file53 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file55 = explodedArchive54.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter56 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList57 = explodedArchive54.getNestedArchives(entryFilter56);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter58 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList59 = explodedArchive54.getNestedArchives(entryFilter58);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap60 = explodedArchive54.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive(file53, asciiBytesMap60);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive(file52, asciiBytesMap60);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry63 = explodedArchive62.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry64 = explodedArchive62.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry65 = explodedArchive62.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler66 = explodedArchive62.new FilteredURLStreamHandler();
        java.io.File file67 = null;
        explodedArchive62.root = file67;
        boolean boolean69 = uRL33.equals((java.lang.Object) explodedArchive62);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + ":100" + "'", str17, ":100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "archive" + "'", str23, "archive");
        org.junit.Assert.assertNotNull(entryCollection24);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(archiveList41);
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertNotNull(asciiBytesMap44);
        org.junit.Assert.assertNotNull(asciiBytesMap46);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNotNull(archiveList57);
        org.junit.Assert.assertNotNull(archiveList59);
        org.junit.Assert.assertNotNull(asciiBytesMap60);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test09565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09565");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive8.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        java.util.jar.Manifest manifest12 = null;
        explodedArchive8.manifest = manifest12;
        java.util.jar.Manifest manifest14 = null;
        explodedArchive8.manifest = manifest14;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive8.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry17 = explodedArchive8.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes18 = fileEntry17.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes19 = fileEntry17.getName();
        java.io.File file20 = null;
        fileEntry17.file = file20;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNull(asciiBytes18);
        org.junit.Assert.assertNull(asciiBytes19);
    }

    @Test
    public void test09566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09566");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getFile();
        java.lang.String str25 = uRL9.getAuthority();
        int int26 = uRL9.getPort();
        java.lang.String str27 = uRL9.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getFile();
        int int39 = uRL37.getDefaultPort();
        java.lang.String str40 = uRL37.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str47 = explodedArchive46.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection48 = explodedArchive46.getEntries();
        java.util.jar.Manifest manifest49 = explodedArchive46.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler50 = explodedArchive46.new FilteredURLStreamHandler();
        java.net.URL uRL51 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        java.lang.String str52 = uRL51.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str59 = explodedArchive58.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection60 = explodedArchive58.getEntries();
        java.util.jar.Manifest manifest61 = explodedArchive58.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler62 = explodedArchive58.new FilteredURLStreamHandler();
        java.net.URL uRL63 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler62);
        java.lang.String str64 = uRL63.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str67 = explodedArchive66.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection68 = explodedArchive66.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler69 = explodedArchive66.new FilteredURLStreamHandler();
        java.net.URL uRL70 = new java.net.URL(uRL63, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler69);
        java.net.URL uRL71 = new java.net.URL(uRL51, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler69);
        java.net.URL uRL72 = new java.net.URL(uRL37, "/archive", (java.net.URLStreamHandler) filteredURLStreamHandler69);
        java.lang.String str73 = uRL37.getFile();
        java.lang.String str74 = uRL37.getPath();
        boolean boolean75 = uRL9.sameFile(uRL37);
        java.lang.String str76 = uRL9.toExternalForm();
        java.lang.String str77 = uRL9.getHost();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI78 = uRL9.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + ":100" + "'", str25, ":100");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + ":100" + "'", str27, ":100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "archive" + "'", str47, "archive");
        org.junit.Assert.assertNotNull(entryCollection48);
        org.junit.Assert.assertNull(manifest49);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "archive" + "'", str59, "archive");
        org.junit.Assert.assertNotNull(entryCollection60);
        org.junit.Assert.assertNull(manifest61);
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "archive" + "'", str67, "archive");
        org.junit.Assert.assertNotNull(entryCollection68);
        org.junit.Assert.assertEquals(uRL70.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL71.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL72.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!://:100" + "'", str76, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
    }

    @Test
    public void test09567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09567");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getQuery();
        java.net.URL uRL15 = new java.net.URL(uRL9, "");
        java.io.File file17 = null;
        java.io.File file18 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive19.getNestedArchives(entryFilter21);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive19.getNestedArchives(entryFilter23);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap27);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL(uRL15, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.lang.String str31 = uRL30.getQuery();
        java.lang.String str32 = uRL30.getQuery();
        java.net.Proxy proxy33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection34 = uRL30.openConnection(proxy33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test09568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09568");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getPath();
        java.lang.String str12 = uRL9.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive14.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str28 = explodedArchive27.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection29 = explodedArchive27.getEntries();
        java.util.jar.Manifest manifest30 = explodedArchive27.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive27.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL32.getQuery();
        java.lang.String str34 = uRL32.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str41 = explodedArchive40.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive40.getEntries();
        java.util.jar.Manifest manifest43 = explodedArchive40.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler44 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL45 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler44);
        java.net.URL uRL46 = new java.net.URL(uRL32, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler44);
        int int47 = uRL46.getPort();
        java.lang.String str48 = uRL46.getPath();
        java.lang.String str49 = uRL46.getPath();
        java.lang.String str50 = uRL46.toExternalForm();
        java.lang.String str51 = uRL46.getRef();
        boolean boolean52 = uRL9.sameFile(uRL46);
        int int53 = uRL9.getDefaultPort();
        int int54 = uRL9.getPort();
        java.lang.String str55 = uRL9.getQuery();
        java.lang.String str56 = uRL9.getQuery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "archive" + "'", str28, "archive");
        org.junit.Assert.assertNotNull(entryCollection29);
        org.junit.Assert.assertNull(manifest30);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "archive" + "'", str41, "archive");
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "/hi!" + "'", str49, "/hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!://:100/hi!" + "'", str50, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(str56);
    }

    @Test
    public void test09569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09569");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter7 = null;
        org.springframework.boot.loader.archive.Archive archive8 = explodedArchive4.getFilteredArchive(entryRenameFilter7);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry9 = explodedArchive4.new FileEntry();
        explodedArchive4.filtered = true;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection12 = explodedArchive4.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL14 = new java.net.URL("[:100]", "", (int) (byte) 1, "[/archive:///archive:0hi!://:100]:10", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNotNull(archive8);
        org.junit.Assert.assertNotNull(entryCollection12);
        org.junit.Assert.assertEquals(uRL14.toString(), "[:100]://:1[/archive:///archive:0hi!://:100]:10");
    }

    @Test
    public void test09570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09570");
        java.io.File file20 = null;
        java.io.File file21 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file23 = explodedArchive22.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive22.getNestedArchives(entryFilter24);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive22.getNestedArchives(entryFilter26);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = explodedArchive22.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file21, asciiBytesMap28);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive29.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file20, asciiBytesMap30);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL33 = new java.net.URL("", "archive://:10archive", (int) (short) 100, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.net.URL uRL34 = new java.net.URL("hi!", "://[archive://:10archive]:100archive://:10archive", 0, "hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.net.URL uRL35 = new java.net.URL("/hi!", "archive", (int) (short) -1, "archive://:10:100", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.net.URL uRL36 = new java.net.URL("/://[archive://:10archive]:100archive://:10archive", "/hi!://:100", 32, "archive://:0hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.net.URL uRL37 = new java.net.URL("archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive", "hi!://:100/hi!://hi!:1hi!", (int) '#', "/hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str43 = explodedArchive42.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection44 = explodedArchive42.getEntries();
        java.util.jar.Manifest manifest45 = explodedArchive42.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler46 = explodedArchive42.new FilteredURLStreamHandler();
        java.net.URL uRL47 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler46);
        java.lang.String str48 = uRL47.getPath();
        java.lang.String str49 = uRL47.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str56 = explodedArchive55.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection57 = explodedArchive55.getEntries();
        java.util.jar.Manifest manifest58 = explodedArchive55.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler59 = explodedArchive55.new FilteredURLStreamHandler();
        java.net.URL uRL60 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.net.URL uRL61 = new java.net.URL(uRL47, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file68 = explodedArchive67.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter69 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList70 = explodedArchive67.getNestedArchives(entryFilter69);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection71 = explodedArchive67.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap72 = explodedArchive67.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler73 = explodedArchive67.new FilteredURLStreamHandler();
        java.net.URL uRL74 = new java.net.URL("/archive", "hi!://:100/hi!", (int) (byte) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler73);
        java.net.URL uRL75 = new java.net.URL(uRL61, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler73);
        java.lang.String str76 = uRL61.getPath();
        java.lang.String str77 = uRL61.getRef();
        java.lang.String str78 = uRL61.getProtocol();
        boolean boolean79 = uRL37.equals((java.lang.Object) str78);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNotNull(asciiBytesMap28);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertEquals(uRL33.toString(), "://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL34.toString(), "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals(uRL35.toString(), "/hi!://archivearchive://:10:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "/://[archive://:10archive]:100archive://:10archive://[/hi!://:100]:32archive://:0hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive://[hi!://:100/hi!://hi!:1hi!]:35/hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "archive" + "'", str43, "archive");
        org.junit.Assert.assertNotNull(entryCollection44);
        org.junit.Assert.assertNull(manifest45);
        org.junit.Assert.assertEquals(uRL47.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "archive" + "'", str56, "archive");
        org.junit.Assert.assertNotNull(entryCollection57);
        org.junit.Assert.assertNull(manifest58);
        org.junit.Assert.assertEquals(uRL60.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNotNull(archiveList70);
        org.junit.Assert.assertNotNull(entryCollection71);
        org.junit.Assert.assertNotNull(asciiBytesMap72);
        org.junit.Assert.assertEquals(uRL74.toString(), "/archive://[hi!://:100/hi!]:1hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL75.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "/hi!://:100" + "'", str76, "/hi!://:100");
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test09571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09571");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.lang.String str5 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        java.lang.String str9 = explodedArchive0.toString();
        java.io.File file10 = null;
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive12.getNestedArchives(entryFilter19);
        java.io.File file21 = null;
        java.io.File file22 = null;
        java.io.File file23 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive24.getNestedArchives(entryFilter26);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive24.getNestedArchives(entryFilter28);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive24.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive31.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap32);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file21, asciiBytesMap32);
        explodedArchive12.entries = asciiBytesMap32;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap32);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap37 = explodedArchive36.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap37);
        explodedArchive0.entries = asciiBytesMap37;
        java.lang.String str40 = explodedArchive0.toString();
        java.util.jar.Manifest manifest41 = null;
        explodedArchive0.manifest = manifest41;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap43 = explodedArchive0.entries;
        java.lang.String str44 = explodedArchive0.toString();
        java.io.File file45 = null;
        explodedArchive0.root = file45;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str47 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNotNull(asciiBytesMap37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "archive" + "'", str40, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "archive" + "'", str44, "archive");
    }

    @Test
    public void test09572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09572");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str29 = explodedArchive28.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive28.getEntries();
        java.util.jar.Manifest manifest31 = explodedArchive28.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL33 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.lang.String str34 = uRL33.getFile();
        boolean boolean35 = uRL23.sameFile(uRL33);
        int int36 = uRL33.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str42 = explodedArchive41.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive41.getEntries();
        java.util.jar.Manifest manifest44 = explodedArchive41.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive41.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.lang.String str47 = uRL46.getQuery();
        java.lang.String str48 = uRL46.getRef();
        java.lang.String str49 = uRL46.getRef();
        java.net.URL uRL51 = new java.net.URL(uRL46, "hi!");
        boolean boolean52 = uRL33.sameFile(uRL51);
        java.lang.String str53 = uRL51.getAuthority();
        java.lang.String str54 = uRL51.getHost();
        java.lang.String str55 = uRL51.getPath();
        java.lang.String str56 = uRL51.getHost();
        java.lang.String str57 = uRL51.getPath();
        java.lang.String str58 = uRL51.getUserInfo();
        java.lang.String str59 = uRL51.getHost();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "archive" + "'", str42, "archive");
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertNull(manifest44);
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + ":100" + "'", str53, ":100");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "/hi!" + "'", str55, "/hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "/hi!" + "'", str57, "/hi!");
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
    }

    @Test
    public void test09573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09573");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        java.io.File file14 = null;
        explodedArchive11.root = file14;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection16 = explodedArchive11.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive11.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive11.getNestedArchives(entryFilter18);
        java.io.File file20 = null;
        explodedArchive11.root = file20;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive11.getNestedArchives(entryFilter22);
        java.io.File file24 = explodedArchive11.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive11.entries;
        java.io.File file26 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive27.getNestedArchives(entryFilter29);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter31 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList32 = explodedArchive27.getNestedArchives(entryFilter31);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap33 = explodedArchive27.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file26, asciiBytesMap33);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive34.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive34.getNestedArchives(entryFilter36);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry38 = explodedArchive34.new FileEntry();
        java.io.File file39 = null;
        fileEntry38.file = file39;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes41 = fileEntry38.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes42 = null;
        fileEntry38.name = asciiBytes42;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive44 = explodedArchive11.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(entryCollection16);
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNotNull(archiveList32);
        org.junit.Assert.assertNotNull(asciiBytesMap33);
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertNull(asciiBytes41);
    }

    @Test
    public void test09574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09574");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("hi!://:100/hi!://:100/hi!:1", "/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!://:100/hi!://:100/:100", 100, "[://[archive://:10archive]:100archive://:10archive]:100://[/hi!://:100/archive]:0:35[archive://:10archive]");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://:100/hi!://:100/hi!:1");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test09575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09575");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        java.io.File file2 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler3 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList5);
    }

    @Test
    public void test09576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09576");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive1.getNestedArchives(entryFilter8);
        java.io.File file10 = null;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap21);
        explodedArchive1.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap21);
        java.util.jar.Manifest manifest26 = null;
        explodedArchive25.manifest = manifest26;
        java.io.File file28 = explodedArchive25.root;
        java.util.jar.Manifest manifest29 = explodedArchive25.getManifest();
        java.io.File file30 = null;
        explodedArchive25.root = file30;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive25.getEntries();
        java.io.File file33 = null;
        java.io.File file34 = null;
        java.io.File file35 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file37 = explodedArchive36.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter38 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList39 = explodedArchive36.getNestedArchives(entryFilter38);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter40 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList41 = explodedArchive36.getNestedArchives(entryFilter40);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap42 = explodedArchive36.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file35, asciiBytesMap42);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap44 = explodedArchive43.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive(file34, asciiBytesMap44);
        explodedArchive45.filtered = true;
        java.io.File file48 = null;
        explodedArchive45.root = file48;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection50 = explodedArchive45.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection51 = explodedArchive45.getEntries();
        java.util.jar.Manifest manifest52 = null;
        explodedArchive45.manifest = manifest52;
        java.io.File file54 = explodedArchive45.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap55 = explodedArchive45.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive(file33, asciiBytesMap55);
        explodedArchive25.entries = asciiBytesMap55;
        java.lang.String str58 = explodedArchive25.toString();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(archiveList39);
        org.junit.Assert.assertNotNull(archiveList41);
        org.junit.Assert.assertNotNull(asciiBytesMap42);
        org.junit.Assert.assertNotNull(asciiBytesMap44);
        org.junit.Assert.assertNotNull(entryCollection50);
        org.junit.Assert.assertNotNull(entryCollection51);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(asciiBytesMap55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "archive" + "'", str58, "archive");
    }

    @Test
    public void test09577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09577");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        java.util.jar.Manifest manifest15 = explodedArchive12.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL17 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler16);
        java.lang.String str18 = uRL17.getQuery();
        java.lang.String str19 = uRL17.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str26 = explodedArchive25.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection27 = explodedArchive25.getEntries();
        java.util.jar.Manifest manifest28 = explodedArchive25.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive25.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.net.URL uRL31 = new java.net.URL(uRL17, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.net.URL uRL32 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.net.URL uRL33 = new java.net.URL("/archive:///archive:0hi!://:100", "hi!://:100/archive", (int) (short) 100, "/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.lang.String str34 = uRL33.getFile();
        java.lang.String str35 = uRL33.getUserInfo();
        java.net.URL uRL37 = new java.net.URL(uRL33, "[archive://:10archive]:100");
        java.io.File file43 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive44.getNestedArchives(entryFilter46);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter48 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList49 = explodedArchive44.getNestedArchives(entryFilter48);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap50 = explodedArchive44.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive(file43, asciiBytesMap50);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection52 = explodedArchive51.getEntries();
        java.io.File file53 = explodedArchive51.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter54 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList55 = explodedArchive51.getNestedArchives(entryFilter54);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler56 = explodedArchive51.new FilteredURLStreamHandler();
        java.net.URL uRL57 = new java.net.URL("hi!://:100/archive:///archive:0hi!://:100", "/archive", (-1), "[hi!://:100/hi!]", (java.net.URLStreamHandler) filteredURLStreamHandler56);
        java.net.URL uRL58 = new java.net.URL(uRL33, "/[hi!://:100/hi!]", (java.net.URLStreamHandler) filteredURLStreamHandler56);
        java.lang.String str59 = uRL33.getFile();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "archive" + "'", str26, "archive");
        org.junit.Assert.assertNotNull(entryCollection27);
        org.junit.Assert.assertNull(manifest28);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL31.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL32.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL33.toString(), "/archive:///archive:0hi!://:100://[hi!://:100/archive]:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "/archive:///archive:0hi!://:100" + "'", str34, "/archive:///archive:0hi!://:100");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals(uRL37.toString(), "/archive:///archive:0hi!://:100://[hi!://:100/archive]:100/archive:///archive:0hi!://[archive://:10archive]:100");
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertNotNull(archiveList49);
        org.junit.Assert.assertNotNull(asciiBytesMap50);
        org.junit.Assert.assertNotNull(entryCollection52);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(archiveList55);
        org.junit.Assert.assertEquals(uRL57.toString(), "hi!://:100/archive:///archive:0hi!://:100:///archive[hi!://:100/hi!]");
        org.junit.Assert.assertEquals(uRL58.toString(), "/archive:///archive:0hi!://:100://[hi!://:100/archive]:100/[hi!://:100/hi!]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "/archive:///archive:0hi!://:100" + "'", str59, "/archive:///archive:0hi!://:100");
    }

    @Test
    public void test09578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09578");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/hi!://:100/hi!://:100/archive", "/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!://:100/hi!://:100/:100", (int) (byte) 0, "/hi!://:100/hi!://:100://[/hi!:1]:52[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /hi!://:100/hi!://:100/archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test09579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09579");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest3 = explodedArchive0.manifest;
        boolean boolean4 = explodedArchive0.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = explodedArchive0.entries;
        java.lang.String str6 = explodedArchive0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(manifest3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
    }

    @Test
    public void test09580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09580");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        explodedArchive2.filtered = false;
        java.util.jar.Manifest manifest8 = explodedArchive2.manifest;
        java.io.File file9 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive17.entries;
        explodedArchive2.entries = asciiBytesMap18;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap18);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap18);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive21.new FilteredURLStreamHandler();
        boolean boolean23 = explodedArchive21.filtered;
        explodedArchive21.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive21.entries;
        java.util.jar.Manifest manifest27 = explodedArchive21.getManifest();
        java.io.File file28 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive21.buildEntries(file28, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNull(manifest27);
    }

    @Test
    public void test09581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09581");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap4 = null;
        explodedArchive0.entries = asciiBytesMap4;
        java.io.File file6 = explodedArchive0.root;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive0.entries;
        java.io.File file10 = explodedArchive0.root;
        java.util.jar.Manifest manifest11 = null;
        explodedArchive0.manifest = manifest11;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive14 = explodedArchive0.getFilteredArchive(entryRenameFilter13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(asciiBytesMap9);
        org.junit.Assert.assertNull(file10);
    }

    @Test
    public void test09582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09582");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getRef();
        int int24 = uRL21.getPort();
        java.lang.String str25 = uRL21.getProtocol();
        java.lang.String str26 = uRL21.getPath();
        java.lang.String str27 = uRL21.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str39 = uRL38.getFile();
        int int40 = uRL38.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str47 = explodedArchive46.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection48 = explodedArchive46.getEntries();
        java.util.jar.Manifest manifest49 = explodedArchive46.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler50 = explodedArchive46.new FilteredURLStreamHandler();
        java.net.URL uRL51 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        java.lang.String str52 = uRL51.getQuery();
        java.lang.String str53 = uRL51.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str60 = explodedArchive59.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection61 = explodedArchive59.getEntries();
        java.util.jar.Manifest manifest62 = explodedArchive59.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive59.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL65 = new java.net.URL(uRL51, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL66 = new java.net.URL(uRL38, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL67 = new java.net.URL(uRL21, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL68 = new java.net.URL(":100", "hi!://:100/hi!", (int) (byte) 0, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL69 = new java.net.URL("/hi!", "hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", 52, "hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL70 = new java.net.URL("[:100]", "[hi!://:100/hi!]:1", (-1), "[hi!:1]", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str80 = explodedArchive79.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap81 = null;
        explodedArchive79.entries = asciiBytesMap81;
        java.util.jar.Manifest manifest83 = null;
        explodedArchive79.manifest = manifest83;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler85 = explodedArchive79.new FilteredURLStreamHandler();
        java.net.URL uRL86 = new java.net.URL("hi!", ":100", (int) '4', "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler85);
        java.net.URL uRL87 = new java.net.URL("hi!://:100/hi!://:100/hi!", "/hi!://:100/archive", (-1), "", (java.net.URLStreamHandler) filteredURLStreamHandler85);
        int int88 = uRL87.getDefaultPort();
        java.lang.String str89 = uRL87.getHost();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection90 = filteredURLStreamHandler63.openConnection(uRL87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + ":100" + "'", str27, ":100");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "archive" + "'", str47, "archive");
        org.junit.Assert.assertNotNull(entryCollection48);
        org.junit.Assert.assertNull(manifest49);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "archive" + "'", str60, "archive");
        org.junit.Assert.assertNotNull(entryCollection61);
        org.junit.Assert.assertNull(manifest62);
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100/hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL68.toString(), ":100://[hi!://:100/hi!]:0archive://:10archive");
        org.junit.Assert.assertEquals(uRL69.toString(), "/hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:52hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals(uRL70.toString(), "[:100]://[hi!://:100/hi!]:1[hi!:1]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "archive" + "'", str80, "archive");
        org.junit.Assert.assertEquals(uRL86.toString(), "hi!://[:100]:52hi!");
        org.junit.Assert.assertEquals(uRL87.toString(), "hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[/hi!://:100/archive]" + "'", str89, "[/hi!://:100/archive]");
    }

    @Test
    public void test09583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09583");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file8 = null;
        java.io.File file9 = null;
        java.io.File file10 = null;
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap20);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap20);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap20);
        explodedArchive0.entries = asciiBytesMap20;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file26 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler28 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str39 = uRL38.getPath();
        java.lang.String str40 = uRL38.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str47 = explodedArchive46.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection48 = explodedArchive46.getEntries();
        java.util.jar.Manifest manifest49 = explodedArchive46.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler50 = explodedArchive46.new FilteredURLStreamHandler();
        java.net.URL uRL51 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        java.net.URL uRL52 = new java.net.URL(uRL38, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        java.lang.String str53 = uRL52.getQuery();
        java.lang.String str54 = uRL52.getQuery();
        java.lang.String str55 = uRL52.getAuthority();
        java.net.URL uRL57 = new java.net.URL(uRL52, "/archive");
        java.lang.String str58 = uRL57.getRef();
        java.net.URL uRL60 = new java.net.URL(uRL57, "[hi!://:100/:100]:0");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection61 = filteredURLStreamHandler28.openConnection(uRL57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "archive" + "'", str47, "archive");
        org.junit.Assert.assertNotNull(entryCollection48);
        org.junit.Assert.assertNull(manifest49);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + ":100" + "'", str55, ":100");
        org.junit.Assert.assertEquals(uRL57.toString(), "hi!://:100/archive");
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertEquals(uRL60.toString(), "hi!://:100/[hi!://:100/:100]:0");
    }

    @Test
    public void test09584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09584");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("[://[archive://:10archive]:100archive://:10archive]:0", "hi!://hi!:1/[://[archive://:10archive]:100archive://:10archive]:0", "hi!://:100/:100://[archive://:10archive]hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: [://[archive://:10archive]:100archive://:10archive]:0");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test09585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09585");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        int int24 = uRL23.getPort();
        java.lang.String str25 = uRL23.getPath();
        java.lang.String str26 = uRL23.getPath();
        java.lang.String str27 = uRL23.getProtocol();
        int int28 = uRL23.getPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/hi!" + "'", str25, "/hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/hi!" + "'", str26, "/hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
    }

    @Test
    public void test09586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09586");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        explodedArchive4.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive4.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive4.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL14 = new java.net.URL("/[hi!://:100/hi!://:100/hi!://:100/archive", "hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://[hi!://:100/:100]:100", (int) (short) 0, "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:0", (java.net.URLStreamHandler) filteredURLStreamHandler13);
        java.lang.String str15 = uRL14.toExternalForm();
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertEquals(uRL14.toString(), "/[hi!://:100/hi!://:100/hi!://:100/archive://[hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://[hi!://:100/:100]:100]:0hi!://:100/[://[archive://:10archive]:100archive://:10archive]:0");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "/[hi!://:100/hi!://:100/hi!://:100/archive://[hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://[hi!://:100/:100]:100]:0hi!://:100/[://[archive://:10archive]:100archive://:10archive]:0" + "'", str15, "/[hi!://:100/hi!://:100/hi!://:100/archive://[hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://[hi!://:100/:100]:100]:0hi!://:100/[://[archive://:10archive]:100archive://:10archive]:0");
    }

    @Test
    public void test09587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09587");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getFile();
        java.lang.String str25 = uRL9.getAuthority();
        int int26 = uRL9.getPort();
        java.lang.String str27 = uRL9.getFile();
        java.net.URL uRL29 = new java.net.URL(uRL9, "hi!://:100/hi!://:100");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str36 = explodedArchive35.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection37 = explodedArchive35.getEntries();
        java.util.jar.Manifest manifest38 = explodedArchive35.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler39 = explodedArchive35.new FilteredURLStreamHandler();
        java.net.URL uRL40 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler39);
        java.lang.String str41 = uRL40.getPath();
        java.lang.String str42 = uRL40.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str49 = explodedArchive48.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection50 = explodedArchive48.getEntries();
        java.util.jar.Manifest manifest51 = explodedArchive48.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler52 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL53 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler52);
        java.net.URL uRL54 = new java.net.URL(uRL40, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler52);
        java.net.URL uRL55 = new java.net.URL(uRL29, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler52);
        java.lang.String str56 = uRL55.getQuery();
        java.lang.String str57 = uRL55.getUserInfo();
        java.lang.String str58 = uRL55.toExternalForm();
        java.net.Proxy proxy59 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection60 = uRL55.openConnection(proxy59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + ":100" + "'", str25, ":100");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "archive" + "'", str36, "archive");
        org.junit.Assert.assertNotNull(entryCollection37);
        org.junit.Assert.assertNull(manifest38);
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "archive" + "'", str49, "archive");
        org.junit.Assert.assertNotNull(entryCollection50);
        org.junit.Assert.assertNull(manifest51);
        org.junit.Assert.assertEquals(uRL53.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL55.toString(), "hi!://:100/hi!://:100/hi!://hi!");
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!://:100/hi!://:100/hi!://hi!" + "'", str58, "hi!://:100/hi!://:100/hi!://hi!");
    }

    @Test
    public void test09588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09588");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        java.lang.String str25 = uRL22.getRef();
        java.lang.String str26 = uRL22.toExternalForm();
        boolean boolean27 = uRL9.sameFile(uRL22);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getQuery();
        java.lang.String str39 = uRL37.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection47 = explodedArchive45.getEntries();
        java.util.jar.Manifest manifest48 = explodedArchive45.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.net.URL uRL51 = new java.net.URL(uRL37, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.lang.String str52 = uRL37.getAuthority();
        java.lang.String str53 = uRL37.getRef();
        java.lang.String str54 = uRL37.getQuery();
        boolean boolean55 = uRL9.sameFile(uRL37);
        java.lang.String str56 = uRL9.getRef();
        java.lang.String str57 = uRL9.getQuery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!://:100" + "'", str26, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertNotNull(entryCollection47);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + ":100" + "'", str52, ":100");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str57);
    }

    @Test
    public void test09589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09589");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry12.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = fileEntry12.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes15 = null;
        fileEntry12.name = asciiBytes15;
        java.io.File file17 = fileEntry12.getFile();
        java.io.File file18 = fileEntry12.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes19 = fileEntry12.getName();
        java.io.File file20 = fileEntry12.file;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(asciiBytes13);
        org.junit.Assert.assertNull(asciiBytes14);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(asciiBytes19);
        org.junit.Assert.assertNull(file20);
    }

    @Test
    public void test09590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09590");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest9 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest10 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest12 = null;
        explodedArchive0.manifest = manifest12;
        java.lang.String str14 = explodedArchive0.toString();
        java.io.File file15 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file15, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "archive" + "'", str14, "archive");
    }

    @Test
    public void test09591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09591");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        int int11 = uRL9.getPort();
        java.lang.String str12 = uRL9.getFile();
        int int13 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str24 = explodedArchive23.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = null;
        explodedArchive23.entries = asciiBytesMap25;
        java.util.jar.Manifest manifest27 = null;
        explodedArchive23.manifest = manifest27;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive23.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL("hi!://:100/hi!", "hi!://:100/hi!", 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.net.URL uRL31 = new java.net.URL("[:100]", "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!", (int) (byte) 10, "[hi!://:100/:100]:100", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.net.URL uRL32 = new java.net.URL(uRL9, "[://[archive://:10archive]:100archive://:10archive]:0", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.lang.String str33 = uRL32.getFile();
        java.net.Proxy proxy34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection35 = uRL32.openConnection(proxy34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "archive" + "'", str24, "archive");
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL31.toString(), "[:100]://[hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!]:10[hi!://:100/:100]:100");
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:0");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "/[://[archive://:10archive]:100archive://:10archive]:0" + "'", str33, "/[://[archive://:10archive]:100archive://:10archive]:0");
    }

    @Test
    public void test09592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09592");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.io.File file9 = null;
        java.io.File file10 = null;
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap20);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap20);
        explodedArchive0.entries = asciiBytesMap20;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest25 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str27 = explodedArchive26.toString();
        java.util.jar.Manifest manifest28 = null;
        explodedArchive26.manifest = manifest28;
        java.util.jar.Manifest manifest30 = explodedArchive26.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap31 = explodedArchive26.entries;
        explodedArchive0.entries = asciiBytesMap31;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive0.getNestedArchives(entryFilter33);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry35 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str37 = explodedArchive36.toString();
        java.util.jar.Manifest manifest38 = null;
        explodedArchive36.manifest = manifest38;
        java.io.File file40 = explodedArchive36.root;
        explodedArchive36.filtered = false;
        explodedArchive36.filtered = true;
        java.io.File file45 = explodedArchive36.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry46 = explodedArchive36.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes47 = fileEntry46.getName();
        java.io.File file48 = fileEntry46.file;
        java.io.File file49 = fileEntry46.file;
        java.io.File file50 = fileEntry46.getFile();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive51 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "archive" + "'", str27, "archive");
        org.junit.Assert.assertNull(manifest30);
        org.junit.Assert.assertNotNull(asciiBytesMap31);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNull(asciiBytes47);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(file50);
    }

    @Test
    public void test09593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09593");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.toExternalForm();
        java.lang.String str14 = uRL9.getRef();
        java.lang.String str15 = uRL9.getPath();
        int int16 = uRL9.getPort();
        java.lang.String str17 = uRL9.getProtocol();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100" + "'", str13, "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test09594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09594");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest3 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler4 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection5 = explodedArchive0.getEntries();
        java.io.File file6 = explodedArchive0.root;
        boolean boolean7 = explodedArchive0.filtered;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(manifest3);
        org.junit.Assert.assertNotNull(entryCollection5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test09595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09595");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        boolean boolean5 = explodedArchive0.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry7.getName();
        java.io.File file9 = null;
        fileEntry7.file = file9;
        java.io.File file11 = null;
        fileEntry7.file = file11;
        java.io.File file13 = fileEntry7.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = fileEntry7.name;
        java.io.File file15 = fileEntry7.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes16 = fileEntry7.name;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(asciiBytes14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(asciiBytes16);
    }

    @Test
    public void test09596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09596");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter9 = null;
        org.springframework.boot.loader.archive.Archive archive10 = explodedArchive8.getFilteredArchive(entryRenameFilter9);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive8.new FileEntry();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection12 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest13 = explodedArchive8.getManifest();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest15 = explodedArchive8.getManifest();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL16 = explodedArchive8.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(archive10);
        org.junit.Assert.assertNotNull(entryCollection12);
        org.junit.Assert.assertNull(manifest13);
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNull(manifest15);
    }

    @Test
    public void test09597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09597");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry2 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest3 = explodedArchive0.getManifest();
        boolean boolean4 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive0.new FileEntry();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test09598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09598");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        java.lang.String str11 = uRL9.getQuery();
        java.lang.String str12 = uRL9.getRef();
        java.net.URL uRL14 = new java.net.URL(uRL9, "hi!://:100/hi!://:100/archive");
        java.lang.String str15 = uRL14.getRef();
        int int16 = uRL14.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str27 = explodedArchive26.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection28 = explodedArchive26.getEntries();
        java.util.jar.Manifest manifest29 = explodedArchive26.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler30 = explodedArchive26.new FilteredURLStreamHandler();
        java.net.URL uRL31 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler30);
        java.lang.String str32 = uRL31.getQuery();
        java.lang.String str33 = uRL31.getHost();
        int int34 = uRL31.getPort();
        java.lang.String str35 = uRL31.getQuery();
        java.net.URL uRL37 = new java.net.URL(uRL31, "");
        java.io.File file39 = null;
        java.io.File file40 = null;
        java.io.File file41 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter44 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList45 = explodedArchive42.getNestedArchives(entryFilter44);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive42.getNestedArchives(entryFilter46);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap48 = explodedArchive42.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file41, asciiBytesMap48);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap50 = explodedArchive49.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive(file40, asciiBytesMap50);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive(file39, asciiBytesMap50);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler53 = explodedArchive52.new FilteredURLStreamHandler();
        java.net.URL uRL54 = new java.net.URL(uRL37, "", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        java.net.URL uRL55 = new java.net.URL(":100", "archive://:10archive", (int) (short) -1, "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        java.net.URL uRL56 = new java.net.URL(uRL14, "[hi!://:100/hi!:1]", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str62 = explodedArchive61.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection63 = explodedArchive61.getEntries();
        java.util.jar.Manifest manifest64 = explodedArchive61.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler65 = explodedArchive61.new FilteredURLStreamHandler();
        java.net.URL uRL66 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.lang.String str67 = uRL66.getQuery();
        java.lang.String str68 = uRL66.getRef();
        java.lang.String str69 = uRL66.getRef();
        java.lang.String str70 = uRL66.toExternalForm();
        int int71 = uRL66.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler73 = null;
        java.net.URL uRL74 = new java.net.URL(uRL66, "hi!://:100/hi!://:100", uRLStreamHandler73);
        java.lang.String str75 = uRL74.getRef();
        java.lang.String str76 = uRL74.getHost();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection77 = filteredURLStreamHandler53.openConnection(uRL74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals(uRL14.toString(), "hi!://:100/hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "archive" + "'", str27, "archive");
        org.junit.Assert.assertNotNull(entryCollection28);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertEquals(uRL31.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(archiveList45);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertNotNull(asciiBytesMap48);
        org.junit.Assert.assertNotNull(asciiBytesMap50);
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL55.toString(), ":100://[archive://:10archive]hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals(uRL56.toString(), "hi!://:100/hi!://:100/hi!://:100/[hi!://:100/hi!:1]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "archive" + "'", str62, "archive");
        org.junit.Assert.assertNotNull(entryCollection63);
        org.junit.Assert.assertNull(manifest64);
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!://:100" + "'", str70, "hi!://:100");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertEquals(uRL74.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
    }

    @Test
    public void test09599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09599");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        java.util.jar.Manifest manifest13 = null;
        explodedArchive11.manifest = manifest13;
        java.util.jar.Manifest manifest15 = null;
        explodedArchive11.manifest = manifest15;
        java.io.File file17 = null;
        explodedArchive11.root = file17;
        java.io.File file19 = null;
        explodedArchive11.root = file19;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry21 = explodedArchive11.new FileEntry();
        java.io.File file22 = null;
        fileEntry21.file = file22;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes24 = fileEntry21.getName();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(asciiBytes24);
    }

    @Test
    public void test09600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09600");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest3 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler4 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive0.getFilteredArchive(entryRenameFilter5);
        java.util.jar.Manifest manifest7 = explodedArchive0.getManifest();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection8 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest9 = explodedArchive0.getManifest();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(manifest3);
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNotNull(entryCollection8);
        org.junit.Assert.assertNull(manifest9);
    }

    @Test
    public void test09601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09601");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry2 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest3 = explodedArchive0.getManifest();
        boolean boolean4 = explodedArchive0.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection5 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str7 = explodedArchive6.toString();
        boolean boolean8 = explodedArchive6.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter9 = null;
        org.springframework.boot.loader.archive.Archive archive10 = explodedArchive6.getFilteredArchive(entryRenameFilter9);
        java.io.File file11 = explodedArchive6.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter15 = null;
        org.springframework.boot.loader.archive.Archive archive16 = explodedArchive12.getFilteredArchive(entryRenameFilter15);
        java.io.File file17 = explodedArchive12.root;
        java.lang.String str18 = explodedArchive12.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive12.entries;
        explodedArchive6.entries = asciiBytesMap19;
        explodedArchive0.entries = asciiBytesMap19;
        java.io.File file22 = null;
        explodedArchive0.root = file22;
        java.util.jar.Manifest manifest24 = explodedArchive0.manifest;
        boolean boolean25 = explodedArchive0.filtered;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(entryCollection5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(archive10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNotNull(archive16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test09602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09602");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL1 = new java.net.URL("hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test09603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09603");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive3.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = null;
        explodedArchive3.entries = asciiBytesMap7;
        java.io.File file9 = explodedArchive3.root;
        java.io.File file10 = explodedArchive3.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive11.getNestedArchives(entryFilter13);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive11.getNestedArchives(entryFilter15);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive11.entries;
        explodedArchive3.entries = asciiBytesMap17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap17);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap17);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection21 = explodedArchive20.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive20.new FilteredURLStreamHandler();
        java.io.File file23 = explodedArchive20.root;
        java.util.jar.Manifest manifest24 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive20.new FilteredURLStreamHandler();
        java.io.File file26 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive27.getNestedArchives(entryFilter29);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter31 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList32 = explodedArchive27.getNestedArchives(entryFilter31);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap33 = explodedArchive27.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file26, asciiBytesMap33);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive34.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive34.getNestedArchives(entryFilter36);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive38.filtered = true;
        java.util.jar.Manifest manifest41 = null;
        explodedArchive38.manifest = manifest41;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter43 = null;
        org.springframework.boot.loader.archive.Archive archive44 = explodedArchive38.getFilteredArchive(entryRenameFilter43);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive38.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection46 = explodedArchive38.getEntries();
        java.util.jar.Manifest manifest47 = explodedArchive38.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter48 = null;
        org.springframework.boot.loader.archive.Archive archive49 = explodedArchive38.getFilteredArchive(entryRenameFilter48);
        java.util.jar.Manifest manifest50 = null;
        explodedArchive38.manifest = manifest50;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap52 = explodedArchive38.entries;
        explodedArchive34.entries = asciiBytesMap52;
        explodedArchive20.entries = asciiBytesMap52;
        java.lang.String str55 = explodedArchive20.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str57 = explodedArchive56.toString();
        java.util.jar.Manifest manifest58 = null;
        explodedArchive56.manifest = manifest58;
        java.io.File file60 = null;
        explodedArchive56.root = file60;
        boolean boolean62 = explodedArchive56.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry63 = explodedArchive56.new FileEntry();
        java.util.jar.Manifest manifest64 = explodedArchive56.getManifest();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection65 = explodedArchive56.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file67 = explodedArchive66.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter68 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList69 = explodedArchive66.getNestedArchives(entryFilter68);
        java.util.jar.Manifest manifest70 = null;
        explodedArchive66.manifest = manifest70;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler72 = explodedArchive66.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter73 = null;
        org.springframework.boot.loader.archive.Archive archive74 = explodedArchive66.getFilteredArchive(entryRenameFilter73);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap75 = explodedArchive66.entries;
        explodedArchive56.entries = asciiBytesMap75;
        explodedArchive20.entries = asciiBytesMap75;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap75);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(asciiBytesMap17);
        org.junit.Assert.assertNotNull(entryCollection21);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNotNull(archiveList32);
        org.junit.Assert.assertNotNull(asciiBytesMap33);
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertNotNull(archive44);
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNotNull(entryCollection46);
        org.junit.Assert.assertNull(manifest47);
        org.junit.Assert.assertNotNull(archive49);
        org.junit.Assert.assertNotNull(asciiBytesMap52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "archive" + "'", str55, "archive");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "archive" + "'", str57, "archive");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(manifest64);
        org.junit.Assert.assertNotNull(entryCollection65);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(archiveList69);
        org.junit.Assert.assertNotNull(archive74);
        org.junit.Assert.assertNotNull(asciiBytesMap75);
    }

    @Test
    public void test09604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09604");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL9.toExternalForm();
        int int39 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str45 = explodedArchive44.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection46 = explodedArchive44.getEntries();
        java.util.jar.Manifest manifest47 = explodedArchive44.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler48 = explodedArchive44.new FilteredURLStreamHandler();
        java.net.URL uRL49 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler48);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str55 = explodedArchive54.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection56 = explodedArchive54.getEntries();
        java.util.jar.Manifest manifest57 = explodedArchive54.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler58 = explodedArchive54.new FilteredURLStreamHandler();
        java.net.URL uRL59 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler58);
        java.lang.String str60 = uRL59.getQuery();
        java.lang.String str61 = uRL59.getPath();
        boolean boolean62 = uRL49.sameFile(uRL59);
        java.net.URLStreamHandler uRLStreamHandler64 = null;
        java.net.URL uRL65 = new java.net.URL(uRL59, "", uRLStreamHandler64);
        int int66 = uRL65.getPort();
        java.lang.String str67 = uRL65.toExternalForm();
        boolean boolean68 = uRL9.sameFile(uRL65);
        java.lang.Class<?> wildcardClass69 = uRL65.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!://:100" + "'", str38, "hi!://:100");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "archive" + "'", str45, "archive");
        org.junit.Assert.assertNotNull(entryCollection46);
        org.junit.Assert.assertNull(manifest47);
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "archive" + "'", str55, "archive");
        org.junit.Assert.assertNotNull(entryCollection56);
        org.junit.Assert.assertNull(manifest57);
        org.junit.Assert.assertEquals(uRL59.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 100 + "'", int66 == 100);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!://:100" + "'", str67, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test09605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09605");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes6 = null;
        fileEntry4.name = asciiBytes6;
        java.io.File file8 = fileEntry4.file;
        java.io.File file9 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = null;
        fileEntry4.name = asciiBytes10;
        java.io.File file12 = fileEntry4.file;
        java.io.File file13 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = fileEntry4.name;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(asciiBytes14);
    }

    @Test
    public void test09606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09606");
        java.io.File file4 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file6 = explodedArchive5.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive5.getNestedArchives(entryFilter7);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive5.getNestedArchives(entryFilter9);
        java.lang.String str11 = explodedArchive5.toString();
        java.util.jar.Manifest manifest12 = explodedArchive5.manifest;
        java.io.File file13 = null;
        explodedArchive5.root = file13;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive15.getNestedArchives(entryFilter17);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive15.getNestedArchives(entryFilter19);
        java.lang.String str21 = explodedArchive15.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive15.new FilteredURLStreamHandler();
        java.io.File file23 = null;
        java.io.File file24 = null;
        java.io.File file25 = null;
        java.io.File file26 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive27.getNestedArchives(entryFilter29);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter31 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList32 = explodedArchive27.getNestedArchives(entryFilter31);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap33 = explodedArchive27.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file26, asciiBytesMap33);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap35 = explodedArchive34.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file25, asciiBytesMap35);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file24, asciiBytesMap35);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap35);
        explodedArchive15.entries = asciiBytesMap35;
        explodedArchive5.entries = asciiBytesMap35;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap35);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler42 = explodedArchive41.new FilteredURLStreamHandler();
        java.net.URL uRL43 = new java.net.URL("[:100]", "hi!://:100/hi!://:100/hi!:1", (int) (short) -1, "[hi!://:100/:100]:100", (java.net.URLStreamHandler) filteredURLStreamHandler42);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str53 = explodedArchive52.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection54 = explodedArchive52.getEntries();
        java.util.jar.Manifest manifest55 = explodedArchive52.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler56 = explodedArchive52.new FilteredURLStreamHandler();
        java.net.URL uRL57 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler56);
        java.lang.String str58 = uRL57.getQuery();
        java.lang.String str59 = uRL57.getHost();
        int int60 = uRL57.getPort();
        java.lang.String str61 = uRL57.getQuery();
        java.net.URL uRL63 = new java.net.URL(uRL57, "");
        java.io.File file65 = null;
        java.io.File file66 = null;
        java.io.File file67 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file69 = explodedArchive68.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter70 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList71 = explodedArchive68.getNestedArchives(entryFilter70);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter72 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList73 = explodedArchive68.getNestedArchives(entryFilter72);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap74 = explodedArchive68.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive(file67, asciiBytesMap74);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap76 = explodedArchive75.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive(file66, asciiBytesMap76);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive(file65, asciiBytesMap76);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler79 = explodedArchive78.new FilteredURLStreamHandler();
        java.net.URL uRL80 = new java.net.URL(uRL63, "", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        java.net.URL uRL81 = new java.net.URL("hi!", "hi!://:100/hi!", (int) (short) 0, "archive://:10:100", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        java.lang.String str82 = uRL81.getPath();
        java.lang.String str83 = uRL81.getHost();
        java.lang.String str84 = uRL81.getAuthority();
        java.lang.String str85 = uRL81.toExternalForm();
        java.net.URL uRL87 = new java.net.URL(uRL81, "/hi!:1");
        boolean boolean88 = uRL43.sameFile(uRL81);
        java.lang.String str89 = uRL43.getProtocol();
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "archive" + "'", str11, "archive");
        org.junit.Assert.assertNull(manifest12);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNotNull(archiveList32);
        org.junit.Assert.assertNotNull(asciiBytesMap33);
        org.junit.Assert.assertNotNull(asciiBytesMap35);
        org.junit.Assert.assertEquals(uRL43.toString(), "[:100]://[hi!://:100/hi!://:100/hi!:1][hi!://:100/:100]:100");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "archive" + "'", str53, "archive");
        org.junit.Assert.assertNotNull(entryCollection54);
        org.junit.Assert.assertNull(manifest55);
        org.junit.Assert.assertEquals(uRL57.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNotNull(archiveList71);
        org.junit.Assert.assertNotNull(archiveList73);
        org.junit.Assert.assertNotNull(asciiBytesMap74);
        org.junit.Assert.assertNotNull(asciiBytesMap76);
        org.junit.Assert.assertEquals(uRL80.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL81.toString(), "hi!://[hi!://:100/hi!]:0archive://:10:100");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "archive://:10:100" + "'", str82, "archive://:10:100");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[hi!://:100/hi!]" + "'", str83, "[hi!://:100/hi!]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[hi!://:100/hi!]:0" + "'", str84, "[hi!://:100/hi!]:0");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "hi!://[hi!://:100/hi!]:0archive://:10:100" + "'", str85, "hi!://[hi!://:100/hi!]:0archive://:10:100");
        org.junit.Assert.assertEquals(uRL87.toString(), "hi!://[hi!://:100/hi!]:0/hi!:1");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[:100]" + "'", str89, "[:100]");
    }

    @Test
    public void test09607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09607");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getQuery();
        java.net.URL uRL15 = new java.net.URL(uRL9, "");
        java.lang.String str16 = uRL15.getPath();
        int int17 = uRL15.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str23 = explodedArchive22.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection24 = explodedArchive22.getEntries();
        java.util.jar.Manifest manifest25 = explodedArchive22.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler26 = explodedArchive22.new FilteredURLStreamHandler();
        java.net.URL uRL27 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler26);
        java.lang.String str28 = uRL27.getQuery();
        java.lang.String str29 = uRL27.getHost();
        int int30 = uRL27.getPort();
        java.lang.String str31 = uRL27.getQuery();
        java.lang.String str32 = uRL27.getFile();
        java.lang.String str33 = uRL27.getRef();
        boolean boolean34 = uRL15.sameFile(uRL27);
        java.net.URLStreamHandler uRLStreamHandler36 = null;
        java.net.URL uRL37 = new java.net.URL(uRL27, "hi!://:100/[/hi!://:100/archive]", uRLStreamHandler36);
        java.lang.String str38 = uRL27.getQuery();
        java.lang.String str39 = uRL27.getRef();
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream40 = uRL27.openStream();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "archive" + "'", str23, "archive");
        org.junit.Assert.assertNotNull(entryCollection24);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/hi!://:100/[/hi!://:100/archive]");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
    }

    @Test
    public void test09608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09608");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap8);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive10.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive10.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry13 = explodedArchive10.new FileEntry();
        java.lang.String str14 = explodedArchive10.toString();
        java.lang.String str15 = explodedArchive10.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive10.entries;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "archive" + "'", str14, "archive");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "archive" + "'", str15, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap16);
    }

    @Test
    public void test09609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09609");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        boolean boolean9 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest10 = explodedArchive0.manifest;
        java.lang.String str11 = explodedArchive0.toString();
        java.lang.String str12 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry13 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = fileEntry13.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes15 = null;
        fileEntry13.name = asciiBytes15;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "archive" + "'", str11, "archive");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "archive" + "'", str12, "archive");
        org.junit.Assert.assertNull(asciiBytes14);
    }

    @Test
    public void test09610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09610");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getQuery();
        int int25 = uRL9.getPort();
        int int26 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getPath();
        java.lang.String str39 = uRL37.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection47 = explodedArchive45.getEntries();
        java.util.jar.Manifest manifest48 = explodedArchive45.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.net.URL uRL51 = new java.net.URL(uRL37, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter59 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList60 = explodedArchive57.getNestedArchives(entryFilter59);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection61 = explodedArchive57.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap62 = explodedArchive57.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive57.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL("/archive", "hi!://:100/hi!", (int) (byte) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL65 = new java.net.URL(uRL51, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL66 = new java.net.URL(uRL9, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.io.File file80 = null;
        java.io.File file81 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file83 = explodedArchive82.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter84 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList85 = explodedArchive82.getNestedArchives(entryFilter84);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter86 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList87 = explodedArchive82.getNestedArchives(entryFilter86);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap88 = explodedArchive82.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive89 = new org.springframework.boot.loader.archive.ExplodedArchive(file81, asciiBytesMap88);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap90 = explodedArchive89.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive91 = new org.springframework.boot.loader.archive.ExplodedArchive(file80, asciiBytesMap90);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler92 = explodedArchive91.new FilteredURLStreamHandler();
        java.net.URL uRL93 = new java.net.URL("", "archive://:10archive", (int) (short) 100, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler92);
        java.net.URL uRL94 = new java.net.URL("hi!", "://[archive://:10archive]:100archive://:10archive", 0, "hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler92);
        java.net.URL uRL95 = new java.net.URL("/hi!", "archive", (int) (short) -1, "archive://:10:100", (java.net.URLStreamHandler) filteredURLStreamHandler92);
        java.net.URL uRL96 = new java.net.URL(uRL66, "/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler92);
        java.lang.String str97 = uRL66.getAuthority();
        java.lang.String str98 = uRL66.getProtocol();
        java.lang.String str99 = uRL66.getAuthority();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertNotNull(entryCollection47);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(archiveList60);
        org.junit.Assert.assertNotNull(entryCollection61);
        org.junit.Assert.assertNotNull(asciiBytesMap62);
        org.junit.Assert.assertEquals(uRL64.toString(), "/archive://[hi!://:100/hi!]:1hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertNull(file83);
        org.junit.Assert.assertNotNull(archiveList85);
        org.junit.Assert.assertNotNull(archiveList87);
        org.junit.Assert.assertNotNull(asciiBytesMap88);
        org.junit.Assert.assertNotNull(asciiBytesMap90);
        org.junit.Assert.assertEquals(uRL93.toString(), "://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL94.toString(), "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals(uRL95.toString(), "/hi!://archivearchive://:10:100");
        org.junit.Assert.assertEquals(uRL96.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + ":100" + "'", str97, ":100");
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "hi!" + "'", str98, "hi!");
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + ":100" + "'", str99, ":100");
    }

    @Test
    public void test09611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09611");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive8.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        java.util.jar.Manifest manifest12 = null;
        explodedArchive8.manifest = manifest12;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler14 = explodedArchive8.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = null;
        explodedArchive8.entries = asciiBytesMap15;
        java.io.File file17 = null;
        explodedArchive8.root = file17;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNotNull(archiveList11);
    }

    @Test
    public void test09612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09612");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive8.entries;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        boolean boolean11 = explodedArchive8.filtered;
        java.util.jar.Manifest manifest12 = null;
        explodedArchive8.manifest = manifest12;
        java.util.jar.Manifest manifest14 = explodedArchive8.manifest;
        java.lang.String str15 = explodedArchive8.toString();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(manifest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "archive" + "'", str15, "archive");
    }

    @Test
    public void test09613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09613");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
        java.util.jar.Manifest manifest8 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter9 = null;
        org.springframework.boot.loader.archive.Archive archive10 = explodedArchive0.getFilteredArchive(entryRenameFilter9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive0.entries;
        java.io.File file12 = explodedArchive0.root;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNotNull(archive10);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test09614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09614");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        boolean boolean5 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive0.entries;
        java.io.File file8 = null;
        java.io.File file9 = null;
        java.io.File file10 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive11.getNestedArchives(entryFilter13);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive11.getNestedArchives(entryFilter15);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive11.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive18.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap19);
        explodedArchive20.filtered = true;
        java.io.File file23 = null;
        explodedArchive20.root = file23;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection25 = explodedArchive20.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap26);
        explodedArchive0.entries = asciiBytesMap26;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive0.getNestedArchives(entryFilter29);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter31 = null;
        org.springframework.boot.loader.archive.Archive archive32 = explodedArchive0.getFilteredArchive(entryRenameFilter31);
        java.util.jar.Manifest manifest33 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive0.new FileEntry();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(asciiBytesMap17);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(entryCollection25);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNotNull(archive32);
        org.junit.Assert.assertNull(manifest33);
    }

    @Test
    public void test09615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09615");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive1.getNestedArchives(entryFilter8);
        java.io.File file10 = null;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap21);
        explodedArchive1.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap21);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive25.entries;
        explodedArchive25.filtered = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file30 = explodedArchive29.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter31 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList32 = explodedArchive29.getNestedArchives(entryFilter31);
        explodedArchive29.filtered = false;
        java.util.jar.Manifest manifest35 = explodedArchive29.manifest;
        java.io.File file36 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file38 = explodedArchive37.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive37.getNestedArchives(entryFilter39);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter41 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList42 = explodedArchive37.getNestedArchives(entryFilter41);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap43 = explodedArchive37.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive(file36, asciiBytesMap43);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap45 = explodedArchive44.entries;
        explodedArchive29.entries = asciiBytesMap45;
        java.util.jar.Manifest manifest47 = null;
        explodedArchive29.manifest = manifest47;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection49 = explodedArchive29.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap50 = explodedArchive29.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry51 = explodedArchive29.new FileEntry();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive52 = explodedArchive25.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(archiveList32);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(archiveList42);
        org.junit.Assert.assertNotNull(asciiBytesMap43);
        org.junit.Assert.assertNotNull(asciiBytesMap45);
        org.junit.Assert.assertNotNull(entryCollection49);
        org.junit.Assert.assertNotNull(asciiBytesMap50);
    }

    @Test
    public void test09616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09616");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler3 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest4 = null;
        explodedArchive0.manifest = manifest4;
        java.lang.String str6 = explodedArchive0.toString();
        java.io.File file7 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = explodedArchive8.new FileEntry();
        java.util.jar.Manifest manifest11 = explodedArchive8.getManifest();
        java.util.jar.Manifest manifest12 = explodedArchive8.manifest;
        java.io.File file13 = null;
        explodedArchive8.root = file13;
        explodedArchive8.filtered = true;
        java.io.File file17 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive18.getNestedArchives(entryFilter20);
        explodedArchive18.filtered = false;
        java.util.jar.Manifest manifest24 = explodedArchive18.manifest;
        java.io.File file25 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file27 = explodedArchive26.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive26.getNestedArchives(entryFilter28);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive26.getNestedArchives(entryFilter30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file25, asciiBytesMap32);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive33.entries;
        explodedArchive18.entries = asciiBytesMap34;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap34);
        java.util.jar.Manifest manifest37 = null;
        explodedArchive36.manifest = manifest37;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive36.entries;
        explodedArchive8.entries = asciiBytesMap39;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file7, asciiBytesMap39);
        explodedArchive0.entries = asciiBytesMap39;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter43 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList44 = explodedArchive0.getNestedArchives(entryFilter43);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertNull(manifest12);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertNotNull(archiveList44);
    }

    @Test
    public void test09617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09617");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getHost();
        int int24 = uRL21.getPort();
        java.lang.String str25 = uRL21.getQuery();
        boolean boolean26 = uRL9.sameFile(uRL21);
        java.lang.String str27 = uRL9.toExternalForm();
        java.net.URL uRL29 = new java.net.URL(uRL9, "/hi!");
        java.lang.String str30 = uRL29.getQuery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!://:100" + "'", str27, "hi!://:100");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test09618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09618");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        java.lang.String str12 = uRL9.getHost();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getFile();
        java.lang.String str15 = uRL9.getProtocol();
        java.lang.String str16 = uRL9.getUserInfo();
        java.lang.String str17 = uRL9.getPath();
        java.lang.String str18 = uRL9.getFile();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test09619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09619");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getAuthority();
        java.lang.String str25 = uRL9.getPath();
        int int26 = uRL9.getDefaultPort();
        java.lang.String str27 = uRL9.getAuthority();
        java.lang.String str28 = uRL9.getAuthority();
        java.lang.String str29 = uRL9.getRef();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + ":100" + "'", str27, ":100");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + ":100" + "'", str28, ":100");
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test09620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09620");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry2 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes3 = fileEntry2.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes4 = fileEntry2.name;
        java.io.File file5 = null;
        fileEntry2.file = file5;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = fileEntry2.getName();
        java.io.File file8 = fileEntry2.getFile();
        java.io.File file9 = fileEntry2.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = fileEntry2.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = null;
        fileEntry2.name = asciiBytes11;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(asciiBytes3);
        org.junit.Assert.assertNull(asciiBytes4);
        org.junit.Assert.assertNull(asciiBytes7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(asciiBytes10);
    }

    @Test
    public void test09621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09621");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive0.new FileEntry();
        explodedArchive0.filtered = true;
        java.io.File file8 = null;
        explodedArchive0.root = file8;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive11.getNestedArchives(entryFilter13);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive11.getNestedArchives(entryFilter15);
        java.lang.String str17 = explodedArchive11.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler18 = explodedArchive11.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest19 = explodedArchive11.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive11.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry21 = explodedArchive11.new FileEntry();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive22 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
    }

    @Test
    public void test09622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09622");
        java.io.File file4 = null;
        java.io.File file5 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive6.getNestedArchives(entryFilter8);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive6.getNestedArchives(entryFilter10);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = explodedArchive6.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file5, asciiBytesMap12);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap14);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL17 = new java.net.URL("", "archive://:10archive", (int) (short) 100, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler16);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str35 = explodedArchive34.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection36 = explodedArchive34.getEntries();
        java.util.jar.Manifest manifest37 = explodedArchive34.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str45 = explodedArchive44.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection46 = explodedArchive44.getEntries();
        java.util.jar.Manifest manifest47 = explodedArchive44.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler48 = explodedArchive44.new FilteredURLStreamHandler();
        java.net.URL uRL49 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler48);
        java.lang.String str50 = uRL49.getQuery();
        java.lang.String str51 = uRL49.getPath();
        boolean boolean52 = uRL39.sameFile(uRL49);
        java.net.URLStreamHandler uRLStreamHandler54 = null;
        java.net.URL uRL55 = new java.net.URL(uRL49, "", uRLStreamHandler54);
        int int56 = uRL55.getPort();
        java.lang.String str57 = uRL55.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str68 = explodedArchive67.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap69 = null;
        explodedArchive67.entries = asciiBytesMap69;
        java.util.jar.Manifest manifest71 = null;
        explodedArchive67.manifest = manifest71;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler73 = explodedArchive67.new FilteredURLStreamHandler();
        java.net.URL uRL74 = new java.net.URL("hi!", ":100", (int) '4', "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler73);
        java.net.URL uRL75 = new java.net.URL("hi!://:100/hi!://:100/hi!", "/hi!://:100/archive", (-1), "", (java.net.URLStreamHandler) filteredURLStreamHandler73);
        java.net.URL uRL76 = new java.net.URL(uRL55, "hi!://hi!:1hi!", (java.net.URLStreamHandler) filteredURLStreamHandler73);
        java.net.URL uRL77 = new java.net.URL("hi!://:100/hi!://:100/archive", "hi!://:100/:100", (int) (byte) 10, "", (java.net.URLStreamHandler) filteredURLStreamHandler73);
        java.net.URL uRL78 = new java.net.URL("[hi!://:100/hi!]:1", "archive://:10archive", (int) (byte) 100, "hi!://:100/hi!://hi!:1hi!", (java.net.URLStreamHandler) filteredURLStreamHandler73);
        java.net.URL uRL79 = new java.net.URL("hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]", "[hi!://:100/hi!]:1", (int) (byte) 10, ":10", (java.net.URLStreamHandler) filteredURLStreamHandler73);
        java.lang.String str80 = uRL79.getHost();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection81 = filteredURLStreamHandler16.openConnection(uRL79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(asciiBytesMap12);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertEquals(uRL17.toString(), "://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "archive" + "'", str35, "archive");
        org.junit.Assert.assertNotNull(entryCollection36);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "archive" + "'", str45, "archive");
        org.junit.Assert.assertNotNull(entryCollection46);
        org.junit.Assert.assertNull(manifest47);
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals(uRL55.toString(), "hi!://:100");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "archive" + "'", str68, "archive");
        org.junit.Assert.assertEquals(uRL74.toString(), "hi!://[:100]:52hi!");
        org.junit.Assert.assertEquals(uRL75.toString(), "hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]");
        org.junit.Assert.assertEquals(uRL76.toString(), "hi!://:100/hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL77.toString(), "hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10");
        org.junit.Assert.assertEquals(uRL78.toString(), "[hi!://:100/hi!]:1://[archive://:10archive]:100hi!://:100/hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL79.toString(), "hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]://[hi!://:100/hi!]:1:10:10");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[hi!://:100/hi!]:1" + "'", str80, "[hi!://:100/hi!]:1");
    }

    @Test
    public void test09623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09623");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL37.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive40.getNestedArchives(entryFilter42);
        explodedArchive40.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive40.getNestedArchives(entryFilter46);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler48 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL49 = new java.net.URL(uRL37, "", (java.net.URLStreamHandler) filteredURLStreamHandler48);
        java.lang.String str50 = uRL37.toExternalForm();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str56 = explodedArchive55.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection57 = explodedArchive55.getEntries();
        java.util.jar.Manifest manifest58 = explodedArchive55.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler59 = explodedArchive55.new FilteredURLStreamHandler();
        java.net.URL uRL60 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.lang.String str61 = uRL60.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str64 = explodedArchive63.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection65 = explodedArchive63.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler66 = explodedArchive63.new FilteredURLStreamHandler();
        java.net.URL uRL67 = new java.net.URL(uRL60, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        int int68 = uRL67.getPort();
        java.lang.String str69 = uRL67.toExternalForm();
        java.lang.String str70 = uRL67.getQuery();
        boolean boolean71 = uRL37.sameFile(uRL67);
        int int72 = uRL37.getDefaultPort();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj73 = uRL37.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/archive" + "'", str38, "/archive");
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!://:100/archive" + "'", str50, "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "archive" + "'", str56, "archive");
        org.junit.Assert.assertNotNull(entryCollection57);
        org.junit.Assert.assertNull(manifest58);
        org.junit.Assert.assertEquals(uRL60.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "archive" + "'", str64, "archive");
        org.junit.Assert.assertNotNull(entryCollection65);
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!://:100/hi!" + "'", str69, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
    }

    @Test
    public void test09624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09624");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
        java.lang.String str8 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry9 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = fileEntry9.name;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertNull(asciiBytes10);
    }

    @Test
    public void test09625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09625");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive4.getNestedArchives(entryFilter8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive4.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive4.getNestedArchives(entryFilter11);
        java.io.File file13 = null;
        explodedArchive4.root = file13;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection15 = explodedArchive4.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL17 = new java.net.URL("hi!://:100/hi!", "hi!:1", 100, "[/hi!://:100/archive]", (java.net.URLStreamHandler) filteredURLStreamHandler16);
        int int18 = uRL17.getPort();
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(entryCollection15);
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100/hi!://[hi!:1]:100[/hi!://:100/archive]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
    }

    @Test
    public void test09626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09626");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getFile();
        java.lang.String str25 = uRL9.getAuthority();
        int int26 = uRL9.getPort();
        java.lang.String str27 = uRL9.getFile();
        java.net.URL uRL29 = new java.net.URL(uRL9, "hi!://:100/hi!://:100");
        java.lang.String str30 = uRL29.getQuery();
        java.lang.String str31 = uRL29.getFile();
        java.net.URL uRL33 = new java.net.URL(uRL29, "/hi!:1");
        java.lang.String str34 = uRL29.getQuery();
        java.lang.String str35 = uRL29.toExternalForm();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + ":100" + "'", str25, ":100");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!://:100/hi!://:100" + "'", str31, "/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100/hi!:1");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!://:100/hi!://:100/hi!://:100" + "'", str35, "hi!://:100/hi!://:100/hi!://:100");
    }

    @Test
    public void test09627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09627");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        boolean boolean12 = explodedArchive11.filtered;
        explodedArchive11.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive11.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file18 = explodedArchive17.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive17.getNestedArchives(entryFilter19);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry21 = explodedArchive17.new FileEntry();
        java.lang.String str22 = explodedArchive17.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = explodedArchive17.entries;
        java.util.jar.Manifest manifest24 = null;
        explodedArchive17.manifest = manifest24;
        java.io.File file26 = null;
        explodedArchive17.root = file26;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection28 = explodedArchive17.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive17.entries;
        explodedArchive11.entries = asciiBytesMap29;
        java.io.File file31 = null;
        explodedArchive11.root = file31;
        boolean boolean33 = explodedArchive11.filtered;
        java.util.jar.Manifest manifest34 = null;
        explodedArchive11.manifest = manifest34;
        boolean boolean36 = explodedArchive11.filtered;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap23);
        org.junit.Assert.assertNotNull(entryCollection28);
        org.junit.Assert.assertNotNull(asciiBytesMap29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test09628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09628");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        boolean boolean9 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive0.getFilteredArchive(entryRenameFilter10);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection12 = explodedArchive0.getEntries();
        boolean boolean13 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive0.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter19 = null;
        org.springframework.boot.loader.archive.Archive archive20 = explodedArchive16.getFilteredArchive(entryRenameFilter19);
        java.io.File file21 = explodedArchive16.root;
        java.util.jar.Manifest manifest22 = explodedArchive16.getManifest();
        java.util.jar.Manifest manifest23 = null;
        explodedArchive16.manifest = manifest23;
        java.io.File file25 = null;
        explodedArchive16.root = file25;
        java.util.jar.Manifest manifest27 = null;
        explodedArchive16.manifest = manifest27;
        explodedArchive16.filtered = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive31.getNestedArchives(entryFilter33);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive31.getNestedArchives(entryFilter35);
        explodedArchive31.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive31.getNestedArchives(entryFilter39);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter41 = null;
        org.springframework.boot.loader.archive.Archive archive42 = explodedArchive31.getFilteredArchive(entryRenameFilter41);
        java.io.File file43 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive44.getNestedArchives(entryFilter46);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap48 = null;
        explodedArchive44.entries = asciiBytesMap48;
        boolean boolean50 = explodedArchive44.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry51 = explodedArchive44.new FileEntry();
        java.io.File file52 = null;
        java.io.File file53 = null;
        java.io.File file54 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file56 = explodedArchive55.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter57 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList58 = explodedArchive55.getNestedArchives(entryFilter57);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter59 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList60 = explodedArchive55.getNestedArchives(entryFilter59);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap61 = explodedArchive55.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive(file54, asciiBytesMap61);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap63 = explodedArchive62.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive(file53, asciiBytesMap63);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive(file52, asciiBytesMap63);
        explodedArchive44.entries = asciiBytesMap63;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive(file43, asciiBytesMap63);
        java.io.File file68 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file70 = explodedArchive69.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter71 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList72 = explodedArchive69.getNestedArchives(entryFilter71);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter73 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList74 = explodedArchive69.getNestedArchives(entryFilter73);
        java.lang.String str75 = explodedArchive69.toString();
        java.util.jar.Manifest manifest76 = explodedArchive69.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap77 = explodedArchive69.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive(file68, asciiBytesMap77);
        explodedArchive67.entries = asciiBytesMap77;
        explodedArchive31.entries = asciiBytesMap77;
        explodedArchive16.entries = asciiBytesMap77;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap82 = explodedArchive16.entries;
        explodedArchive0.entries = asciiBytesMap82;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(archive11);
        org.junit.Assert.assertNotNull(entryCollection12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNotNull(archive20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(manifest22);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(archive42);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(archiveList58);
        org.junit.Assert.assertNotNull(archiveList60);
        org.junit.Assert.assertNotNull(asciiBytesMap61);
        org.junit.Assert.assertNotNull(asciiBytesMap63);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNotNull(archiveList72);
        org.junit.Assert.assertNotNull(archiveList74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "archive" + "'", str75, "archive");
        org.junit.Assert.assertNull(manifest76);
        org.junit.Assert.assertNotNull(asciiBytesMap77);
        org.junit.Assert.assertNotNull(asciiBytesMap82);
    }

    @Test
    public void test09629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09629");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        int int42 = uRL9.getDefaultPort();
        java.lang.String str43 = uRL9.getAuthority();
        int int44 = uRL9.getDefaultPort();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI45 = uRL9.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + ":100" + "'", str43, ":100");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
    }

    @Test
    public void test09630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09630");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive3.getNestedArchives(entryFilter5);
        explodedArchive3.filtered = false;
        java.util.jar.Manifest manifest9 = explodedArchive3.manifest;
        java.io.File file10 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive11.getNestedArchives(entryFilter13);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive11.getNestedArchives(entryFilter15);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive11.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive18.entries;
        explodedArchive3.entries = asciiBytesMap19;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive21.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap22);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap22);
        java.util.jar.Manifest manifest25 = explodedArchive24.manifest;
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(asciiBytesMap17);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNull(manifest25);
    }

    @Test
    public void test09631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09631");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        java.util.jar.Manifest manifest13 = null;
        explodedArchive11.manifest = manifest13;
        explodedArchive11.filtered = true;
        java.io.File file17 = null;
        java.io.File file18 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive19.getNestedArchives(entryFilter21);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry23 = explodedArchive19.new FileEntry();
        java.lang.String str24 = explodedArchive19.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry25 = explodedArchive19.new FileEntry();
        java.util.jar.Manifest manifest26 = null;
        explodedArchive19.manifest = manifest26;
        java.lang.String str28 = explodedArchive19.toString();
        java.io.File file29 = null;
        java.io.File file30 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive31.getNestedArchives(entryFilter33);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive31.getNestedArchives(entryFilter35);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap37 = explodedArchive31.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter38 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList39 = explodedArchive31.getNestedArchives(entryFilter38);
        java.io.File file40 = null;
        java.io.File file41 = null;
        java.io.File file42 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file44 = explodedArchive43.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter45 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList46 = explodedArchive43.getNestedArchives(entryFilter45);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter47 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList48 = explodedArchive43.getNestedArchives(entryFilter47);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap49 = explodedArchive43.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive(file42, asciiBytesMap49);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap51 = explodedArchive50.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive(file41, asciiBytesMap51);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file40, asciiBytesMap51);
        explodedArchive31.entries = asciiBytesMap51;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive(file30, asciiBytesMap51);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap56 = explodedArchive55.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive(file29, asciiBytesMap56);
        explodedArchive19.entries = asciiBytesMap56;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap56);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry60 = explodedArchive59.new FileEntry();
        java.util.jar.Manifest manifest61 = explodedArchive59.manifest;
        java.util.jar.Manifest manifest62 = explodedArchive59.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str64 = explodedArchive63.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection65 = explodedArchive63.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler66 = explodedArchive63.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler67 = explodedArchive63.new FilteredURLStreamHandler();
        java.io.File file68 = explodedArchive63.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str70 = explodedArchive69.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection71 = explodedArchive69.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler72 = explodedArchive69.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest73 = null;
        explodedArchive69.manifest = manifest73;
        java.lang.String str75 = explodedArchive69.toString();
        boolean boolean76 = explodedArchive69.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file78 = explodedArchive77.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter79 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList80 = explodedArchive77.getNestedArchives(entryFilter79);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry81 = explodedArchive77.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler82 = explodedArchive77.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap83 = explodedArchive77.entries;
        explodedArchive69.entries = asciiBytesMap83;
        explodedArchive63.entries = asciiBytesMap83;
        explodedArchive59.entries = asciiBytesMap83;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive87 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap83);
        explodedArchive11.entries = asciiBytesMap83;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap89 = explodedArchive11.entries;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "archive" + "'", str24, "archive");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "archive" + "'", str28, "archive");
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertNotNull(asciiBytesMap37);
        org.junit.Assert.assertNotNull(archiveList39);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(archiveList46);
        org.junit.Assert.assertNotNull(archiveList48);
        org.junit.Assert.assertNotNull(asciiBytesMap49);
        org.junit.Assert.assertNotNull(asciiBytesMap51);
        org.junit.Assert.assertNotNull(asciiBytesMap56);
        org.junit.Assert.assertNull(manifest61);
        org.junit.Assert.assertNull(manifest62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "archive" + "'", str64, "archive");
        org.junit.Assert.assertNotNull(entryCollection65);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "archive" + "'", str70, "archive");
        org.junit.Assert.assertNotNull(entryCollection71);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "archive" + "'", str75, "archive");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(file78);
        org.junit.Assert.assertNotNull(archiveList80);
        org.junit.Assert.assertNotNull(asciiBytesMap83);
        org.junit.Assert.assertNotNull(asciiBytesMap89);
    }

    @Test
    public void test09632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09632");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        java.io.File file5 = explodedArchive0.root;
        java.util.jar.Manifest manifest6 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str8 = explodedArchive7.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive7.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive7.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest11 = null;
        explodedArchive7.manifest = manifest11;
        java.lang.String str13 = explodedArchive7.toString();
        java.io.File file14 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str16 = explodedArchive15.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry17 = explodedArchive15.new FileEntry();
        java.util.jar.Manifest manifest18 = explodedArchive15.getManifest();
        java.util.jar.Manifest manifest19 = explodedArchive15.manifest;
        java.io.File file20 = null;
        explodedArchive15.root = file20;
        explodedArchive15.filtered = true;
        java.io.File file24 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive25.getNestedArchives(entryFilter27);
        explodedArchive25.filtered = false;
        java.util.jar.Manifest manifest31 = explodedArchive25.manifest;
        java.io.File file32 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file34 = explodedArchive33.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive33.getNestedArchives(entryFilter35);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter37 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList38 = explodedArchive33.getNestedArchives(entryFilter37);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive33.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file32, asciiBytesMap39);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap41 = explodedArchive40.entries;
        explodedArchive25.entries = asciiBytesMap41;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file24, asciiBytesMap41);
        java.util.jar.Manifest manifest44 = null;
        explodedArchive43.manifest = manifest44;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap46 = explodedArchive43.entries;
        explodedArchive15.entries = asciiBytesMap46;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive(file14, asciiBytesMap46);
        explodedArchive7.entries = asciiBytesMap46;
        explodedArchive0.entries = asciiBytesMap46;
        java.io.File file51 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter54 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList55 = explodedArchive52.getNestedArchives(entryFilter54);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter56 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList57 = explodedArchive52.getNestedArchives(entryFilter56);
        java.lang.String str58 = explodedArchive52.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler59 = explodedArchive52.new FilteredURLStreamHandler();
        java.io.File file60 = null;
        explodedArchive52.root = file60;
        boolean boolean62 = explodedArchive52.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry63 = explodedArchive52.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes64 = null;
        fileEntry63.name = asciiBytes64;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes66 = fileEntry63.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes67 = fileEntry63.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes68 = null;
        fileEntry63.name = asciiBytes68;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive70 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "archive" + "'", str16, "archive");
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertNotNull(archiveList38);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertNotNull(asciiBytesMap41);
        org.junit.Assert.assertNotNull(asciiBytesMap46);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(archiveList55);
        org.junit.Assert.assertNotNull(archiveList57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "archive" + "'", str58, "archive");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(asciiBytes66);
        org.junit.Assert.assertNull(asciiBytes67);
    }

    @Test
    public void test09633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09633");
        java.lang.String str1 = java.net.URLConnection.guessContentTypeFromName("://[hi!://:100/:100]:100/hi!://:100");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test09634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09634");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.lang.String str29 = uRL28.getAuthority();
        int int30 = uRL28.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive32.getNestedArchives(entryFilter34);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive32.getNestedArchives(entryFilter36);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive32.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler39 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL40 = new java.net.URL(uRL28, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler39);
        java.net.URL uRL41 = new java.net.URL("/hi!://:100", "", (int) (byte) 0, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler39);
        java.net.URL uRL42 = new java.net.URL("", "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", (int) (byte) 1, "/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler39);
        java.net.URL uRL43 = new java.net.URL("hi!://:100/hi!://[hi!:1]:100[/hi!://:100/archive]", "/archive://[hi!://:100/hi!]:1/hi!", 52, "[/hi!://:100/archive]:0", (java.net.URLStreamHandler) filteredURLStreamHandler39);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI44 = uRL43.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100/hi!://[hi!:1]:100[/hi!://:100/archive]://[/archive://[hi!://:100/hi!]:1/hi!]:52[/hi!://:100/archive]:0");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + ":100" + "'", str29, ":100");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL41.toString(), "/hi!://:100://:0archive://:10archive");
        org.junit.Assert.assertEquals(uRL42.toString(), "://[hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1]:1/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://:100/hi!://[hi!:1]:100[/hi!://:100/archive]://[/archive://[hi!://:100/hi!]:1/hi!]:52[/hi!://:100/archive]:0");
    }

    @Test
    public void test09635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09635");
        java.io.File file4 = null;
        java.io.File file5 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive6.getNestedArchives(entryFilter8);
        explodedArchive6.filtered = false;
        java.util.jar.Manifest manifest12 = explodedArchive6.manifest;
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive21.entries;
        explodedArchive6.entries = asciiBytesMap22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file5, asciiBytesMap22);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap22);
        explodedArchive25.filtered = true;
        java.util.jar.Manifest manifest28 = explodedArchive25.manifest;
        explodedArchive25.filtered = true;
        java.io.File file31 = null;
        explodedArchive25.root = file31;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive25.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL("hi!:1", "://[archive://:10archive]:100archive://:10archive", (int) (short) 10, "hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.lang.String str35 = uRL34.getQuery();
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(manifest12);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNull(manifest28);
        org.junit.Assert.assertEquals(uRL34.toString(), "hi!:1://[://[archive://:10archive]:100archive://:10archive]:10hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]");
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test09636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09636");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        java.lang.String str13 = uRL9.getRef();
        java.net.URL uRL15 = new java.net.URL(uRL9, "hi!:1");
        int int16 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getFile();
        int int28 = uRL26.getDefaultPort();
        java.lang.String str29 = uRL26.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str35 = explodedArchive34.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection36 = explodedArchive34.getEntries();
        java.util.jar.Manifest manifest37 = explodedArchive34.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str40 = uRL39.getQuery();
        java.lang.String str41 = uRL39.getRef();
        java.lang.String str42 = uRL39.getRef();
        java.lang.String str43 = uRL39.toExternalForm();
        boolean boolean44 = uRL26.sameFile(uRL39);
        java.lang.String str45 = uRL39.getUserInfo();
        java.lang.String str46 = uRL39.getHost();
        java.lang.String str47 = uRL39.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file50 = explodedArchive49.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter51 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList52 = explodedArchive49.getNestedArchives(entryFilter51);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter53 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList54 = explodedArchive49.getNestedArchives(entryFilter53);
        java.lang.String str55 = explodedArchive49.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler56 = explodedArchive49.new FilteredURLStreamHandler();
        java.net.URL uRL57 = new java.net.URL(uRL39, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler56);
        java.lang.String str58 = uRL57.toExternalForm();
        boolean boolean59 = uRL9.sameFile(uRL57);
        java.lang.String str60 = uRL57.getAuthority();
        java.lang.String str61 = uRL57.getFile();
        java.lang.String str62 = uRL57.getAuthority();
        int int63 = uRL57.getPort();
        java.lang.String str64 = uRL57.toExternalForm();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100/hi!:1");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "archive" + "'", str35, "archive");
        org.junit.Assert.assertNotNull(entryCollection36);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!://:100" + "'", str43, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(archiveList52);
        org.junit.Assert.assertNotNull(archiveList54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "archive" + "'", str55, "archive");
        org.junit.Assert.assertEquals(uRL57.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!://:100/hi!" + "'", str58, "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + ":100" + "'", str60, ":100");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "/hi!" + "'", str61, "/hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + ":100" + "'", str62, ":100");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 100 + "'", int63 == 100);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!://:100/hi!" + "'", str64, "hi!://:100/hi!");
    }

    @Test
    public void test09637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09637");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getPath();
        java.lang.String str15 = uRL13.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL27 = new java.net.URL(uRL13, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL28 = new java.net.URL("hi!://:100/archive", "hi!://:100/archive", 0, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        int int29 = uRL28.getPort();
        java.net.URLStreamHandler uRLStreamHandler31 = null;
        java.net.URL uRL32 = new java.net.URL(uRL28, "hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", uRLStreamHandler31);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/archive://[hi!://:100/archive]:0archive://:10archive");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100/archive://[hi!://:100/archive]:0archive://hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
    }

    @Test
    public void test09638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09638");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.io.File file3 = explodedArchive0.root;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        java.io.File file5 = explodedArchive0.root;
        java.io.File file6 = null;
        explodedArchive0.root = file6;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive0.new FileEntry();
        java.io.File file9 = explodedArchive0.root;
        java.lang.String str10 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive0.getNestedArchives(entryFilter11);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "archive" + "'", str10, "archive");
        org.junit.Assert.assertNotNull(archiveList12);
    }

    @Test
    public void test09639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09639");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getQuery();
        java.net.URL uRL15 = new java.net.URL(uRL9, "");
        java.io.File file17 = null;
        java.io.File file18 = null;
        java.io.File file19 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive20.getNestedArchives(entryFilter22);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive20.getNestedArchives(entryFilter24);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file19, asciiBytesMap26);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = explodedArchive27.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap28);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap28);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL(uRL15, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str50 = explodedArchive49.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection51 = explodedArchive49.getEntries();
        java.util.jar.Manifest manifest52 = explodedArchive49.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler53 = explodedArchive49.new FilteredURLStreamHandler();
        java.net.URL uRL54 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        java.lang.String str55 = uRL54.getQuery();
        java.lang.String str56 = uRL54.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str63 = explodedArchive62.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection64 = explodedArchive62.getEntries();
        java.util.jar.Manifest manifest65 = explodedArchive62.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler66 = explodedArchive62.new FilteredURLStreamHandler();
        java.net.URL uRL67 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.net.URL uRL68 = new java.net.URL(uRL54, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.net.URL uRL69 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.net.URL uRL70 = new java.net.URL("archive://:10archive", "[hi!://:100/hi!]", 10, "://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.net.URL uRL71 = new java.net.URL("hi!://:100/:100", "hi!://:100/:100", (int) (short) 0, "/archive://[hi!://:100/hi!]:1/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        boolean boolean72 = uRL32.sameFile(uRL71);
        int int73 = uRL32.getPort();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection74 = uRL32.openConnection();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNotNull(asciiBytesMap28);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "archive" + "'", str50, "archive");
        org.junit.Assert.assertNotNull(entryCollection51);
        org.junit.Assert.assertNull(manifest52);
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "archive" + "'", str63, "archive");
        org.junit.Assert.assertNotNull(entryCollection64);
        org.junit.Assert.assertNull(manifest65);
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL69.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL70.toString(), "archive://:10archive://[hi!://:100/hi!]:10://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL71.toString(), "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 100 + "'", int73 == 100);
    }

    @Test
    public void test09640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09640");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive4.entries = asciiBytesMap6;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive4.manifest = manifest8;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL11 = new java.net.URL("hi!", ":100", (int) '4', "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler10);
        java.io.File file13 = null;
        java.io.File file14 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive15.getNestedArchives(entryFilter17);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive15.getNestedArchives(entryFilter19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive15.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file14, asciiBytesMap21);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = explodedArchive22.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap23);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry25 = explodedArchive24.new FileEntry();
        explodedArchive24.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter28 = null;
        org.springframework.boot.loader.archive.Archive archive29 = explodedArchive24.getFilteredArchive(entryRenameFilter28);
        java.lang.String str30 = explodedArchive24.toString();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter31 = null;
        org.springframework.boot.loader.archive.Archive archive32 = explodedArchive24.getFilteredArchive(entryRenameFilter31);
        java.lang.String str33 = explodedArchive24.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL(uRL11, "hi!://:100/hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str41 = explodedArchive40.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap42 = null;
        explodedArchive40.entries = asciiBytesMap42;
        java.util.jar.Manifest manifest44 = null;
        explodedArchive40.manifest = manifest44;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler46 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL47 = new java.net.URL("hi!://:100/archive", "/archive", (int) (byte) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler46);
        java.lang.String str48 = uRL47.getPath();
        java.lang.String str49 = uRL47.getFile();
        boolean boolean50 = uRL35.sameFile(uRL47);
        java.io.File file56 = null;
        java.io.File file57 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file59 = explodedArchive58.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter60 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList61 = explodedArchive58.getNestedArchives(entryFilter60);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter62 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList63 = explodedArchive58.getNestedArchives(entryFilter62);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap64 = explodedArchive58.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive(file57, asciiBytesMap64);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap66 = explodedArchive65.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive(file56, asciiBytesMap66);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler68 = explodedArchive67.new FilteredURLStreamHandler();
        java.net.URL uRL69 = new java.net.URL("", "archive://:10archive", (int) (short) 100, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler68);
        java.net.URL uRL70 = new java.net.URL(uRL35, "[://[archive://:10archive]:100archive://:10archive]:100", (java.net.URLStreamHandler) filteredURLStreamHandler68);
        java.net.URL uRL72 = new java.net.URL(uRL35, "[hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!]:0");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertEquals(uRL11.toString(), "hi!://[:100]:52hi!");
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNotNull(asciiBytesMap23);
        org.junit.Assert.assertNotNull(archive29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "archive" + "'", str30, "archive");
        org.junit.Assert.assertNotNull(archive32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://[:100]:52/hi!://:100/hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "archive" + "'", str41, "archive");
        org.junit.Assert.assertEquals(uRL47.toString(), "hi!://:100/archive:///archive:1hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!://:100/archive" + "'", str48, "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!://:100/archive" + "'", str49, "hi!://:100/archive");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(archiveList61);
        org.junit.Assert.assertNotNull(archiveList63);
        org.junit.Assert.assertNotNull(asciiBytesMap64);
        org.junit.Assert.assertNotNull(asciiBytesMap66);
        org.junit.Assert.assertEquals(uRL69.toString(), "://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL70.toString(), "hi!://[:100]:52/hi!://:100/hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100");
        org.junit.Assert.assertEquals(uRL72.toString(), "hi!://[:100]:52/hi!://:100/hi!://:100/[hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!]:0");
    }

    @Test
    public void test09641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09641");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry12.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = fileEntry12.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes15 = null;
        fileEntry12.name = asciiBytes15;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes17 = fileEntry12.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes18 = fileEntry12.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes19 = fileEntry12.name;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(asciiBytes13);
        org.junit.Assert.assertNull(asciiBytes14);
        org.junit.Assert.assertNull(asciiBytes17);
        org.junit.Assert.assertNull(asciiBytes18);
        org.junit.Assert.assertNull(asciiBytes19);
    }

    @Test
    public void test09642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09642");
        java.io.File file4 = null;
        java.io.File file5 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive6.getNestedArchives(entryFilter8);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive6.getNestedArchives(entryFilter10);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = explodedArchive6.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file5, asciiBytesMap12);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap14);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry16 = explodedArchive15.new FileEntry();
        java.io.File file17 = explodedArchive15.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler18 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL19 = new java.net.URL("[hi!://:100/:100]:0", "hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", (int) (short) 0, "hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!://[/:100]:0:32hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler18);
        java.lang.String str20 = uRL19.getQuery();
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(asciiBytesMap12);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertEquals(uRL19.toString(), "[hi!://:100/:100]:0://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!://[/:100]:0:32hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test09643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09643");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = null;
        explodedArchive1.entries = asciiBytesMap5;
        java.io.File file7 = explodedArchive1.root;
        java.io.File file8 = explodedArchive1.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        explodedArchive1.entries = asciiBytesMap15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap15);
        java.util.jar.Manifest manifest18 = null;
        explodedArchive17.manifest = manifest18;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry20 = explodedArchive17.new FileEntry();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive17.entries;
        java.util.jar.Manifest manifest22 = null;
        explodedArchive17.manifest = manifest22;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
    }

    @Test
    public void test09644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09644");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection11 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file13 = null;
        explodedArchive0.root = file13;
        java.util.jar.Manifest manifest15 = explodedArchive0.manifest;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(entryCollection11);
        org.junit.Assert.assertNull(manifest15);
    }

    @Test
    public void test09645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09645");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry2 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes3 = fileEntry2.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes4 = fileEntry2.name;
        java.io.File file5 = null;
        fileEntry2.file = file5;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = null;
        fileEntry2.name = asciiBytes7;
        java.io.File file9 = fileEntry2.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = null;
        fileEntry2.name = asciiBytes10;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = fileEntry2.getName();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = fileEntry2.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(asciiBytes3);
        org.junit.Assert.assertNull(asciiBytes4);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(asciiBytes12);
    }

    @Test
    public void test09646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09646");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.toExternalForm();
        java.lang.String str14 = uRL9.getRef();
        java.lang.String str15 = uRL9.getUserInfo();
        java.lang.String str16 = uRL9.toExternalForm();
        java.lang.String str17 = uRL9.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive22.filtered = true;
        java.util.jar.Manifest manifest25 = null;
        explodedArchive22.manifest = manifest25;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter27 = null;
        org.springframework.boot.loader.archive.Archive archive28 = explodedArchive22.getFilteredArchive(entryRenameFilter27);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection29 = explodedArchive22.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive22.getEntries();
        java.util.jar.Manifest manifest31 = explodedArchive22.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive22.getNestedArchives(entryFilter32);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive22.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!://:100/[/:100]:0", "[hi!://:100/hi!]:0", 52, "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getRef();
        java.lang.Class<?> wildcardClass37 = uRL35.getClass();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str43 = explodedArchive42.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection44 = explodedArchive42.getEntries();
        java.util.jar.Manifest manifest45 = explodedArchive42.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler46 = explodedArchive42.new FilteredURLStreamHandler();
        java.net.URL uRL47 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler46);
        java.lang.String str48 = uRL47.getFile();
        int int49 = uRL47.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str56 = explodedArchive55.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection57 = explodedArchive55.getEntries();
        java.util.jar.Manifest manifest58 = explodedArchive55.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler59 = explodedArchive55.new FilteredURLStreamHandler();
        java.net.URL uRL60 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.lang.String str61 = uRL60.getQuery();
        java.lang.String str62 = uRL60.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str69 = explodedArchive68.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection70 = explodedArchive68.getEntries();
        java.util.jar.Manifest manifest71 = explodedArchive68.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler72 = explodedArchive68.new FilteredURLStreamHandler();
        java.net.URL uRL73 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler72);
        java.net.URL uRL74 = new java.net.URL(uRL60, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler72);
        java.net.URL uRL75 = new java.net.URL(uRL47, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler72);
        java.lang.String str76 = uRL75.getUserInfo();
        java.lang.String str77 = uRL75.getProtocol();
        java.lang.String str78 = uRL75.getRef();
        java.lang.String str79 = uRL75.getQuery();
        java.lang.Class<?> wildcardClass80 = uRL75.getClass();
        java.lang.Class[] classArray81 = new java.lang.Class[] { wildcardClass37, wildcardClass80 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj82 = uRL9.getContent(classArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100" + "'", str13, "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!://:100" + "'", str16, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(archive28);
        org.junit.Assert.assertNotNull(entryCollection29);
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100/[/:100]:0://[hi!://:100/hi!]:0:52hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "archive" + "'", str43, "archive");
        org.junit.Assert.assertNotNull(entryCollection44);
        org.junit.Assert.assertNull(manifest45);
        org.junit.Assert.assertEquals(uRL47.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "archive" + "'", str56, "archive");
        org.junit.Assert.assertNotNull(entryCollection57);
        org.junit.Assert.assertNull(manifest58);
        org.junit.Assert.assertEquals(uRL60.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "archive" + "'", str69, "archive");
        org.junit.Assert.assertNotNull(entryCollection70);
        org.junit.Assert.assertNull(manifest71);
        org.junit.Assert.assertEquals(uRL73.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL74.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL75.toString(), "hi!://:100/archive");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(classArray81);
    }

    @Test
    public void test09647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09647");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        boolean boolean5 = explodedArchive0.filtered;
        boolean boolean6 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        boolean boolean9 = explodedArchive0.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter11 = null;
        org.springframework.boot.loader.archive.Archive archive12 = explodedArchive0.getFilteredArchive(entryRenameFilter11);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(archive12);
    }

    @Test
    public void test09648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09648");
        java.net.URL uRL0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str7 = explodedArchive6.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection8 = explodedArchive6.getEntries();
        java.util.jar.Manifest manifest9 = explodedArchive6.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive6.new FilteredURLStreamHandler();
        java.net.URL uRL11 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler10);
        java.lang.String str12 = uRL11.getQuery();
        java.lang.String str13 = uRL11.getRef();
        int int14 = uRL11.getPort();
        java.lang.String str15 = uRL11.getProtocol();
        java.lang.String str16 = uRL11.getPath();
        java.lang.String str17 = uRL11.getAuthority();
        java.lang.String str18 = uRL11.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str29 = explodedArchive28.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive28.getEntries();
        java.util.jar.Manifest manifest31 = explodedArchive28.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL33 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.lang.String str34 = uRL33.getQuery();
        java.lang.String str35 = uRL33.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str42 = explodedArchive41.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive41.getEntries();
        java.util.jar.Manifest manifest44 = explodedArchive41.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive41.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL33, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file50 = explodedArchive49.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter51 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList52 = explodedArchive49.getNestedArchives(entryFilter51);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry53 = explodedArchive49.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler54 = explodedArchive49.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler55 = explodedArchive49.new FilteredURLStreamHandler();
        java.net.URL uRL56 = new java.net.URL(uRL33, "hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.net.URL uRL57 = new java.net.URL("hi!://:100/hi!", "hi!://:100/:100", (int) (short) 100, "/archive://[hi!://:100/hi!]:1/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.net.URL uRL58 = new java.net.URL(uRL11, "hi!://:100/hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.lang.String str59 = uRL58.toExternalForm();
        java.io.File file69 = null;
        java.io.File file70 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file72 = explodedArchive71.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter73 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList74 = explodedArchive71.getNestedArchives(entryFilter73);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter75 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList76 = explodedArchive71.getNestedArchives(entryFilter75);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap77 = explodedArchive71.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive(file70, asciiBytesMap77);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap79 = explodedArchive78.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive80 = new org.springframework.boot.loader.archive.ExplodedArchive(file69, asciiBytesMap79);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler81 = explodedArchive80.new FilteredURLStreamHandler();
        java.net.URL uRL82 = new java.net.URL("/hi!://:100/archive", "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!", (int) (byte) 100, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler81);
        java.net.URL uRL83 = new java.net.URL("/archive:0", "hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]", (int) (short) 10, "[hi!://:100/hi!]:10", (java.net.URLStreamHandler) filteredURLStreamHandler81);
        java.net.URL uRL84 = new java.net.URL(uRL58, "[/hi!://:100/archive]:32", (java.net.URLStreamHandler) filteredURLStreamHandler81);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL85 = new java.net.URL(uRL0, "/hi!://:100/hi!://hi!", (java.net.URLStreamHandler) filteredURLStreamHandler81);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: /hi!://:100/hi!://hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertNotNull(entryCollection8);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertEquals(uRL11.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + ":100" + "'", str17, ":100");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "archive" + "'", str42, "archive");
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertNull(manifest44);
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL47.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(archiveList52);
        org.junit.Assert.assertEquals(uRL56.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL57.toString(), "hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertEquals(uRL58.toString(), "hi!://:100/hi!://:100/hi!:1");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!://:100/hi!://:100/hi!:1" + "'", str59, "hi!://:100/hi!://:100/hi!:1");
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNotNull(archiveList74);
        org.junit.Assert.assertNotNull(archiveList76);
        org.junit.Assert.assertNotNull(asciiBytesMap77);
        org.junit.Assert.assertNotNull(asciiBytesMap79);
        org.junit.Assert.assertEquals(uRL82.toString(), "/hi!://:100/archive://[hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!]:100hi!://:100");
        org.junit.Assert.assertEquals(uRL83.toString(), "/archive:0://[hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]]:10[hi!://:100/hi!]:10");
        org.junit.Assert.assertEquals(uRL84.toString(), "hi!://:100/hi!://:100/[/hi!://:100/archive]:32");
    }

    @Test
    public void test09649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09649");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        boolean boolean5 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        java.io.File file7 = explodedArchive0.root;
        java.io.File file8 = explodedArchive0.root;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL9 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
    }

    @Test
    public void test09650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09650");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        java.util.jar.Manifest manifest13 = null;
        explodedArchive11.manifest = manifest13;
        java.util.jar.Manifest manifest15 = null;
        explodedArchive11.manifest = manifest15;
        explodedArchive11.filtered = false;
        explodedArchive11.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive11.new FilteredURLStreamHandler();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
    }

    @Test
    public void test09651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09651");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str2 = explodedArchive1.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection3 = explodedArchive1.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler4 = explodedArchive1.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive1.getFilteredArchive(entryRenameFilter5);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str8 = explodedArchive7.toString();
        boolean boolean9 = explodedArchive7.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive7.getFilteredArchive(entryRenameFilter10);
        explodedArchive7.filtered = true;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive7.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive7.entries;
        explodedArchive1.entries = asciiBytesMap15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap15);
        java.io.File file18 = explodedArchive17.root;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter19 = null;
        org.springframework.boot.loader.archive.Archive archive20 = explodedArchive17.getFilteredArchive(entryRenameFilter19);
        java.util.jar.Manifest manifest21 = explodedArchive17.manifest;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "archive" + "'", str2, "archive");
        org.junit.Assert.assertNotNull(entryCollection3);
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(archive11);
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(archive20);
        org.junit.Assert.assertNull(manifest21);
    }

    @Test
    public void test09652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09652");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive0.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive0.new FileEntry();
        boolean boolean6 = explodedArchive0.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive0.entries;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
    }

    @Test
    public void test09653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09653");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        explodedArchive2.filtered = false;
        java.util.jar.Manifest manifest8 = explodedArchive2.manifest;
        java.io.File file9 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive17.entries;
        explodedArchive2.entries = asciiBytesMap18;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap18);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap18);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive21.new FilteredURLStreamHandler();
        boolean boolean23 = explodedArchive21.filtered;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive21.getNestedArchives(entryFilter24);
        java.util.jar.Manifest manifest26 = null;
        explodedArchive21.manifest = manifest26;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str29 = explodedArchive28.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive28.getEntries();
        java.util.jar.Manifest manifest31 = explodedArchive28.manifest;
        boolean boolean32 = explodedArchive28.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap33 = explodedArchive28.entries;
        explodedArchive21.entries = asciiBytesMap33;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap33);
    }

    @Test
    public void test09654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09654");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL1 = new java.net.URL("archive://:10archive://:100/hi!://:100/hi!://:100/archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test09655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09655");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        java.lang.String str25 = uRL22.getRef();
        java.lang.String str26 = uRL22.toExternalForm();
        boolean boolean27 = uRL9.sameFile(uRL22);
        java.lang.String str28 = uRL22.getUserInfo();
        java.lang.String str29 = uRL22.getHost();
        java.lang.String str30 = uRL22.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive32.getNestedArchives(entryFilter34);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive32.getNestedArchives(entryFilter36);
        java.lang.String str38 = explodedArchive32.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler39 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL40 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler39);
        java.lang.String str41 = uRL22.getPath();
        java.net.URL uRL43 = new java.net.URL(uRL22, "[hi!://:100/hi!]");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str50 = explodedArchive49.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection51 = explodedArchive49.getEntries();
        java.util.jar.Manifest manifest52 = explodedArchive49.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler53 = explodedArchive49.new FilteredURLStreamHandler();
        java.net.URL uRL54 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        java.lang.String str55 = uRL54.getQuery();
        java.lang.String str56 = uRL54.getPath();
        java.lang.String str57 = uRL54.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter61 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList62 = explodedArchive59.getNestedArchives(entryFilter61);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter63 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList64 = explodedArchive59.getNestedArchives(entryFilter63);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap65 = explodedArchive59.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler66 = explodedArchive59.new FilteredURLStreamHandler();
        java.net.URL uRL67 = new java.net.URL(uRL54, "", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.net.URL uRL68 = new java.net.URL(uRL43, "hi!://:100/hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.net.URL uRL70 = new java.net.URL(uRL43, "/hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!");
        java.net.Proxy proxy71 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection72 = uRL43.openConnection(proxy71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!://:100" + "'", str26, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://:100/[hi!://:100/hi!]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "archive" + "'", str50, "archive");
        org.junit.Assert.assertNotNull(entryCollection51);
        org.junit.Assert.assertNull(manifest52);
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNotNull(archiveList62);
        org.junit.Assert.assertNotNull(archiveList64);
        org.junit.Assert.assertNotNull(asciiBytesMap65);
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100/[hi!://:100/hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL70.toString(), "hi!://:100/hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!");
    }

    @Test
    public void test09656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09656");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap2 = null;
        explodedArchive0.entries = asciiBytesMap2;
        java.util.jar.Manifest manifest4 = null;
        explodedArchive0.manifest = manifest4;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        java.io.File file8 = fileEntry7.getFile();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNull(file8);
    }

    @Test
    public void test09657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09657");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", ":100", (int) '#', "/hi!://:100/hi!://:100/hi!://:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test09658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09658");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive2.getNestedArchives(entryFilter9);
        java.io.File file11 = null;
        java.io.File file12 = null;
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive21.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap22);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap22);
        explodedArchive2.entries = asciiBytesMap22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap22);
        java.util.jar.Manifest manifest27 = null;
        explodedArchive26.manifest = manifest27;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter29 = null;
        org.springframework.boot.loader.archive.Archive archive30 = explodedArchive26.getFilteredArchive(entryRenameFilter29);
        java.io.File file31 = null;
        explodedArchive26.root = file31;
        java.io.File file33 = null;
        java.io.File file34 = null;
        java.io.File file35 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file37 = explodedArchive36.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter38 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList39 = explodedArchive36.getNestedArchives(entryFilter38);
        explodedArchive36.filtered = false;
        java.util.jar.Manifest manifest42 = explodedArchive36.manifest;
        java.io.File file43 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive44.getNestedArchives(entryFilter46);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter48 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList49 = explodedArchive44.getNestedArchives(entryFilter48);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap50 = explodedArchive44.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive(file43, asciiBytesMap50);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap52 = explodedArchive51.entries;
        explodedArchive36.entries = asciiBytesMap52;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file35, asciiBytesMap52);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive(file34, asciiBytesMap52);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive(file33, asciiBytesMap52);
        explodedArchive26.entries = asciiBytesMap52;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap58 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap58);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry60 = explodedArchive59.new FileEntry();
        java.io.File file61 = explodedArchive59.root;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection62 = explodedArchive59.getEntries();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNotNull(archive30);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(archiveList39);
        org.junit.Assert.assertNull(manifest42);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertNotNull(archiveList49);
        org.junit.Assert.assertNotNull(asciiBytesMap50);
        org.junit.Assert.assertNotNull(asciiBytesMap52);
        org.junit.Assert.assertNotNull(asciiBytesMap58);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(entryCollection62);
    }

    @Test
    public void test09659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09659");
        java.io.File file4 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file6 = explodedArchive5.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive5.getNestedArchives(entryFilter7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = null;
        explodedArchive5.entries = asciiBytesMap9;
        java.io.File file11 = explodedArchive5.root;
        java.io.File file12 = explodedArchive5.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        explodedArchive5.entries = asciiBytesMap19;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap19);
        java.util.jar.Manifest manifest22 = null;
        explodedArchive21.manifest = manifest22;
        explodedArchive21.filtered = true;
        java.io.File file26 = null;
        explodedArchive21.root = file26;
        java.util.jar.Manifest manifest28 = null;
        explodedArchive21.manifest = manifest28;
        java.util.jar.Manifest manifest30 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL("hi!://:100", "/hi!:1", (int) (short) 1, "[://[archive://:10archive]:100archive://:10archive]", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI33 = uRL32.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100://[/hi!:1]:1[://[archive://:10archive]:100archive://:10archive]");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNull(manifest30);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100://[/hi!:1]:1[://[archive://:10archive]:100archive://:10archive]");
    }

    @Test
    public void test09660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09660");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getQuery();
        java.lang.String str15 = uRL13.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL27 = new java.net.URL(uRL13, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL28 = new java.net.URL("/archive", "/archive", (int) (byte) 0, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str39 = uRL38.getQuery();
        java.lang.String str40 = uRL38.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str47 = explodedArchive46.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection48 = explodedArchive46.getEntries();
        java.util.jar.Manifest manifest49 = explodedArchive46.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler50 = explodedArchive46.new FilteredURLStreamHandler();
        java.net.URL uRL51 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        java.net.URL uRL52 = new java.net.URL(uRL38, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        java.lang.String str53 = uRL38.getFile();
        java.lang.String str54 = uRL38.getRef();
        java.net.URL uRL56 = new java.net.URL(uRL38, "");
        boolean boolean57 = uRL28.sameFile(uRL56);
        java.lang.String str58 = uRL56.getRef();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL28.toString(), "/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "archive" + "'", str47, "archive");
        org.junit.Assert.assertNotNull(entryCollection48);
        org.junit.Assert.assertNull(manifest49);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals(uRL56.toString(), "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(str58);
    }

    @Test
    public void test09661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09661");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getAuthority();
        int int11 = uRL9.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:1" + "'", str10, "hi!:1");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test09662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09662");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes6 = null;
        fileEntry4.name = asciiBytes6;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry4.getName();
        java.io.File file9 = null;
        fileEntry4.file = file9;
        java.io.File file11 = fileEntry4.file;
        java.io.File file12 = fileEntry4.getFile();
        java.io.File file13 = fileEntry4.file;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = fileEntry4.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
    }

    @Test
    public void test09663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09663");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getProtocol();
        java.lang.String str14 = uRL9.getPath();
        java.lang.String str15 = uRL9.getAuthority();
        java.lang.String str16 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str27 = explodedArchive26.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection28 = explodedArchive26.getEntries();
        java.util.jar.Manifest manifest29 = explodedArchive26.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler30 = explodedArchive26.new FilteredURLStreamHandler();
        java.net.URL uRL31 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler30);
        java.lang.String str32 = uRL31.getQuery();
        java.lang.String str33 = uRL31.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str40 = explodedArchive39.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection41 = explodedArchive39.getEntries();
        java.util.jar.Manifest manifest42 = explodedArchive39.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler43 = explodedArchive39.new FilteredURLStreamHandler();
        java.net.URL uRL44 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        java.net.URL uRL45 = new java.net.URL(uRL31, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file48 = explodedArchive47.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter49 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList50 = explodedArchive47.getNestedArchives(entryFilter49);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry51 = explodedArchive47.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler52 = explodedArchive47.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler53 = explodedArchive47.new FilteredURLStreamHandler();
        java.net.URL uRL54 = new java.net.URL(uRL31, "hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        java.net.URL uRL55 = new java.net.URL("hi!://:100/hi!", "hi!://:100/:100", (int) (short) 100, "/archive://[hi!://:100/hi!]:1/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        java.net.URL uRL56 = new java.net.URL(uRL9, "hi!://:100/hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        java.lang.String str57 = uRL9.getUserInfo();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI58 = uRL9.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + ":100" + "'", str15, ":100");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "archive" + "'", str27, "archive");
        org.junit.Assert.assertNotNull(entryCollection28);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertEquals(uRL31.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "archive" + "'", str40, "archive");
        org.junit.Assert.assertNotNull(entryCollection41);
        org.junit.Assert.assertNull(manifest42);
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(archiveList50);
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL55.toString(), "hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertEquals(uRL56.toString(), "hi!://:100/hi!://:100/hi!:1");
        org.junit.Assert.assertNull(str57);
    }

    @Test
    public void test09664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09664");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL1 = new java.net.URL("/[hi!://:100/hi!://:100/hi!://:100/archive://[/hi!:1]:1");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: /[hi!://:100/hi!://:100/hi!://:100/archive://[/hi!:1]:1");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test09665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09665");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getFile();
        java.lang.String str25 = uRL9.getAuthority();
        int int26 = uRL9.getPort();
        java.lang.String str27 = uRL9.getFile();
        java.net.URL uRL29 = new java.net.URL(uRL9, "hi!://:100/hi!://:100");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str36 = explodedArchive35.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection37 = explodedArchive35.getEntries();
        java.util.jar.Manifest manifest38 = explodedArchive35.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler39 = explodedArchive35.new FilteredURLStreamHandler();
        java.net.URL uRL40 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler39);
        java.lang.String str41 = uRL40.getPath();
        java.lang.String str42 = uRL40.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str49 = explodedArchive48.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection50 = explodedArchive48.getEntries();
        java.util.jar.Manifest manifest51 = explodedArchive48.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler52 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL53 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler52);
        java.net.URL uRL54 = new java.net.URL(uRL40, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler52);
        java.net.URL uRL55 = new java.net.URL(uRL29, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler52);
        java.lang.String str56 = uRL55.getQuery();
        java.lang.String str57 = uRL55.getUserInfo();
        java.lang.String str58 = uRL55.toExternalForm();
        java.net.URL uRL60 = new java.net.URL(uRL55, "hi!://:100/hi!://:100/hi!://:100/archive");
        java.io.File file61 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file63 = explodedArchive62.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter64 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList65 = explodedArchive62.getNestedArchives(entryFilter64);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter66 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList67 = explodedArchive62.getNestedArchives(entryFilter66);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap68 = explodedArchive62.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive(file61, asciiBytesMap68);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection70 = explodedArchive69.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter71 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList72 = explodedArchive69.getNestedArchives(entryFilter71);
        java.util.jar.Manifest manifest73 = null;
        explodedArchive69.manifest = manifest73;
        java.util.jar.Manifest manifest75 = explodedArchive69.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter76 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList77 = explodedArchive69.getNestedArchives(entryFilter76);
        boolean boolean78 = uRL60.equals((java.lang.Object) entryFilter76);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + ":100" + "'", str25, ":100");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "archive" + "'", str36, "archive");
        org.junit.Assert.assertNotNull(entryCollection37);
        org.junit.Assert.assertNull(manifest38);
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "archive" + "'", str49, "archive");
        org.junit.Assert.assertNotNull(entryCollection50);
        org.junit.Assert.assertNull(manifest51);
        org.junit.Assert.assertEquals(uRL53.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL55.toString(), "hi!://:100/hi!://:100/hi!://hi!");
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!://:100/hi!://:100/hi!://hi!" + "'", str58, "hi!://:100/hi!://:100/hi!://hi!");
        org.junit.Assert.assertEquals(uRL60.toString(), "hi!://:100/hi!://:100/hi!://hi!://:100/hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(archiveList65);
        org.junit.Assert.assertNotNull(archiveList67);
        org.junit.Assert.assertNotNull(asciiBytesMap68);
        org.junit.Assert.assertNotNull(entryCollection70);
        org.junit.Assert.assertNotNull(archiveList72);
        org.junit.Assert.assertNull(manifest75);
        org.junit.Assert.assertNotNull(archiveList77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test09666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09666");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        boolean boolean9 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive0.getFilteredArchive(entryRenameFilter10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive0.new FileEntry();
        java.io.File file13 = null;
        fileEntry12.file = file13;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes15 = fileEntry12.name;
        java.io.File file16 = fileEntry12.file;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(archive11);
        org.junit.Assert.assertNull(asciiBytes15);
        org.junit.Assert.assertNull(file16);
    }

    @Test
    public void test09667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09667");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getFile();
        java.lang.String str25 = uRL9.getAuthority();
        java.net.URL uRL27 = new java.net.URL(uRL9, "");
        java.net.URL uRL29 = new java.net.URL(uRL9, "");
        java.io.File file34 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter37 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList38 = explodedArchive35.getNestedArchives(entryFilter37);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = null;
        explodedArchive35.entries = asciiBytesMap39;
        java.io.File file41 = explodedArchive35.root;
        java.io.File file42 = explodedArchive35.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file44 = explodedArchive43.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter45 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList46 = explodedArchive43.getNestedArchives(entryFilter45);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter47 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList48 = explodedArchive43.getNestedArchives(entryFilter47);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap49 = explodedArchive43.entries;
        explodedArchive35.entries = asciiBytesMap49;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive(file34, asciiBytesMap49);
        java.io.File file52 = null;
        explodedArchive51.root = file52;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler54 = explodedArchive51.new FilteredURLStreamHandler();
        java.net.URL uRL55 = new java.net.URL("", "hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", (int) (short) 1, "hi!://:100/hi!://hi!:1hi!", (java.net.URLStreamHandler) filteredURLStreamHandler54);
        java.net.URL uRL57 = new java.net.URL(uRL55, "");
        java.lang.String str58 = uRL55.getFile();
        java.lang.String str59 = uRL55.getAuthority();
        boolean boolean60 = uRL9.sameFile(uRL55);
        java.net.URL uRL62 = new java.net.URL(uRL9, "[/archive:///archive:0hi!://:100]:0");
        int int63 = uRL9.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + ":100" + "'", str25, ":100");
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(archiveList38);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(archiveList46);
        org.junit.Assert.assertNotNull(archiveList48);
        org.junit.Assert.assertNotNull(asciiBytesMap49);
        org.junit.Assert.assertEquals(uRL55.toString(), "://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:1hi!://:100/hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL57.toString(), "://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:1hi!://:100/hi!://hi!:1hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!://:100/hi!://hi!:1hi!" + "'", str58, "hi!://:100/hi!://hi!:1hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:1" + "'", str59, "[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:1");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100/[/archive:///archive:0hi!://:100]:0");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
    }

    @Test
    public void test09668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09668");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str2 = explodedArchive1.toString();
        java.util.jar.Manifest manifest3 = null;
        explodedArchive1.manifest = manifest3;
        java.util.jar.Manifest manifest5 = explodedArchive1.getManifest();
        boolean boolean6 = explodedArchive1.filtered;
        java.util.jar.Manifest manifest7 = explodedArchive1.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive1.entries;
        java.io.File file9 = null;
        java.io.File file10 = null;
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap20);
        explodedArchive21.filtered = true;
        java.io.File file24 = null;
        explodedArchive21.root = file24;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive21.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive21.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap27);
        explodedArchive1.entries = asciiBytesMap27;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap27);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str32 = explodedArchive31.toString();
        java.util.jar.Manifest manifest33 = null;
        explodedArchive31.manifest = manifest33;
        java.util.jar.Manifest manifest35 = explodedArchive31.getManifest();
        boolean boolean36 = explodedArchive31.filtered;
        java.util.jar.Manifest manifest37 = explodedArchive31.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive31.entries;
        java.io.File file39 = null;
        java.io.File file40 = null;
        java.io.File file41 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter44 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList45 = explodedArchive42.getNestedArchives(entryFilter44);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive42.getNestedArchives(entryFilter46);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap48 = explodedArchive42.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file41, asciiBytesMap48);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap50 = explodedArchive49.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive(file40, asciiBytesMap50);
        explodedArchive51.filtered = true;
        java.io.File file54 = null;
        explodedArchive51.root = file54;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection56 = explodedArchive51.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap57 = explodedArchive51.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive(file39, asciiBytesMap57);
        explodedArchive31.entries = asciiBytesMap57;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter60 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList61 = explodedArchive31.getNestedArchives(entryFilter60);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter62 = null;
        org.springframework.boot.loader.archive.Archive archive63 = explodedArchive31.getFilteredArchive(entryRenameFilter62);
        boolean boolean64 = explodedArchive31.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap65 = explodedArchive31.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry66 = explodedArchive31.new FileEntry();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive67 = explodedArchive30.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "archive" + "'", str2, "archive");
        org.junit.Assert.assertNull(manifest5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "archive" + "'", str32, "archive");
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(archiveList45);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertNotNull(asciiBytesMap48);
        org.junit.Assert.assertNotNull(asciiBytesMap50);
        org.junit.Assert.assertNotNull(entryCollection56);
        org.junit.Assert.assertNotNull(asciiBytesMap57);
        org.junit.Assert.assertNotNull(archiveList61);
        org.junit.Assert.assertNotNull(archive63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap65);
    }

    @Test
    public void test09669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09669");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.io.File file3 = null;
        explodedArchive0.root = file3;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection5 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest6 = null;
        explodedArchive0.manifest = manifest6;
        boolean boolean8 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest9 = null;
        explodedArchive0.manifest = manifest9;
        java.io.File file11 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter12 = null;
        org.springframework.boot.loader.archive.Archive archive13 = explodedArchive0.getFilteredArchive(entryRenameFilter12);
        org.junit.Assert.assertNotNull(entryCollection5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archive13);
    }

    @Test
    public void test09670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09670");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive1.getNestedArchives(entryFilter8);
        java.io.File file10 = null;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap21);
        explodedArchive1.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap21);
        java.util.jar.Manifest manifest26 = null;
        explodedArchive25.manifest = manifest26;
        java.io.File file28 = explodedArchive25.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive25.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry30 = explodedArchive25.new FileEntry();
        java.io.File file31 = fileEntry30.getFile();
        java.io.File file32 = null;
        fileEntry30.file = file32;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(asciiBytesMap29);
        org.junit.Assert.assertNull(file31);
    }

    @Test
    public void test09671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09671");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getQuery();
        java.lang.String str15 = uRL13.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL27 = new java.net.URL(uRL13, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL28 = new java.net.URL("/archive", "/archive", (int) (byte) 0, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str39 = uRL38.getQuery();
        java.lang.String str40 = uRL38.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str47 = explodedArchive46.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection48 = explodedArchive46.getEntries();
        java.util.jar.Manifest manifest49 = explodedArchive46.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler50 = explodedArchive46.new FilteredURLStreamHandler();
        java.net.URL uRL51 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        java.net.URL uRL52 = new java.net.URL(uRL38, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        java.lang.String str53 = uRL38.getFile();
        java.lang.String str54 = uRL38.getRef();
        java.net.URL uRL56 = new java.net.URL(uRL38, "");
        boolean boolean57 = uRL28.sameFile(uRL56);
        java.lang.String str58 = uRL56.toExternalForm();
        int int59 = uRL56.getDefaultPort();
        java.lang.String str60 = uRL56.getPath();
        java.lang.String str61 = uRL56.getFile();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL28.toString(), "/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "archive" + "'", str47, "archive");
        org.junit.Assert.assertNotNull(entryCollection48);
        org.junit.Assert.assertNull(manifest49);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals(uRL56.toString(), "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!://:100" + "'", str58, "hi!://:100");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
    }

    @Test
    public void test09672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09672");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive7.getNestedArchives(entryFilter9);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive7.new FileEntry();
        java.lang.String str12 = explodedArchive7.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive7.entries;
        explodedArchive0.entries = asciiBytesMap13;
        java.io.File file15 = explodedArchive0.root;
        boolean boolean16 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest17 = explodedArchive0.manifest;
        java.io.File file18 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive19.getNestedArchives(entryFilter21);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = null;
        explodedArchive19.entries = asciiBytesMap23;
        java.io.File file25 = explodedArchive19.root;
        java.io.File file26 = explodedArchive19.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive27.getNestedArchives(entryFilter29);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter31 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList32 = explodedArchive27.getNestedArchives(entryFilter31);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap33 = explodedArchive27.entries;
        explodedArchive19.entries = asciiBytesMap33;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap33);
        java.util.jar.Manifest manifest36 = null;
        explodedArchive35.manifest = manifest36;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry38 = explodedArchive35.new FileEntry();
        java.io.File file39 = null;
        fileEntry38.file = file39;
        java.io.File file41 = fileEntry38.getFile();
        java.io.File file42 = fileEntry38.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes43 = fileEntry38.getName();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive44 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "archive" + "'", str12, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNotNull(archiveList32);
        org.junit.Assert.assertNotNull(asciiBytesMap33);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(asciiBytes43);
    }

    @Test
    public void test09673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09673");
        java.net.URLConnection.setDefaultRequestProperty(":10", "hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/archive");
    }

    @Test
    public void test09674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09674");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = null;
        fileEntry12.name = asciiBytes13;
        java.io.File file15 = fileEntry12.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes16 = fileEntry12.name;
        java.io.File file17 = fileEntry12.getFile();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = fileEntry12.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(asciiBytes16);
        org.junit.Assert.assertNull(file17);
    }

    @Test
    public void test09675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09675");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection5 = explodedArchive1.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive1.getNestedArchives(entryFilter6);
        java.util.jar.Manifest manifest8 = null;
        explodedArchive1.manifest = manifest8;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = explodedArchive1.new FileEntry();
        java.io.File file11 = explodedArchive1.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive1.new FileEntry();
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str15 = explodedArchive14.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry16 = explodedArchive14.new FileEntry();
        java.util.jar.Manifest manifest17 = explodedArchive14.getManifest();
        java.util.jar.Manifest manifest18 = explodedArchive14.manifest;
        java.io.File file19 = null;
        explodedArchive14.root = file19;
        explodedArchive14.filtered = true;
        java.io.File file23 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive24.getNestedArchives(entryFilter26);
        explodedArchive24.filtered = false;
        java.util.jar.Manifest manifest30 = explodedArchive24.manifest;
        java.io.File file31 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive32.getNestedArchives(entryFilter34);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive32.getNestedArchives(entryFilter36);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive32.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file31, asciiBytesMap38);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap40 = explodedArchive39.entries;
        explodedArchive24.entries = asciiBytesMap40;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap40);
        java.util.jar.Manifest manifest43 = null;
        explodedArchive42.manifest = manifest43;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap45 = explodedArchive42.entries;
        explodedArchive14.entries = asciiBytesMap45;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap45);
        explodedArchive1.entries = asciiBytesMap45;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap45);
        java.io.File file50 = null;
        explodedArchive49.root = file50;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap52 = explodedArchive49.entries;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(entryCollection5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "archive" + "'", str15, "archive");
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNull(manifest30);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertNotNull(asciiBytesMap40);
        org.junit.Assert.assertNotNull(asciiBytesMap45);
        org.junit.Assert.assertNotNull(asciiBytesMap52);
    }

    @Test
    public void test09676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09676");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter6 = null;
        org.springframework.boot.loader.archive.Archive archive7 = explodedArchive0.getFilteredArchive(entryRenameFilter6);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive0.getNestedArchives(entryFilter11);
        java.io.File file13 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive0.getNestedArchives(entryFilter14);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archive7);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
    }

    @Test
    public void test09677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09677");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/://[hi!://:100/:100]:100/hi!://:100", "", (int) (byte) 10, "hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!://[hi!://:100/hi!]:0hi!://:100/hi!://:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /://[hi!://:100/:100]:100/hi!://:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test09678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09678");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str42 = uRL9.getQuery();
        java.lang.String str43 = uRL9.getRef();
        java.net.URL uRL45 = new java.net.URL(uRL9, "/hi!");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str52 = explodedArchive51.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection53 = explodedArchive51.getEntries();
        java.util.jar.Manifest manifest54 = explodedArchive51.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler55 = explodedArchive51.new FilteredURLStreamHandler();
        java.net.URL uRL56 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.lang.String str57 = uRL56.getFile();
        int int58 = uRL56.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str65 = explodedArchive64.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection66 = explodedArchive64.getEntries();
        java.util.jar.Manifest manifest67 = explodedArchive64.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler68 = explodedArchive64.new FilteredURLStreamHandler();
        java.net.URL uRL69 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler68);
        java.lang.String str70 = uRL69.getQuery();
        java.lang.String str71 = uRL69.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str78 = explodedArchive77.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection79 = explodedArchive77.getEntries();
        java.util.jar.Manifest manifest80 = explodedArchive77.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler81 = explodedArchive77.new FilteredURLStreamHandler();
        java.net.URL uRL82 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler81);
        java.net.URL uRL83 = new java.net.URL(uRL69, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler81);
        java.net.URL uRL84 = new java.net.URL(uRL56, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler81);
        java.lang.String str85 = uRL84.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive87 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file88 = explodedArchive87.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter89 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList90 = explodedArchive87.getNestedArchives(entryFilter89);
        explodedArchive87.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter93 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList94 = explodedArchive87.getNestedArchives(entryFilter93);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler95 = explodedArchive87.new FilteredURLStreamHandler();
        java.net.URL uRL96 = new java.net.URL(uRL84, "", (java.net.URLStreamHandler) filteredURLStreamHandler95);
        java.net.URL uRL97 = new java.net.URL(uRL45, "/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler95);
        java.lang.String str98 = uRL97.getUserInfo();
        java.lang.String str99 = uRL97.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "archive" + "'", str52, "archive");
        org.junit.Assert.assertNotNull(entryCollection53);
        org.junit.Assert.assertNull(manifest54);
        org.junit.Assert.assertEquals(uRL56.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "archive" + "'", str65, "archive");
        org.junit.Assert.assertNotNull(entryCollection66);
        org.junit.Assert.assertNull(manifest67);
        org.junit.Assert.assertEquals(uRL69.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "archive" + "'", str78, "archive");
        org.junit.Assert.assertNotNull(entryCollection79);
        org.junit.Assert.assertNull(manifest80);
        org.junit.Assert.assertEquals(uRL82.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL83.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL84.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "/archive" + "'", str85, "/archive");
        org.junit.Assert.assertNull(file88);
        org.junit.Assert.assertNotNull(archiveList90);
        org.junit.Assert.assertNotNull(archiveList94);
        org.junit.Assert.assertEquals(uRL96.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL97.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str98);
        org.junit.Assert.assertNull(str99);
    }

    @Test
    public void test09679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09679");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.lang.String str5 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        java.lang.String str9 = explodedArchive0.toString();
        boolean boolean10 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive0.getNestedArchives(entryFilter11);
        java.io.File file13 = explodedArchive0.root;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNull(file13);
    }

    @Test
    public void test09680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09680");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getQuery();
        java.lang.String str15 = uRL13.getHost();
        int int16 = uRL13.getPort();
        java.lang.String str17 = uRL13.getQuery();
        java.net.URL uRL19 = new java.net.URL(uRL13, "");
        java.io.File file21 = null;
        java.io.File file22 = null;
        java.io.File file23 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive24.getNestedArchives(entryFilter26);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive24.getNestedArchives(entryFilter28);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive24.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive31.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap32);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file21, asciiBytesMap32);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL(uRL19, "", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.net.URL uRL37 = new java.net.URL("hi!", "hi!://:100/hi!", (int) (short) 0, "archive://:10:100", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str38 = uRL37.getPath();
        java.lang.String str39 = uRL37.getHost();
        java.lang.String str40 = uRL37.getAuthority();
        java.lang.String str41 = uRL37.toExternalForm();
        java.net.URL uRL43 = new java.net.URL(uRL37, "/hi!:1");
        java.net.URL uRL45 = new java.net.URL(uRL37, "[/hi!://:100/archive]:32");
        java.lang.String str46 = uRL45.getRef();
        java.lang.String str47 = uRL45.getPath();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals(uRL19.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://[hi!://:100/hi!]:0archive://:10:100");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive://:10:100" + "'", str38, "archive://:10:100");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[hi!://:100/hi!]" + "'", str39, "[hi!://:100/hi!]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[hi!://:100/hi!]:0" + "'", str40, "[hi!://:100/hi!]:0");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!://[hi!://:100/hi!]:0archive://:10:100" + "'", str41, "hi!://[hi!://:100/hi!]:0archive://:10:100");
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://[hi!://:100/hi!]:0/hi!:1");
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://[hi!://:100/hi!]:0archive://[/hi!://:100/archive]:32");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "archive://[/hi!://:100/archive]:32" + "'", str47, "archive://[/hi!://:100/archive]:32");
    }

    @Test
    public void test09681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09681");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL37.getUserInfo();
        java.lang.String str39 = uRL37.toExternalForm();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str45 = explodedArchive44.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection46 = explodedArchive44.getEntries();
        java.util.jar.Manifest manifest47 = explodedArchive44.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler48 = explodedArchive44.new FilteredURLStreamHandler();
        java.net.URL uRL49 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler48);
        java.lang.String str50 = uRL49.getFile();
        int int51 = uRL49.getDefaultPort();
        java.lang.String str52 = uRL49.getHost();
        boolean boolean53 = uRL37.sameFile(uRL49);
        java.lang.String str54 = uRL37.getHost();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!://:100/archive" + "'", str39, "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "archive" + "'", str45, "archive");
        org.junit.Assert.assertNotNull(entryCollection46);
        org.junit.Assert.assertNull(manifest47);
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
    }

    @Test
    public void test09682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09682");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap4 = null;
        explodedArchive0.entries = asciiBytesMap4;
        java.io.File file6 = explodedArchive0.root;
        java.lang.String str7 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = null;
        fileEntry8.name = asciiBytes9;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
    }

    @Test
    public void test09683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09683");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        explodedArchive4.filtered = false;
        java.util.jar.Manifest manifest10 = explodedArchive4.manifest;
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive19.entries;
        explodedArchive4.entries = asciiBytesMap20;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL23 = new java.net.URL("hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!", "/archive", (int) (short) 0, "/archive", (java.net.URLStreamHandler) filteredURLStreamHandler22);
        java.lang.String str24 = uRL23.getHost();
        java.lang.String str25 = uRL23.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive27.getNestedArchives(entryFilter29);
        explodedArchive27.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive27.getNestedArchives(entryFilter33);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive27.getNestedArchives(entryFilter35);
        java.util.jar.Manifest manifest37 = explodedArchive27.getManifest();
        explodedArchive27.filtered = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler40 = explodedArchive27.new FilteredURLStreamHandler();
        java.net.URL uRL41 = new java.net.URL(uRL23, "hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://[hi!://:100/:100]:100", (java.net.URLStreamHandler) filteredURLStreamHandler40);
        java.io.File file42 = null;
        java.io.File file43 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str45 = explodedArchive44.toString();
        java.util.jar.Manifest manifest46 = null;
        explodedArchive44.manifest = manifest46;
        java.io.File file48 = null;
        explodedArchive44.root = file48;
        java.util.jar.Manifest manifest50 = null;
        explodedArchive44.manifest = manifest50;
        boolean boolean52 = explodedArchive44.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap53 = explodedArchive44.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file43, asciiBytesMap53);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive(file42, asciiBytesMap53);
        boolean boolean56 = uRL41.equals((java.lang.Object) file42);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!:///archive:0/archive");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/archive" + "'", str24, "/archive");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!:///archive:0/hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://[hi!://:100/:100]:100");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "archive" + "'", str45, "archive");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test09684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09684");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive10.entries;
        java.util.jar.Manifest manifest12 = explodedArchive10.getManifest();
        java.lang.String str13 = explodedArchive10.toString();
        explodedArchive10.filtered = false;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNull(manifest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
    }

    @Test
    public void test09685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09685");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest3 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler4 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection5 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = explodedArchive0.new FileEntry();
        java.io.File file7 = null;
        explodedArchive0.root = file7;
        java.lang.String str9 = explodedArchive0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(manifest3);
        org.junit.Assert.assertNotNull(entryCollection5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
    }

    @Test
    public void test09686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09686");
        java.net.URLConnection.setDefaultRequestProperty("[hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!]", "hi!://:100");
    }

    @Test
    public void test09687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09687");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap8);
        boolean boolean11 = explodedArchive10.filtered;
        java.io.File file12 = explodedArchive10.root;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection13 = explodedArchive10.getEntries();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(entryCollection13);
    }

    @Test
    public void test09688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09688");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        java.io.File file5 = explodedArchive0.root;
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive7.getNestedArchives(entryFilter9);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive7.getNestedArchives(entryFilter11);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive7.entries;
        java.lang.String str14 = explodedArchive7.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive15.getNestedArchives(entryFilter17);
        explodedArchive15.filtered = false;
        java.util.jar.Manifest manifest21 = explodedArchive15.manifest;
        java.io.File file22 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive23.getNestedArchives(entryFilter25);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive23.getNestedArchives(entryFilter27);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive23.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap29);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap31 = explodedArchive30.entries;
        explodedArchive15.entries = asciiBytesMap31;
        explodedArchive7.entries = asciiBytesMap31;
        explodedArchive0.entries = asciiBytesMap31;
        java.io.File file35 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry36 = explodedArchive0.new FileEntry();
        java.lang.String str37 = explodedArchive0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(asciiBytesMap13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "archive" + "'", str14, "archive");
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNotNull(asciiBytesMap29);
        org.junit.Assert.assertNotNull(asciiBytesMap31);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
    }

    @Test
    public void test09689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09689");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", "/hi!:1", 0, "hi!://:100/archive:///archive:0hi!://:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test09690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09690");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getAuthority();
        java.lang.String str25 = uRL9.getRef();
        java.lang.String str26 = uRL9.getProtocol();
        java.lang.String str27 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getFile();
        int int39 = uRL37.getDefaultPort();
        java.lang.String str40 = uRL37.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection47 = explodedArchive45.getEntries();
        java.util.jar.Manifest manifest48 = explodedArchive45.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.lang.String str51 = uRL50.getQuery();
        java.lang.String str52 = uRL50.getRef();
        java.lang.String str53 = uRL50.getRef();
        java.lang.String str54 = uRL50.toExternalForm();
        boolean boolean55 = uRL37.sameFile(uRL50);
        java.lang.String str56 = uRL50.getUserInfo();
        java.lang.String str57 = uRL50.getHost();
        java.lang.String str58 = uRL50.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file61 = explodedArchive60.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter62 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList63 = explodedArchive60.getNestedArchives(entryFilter62);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter64 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList65 = explodedArchive60.getNestedArchives(entryFilter64);
        java.lang.String str66 = explodedArchive60.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler67 = explodedArchive60.new FilteredURLStreamHandler();
        java.net.URL uRL68 = new java.net.URL(uRL50, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler67);
        boolean boolean69 = uRL9.sameFile(uRL50);
        java.lang.String str70 = uRL50.getFile();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertNotNull(entryCollection47);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!://:100" + "'", str54, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(archiveList63);
        org.junit.Assert.assertNotNull(archiveList65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "archive" + "'", str66, "archive");
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
    }

    @Test
    public void test09691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09691");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive3.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = null;
        explodedArchive3.entries = asciiBytesMap7;
        java.io.File file9 = explodedArchive3.root;
        java.io.File file10 = explodedArchive3.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive11.getNestedArchives(entryFilter13);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive11.getNestedArchives(entryFilter15);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive11.entries;
        explodedArchive3.entries = asciiBytesMap17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap17);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap17);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap17);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL22 = explodedArchive21.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(asciiBytesMap17);
    }

    @Test
    public void test09692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09692");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive8.filtered = true;
        java.util.jar.Manifest manifest11 = null;
        explodedArchive8.manifest = manifest11;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter13 = null;
        org.springframework.boot.loader.archive.Archive archive14 = explodedArchive8.getFilteredArchive(entryRenameFilter13);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection15 = explodedArchive8.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection16 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest17 = explodedArchive8.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive8.getNestedArchives(entryFilter18);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!://:100/[/:100]:0", "[hi!://:100/hi!]:0", 52, "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.net.URL uRL22 = new java.net.URL("hi!://:100/archive:///archive:0hi!://:100", "", (int) (short) 1, "[:100]:52", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str23 = uRL22.getAuthority();
        org.junit.Assert.assertNotNull(archive14);
        org.junit.Assert.assertNotNull(entryCollection15);
        org.junit.Assert.assertNotNull(entryCollection16);
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100/[/:100]:0://[hi!://:100/hi!]:0:52hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100/archive:///archive:0hi!://:100://:1[:100]:52");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + ":1" + "'", str23, ":1");
    }

    @Test
    public void test09693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09693");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL9.toExternalForm();
        java.lang.String str39 = uRL9.getQuery();
        java.lang.String str40 = uRL9.getQuery();
        java.lang.String str41 = uRL9.getProtocol();
        java.lang.String str42 = uRL9.getUserInfo();
        java.lang.String str43 = uRL9.getFile();
        java.lang.String str44 = uRL9.getProtocol();
        java.io.File file46 = null;
        java.io.File file47 = null;
        java.io.File file48 = null;
        java.io.File file49 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file51 = explodedArchive50.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter52 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList53 = explodedArchive50.getNestedArchives(entryFilter52);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter54 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList55 = explodedArchive50.getNestedArchives(entryFilter54);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap56 = explodedArchive50.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive(file49, asciiBytesMap56);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive(file48, asciiBytesMap56);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap59 = explodedArchive58.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive(file47, asciiBytesMap59);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive(file46, asciiBytesMap59);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler62 = explodedArchive61.new FilteredURLStreamHandler();
        java.net.URL uRL63 = new java.net.URL(uRL9, "hi!://hi!:1hi!", (java.net.URLStreamHandler) filteredURLStreamHandler62);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!://:100" + "'", str38, "hi!://:100");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(archiveList53);
        org.junit.Assert.assertNotNull(archiveList55);
        org.junit.Assert.assertNotNull(asciiBytesMap56);
        org.junit.Assert.assertNotNull(asciiBytesMap59);
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/hi!://hi!:1hi!");
    }

    @Test
    public void test09694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09694");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getAuthority();
        java.lang.String str25 = uRL9.getRef();
        java.lang.String str26 = uRL9.getProtocol();
        java.lang.String str27 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getPath();
        java.lang.String str39 = uRL37.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection47 = explodedArchive45.getEntries();
        java.util.jar.Manifest manifest48 = explodedArchive45.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.net.URL uRL51 = new java.net.URL(uRL37, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter59 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList60 = explodedArchive57.getNestedArchives(entryFilter59);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection61 = explodedArchive57.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap62 = explodedArchive57.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive57.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL("/archive", "hi!://:100/hi!", (int) (byte) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL65 = new java.net.URL(uRL51, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        boolean boolean66 = uRL9.sameFile(uRL65);
        int int67 = uRL65.getPort();
        java.lang.String str68 = uRL65.getPath();
        java.lang.String str69 = uRL65.toExternalForm();
        java.lang.String str70 = uRL65.getRef();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertNotNull(entryCollection47);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(archiveList60);
        org.junit.Assert.assertNotNull(entryCollection61);
        org.junit.Assert.assertNotNull(asciiBytesMap62);
        org.junit.Assert.assertEquals(uRL64.toString(), "/archive://[hi!://:100/hi!]:1hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 100 + "'", int67 == 100);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "/hi!://:100" + "'", str68, "/hi!://:100");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!://:100/hi!://:100" + "'", str69, "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str70);
    }

    @Test
    public void test09695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09695");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getQuery();
        java.lang.String str15 = uRL13.getRef();
        int int16 = uRL13.getPort();
        java.lang.String str17 = uRL13.getProtocol();
        java.lang.String str18 = uRL13.getPath();
        java.lang.String str19 = uRL13.getPath();
        java.lang.String str20 = uRL13.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str27 = explodedArchive26.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection28 = explodedArchive26.getEntries();
        java.util.jar.Manifest manifest29 = explodedArchive26.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler30 = explodedArchive26.new FilteredURLStreamHandler();
        java.net.URL uRL31 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler30);
        java.lang.String str32 = uRL31.getFile();
        int int33 = uRL31.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str40 = explodedArchive39.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection41 = explodedArchive39.getEntries();
        java.util.jar.Manifest manifest42 = explodedArchive39.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler43 = explodedArchive39.new FilteredURLStreamHandler();
        java.net.URL uRL44 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        java.lang.String str45 = uRL44.getQuery();
        java.lang.String str46 = uRL44.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str53 = explodedArchive52.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection54 = explodedArchive52.getEntries();
        java.util.jar.Manifest manifest55 = explodedArchive52.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler56 = explodedArchive52.new FilteredURLStreamHandler();
        java.net.URL uRL57 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler56);
        java.net.URL uRL58 = new java.net.URL(uRL44, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler56);
        java.net.URL uRL59 = new java.net.URL(uRL31, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler56);
        java.lang.String str60 = uRL59.getUserInfo();
        java.io.File file62 = null;
        java.io.File file63 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file65 = explodedArchive64.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter66 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList67 = explodedArchive64.getNestedArchives(entryFilter66);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter68 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList69 = explodedArchive64.getNestedArchives(entryFilter68);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap70 = explodedArchive64.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive(file63, asciiBytesMap70);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive(file62, asciiBytesMap70);
        boolean boolean73 = explodedArchive72.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler74 = explodedArchive72.new FilteredURLStreamHandler();
        java.net.URL uRL75 = new java.net.URL(uRL59, "/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler74);
        java.net.URL uRL76 = new java.net.URL(uRL13, "://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler74);
        java.net.URL uRL77 = new java.net.URL("hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", "/hi!://:100/archive", (int) (short) -1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler74);
        java.lang.String str78 = uRL77.getUserInfo();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI79 = uRL77.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]://[/hi!://:100/archive]hi!://:100/archive");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "archive" + "'", str27, "archive");
        org.junit.Assert.assertNotNull(entryCollection28);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertEquals(uRL31.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "archive" + "'", str40, "archive");
        org.junit.Assert.assertNotNull(entryCollection41);
        org.junit.Assert.assertNull(manifest42);
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "archive" + "'", str53, "archive");
        org.junit.Assert.assertNotNull(entryCollection54);
        org.junit.Assert.assertNull(manifest55);
        org.junit.Assert.assertEquals(uRL57.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL58.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL59.toString(), "hi!://:100/archive");
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(file65);
        org.junit.Assert.assertNotNull(archiveList67);
        org.junit.Assert.assertNotNull(archiveList69);
        org.junit.Assert.assertNotNull(asciiBytesMap70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertEquals(uRL75.toString(), "hi!://:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals(uRL76.toString(), "hi!://:100/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL77.toString(), "hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]://[/hi!://:100/archive]hi!://:100/archive");
        org.junit.Assert.assertNull(str78);
    }

    @Test
    public void test09696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09696");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.io.File file11 = null;
        explodedArchive0.root = file11;
        java.util.jar.Manifest manifest13 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter14 = null;
        org.springframework.boot.loader.archive.Archive archive15 = explodedArchive0.getFilteredArchive(entryRenameFilter14);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNull(manifest13);
        org.junit.Assert.assertNotNull(archive15);
    }

    @Test
    public void test09697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09697");
        java.net.URLConnection.setDefaultRequestProperty("hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://[hi!://:100/:100]:100", "");
    }

    @Test
    public void test09698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09698");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str3 = explodedArchive2.toString();
        boolean boolean4 = explodedArchive2.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive2.getFilteredArchive(entryRenameFilter5);
        explodedArchive2.filtered = true;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive2.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter13 = null;
        org.springframework.boot.loader.archive.Archive archive14 = explodedArchive12.getFilteredArchive(entryRenameFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive12.entries;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "archive" + "'", str3, "archive");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(archive14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
    }

    @Test
    public void test09699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09699");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive2.entries = asciiBytesMap6;
        java.io.File file8 = explodedArchive2.root;
        java.io.File file9 = explodedArchive2.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive10.entries;
        explodedArchive2.entries = asciiBytesMap16;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap16);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap16);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection20 = explodedArchive19.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive19.new FilteredURLStreamHandler();
        java.io.File file22 = explodedArchive19.root;
        java.util.jar.Manifest manifest23 = explodedArchive19.getManifest();
        boolean boolean24 = explodedArchive19.filtered;
        java.lang.Class<?> wildcardClass25 = explodedArchive19.getClass();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNotNull(entryCollection20);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test09700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09700");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        java.lang.String str12 = uRL9.getProtocol();
        java.lang.String str13 = uRL9.getFile();
        java.lang.String str14 = uRL9.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test09701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09701");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        java.util.jar.Manifest manifest13 = null;
        explodedArchive11.manifest = manifest13;
        java.util.jar.Manifest manifest15 = null;
        explodedArchive11.manifest = manifest15;
        java.io.File file17 = null;
        explodedArchive11.root = file17;
        java.lang.String str19 = explodedArchive11.toString();
        java.util.jar.Manifest manifest20 = explodedArchive11.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter21 = null;
        org.springframework.boot.loader.archive.Archive archive22 = explodedArchive11.getFilteredArchive(entryRenameFilter21);
        boolean boolean23 = explodedArchive11.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter24 = null;
        org.springframework.boot.loader.archive.Archive archive25 = explodedArchive11.getFilteredArchive(entryRenameFilter24);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive11.getNestedArchives(entryFilter26);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "archive" + "'", str19, "archive");
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertNotNull(archive22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(archive25);
        org.junit.Assert.assertNotNull(archiveList27);
    }

    @Test
    public void test09702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09702");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes6 = fileEntry5.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = fileEntry5.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry5.name;
        java.io.File file9 = fileEntry5.file;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNull(asciiBytes6);
        org.junit.Assert.assertNull(asciiBytes7);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(file9);
    }

    @Test
    public void test09703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09703");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        java.io.File file14 = null;
        explodedArchive11.root = file14;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection16 = explodedArchive11.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive11.getEntries();
        explodedArchive11.filtered = false;
        java.io.File file20 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file22 = explodedArchive21.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive21.getNestedArchives(entryFilter23);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive21.getNestedArchives(entryFilter25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive21.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file20, asciiBytesMap27);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive28.entries;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive28.getEntries();
        boolean boolean31 = explodedArchive28.filtered;
        java.util.jar.Manifest manifest32 = null;
        explodedArchive28.manifest = manifest32;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive28.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str36 = explodedArchive35.toString();
        boolean boolean37 = explodedArchive35.filtered;
        java.io.File file38 = explodedArchive35.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str40 = explodedArchive39.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry41 = explodedArchive39.new FileEntry();
        java.util.jar.Manifest manifest42 = explodedArchive39.getManifest();
        java.util.jar.Manifest manifest43 = explodedArchive39.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive44.getNestedArchives(entryFilter46);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection48 = explodedArchive44.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter49 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList50 = explodedArchive44.getNestedArchives(entryFilter49);
        java.util.jar.Manifest manifest51 = null;
        explodedArchive44.manifest = manifest51;
        explodedArchive44.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap55 = explodedArchive44.entries;
        explodedArchive39.entries = asciiBytesMap55;
        explodedArchive35.entries = asciiBytesMap55;
        explodedArchive28.entries = asciiBytesMap55;
        explodedArchive11.entries = asciiBytesMap55;
        java.io.File file60 = explodedArchive11.root;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(entryCollection16);
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertNotNull(asciiBytesMap29);
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "archive" + "'", str36, "archive");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "archive" + "'", str40, "archive");
        org.junit.Assert.assertNull(manifest42);
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertNotNull(entryCollection48);
        org.junit.Assert.assertNotNull(archiveList50);
        org.junit.Assert.assertNotNull(asciiBytesMap55);
        org.junit.Assert.assertNull(file60);
    }

    @Test
    public void test09704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09704");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.io.File file9 = null;
        java.io.File file10 = null;
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap20);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap20);
        explodedArchive0.entries = asciiBytesMap20;
        java.lang.String str24 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter25 = null;
        org.springframework.boot.loader.archive.Archive archive26 = explodedArchive0.getFilteredArchive(entryRenameFilter25);
        explodedArchive0.filtered = false;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "archive" + "'", str24, "archive");
        org.junit.Assert.assertNotNull(archive26);
    }

    @Test
    public void test09705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09705");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        java.io.File file7 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive8.getNestedArchives(entryFilter12);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive8.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file7, asciiBytesMap14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive15.entries;
        explodedArchive0.entries = asciiBytesMap16;
        boolean boolean18 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter19 = null;
        org.springframework.boot.loader.archive.Archive archive20 = explodedArchive0.getFilteredArchive(entryRenameFilter19);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file22 = explodedArchive21.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive21.getNestedArchives(entryFilter23);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry25 = explodedArchive21.new FileEntry();
        java.io.File file26 = fileEntry25.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes27 = null;
        fileEntry25.name = asciiBytes27;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes29 = fileEntry25.getName();
        java.io.File file30 = null;
        fileEntry25.file = file30;
        java.io.File file32 = fileEntry25.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes33 = fileEntry25.name;
        java.io.File file34 = null;
        fileEntry25.file = file34;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes36 = fileEntry25.name;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive37 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(archive20);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(asciiBytes29);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNull(asciiBytes33);
        org.junit.Assert.assertNull(asciiBytes36);
    }

    @Test
    public void test09706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09706");
        java.net.URL uRL0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str11 = explodedArchive10.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection12 = explodedArchive10.getEntries();
        java.util.jar.Manifest manifest13 = explodedArchive10.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler14 = explodedArchive10.new FilteredURLStreamHandler();
        java.net.URL uRL15 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler14);
        java.lang.String str16 = uRL15.getQuery();
        java.lang.String str17 = uRL15.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str24 = explodedArchive23.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection25 = explodedArchive23.getEntries();
        java.util.jar.Manifest manifest26 = explodedArchive23.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive23.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.net.URL uRL29 = new java.net.URL(uRL15, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.net.URL uRL30 = new java.net.URL("/hi!://:100", "archive", (int) (short) 1, "/archive", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL31 = new java.net.URL(uRL0, "hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!://[hi!://:100/hi!]:97hi!://:100/://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler27);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!://[hi!://:100/hi!]:97hi!://:100/://[archive://:10archive]:100archive://:10archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "archive" + "'", str11, "archive");
        org.junit.Assert.assertNotNull(entryCollection12);
        org.junit.Assert.assertNull(manifest13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "archive" + "'", str24, "archive");
        org.junit.Assert.assertNotNull(entryCollection25);
        org.junit.Assert.assertNull(manifest26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL30.toString(), "/hi!://:100://archive:1/archive");
    }

    @Test
    public void test09707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09707");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str29 = explodedArchive28.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive28.getEntries();
        java.util.jar.Manifest manifest31 = explodedArchive28.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL33 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.lang.String str34 = uRL33.getFile();
        boolean boolean35 = uRL23.sameFile(uRL33);
        int int36 = uRL33.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str42 = explodedArchive41.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive41.getEntries();
        java.util.jar.Manifest manifest44 = explodedArchive41.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive41.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.lang.String str47 = uRL46.getQuery();
        java.lang.String str48 = uRL46.getRef();
        java.lang.String str49 = uRL46.getRef();
        java.net.URL uRL51 = new java.net.URL(uRL46, "hi!");
        boolean boolean52 = uRL33.sameFile(uRL51);
        java.lang.String str53 = uRL51.getAuthority();
        java.lang.String str54 = uRL51.getHost();
        java.lang.String str55 = uRL51.getPath();
        java.lang.String str56 = uRL51.getHost();
        java.lang.String str57 = uRL51.getPath();
        java.lang.String str58 = uRL51.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file61 = explodedArchive60.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter62 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList63 = explodedArchive60.getNestedArchives(entryFilter62);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter64 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList65 = explodedArchive60.getNestedArchives(entryFilter64);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap66 = explodedArchive60.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter67 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList68 = explodedArchive60.getNestedArchives(entryFilter67);
        java.util.jar.Manifest manifest69 = explodedArchive60.getManifest();
        java.io.File file70 = null;
        explodedArchive60.root = file70;
        java.util.jar.Manifest manifest72 = explodedArchive60.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler73 = explodedArchive60.new FilteredURLStreamHandler();
        java.net.URL uRL74 = new java.net.URL(uRL51, "[hi!://:100/hi!]:10", (java.net.URLStreamHandler) filteredURLStreamHandler73);
        java.lang.String str75 = uRL74.toExternalForm();
        java.lang.String str76 = uRL74.getProtocol();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI77 = uRL74.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100/[hi!://:100/hi!]:10");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "archive" + "'", str42, "archive");
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertNull(manifest44);
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + ":100" + "'", str53, ":100");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "/hi!" + "'", str55, "/hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "/hi!" + "'", str57, "/hi!");
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(archiveList63);
        org.junit.Assert.assertNotNull(archiveList65);
        org.junit.Assert.assertNotNull(asciiBytesMap66);
        org.junit.Assert.assertNotNull(archiveList68);
        org.junit.Assert.assertNull(manifest69);
        org.junit.Assert.assertNull(manifest72);
        org.junit.Assert.assertEquals(uRL74.toString(), "hi!://:100/[hi!://:100/hi!]:10");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!://:100/[hi!://:100/hi!]:10" + "'", str75, "hi!://:100/[hi!://:100/hi!]:10");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
    }

    @Test
    public void test09708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09708");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        boolean boolean5 = explodedArchive0.filtered;
        boolean boolean6 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        boolean boolean9 = explodedArchive0.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive11.getNestedArchives(entryFilter13);
        explodedArchive11.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive11.getNestedArchives(entryFilter17);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive11.getNestedArchives(entryFilter19);
        java.util.jar.Manifest manifest21 = explodedArchive11.getManifest();
        java.io.File file22 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive23.getNestedArchives(entryFilter25);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive23.getNestedArchives(entryFilter27);
        explodedArchive23.filtered = false;
        java.util.jar.Manifest manifest31 = null;
        explodedArchive23.manifest = manifest31;
        java.io.File file33 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file35 = explodedArchive34.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive34.getNestedArchives(entryFilter36);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter38 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList39 = explodedArchive34.getNestedArchives(entryFilter38);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap40 = explodedArchive34.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter41 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList42 = explodedArchive34.getNestedArchives(entryFilter41);
        java.io.File file43 = null;
        java.io.File file44 = null;
        java.io.File file45 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter48 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList49 = explodedArchive46.getNestedArchives(entryFilter48);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter50 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList51 = explodedArchive46.getNestedArchives(entryFilter50);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap52 = explodedArchive46.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file45, asciiBytesMap52);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap54 = explodedArchive53.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive(file44, asciiBytesMap54);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive(file43, asciiBytesMap54);
        explodedArchive34.entries = asciiBytesMap54;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive(file33, asciiBytesMap54);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap59 = explodedArchive58.entries;
        explodedArchive23.entries = asciiBytesMap59;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap59);
        explodedArchive11.entries = asciiBytesMap59;
        java.util.jar.Manifest manifest63 = explodedArchive11.manifest;
        java.util.jar.Manifest manifest64 = explodedArchive11.getManifest();
        java.util.jar.Manifest manifest65 = explodedArchive11.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler66 = explodedArchive11.new FilteredURLStreamHandler();
        java.io.File file67 = explodedArchive11.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap68 = explodedArchive11.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry69 = explodedArchive11.new FileEntry();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive70 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertNotNull(archiveList39);
        org.junit.Assert.assertNotNull(asciiBytesMap40);
        org.junit.Assert.assertNotNull(archiveList42);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(archiveList49);
        org.junit.Assert.assertNotNull(archiveList51);
        org.junit.Assert.assertNotNull(asciiBytesMap52);
        org.junit.Assert.assertNotNull(asciiBytesMap54);
        org.junit.Assert.assertNotNull(asciiBytesMap59);
        org.junit.Assert.assertNull(manifest63);
        org.junit.Assert.assertNull(manifest64);
        org.junit.Assert.assertNull(manifest65);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(asciiBytesMap68);
    }

    @Test
    public void test09709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09709");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getFile();
        int int15 = uRL13.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getQuery();
        java.lang.String str28 = uRL26.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str35 = explodedArchive34.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection36 = explodedArchive34.getEntries();
        java.util.jar.Manifest manifest37 = explodedArchive34.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL40 = new java.net.URL(uRL26, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL41 = new java.net.URL(uRL13, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL42 = new java.net.URL("archive", "", (int) (byte) 10, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str43 = uRL42.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str49 = explodedArchive48.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection50 = explodedArchive48.getEntries();
        java.util.jar.Manifest manifest51 = explodedArchive48.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler52 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL53 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler52);
        java.lang.String str54 = uRL53.getQuery();
        java.lang.String str55 = uRL53.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str62 = explodedArchive61.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection63 = explodedArchive61.getEntries();
        java.util.jar.Manifest manifest64 = explodedArchive61.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler65 = explodedArchive61.new FilteredURLStreamHandler();
        java.net.URL uRL66 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.net.URL uRL67 = new java.net.URL(uRL53, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        int int68 = uRL67.getPort();
        java.lang.String str69 = uRL67.getPath();
        java.lang.String str70 = uRL67.getPath();
        java.lang.String str71 = uRL67.toExternalForm();
        java.lang.String str72 = uRL67.getRef();
        java.lang.String str73 = uRL67.getPath();
        boolean boolean74 = uRL42.sameFile(uRL67);
        int int75 = uRL67.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive81 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file82 = explodedArchive81.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter83 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList84 = explodedArchive81.getNestedArchives(entryFilter83);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry85 = explodedArchive81.new FileEntry();
        java.lang.String str86 = explodedArchive81.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry87 = explodedArchive81.new FileEntry();
        explodedArchive81.filtered = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler90 = explodedArchive81.new FilteredURLStreamHandler();
        java.net.URL uRL91 = new java.net.URL("hi!://:100/hi!:1", ":100", (int) (short) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler90);
        java.net.URL uRL92 = new java.net.URL(uRL67, "hi!://:100/hi!://:100/hi!://hi!", (java.net.URLStreamHandler) filteredURLStreamHandler90);
        java.lang.String str93 = uRL67.getQuery();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "archive" + "'", str35, "archive");
        org.junit.Assert.assertNotNull(entryCollection36);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL42.toString(), "archive://:10:100");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "archive" + "'", str49, "archive");
        org.junit.Assert.assertNotNull(entryCollection50);
        org.junit.Assert.assertNull(manifest51);
        org.junit.Assert.assertEquals(uRL53.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "archive" + "'", str62, "archive");
        org.junit.Assert.assertNotNull(entryCollection63);
        org.junit.Assert.assertNull(manifest64);
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "/hi!" + "'", str69, "/hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "/hi!" + "'", str70, "/hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!://:100/hi!" + "'", str71, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "/hi!" + "'", str73, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertNotNull(archiveList84);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "archive" + "'", str86, "archive");
        org.junit.Assert.assertEquals(uRL91.toString(), "hi!://:100/hi!:1://[:100]:1hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL92.toString(), "hi!://:100/hi!://:100/hi!://:100/hi!://hi!");
        org.junit.Assert.assertNull(str93);
    }

    @Test
    public void test09710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09710");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.io.File file3 = null;
        explodedArchive0.root = file3;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection5 = explodedArchive0.getEntries();
        explodedArchive0.filtered = false;
        explodedArchive0.filtered = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = explodedArchive0.new FileEntry();
        java.io.File file11 = null;
        fileEntry10.file = file11;
        java.lang.Class<?> wildcardClass13 = fileEntry10.getClass();
        org.junit.Assert.assertNotNull(entryCollection5);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test09711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09711");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive4.entries = asciiBytesMap6;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive4.manifest = manifest8;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL11 = new java.net.URL("hi!", ":100", (int) '4', "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler10);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str41 = explodedArchive40.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive40.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler43 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL44 = new java.net.URL(uRL37, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        java.net.URL uRL45 = new java.net.URL(uRL25, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        java.net.URL uRL46 = new java.net.URL("hi!:1", "/archive", (int) (short) 0, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        boolean boolean47 = uRL11.sameFile(uRL46);
        java.lang.String str48 = uRL11.getQuery();
        java.net.URL uRL50 = new java.net.URL(uRL11, "hi!://:100/hi!");
        java.lang.String str51 = uRL11.getPath();
        java.lang.String str52 = uRL11.getProtocol();
        java.lang.String str53 = uRL11.getQuery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertEquals(uRL11.toString(), "hi!://[:100]:52hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "archive" + "'", str41, "archive");
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!:1:///archive:0archive");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://[:100]:52/hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertNull(str53);
    }

    @Test
    public void test09712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09712");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive0.getFilteredArchive(entryRenameFilter5);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection7 = explodedArchive0.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection8 = explodedArchive0.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive0.entries;
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertNotNull(entryCollection7);
        org.junit.Assert.assertNotNull(entryCollection8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
    }

    @Test
    public void test09713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09713");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive0.new FilteredURLStreamHandler();
        explodedArchive0.filtered = true;
        java.io.File file12 = null;
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive21.entries;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter23 = null;
        org.springframework.boot.loader.archive.Archive archive24 = explodedArchive21.getFilteredArchive(entryRenameFilter23);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive21.getNestedArchives(entryFilter25);
        java.util.jar.Manifest manifest27 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive21.getNestedArchives(entryFilter28);
        java.io.File file30 = null;
        java.io.File file31 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive32.getNestedArchives(entryFilter34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = null;
        explodedArchive32.entries = asciiBytesMap36;
        java.io.File file38 = explodedArchive32.root;
        java.io.File file39 = explodedArchive32.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive40.getNestedArchives(entryFilter42);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter44 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList45 = explodedArchive40.getNestedArchives(entryFilter44);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap46 = explodedArchive40.entries;
        explodedArchive32.entries = asciiBytesMap46;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive(file31, asciiBytesMap46);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file30, asciiBytesMap46);
        explodedArchive21.entries = asciiBytesMap46;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap46);
        explodedArchive0.entries = asciiBytesMap46;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter53 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList54 = explodedArchive0.getNestedArchives(entryFilter53);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file56 = explodedArchive55.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter57 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList58 = explodedArchive55.getNestedArchives(entryFilter57);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap59 = null;
        explodedArchive55.entries = asciiBytesMap59;
        boolean boolean61 = explodedArchive55.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry62 = explodedArchive55.new FileEntry();
        java.io.File file63 = fileEntry62.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes64 = fileEntry62.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes65 = fileEntry62.getName();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive66 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNotNull(archive24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNull(manifest27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertNotNull(archiveList45);
        org.junit.Assert.assertNotNull(asciiBytesMap46);
        org.junit.Assert.assertNotNull(archiveList54);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(archiveList58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNull(asciiBytes64);
        org.junit.Assert.assertNull(asciiBytes65);
    }

    @Test
    public void test09714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09714");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler3 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter4 = null;
        org.springframework.boot.loader.archive.Archive archive5 = explodedArchive0.getFilteredArchive(entryRenameFilter4);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str7 = explodedArchive6.toString();
        boolean boolean8 = explodedArchive6.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter9 = null;
        org.springframework.boot.loader.archive.Archive archive10 = explodedArchive6.getFilteredArchive(entryRenameFilter9);
        explodedArchive6.filtered = true;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection13 = explodedArchive6.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive6.entries;
        explodedArchive0.entries = asciiBytesMap14;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive0.getNestedArchives(entryFilter16);
        java.io.File file18 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file18, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(archive10);
        org.junit.Assert.assertNotNull(entryCollection13);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertNotNull(archiveList17);
    }

    @Test
    public void test09715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09715");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive4.getNestedArchives(entryFilter8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive4.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive4.getNestedArchives(entryFilter11);
        java.io.File file13 = null;
        explodedArchive4.root = file13;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection15 = explodedArchive4.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL17 = new java.net.URL("hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!://[hi!://:100/hi!]:97hi!://:100/://[archive://:10archive]:100archive://:10archive", ":100", (int) '4', "[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0", (java.net.URLStreamHandler) filteredURLStreamHandler16);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(entryCollection15);
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!://[hi!://:100/hi!]:97hi!://:100/://[archive://:10archive]:100archive://:10archive://[:100]:52[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0");
    }

    @Test
    public void test09716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09716");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry2 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes3 = fileEntry2.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes4 = fileEntry2.name;
        java.io.File file5 = null;
        fileEntry2.file = file5;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = fileEntry2.getName();
        java.io.File file8 = null;
        fileEntry2.file = file8;
        java.io.File file10 = fileEntry2.getFile();
        java.io.File file11 = null;
        fileEntry2.file = file11;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry2.name;
        java.io.File file14 = fileEntry2.getFile();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(asciiBytes3);
        org.junit.Assert.assertNull(asciiBytes4);
        org.junit.Assert.assertNull(asciiBytes7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(asciiBytes13);
        org.junit.Assert.assertNull(file14);
    }

    @Test
    public void test09717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09717");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        boolean boolean5 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection7 = explodedArchive0.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive0.entries;
        boolean boolean9 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file11 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file11, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(entryCollection7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test09718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09718");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        explodedArchive4.filtered = false;
        java.util.jar.Manifest manifest10 = explodedArchive4.manifest;
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive19.entries;
        explodedArchive4.entries = asciiBytesMap20;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL23 = new java.net.URL("hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!", "/archive", (int) (short) 0, "/archive", (java.net.URLStreamHandler) filteredURLStreamHandler22);
        java.lang.String str24 = uRL23.getHost();
        java.lang.String str25 = uRL23.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive27.getNestedArchives(entryFilter29);
        explodedArchive27.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive27.getNestedArchives(entryFilter33);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive27.getNestedArchives(entryFilter35);
        java.util.jar.Manifest manifest37 = explodedArchive27.getManifest();
        explodedArchive27.filtered = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler40 = explodedArchive27.new FilteredURLStreamHandler();
        java.net.URL uRL41 = new java.net.URL(uRL23, "hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://[hi!://:100/:100]:100", (java.net.URLStreamHandler) filteredURLStreamHandler40);
        java.lang.String str42 = uRL23.toExternalForm();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI43 = uRL23.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!:///archive:0/archive");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!:///archive:0/archive");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/archive" + "'", str24, "/archive");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!:///archive:0/hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://[hi!://:100/:100]:100");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!:///archive:0/archive" + "'", str42, "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!:///archive:0/archive");
    }

    @Test
    public void test09719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09719");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection12 = explodedArchive8.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive8.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler14 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL15 = new java.net.URL("/archive", "hi!://:100/hi!", (int) (byte) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler14);
        java.net.URL uRL16 = new java.net.URL("hi!://:100/hi!", "://[hi!://:100/:100]:100/hi!://:100", 52, "hi!://:100/hi!://:100/hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler14);
        java.lang.String str17 = uRL16.getRef();
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(entryCollection12);
        org.junit.Assert.assertNotNull(asciiBytesMap13);
        org.junit.Assert.assertEquals(uRL15.toString(), "/archive://[hi!://:100/hi!]:1hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!://[://[hi!://:100/:100]:100/hi!://:100]:52hi!://:100/hi!://:100/hi!:1");
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test09720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09720");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive1.getNestedArchives(entryFilter8);
        java.io.File file10 = null;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap21);
        explodedArchive1.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap21);
        java.util.jar.Manifest manifest26 = null;
        explodedArchive25.manifest = manifest26;
        boolean boolean28 = explodedArchive25.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive25.entries;
        java.lang.Class<?> wildcardClass30 = asciiBytesMap29.getClass();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(asciiBytesMap29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test09721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09721");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive11.getNestedArchives(entryFilter14);
        java.io.File file16 = null;
        java.io.File file17 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive18.getNestedArchives(entryFilter20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = null;
        explodedArchive18.entries = asciiBytesMap22;
        java.io.File file24 = explodedArchive18.root;
        java.io.File file25 = explodedArchive18.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file27 = explodedArchive26.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive26.getNestedArchives(entryFilter28);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive26.getNestedArchives(entryFilter30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive26.entries;
        explodedArchive18.entries = asciiBytesMap32;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap32);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file16, asciiBytesMap32);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection36 = explodedArchive35.getEntries();
        java.io.File file37 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter40 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList41 = explodedArchive38.getNestedArchives(entryFilter40);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive38.getNestedArchives(entryFilter42);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap44 = explodedArchive38.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter45 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList46 = explodedArchive38.getNestedArchives(entryFilter45);
        java.io.File file47 = null;
        java.io.File file48 = null;
        java.io.File file49 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file51 = explodedArchive50.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter52 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList53 = explodedArchive50.getNestedArchives(entryFilter52);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter54 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList55 = explodedArchive50.getNestedArchives(entryFilter54);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap56 = explodedArchive50.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive(file49, asciiBytesMap56);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap58 = explodedArchive57.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive(file48, asciiBytesMap58);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive(file47, asciiBytesMap58);
        explodedArchive38.entries = asciiBytesMap58;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive(file37, asciiBytesMap58);
        java.util.jar.Manifest manifest63 = null;
        explodedArchive62.manifest = manifest63;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter65 = null;
        org.springframework.boot.loader.archive.Archive archive66 = explodedArchive62.getFilteredArchive(entryRenameFilter65);
        java.io.File file67 = null;
        explodedArchive62.root = file67;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter69 = null;
        org.springframework.boot.loader.archive.Archive archive70 = explodedArchive62.getFilteredArchive(entryRenameFilter69);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file72 = explodedArchive71.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter73 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList74 = explodedArchive71.getNestedArchives(entryFilter73);
        java.util.jar.Manifest manifest75 = explodedArchive71.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str77 = explodedArchive76.toString();
        java.util.jar.Manifest manifest78 = null;
        explodedArchive76.manifest = manifest78;
        java.util.jar.Manifest manifest80 = explodedArchive76.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap81 = explodedArchive76.entries;
        explodedArchive71.entries = asciiBytesMap81;
        explodedArchive62.entries = asciiBytesMap81;
        explodedArchive35.entries = asciiBytesMap81;
        explodedArchive11.entries = asciiBytesMap81;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNotNull(entryCollection36);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(archiveList41);
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertNotNull(asciiBytesMap44);
        org.junit.Assert.assertNotNull(archiveList46);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(archiveList53);
        org.junit.Assert.assertNotNull(archiveList55);
        org.junit.Assert.assertNotNull(asciiBytesMap56);
        org.junit.Assert.assertNotNull(asciiBytesMap58);
        org.junit.Assert.assertNotNull(archive66);
        org.junit.Assert.assertNotNull(archive70);
        org.junit.Assert.assertNull(file72);
        org.junit.Assert.assertNotNull(archiveList74);
        org.junit.Assert.assertNull(manifest75);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "archive" + "'", str77, "archive");
        org.junit.Assert.assertNull(manifest80);
        org.junit.Assert.assertNotNull(asciiBytesMap81);
    }

    @Test
    public void test09722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09722");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str3 = explodedArchive2.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection4 = explodedArchive2.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive2.getFilteredArchive(entryRenameFilter5);
        java.io.File file7 = explodedArchive2.root;
        java.lang.String str8 = explodedArchive2.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap9);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap9);
        java.util.jar.Manifest manifest12 = null;
        explodedArchive11.manifest = manifest12;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive14.getNestedArchives(entryFilter21);
        java.io.File file23 = null;
        explodedArchive14.root = file23;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection25 = explodedArchive14.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler26 = explodedArchive14.new FilteredURLStreamHandler();
        java.io.File file27 = null;
        explodedArchive14.root = file27;
        java.util.jar.Manifest manifest29 = explodedArchive14.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive14.entries;
        explodedArchive11.entries = asciiBytesMap30;
        java.lang.String str32 = explodedArchive11.toString();
        java.io.File file33 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive11.buildEntries(file33, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "archive" + "'", str3, "archive");
        org.junit.Assert.assertNotNull(entryCollection4);
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(entryCollection25);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "archive" + "'", str32, "archive");
    }

    @Test
    public void test09723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09723");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive4.getNestedArchives(entryFilter8);
        java.lang.String str10 = explodedArchive4.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler11 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL12 = new java.net.URL("archive", "", (int) (byte) 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler11);
        java.lang.String str13 = uRL12.getFile();
        java.lang.String str14 = uRL12.getFile();
        java.lang.String str15 = uRL12.toExternalForm();
        java.net.URL uRL17 = new java.net.URL(uRL12, "hi!://:100/hi!://:100/hi!://:100");
        java.lang.String str18 = uRL17.getRef();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection19 = uRL17.openConnection();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "archive" + "'", str10, "archive");
        org.junit.Assert.assertEquals(uRL12.toString(), "archive://:0hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100/hi!" + "'", str13, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!://:100/hi!" + "'", str14, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "archive://:0hi!://:100/hi!" + "'", str15, "archive://:0hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL17.toString(), "archive://:0hi!://:100/hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test09724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09724");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = explodedArchive2.new FileEntry();
        java.lang.String str7 = explodedArchive2.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive2.new FileEntry();
        java.util.jar.Manifest manifest9 = null;
        explodedArchive2.manifest = manifest9;
        java.lang.String str11 = explodedArchive2.toString();
        java.io.File file12 = null;
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive14.getNestedArchives(entryFilter21);
        java.io.File file23 = null;
        java.io.File file24 = null;
        java.io.File file25 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file27 = explodedArchive26.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive26.getNestedArchives(entryFilter28);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive26.getNestedArchives(entryFilter30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file25, asciiBytesMap32);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive33.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file24, asciiBytesMap34);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap34);
        explodedArchive14.entries = asciiBytesMap34;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive38.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap39);
        explodedArchive2.entries = asciiBytesMap39;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap39);
        java.io.File file43 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive44.getNestedArchives(entryFilter46);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry48 = explodedArchive44.new FileEntry();
        java.lang.String str49 = explodedArchive44.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry50 = explodedArchive44.new FileEntry();
        java.util.jar.Manifest manifest51 = null;
        explodedArchive44.manifest = manifest51;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap53 = explodedArchive44.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file43, asciiBytesMap53);
        explodedArchive42.entries = asciiBytesMap53;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap53);
        java.util.jar.Manifest manifest57 = null;
        explodedArchive56.manifest = manifest57;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str59 = explodedArchive56.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "archive" + "'", str11, "archive");
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "archive" + "'", str49, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap53);
    }

    @Test
    public void test09725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09725");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.toExternalForm();
        java.lang.String str14 = uRL9.getRef();
        java.lang.String str15 = uRL9.getQuery();
        java.lang.String str16 = uRL9.getHost();
        java.lang.String str17 = uRL9.getQuery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100" + "'", str13, "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test09726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09726");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest3 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler4 = explodedArchive0.new FilteredURLStreamHandler();
        boolean boolean5 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive7.getNestedArchives(entryFilter9);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive7.getNestedArchives(entryFilter11);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive7.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive7.getNestedArchives(entryFilter14);
        java.io.File file16 = null;
        java.io.File file17 = null;
        java.io.File file18 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive19.getNestedArchives(entryFilter21);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive19.getNestedArchives(entryFilter23);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap27);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file16, asciiBytesMap27);
        explodedArchive7.entries = asciiBytesMap27;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive7.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest32 = explodedArchive7.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.jar.Manifest manifest35 = null;
        explodedArchive33.manifest = manifest35;
        java.util.jar.Manifest manifest37 = explodedArchive33.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive33.entries;
        explodedArchive7.entries = asciiBytesMap38;
        explodedArchive0.entries = asciiBytesMap38;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection41 = explodedArchive0.getEntries();
        boolean boolean42 = explodedArchive0.filtered;
        explodedArchive0.filtered = false;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(manifest3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(asciiBytesMap13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertNotNull(entryCollection41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test09727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09727");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        java.io.File file5 = explodedArchive0.root;
        java.lang.String str6 = explodedArchive0.toString();
        java.io.File file7 = null;
        explodedArchive0.root = file7;
        java.util.jar.Manifest manifest9 = null;
        explodedArchive0.manifest = manifest9;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
    }

    @Test
    public void test09728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09728");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL37.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive40.getNestedArchives(entryFilter42);
        explodedArchive40.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive40.getNestedArchives(entryFilter46);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler48 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL49 = new java.net.URL(uRL37, "", (java.net.URLStreamHandler) filteredURLStreamHandler48);
        java.lang.String str50 = uRL37.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str65 = explodedArchive64.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection66 = explodedArchive64.getEntries();
        java.util.jar.Manifest manifest67 = explodedArchive64.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler68 = explodedArchive64.new FilteredURLStreamHandler();
        java.net.URL uRL69 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler68);
        java.lang.String str70 = uRL69.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str73 = explodedArchive72.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection74 = explodedArchive72.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler75 = explodedArchive72.new FilteredURLStreamHandler();
        java.net.URL uRL76 = new java.net.URL(uRL69, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler75);
        java.lang.String str77 = uRL69.getHost();
        java.lang.String str78 = uRL69.getProtocol();
        java.lang.String str79 = uRL69.toExternalForm();
        java.lang.String str80 = uRL69.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive86 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str87 = explodedArchive86.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection88 = explodedArchive86.getEntries();
        java.util.jar.Manifest manifest89 = explodedArchive86.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler90 = explodedArchive86.new FilteredURLStreamHandler();
        java.net.URL uRL91 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler90);
        java.net.URL uRL92 = new java.net.URL(uRL69, "://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler90);
        java.net.URL uRL93 = new java.net.URL("[/hi!://:100/archive]:0", "hi!://:100/hi!://:100", 52, "/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler90);
        java.net.URL uRL94 = new java.net.URL("[:100]:52", "hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", (-1), "://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler90);
        java.net.URL uRL95 = new java.net.URL(uRL37, "", (java.net.URLStreamHandler) filteredURLStreamHandler90);
        java.lang.String str96 = uRL37.getAuthority();
        int int97 = uRL37.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/archive" + "'", str38, "/archive");
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "/archive" + "'", str50, "/archive");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "archive" + "'", str65, "archive");
        org.junit.Assert.assertNotNull(entryCollection66);
        org.junit.Assert.assertNull(manifest67);
        org.junit.Assert.assertEquals(uRL69.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "archive" + "'", str73, "archive");
        org.junit.Assert.assertNotNull(entryCollection74);
        org.junit.Assert.assertEquals(uRL76.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!://:100" + "'", str79, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "archive" + "'", str87, "archive");
        org.junit.Assert.assertNotNull(entryCollection88);
        org.junit.Assert.assertNull(manifest89);
        org.junit.Assert.assertEquals(uRL91.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL92.toString(), "hi!://:100/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL93.toString(), "[/hi!://:100/archive]:0://[hi!://:100/hi!://:100]:52/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals(uRL94.toString(), "[:100]:52://[hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL95.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + ":100" + "'", str96, ":100");
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-1) + "'", int97 == (-1));
    }

    @Test
    public void test09729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09729");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.io.File file9 = null;
        java.io.File file10 = null;
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap20);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap20);
        explodedArchive0.entries = asciiBytesMap20;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter24 = null;
        org.springframework.boot.loader.archive.Archive archive25 = explodedArchive0.getFilteredArchive(entryRenameFilter24);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler26 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection27 = explodedArchive0.getEntries();
        java.io.File file28 = null;
        explodedArchive0.root = file28;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive30.getNestedArchives(entryFilter32);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive30.new FileEntry();
        java.io.File file35 = null;
        fileEntry34.file = file35;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes37 = null;
        fileEntry34.name = asciiBytes37;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes39 = fileEntry34.name;
        java.io.File file40 = fileEntry34.file;
        java.io.File file41 = fileEntry34.getFile();
        java.io.File file42 = fileEntry34.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes43 = null;
        fileEntry34.name = asciiBytes43;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes45 = fileEntry34.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes46 = fileEntry34.getName();
        java.io.File file47 = null;
        fileEntry34.file = file47;
        java.io.File file49 = fileEntry34.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes50 = fileEntry34.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes51 = fileEntry34.getName();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive52 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(archive25);
        org.junit.Assert.assertNotNull(entryCollection27);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertNull(asciiBytes39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(asciiBytes45);
        org.junit.Assert.assertNull(asciiBytes46);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNull(asciiBytes50);
        org.junit.Assert.assertNull(asciiBytes51);
    }

    @Test
    public void test09730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09730");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        java.util.jar.Manifest manifest5 = explodedArchive1.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str7 = explodedArchive6.toString();
        java.util.jar.Manifest manifest8 = null;
        explodedArchive6.manifest = manifest8;
        java.util.jar.Manifest manifest10 = explodedArchive6.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive6.entries;
        explodedArchive1.entries = asciiBytesMap11;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter13 = null;
        org.springframework.boot.loader.archive.Archive archive14 = explodedArchive1.getFilteredArchive(entryRenameFilter13);
        java.util.jar.Manifest manifest15 = explodedArchive1.getManifest();
        java.util.jar.Manifest manifest16 = null;
        explodedArchive1.manifest = manifest16;
        java.io.File file18 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive19.getNestedArchives(entryFilter21);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive19.getNestedArchives(entryFilter23);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive19.entries;
        java.util.jar.Manifest manifest26 = null;
        explodedArchive19.manifest = manifest26;
        java.io.File file28 = null;
        explodedArchive19.root = file28;
        java.io.File file30 = null;
        explodedArchive19.root = file30;
        java.io.File file32 = null;
        explodedArchive19.root = file32;
        java.util.jar.Manifest manifest34 = null;
        explodedArchive19.manifest = manifest34;
        java.io.File file36 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file38 = explodedArchive37.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive37.getNestedArchives(entryFilter39);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter41 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList42 = explodedArchive37.getNestedArchives(entryFilter41);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap43 = explodedArchive37.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter44 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList45 = explodedArchive37.getNestedArchives(entryFilter44);
        java.io.File file46 = null;
        java.io.File file47 = null;
        java.io.File file48 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file50 = explodedArchive49.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter51 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList52 = explodedArchive49.getNestedArchives(entryFilter51);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter53 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList54 = explodedArchive49.getNestedArchives(entryFilter53);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap55 = explodedArchive49.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive(file48, asciiBytesMap55);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap57 = explodedArchive56.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive(file47, asciiBytesMap57);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive(file46, asciiBytesMap57);
        explodedArchive37.entries = asciiBytesMap57;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive(file36, asciiBytesMap57);
        java.util.jar.Manifest manifest62 = null;
        explodedArchive61.manifest = manifest62;
        java.io.File file64 = explodedArchive61.root;
        java.util.jar.Manifest manifest65 = explodedArchive61.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file67 = explodedArchive66.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter68 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList69 = explodedArchive66.getNestedArchives(entryFilter68);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter70 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList71 = explodedArchive66.getNestedArchives(entryFilter70);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap72 = explodedArchive66.entries;
        explodedArchive61.entries = asciiBytesMap72;
        explodedArchive19.entries = asciiBytesMap72;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap72);
        explodedArchive1.entries = asciiBytesMap72;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap72);
        java.io.File file78 = null;
        explodedArchive77.root = file78;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNull(manifest5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNotNull(archive14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(archiveList42);
        org.junit.Assert.assertNotNull(asciiBytesMap43);
        org.junit.Assert.assertNotNull(archiveList45);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(archiveList52);
        org.junit.Assert.assertNotNull(archiveList54);
        org.junit.Assert.assertNotNull(asciiBytesMap55);
        org.junit.Assert.assertNotNull(asciiBytesMap57);
        org.junit.Assert.assertNull(file64);
        org.junit.Assert.assertNull(manifest65);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(archiveList69);
        org.junit.Assert.assertNotNull(archiveList71);
        org.junit.Assert.assertNotNull(asciiBytesMap72);
    }

    @Test
    public void test09731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09731");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getQuery();
        int int25 = uRL9.getPort();
        java.lang.String str26 = uRL9.getHost();
        java.lang.String str27 = uRL9.getAuthority();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + ":100" + "'", str27, ":100");
    }

    @Test
    public void test09732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09732");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive8.getEntries();
        java.io.File file10 = explodedArchive8.root;
        explodedArchive8.filtered = true;
        java.io.File file13 = null;
        java.io.File file14 = null;
        java.io.File file15 = null;
        java.io.File file16 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file18 = explodedArchive17.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive17.getNestedArchives(entryFilter19);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive17.getNestedArchives(entryFilter21);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = explodedArchive17.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file16, asciiBytesMap23);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive24.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file15, asciiBytesMap25);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive26.new FileEntry();
        explodedArchive26.filtered = false;
        java.io.File file30 = null;
        java.io.File file31 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive32.getNestedArchives(entryFilter34);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry36 = explodedArchive32.new FileEntry();
        java.lang.String str37 = explodedArchive32.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry38 = explodedArchive32.new FileEntry();
        java.util.jar.Manifest manifest39 = null;
        explodedArchive32.manifest = manifest39;
        java.lang.String str41 = explodedArchive32.toString();
        java.io.File file42 = null;
        java.io.File file43 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive44.getNestedArchives(entryFilter46);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter48 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList49 = explodedArchive44.getNestedArchives(entryFilter48);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap50 = explodedArchive44.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter51 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList52 = explodedArchive44.getNestedArchives(entryFilter51);
        java.io.File file53 = null;
        java.io.File file54 = null;
        java.io.File file55 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file57 = explodedArchive56.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter58 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList59 = explodedArchive56.getNestedArchives(entryFilter58);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter60 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList61 = explodedArchive56.getNestedArchives(entryFilter60);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap62 = explodedArchive56.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive(file55, asciiBytesMap62);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap64 = explodedArchive63.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive(file54, asciiBytesMap64);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive(file53, asciiBytesMap64);
        explodedArchive44.entries = asciiBytesMap64;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive(file43, asciiBytesMap64);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap69 = explodedArchive68.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = new org.springframework.boot.loader.archive.ExplodedArchive(file42, asciiBytesMap69);
        explodedArchive32.entries = asciiBytesMap69;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive(file31, asciiBytesMap69);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive(file30, asciiBytesMap69);
        explodedArchive26.entries = asciiBytesMap69;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive(file14, asciiBytesMap69);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap69);
        explodedArchive8.entries = asciiBytesMap69;
        java.lang.String str78 = explodedArchive8.toString();
        explodedArchive8.filtered = false;
        java.io.File file81 = explodedArchive8.root;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(asciiBytesMap23);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "archive" + "'", str41, "archive");
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertNotNull(archiveList49);
        org.junit.Assert.assertNotNull(asciiBytesMap50);
        org.junit.Assert.assertNotNull(archiveList52);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(archiveList59);
        org.junit.Assert.assertNotNull(archiveList61);
        org.junit.Assert.assertNotNull(asciiBytesMap62);
        org.junit.Assert.assertNotNull(asciiBytesMap64);
        org.junit.Assert.assertNotNull(asciiBytesMap69);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "archive" + "'", str78, "archive");
        org.junit.Assert.assertNull(file81);
    }

    @Test
    public void test09733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09733");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive0.getNestedArchives(entryFilter5);
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter8 = null;
        org.springframework.boot.loader.archive.Archive archive9 = explodedArchive0.getFilteredArchive(entryRenameFilter8);
        java.util.jar.Manifest manifest10 = null;
        explodedArchive0.manifest = manifest10;
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNotNull(archive9);
    }

    @Test
    public void test09734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09734");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection4 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive0.getNestedArchives(entryFilter5);
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry9 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest10 = null;
        explodedArchive0.manifest = manifest10;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive0.getNestedArchives(entryFilter12);
        boolean boolean14 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter15 = null;
        org.springframework.boot.loader.archive.Archive archive16 = explodedArchive0.getFilteredArchive(entryRenameFilter15);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry17 = explodedArchive0.new FileEntry();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(entryCollection4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(archive16);
    }

    @Test
    public void test09735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09735");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap8);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive10.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = fileEntry11.getName();
        java.io.File file13 = fileEntry11.file;
        java.io.File file14 = fileEntry11.file;
        java.io.File file15 = fileEntry11.file;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNull(asciiBytes12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file15);
    }

    @Test
    public void test09736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09736");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.io.File file3 = null;
        explodedArchive0.root = file3;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection5 = explodedArchive0.getEntries();
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive0.getNestedArchives(entryFilter8);
        explodedArchive0.filtered = true;
        org.junit.Assert.assertNotNull(entryCollection5);
        org.junit.Assert.assertNotNull(archiveList9);
    }

    @Test
    public void test09737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09737");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("archive://:10:100", "[archive://:0hi!://:100/hi!]", "hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]://[hi!://:100/hi!://hi!:1hi!]:100archive://:10archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: archive://:10:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test09738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09738");
        java.io.File file20 = null;
        java.io.File file21 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file23 = explodedArchive22.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive22.getNestedArchives(entryFilter24);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive22.getNestedArchives(entryFilter26);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = explodedArchive22.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file21, asciiBytesMap28);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive29.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file20, asciiBytesMap30);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL33 = new java.net.URL("", "archive://:10archive", (int) (short) 100, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.net.URL uRL34 = new java.net.URL("hi!", "://[archive://:10archive]:100archive://:10archive", 0, "hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.net.URL uRL35 = new java.net.URL("/hi!", "archive", (int) (short) -1, "archive://:10:100", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.net.URL uRL36 = new java.net.URL("/://[archive://:10archive]:100archive://:10archive", "/hi!://:100", 32, "archive://:0hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.net.URL uRL37 = new java.net.URL("[hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]]:10", "[/archive:///archive:0hi!://:100]:0", 100, "[://[archive://:10archive]:100archive://:10archive]", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.lang.String str38 = uRL37.getProtocol();
        java.lang.String str39 = uRL37.getPath();
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNotNull(asciiBytesMap28);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertEquals(uRL33.toString(), "://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL34.toString(), "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals(uRL35.toString(), "/hi!://archivearchive://:10:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "/://[archive://:10archive]:100archive://:10archive://[/hi!://:100]:32archive://:0hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "[hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]]:10://[/archive:///archive:0hi!://:100]:0:100[://[archive://:10archive]:100archive://:10archive]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]]:10" + "'", str38, "[hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]]:10");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[://[archive://:10archive]:100archive://:10archive]" + "'", str39, "[://[archive://:10archive]:100archive://:10archive]");
    }

    @Test
    public void test09739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09739");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.lang.String str17 = uRL16.getAuthority();
        int int18 = uRL16.getDefaultPort();
        java.lang.String str19 = uRL16.getQuery();
        java.lang.String str20 = uRL16.getUserInfo();
        java.lang.String str21 = uRL16.toExternalForm();
        java.lang.String str22 = uRL16.getUserInfo();
        int int23 = uRL16.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + ":100" + "'", str17, ":100");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!://:100/hi!" + "'", str21, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test09740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09740");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        boolean boolean5 = explodedArchive0.filtered;
        boolean boolean6 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive0.entries;
        java.io.File file10 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file10, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
    }

    @Test
    public void test09741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09741");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.lang.String str7 = explodedArchive1.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive1.new FilteredURLStreamHandler();
        java.io.File file9 = null;
        java.io.File file10 = null;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap21);
        explodedArchive1.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap21);
        java.lang.Class<?> wildcardClass27 = asciiBytesMap21.getClass();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test09742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09742");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive0.getFilteredArchive(entryRenameFilter5);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection7 = explodedArchive0.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection8 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry9 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry14 = explodedArchive10.new FileEntry();
        java.io.File file15 = fileEntry14.file;
        java.io.File file16 = null;
        fileEntry14.file = file16;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes18 = fileEntry14.name;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive19 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertNotNull(entryCollection7);
        org.junit.Assert.assertNotNull(entryCollection8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(asciiBytes18);
    }

    @Test
    public void test09743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09743");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getUserInfo();
        java.lang.String str12 = uRL9.getRef();
        java.lang.String str13 = uRL9.getAuthority();
        java.lang.String str14 = uRL9.getQuery();
        int int15 = uRL9.getPort();
        java.lang.String str16 = uRL9.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + ":100" + "'", str13, ":100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!://:100" + "'", str16, "hi!://:100");
    }

    @Test
    public void test09744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09744");
        java.net.URLConnection.setDefaultRequestProperty("hi!://:100/hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:100hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10", "");
    }

    @Test
    public void test09745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09745");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.lang.String str5 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = explodedArchive0.new FileEntry();
        java.io.File file7 = fileEntry6.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry6.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry6.getName();
        java.io.File file10 = fileEntry6.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = null;
        fileEntry6.name = asciiBytes11;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(asciiBytes9);
        org.junit.Assert.assertNull(file10);
    }

    @Test
    public void test09746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09746");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:1", "/archive:///archive:0hi!://:100://[hi!://:100/archive]:100/archive:///archive:0hi!://:100", (int) '4', "[hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!]");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: [hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:1");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test09747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09747");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive4.entries = asciiBytesMap6;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive4.manifest = manifest8;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL11 = new java.net.URL("hi!://:100/hi!", "hi!://:100/hi!", 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler10);
        java.lang.String str12 = uRL11.getPath();
        java.lang.String str13 = uRL11.getProtocol();
        java.lang.String str14 = uRL11.getAuthority();
        java.lang.String str15 = uRL11.getRef();
        java.io.File file17 = null;
        java.io.File file18 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive19.getNestedArchives(entryFilter21);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive19.getNestedArchives(entryFilter23);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap27);
        explodedArchive28.filtered = true;
        java.io.File file31 = null;
        explodedArchive28.root = file31;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection33 = explodedArchive28.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive28.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL(uRL11, "[://[archive://:10archive]:100archive://:10archive]:0://[hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!]:1hi!://:100/hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str42 = explodedArchive41.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive41.getEntries();
        java.util.jar.Manifest manifest44 = explodedArchive41.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive41.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.lang.String str47 = uRL46.getQuery();
        java.lang.String str48 = uRL46.getRef();
        int int49 = uRL46.getPort();
        java.lang.String str50 = uRL46.getProtocol();
        java.lang.String str51 = uRL46.getPath();
        java.lang.String str52 = uRL46.getAuthority();
        java.lang.String str53 = uRL46.getRef();
        int int54 = uRL46.getPort();
        java.lang.String str55 = uRL46.getPath();
        java.lang.String str56 = uRL46.getAuthority();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection57 = filteredURLStreamHandler35.openConnection(uRL46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertEquals(uRL11.toString(), "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!://:100/hi!" + "'", str12, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100/hi!" + "'", str13, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[hi!://:100/hi!]:0" + "'", str14, "[hi!://:100/hi!]:0");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertNotNull(entryCollection33);
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/[://[archive://:10archive]:100archive://:10archive]:0://[hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!]:1hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "archive" + "'", str42, "archive");
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertNull(manifest44);
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + ":100" + "'", str52, ":100");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + ":100" + "'", str56, ":100");
    }

    @Test
    public void test09748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09748");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/hi!://:100/hi!://:100/hi!://:100", "[hi!://:100/archive]:100", (int) (byte) 10, "/archive://[hi!://:100/hi!]:1/hi!://[hi!://:100]:97/hi!://:100/archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /hi!://:100/hi!://:100/hi!://:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test09749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09749");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        java.lang.String str12 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str29 = explodedArchive28.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive28.getEntries();
        java.util.jar.Manifest manifest31 = explodedArchive28.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL33 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.lang.String str34 = uRL33.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str41 = explodedArchive40.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive40.getEntries();
        java.util.jar.Manifest manifest43 = explodedArchive40.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler44 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL45 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler44);
        java.lang.String str46 = uRL45.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str49 = explodedArchive48.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection50 = explodedArchive48.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL(uRL45, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.net.URL uRL53 = new java.net.URL(uRL33, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.net.URL uRL54 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        boolean boolean55 = uRL9.sameFile(uRL54);
        int int56 = uRL54.getDefaultPort();
        int int57 = uRL54.getDefaultPort();
        java.lang.String str58 = uRL54.getAuthority();
        int int59 = uRL54.getPort();
        java.lang.String str60 = uRL54.getHost();
        java.lang.String str61 = uRL54.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "archive" + "'", str41, "archive");
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "archive" + "'", str49, "archive");
        org.junit.Assert.assertNotNull(entryCollection50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL53.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + ":100" + "'", str58, ":100");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!://:100/hi!" + "'", str61, "hi!://:100/hi!");
    }

    @Test
    public void test09750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09750");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getAuthority();
        java.lang.String str11 = uRL9.toExternalForm();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str30 = explodedArchive29.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection31 = explodedArchive29.getEntries();
        java.util.jar.Manifest manifest32 = explodedArchive29.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        int int36 = uRL35.getPort();
        java.lang.String str37 = uRL35.getPath();
        java.lang.String str38 = uRL35.getPath();
        java.lang.String str39 = uRL35.toExternalForm();
        boolean boolean40 = uRL9.sameFile(uRL35);
        java.lang.String str41 = uRL9.getQuery();
        java.lang.String str42 = uRL9.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:1" + "'", str10, "hi!:1");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!://hi!:1hi!" + "'", str11, "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "archive" + "'", str30, "archive");
        org.junit.Assert.assertNotNull(entryCollection31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertEquals(uRL34.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "/hi!" + "'", str37, "/hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/hi!" + "'", str38, "/hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!://:100/hi!" + "'", str39, "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test09751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09751");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        int int24 = uRL23.getPort();
        java.lang.String str25 = uRL23.getPath();
        java.lang.String str26 = uRL23.getPath();
        java.lang.String str27 = uRL23.toExternalForm();
        java.lang.String str28 = uRL23.getRef();
        java.lang.String str29 = uRL23.toExternalForm();
        int int30 = uRL23.getDefaultPort();
        java.io.File file31 = null;
        java.io.File file32 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file34 = explodedArchive33.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive33.getNestedArchives(entryFilter35);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter37 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList38 = explodedArchive33.getNestedArchives(entryFilter37);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive33.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file32, asciiBytesMap39);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap41 = explodedArchive40.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file31, asciiBytesMap41);
        explodedArchive42.filtered = true;
        java.io.File file45 = null;
        explodedArchive42.root = file45;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection47 = explodedArchive42.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection48 = explodedArchive42.getEntries();
        java.lang.String str49 = explodedArchive42.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry50 = explodedArchive42.new FileEntry();
        explodedArchive42.filtered = true;
        java.lang.String str53 = explodedArchive42.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry54 = explodedArchive42.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes55 = fileEntry54.name;
        java.io.File file56 = null;
        fileEntry54.file = file56;
        boolean boolean58 = uRL23.equals((java.lang.Object) fileEntry54);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/hi!" + "'", str25, "/hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/hi!" + "'", str26, "/hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!://:100/hi!" + "'", str27, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!://:100/hi!" + "'", str29, "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertNotNull(archiveList38);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertNotNull(asciiBytesMap41);
        org.junit.Assert.assertNotNull(entryCollection47);
        org.junit.Assert.assertNotNull(entryCollection48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "archive" + "'", str49, "archive");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "archive" + "'", str53, "archive");
        org.junit.Assert.assertNull(asciiBytes55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test09752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09752");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap8);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive10.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = fileEntry11.getName();
        java.io.File file13 = fileEntry11.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = fileEntry11.getName();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNull(asciiBytes12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(asciiBytes14);
    }

    @Test
    public void test09753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09753");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("[hi!://:100/hi!://:100/archive]", "://[archive://:10archive]:100archive://:10archive", "/[hi!://:100/hi!]");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: [hi!://:100/hi!://:100/archive]");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test09754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09754");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive0.entries;
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        explodedArchive22.filtered = true;
        java.util.jar.Manifest manifest25 = explodedArchive22.getManifest();
        java.util.jar.Manifest manifest26 = explodedArchive22.manifest;
        java.io.File file27 = null;
        explodedArchive22.root = file27;
        java.io.File file29 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive30.getNestedArchives(entryFilter32);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive30.getNestedArchives(entryFilter34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = explodedArchive30.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file29, asciiBytesMap36);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive37.entries;
        explodedArchive22.entries = asciiBytesMap38;
        explodedArchive0.entries = asciiBytesMap38;
        boolean boolean41 = explodedArchive0.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap42 = explodedArchive0.entries;
        boolean boolean43 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest44 = explodedArchive0.getManifest();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertNull(manifest26);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(asciiBytesMap36);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(manifest44);
    }

    @Test
    public void test09755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09755");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest3 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler4 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file5 = null;
        java.io.File file6 = null;
        java.io.File file7 = null;
        java.io.File file8 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap15);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file7, asciiBytesMap15);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive17.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file6, asciiBytesMap18);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file5, asciiBytesMap18);
        explodedArchive0.entries = asciiBytesMap18;
        java.lang.String str22 = explodedArchive0.toString();
        java.util.jar.Manifest manifest23 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest24 = explodedArchive0.manifest;
        java.io.File file25 = null;
        java.io.File file26 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive27.getNestedArchives(entryFilter29);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter31 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList32 = explodedArchive27.getNestedArchives(entryFilter31);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap33 = explodedArchive27.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file26, asciiBytesMap33);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap35 = explodedArchive34.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file25, asciiBytesMap35);
        boolean boolean37 = explodedArchive36.filtered;
        explodedArchive36.filtered = false;
        explodedArchive36.filtered = true;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap42 = explodedArchive36.entries;
        explodedArchive0.entries = asciiBytesMap42;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(manifest3);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNotNull(archiveList32);
        org.junit.Assert.assertNotNull(asciiBytesMap33);
        org.junit.Assert.assertNotNull(asciiBytesMap35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(asciiBytesMap42);
    }

    @Test
    public void test09756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09756");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getFile();
        java.lang.String str25 = uRL9.getHost();
        int int26 = uRL9.getPort();
        java.lang.String str27 = uRL9.getProtocol();
        java.lang.String str28 = uRL9.getQuery();
        java.lang.String str29 = uRL9.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test09757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09757");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", ":100://[hi!://:100/hi!]:100hi!://:100/archive", (int) (short) 0, "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test09758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09758");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.lang.String str17 = uRL9.getHost();
        java.lang.String str18 = uRL9.getProtocol();
        java.lang.String str19 = uRL9.toExternalForm();
        java.lang.String str20 = uRL9.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str27 = explodedArchive26.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection28 = explodedArchive26.getEntries();
        java.util.jar.Manifest manifest29 = explodedArchive26.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler30 = explodedArchive26.new FilteredURLStreamHandler();
        java.net.URL uRL31 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler30);
        java.net.URL uRL32 = new java.net.URL(uRL9, "://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler30);
        java.lang.String str33 = uRL32.getPath();
        java.lang.String str34 = uRL32.getRef();
        java.lang.String str35 = uRL32.getAuthority();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!://:100" + "'", str19, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "archive" + "'", str27, "archive");
        org.junit.Assert.assertNotNull(entryCollection28);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertEquals(uRL31.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "/://[archive://:10archive]:100archive://:10archive" + "'", str33, "/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + ":100" + "'", str35, ":100");
    }

    @Test
    public void test09759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09759");
        java.net.URLConnection.setDefaultRequestProperty("/[:100]", "/:100");
    }

    @Test
    public void test09760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09760");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive0.new FileEntry();
        explodedArchive0.filtered = true;
        explodedArchive0.filtered = false;
        java.lang.String str10 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler11 = explodedArchive0.new FilteredURLStreamHandler();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "archive" + "'", str10, "archive");
    }

    @Test
    public void test09761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09761");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        boolean boolean5 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection7 = explodedArchive0.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive0.entries;
        java.lang.String str9 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = explodedArchive0.new FileEntry();
        java.io.File file11 = fileEntry10.file;
        java.io.File file12 = fileEntry10.getFile();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = fileEntry10.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(entryCollection7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test09762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09762");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive3.getNestedArchives(entryFilter5);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive3.getNestedArchives(entryFilter7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap9);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap9);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap9);
        java.util.jar.Manifest manifest13 = explodedArchive12.getManifest();
        java.io.File file14 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive15.filtered = true;
        java.util.jar.Manifest manifest18 = null;
        explodedArchive15.manifest = manifest18;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter20 = null;
        org.springframework.boot.loader.archive.Archive archive21 = explodedArchive15.getFilteredArchive(entryRenameFilter20);
        java.io.File file22 = null;
        explodedArchive15.root = file22;
        java.io.File file24 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive25.getNestedArchives(entryFilter27);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive25.getNestedArchives(entryFilter29);
        java.lang.String str31 = explodedArchive25.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive25.new FilteredURLStreamHandler();
        boolean boolean33 = explodedArchive25.filtered;
        java.io.File file34 = explodedArchive25.root;
        boolean boolean35 = explodedArchive25.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = explodedArchive25.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file24, asciiBytesMap36);
        explodedArchive15.entries = asciiBytesMap36;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file14, asciiBytesMap36);
        explodedArchive12.entries = asciiBytesMap36;
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNull(manifest13);
        org.junit.Assert.assertNotNull(archive21);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap36);
    }

    @Test
    public void test09763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09763");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        java.util.jar.Manifest manifest14 = explodedArchive11.getManifest();
        java.io.File file15 = null;
        explodedArchive11.root = file15;
        java.util.jar.Manifest manifest17 = explodedArchive11.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler18 = explodedArchive11.new FilteredURLStreamHandler();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(manifest14);
        org.junit.Assert.assertNull(manifest17);
    }

    @Test
    public void test09764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09764");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes6 = null;
        fileEntry4.name = asciiBytes6;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = fileEntry4.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
    }

    @Test
    public void test09765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09765");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive0.entries;
        java.util.jar.Manifest manifest9 = explodedArchive0.manifest;
        java.lang.String str10 = explodedArchive0.toString();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "archive" + "'", str10, "archive");
    }

    @Test
    public void test09766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09766");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        java.io.File file3 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive4.getNestedArchives(entryFilter8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive4.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive4.getNestedArchives(entryFilter11);
        java.io.File file13 = null;
        java.io.File file14 = null;
        java.io.File file15 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive16.getNestedArchives(entryFilter18);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive16.getNestedArchives(entryFilter20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive16.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file15, asciiBytesMap22);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = explodedArchive23.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file14, asciiBytesMap24);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap24);
        explodedArchive4.entries = asciiBytesMap24;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file3, asciiBytesMap24);
        java.util.jar.Manifest manifest29 = null;
        explodedArchive28.manifest = manifest29;
        java.io.File file31 = explodedArchive28.root;
        java.util.jar.Manifest manifest32 = explodedArchive28.getManifest();
        java.io.File file33 = null;
        explodedArchive28.root = file33;
        java.io.File file35 = null;
        explodedArchive28.root = file35;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str38 = explodedArchive37.toString();
        java.util.jar.Manifest manifest39 = null;
        explodedArchive37.manifest = manifest39;
        java.util.jar.Manifest manifest41 = explodedArchive37.getManifest();
        boolean boolean42 = explodedArchive37.filtered;
        java.util.jar.Manifest manifest43 = explodedArchive37.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap44 = explodedArchive37.entries;
        explodedArchive28.entries = asciiBytesMap44;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap44);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap44);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap44);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap49 = explodedArchive48.entries;
        boolean boolean50 = explodedArchive48.filtered;
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNotNull(asciiBytesMap24);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertNull(manifest41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertNotNull(asciiBytesMap44);
        org.junit.Assert.assertNotNull(asciiBytesMap49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test09767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09767");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry2 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest3 = explodedArchive0.getManifest();
        boolean boolean4 = explodedArchive0.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection5 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str7 = explodedArchive6.toString();
        boolean boolean8 = explodedArchive6.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter9 = null;
        org.springframework.boot.loader.archive.Archive archive10 = explodedArchive6.getFilteredArchive(entryRenameFilter9);
        java.io.File file11 = explodedArchive6.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter15 = null;
        org.springframework.boot.loader.archive.Archive archive16 = explodedArchive12.getFilteredArchive(entryRenameFilter15);
        java.io.File file17 = explodedArchive12.root;
        java.lang.String str18 = explodedArchive12.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive12.entries;
        explodedArchive6.entries = asciiBytesMap19;
        explodedArchive0.entries = asciiBytesMap19;
        explodedArchive0.filtered = false;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection24 = explodedArchive0.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection25 = explodedArchive0.getEntries();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(entryCollection5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(archive10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNotNull(archive16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(entryCollection24);
        org.junit.Assert.assertNotNull(entryCollection25);
    }

    @Test
    public void test09768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09768");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter9 = null;
        org.springframework.boot.loader.archive.Archive archive10 = explodedArchive8.getFilteredArchive(entryRenameFilter9);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive8.new FileEntry();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection12 = explodedArchive8.getEntries();
        boolean boolean13 = explodedArchive8.filtered;
        java.util.jar.Manifest manifest14 = explodedArchive8.manifest;
        java.util.jar.Manifest manifest15 = null;
        explodedArchive8.manifest = manifest15;
        java.io.File file17 = explodedArchive8.root;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(archive10);
        org.junit.Assert.assertNotNull(entryCollection12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(manifest14);
        org.junit.Assert.assertNull(file17);
    }

    @Test
    public void test09769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09769");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive1.getNestedArchives(entryFilter8);
        java.io.File file10 = null;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap21);
        explodedArchive1.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap21);
        java.lang.String str26 = explodedArchive25.toString();
        java.util.jar.Manifest manifest27 = explodedArchive25.manifest;
        boolean boolean28 = explodedArchive25.filtered;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "archive" + "'", str26, "archive");
        org.junit.Assert.assertNull(manifest27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test09770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09770");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getPath();
        java.lang.String str12 = uRL9.getFile();
        java.lang.String str13 = uRL9.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str19 = explodedArchive18.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection20 = explodedArchive18.getEntries();
        java.util.jar.Manifest manifest21 = explodedArchive18.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive18.new FilteredURLStreamHandler();
        java.net.URL uRL23 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler22);
        java.lang.String str24 = uRL23.getHost();
        java.lang.String str25 = uRL23.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getQuery();
        java.lang.String str37 = uRL35.getHost();
        int int38 = uRL35.getPort();
        boolean boolean39 = uRL23.sameFile(uRL35);
        java.net.URL uRL41 = new java.net.URL(uRL35, "");
        java.lang.String str42 = uRL41.getProtocol();
        java.lang.String str43 = uRL41.getUserInfo();
        java.lang.String str44 = uRL41.getQuery();
        int int45 = uRL41.getPort();
        boolean boolean46 = uRL9.sameFile(uRL41);
        java.lang.String str47 = uRL41.getAuthority();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "archive" + "'", str19, "archive");
        org.junit.Assert.assertNotNull(entryCollection20);
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + ":100" + "'", str47, ":100");
    }

    @Test
    public void test09771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09771");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.lang.String str7 = explodedArchive1.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive1.new FilteredURLStreamHandler();
        boolean boolean9 = explodedArchive1.filtered;
        java.io.File file10 = explodedArchive1.root;
        java.io.File file11 = null;
        explodedArchive1.root = file11;
        java.util.jar.Manifest manifest13 = explodedArchive1.getManifest();
        java.io.File file14 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str16 = explodedArchive15.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive15.getEntries();
        java.util.jar.Manifest manifest18 = explodedArchive15.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive15.new FilteredURLStreamHandler();
        java.io.File file20 = null;
        java.io.File file21 = null;
        java.io.File file22 = null;
        java.io.File file23 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive24.getNestedArchives(entryFilter26);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive24.getNestedArchives(entryFilter28);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive24.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap30);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap33 = explodedArchive32.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file21, asciiBytesMap33);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file20, asciiBytesMap33);
        explodedArchive15.entries = asciiBytesMap33;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file14, asciiBytesMap33);
        explodedArchive1.entries = asciiBytesMap33;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap33);
        java.io.File file40 = null;
        explodedArchive39.root = file40;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive39.getEntries();
        java.io.File file43 = null;
        explodedArchive39.root = file43;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(manifest13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "archive" + "'", str16, "archive");
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNotNull(asciiBytesMap33);
        org.junit.Assert.assertNotNull(entryCollection42);
    }

    @Test
    public void test09772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09772");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        boolean boolean2 = explodedArchive0.filtered;
        java.io.File file3 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = explodedArchive4.new FileEntry();
        java.util.jar.Manifest manifest7 = explodedArchive4.getManifest();
        java.util.jar.Manifest manifest8 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection13 = explodedArchive9.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive9.getNestedArchives(entryFilter14);
        java.util.jar.Manifest manifest16 = null;
        explodedArchive9.manifest = manifest16;
        explodedArchive9.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive9.entries;
        explodedArchive4.entries = asciiBytesMap20;
        explodedArchive0.entries = asciiBytesMap20;
        java.io.File file23 = explodedArchive0.root;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection24 = explodedArchive0.getEntries();
        java.lang.Class<?> wildcardClass25 = explodedArchive0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(entryCollection13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(entryCollection24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test09773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09773");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.io.File file3 = explodedArchive0.root;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        java.io.File file5 = null;
        explodedArchive0.root = file5;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        java.util.jar.Manifest manifest9 = explodedArchive0.getManifest();
        java.lang.String str10 = explodedArchive0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "archive" + "'", str10, "archive");
    }

    @Test
    public void test09774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09774");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getFile();
        int int15 = uRL13.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getQuery();
        java.lang.String str28 = uRL26.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str35 = explodedArchive34.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection36 = explodedArchive34.getEntries();
        java.util.jar.Manifest manifest37 = explodedArchive34.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL40 = new java.net.URL(uRL26, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL41 = new java.net.URL(uRL13, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL42 = new java.net.URL("archive", "", (int) (byte) 10, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str43 = uRL42.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str49 = explodedArchive48.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection50 = explodedArchive48.getEntries();
        java.util.jar.Manifest manifest51 = explodedArchive48.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler52 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL53 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler52);
        java.lang.String str54 = uRL53.getQuery();
        java.lang.String str55 = uRL53.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str62 = explodedArchive61.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection63 = explodedArchive61.getEntries();
        java.util.jar.Manifest manifest64 = explodedArchive61.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler65 = explodedArchive61.new FilteredURLStreamHandler();
        java.net.URL uRL66 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.net.URL uRL67 = new java.net.URL(uRL53, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        int int68 = uRL67.getPort();
        java.lang.String str69 = uRL67.getPath();
        java.lang.String str70 = uRL67.getPath();
        java.lang.String str71 = uRL67.toExternalForm();
        java.lang.String str72 = uRL67.getRef();
        java.lang.String str73 = uRL67.getPath();
        boolean boolean74 = uRL42.sameFile(uRL67);
        int int75 = uRL67.getDefaultPort();
        java.lang.String str76 = uRL67.getPath();
        java.lang.String str77 = uRL67.getUserInfo();
        java.lang.String str78 = uRL67.getAuthority();
        int int79 = uRL67.getDefaultPort();
        java.lang.String str80 = uRL67.getHost();
        java.lang.String str81 = uRL67.toString();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "archive" + "'", str35, "archive");
        org.junit.Assert.assertNotNull(entryCollection36);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL42.toString(), "archive://:10:100");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "archive" + "'", str49, "archive");
        org.junit.Assert.assertNotNull(entryCollection50);
        org.junit.Assert.assertNull(manifest51);
        org.junit.Assert.assertEquals(uRL53.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "archive" + "'", str62, "archive");
        org.junit.Assert.assertNotNull(entryCollection63);
        org.junit.Assert.assertNull(manifest64);
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "/hi!" + "'", str69, "/hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "/hi!" + "'", str70, "/hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!://:100/hi!" + "'", str71, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "/hi!" + "'", str73, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "/hi!" + "'", str76, "/hi!");
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + ":100" + "'", str78, ":100");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!://:100/hi!" + "'", str81, "hi!://:100/hi!");
    }

    @Test
    public void test09775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09775");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getAuthority();
        java.lang.String str25 = uRL9.getRef();
        java.lang.String str26 = uRL9.getProtocol();
        java.lang.String str27 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getPath();
        java.lang.String str39 = uRL37.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection47 = explodedArchive45.getEntries();
        java.util.jar.Manifest manifest48 = explodedArchive45.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.net.URL uRL51 = new java.net.URL(uRL37, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter59 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList60 = explodedArchive57.getNestedArchives(entryFilter59);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection61 = explodedArchive57.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap62 = explodedArchive57.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive57.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL("/archive", "hi!://:100/hi!", (int) (byte) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL65 = new java.net.URL(uRL51, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        boolean boolean66 = uRL9.sameFile(uRL65);
        java.lang.String str67 = uRL9.getProtocol();
        java.lang.String str68 = uRL9.getQuery();
        java.lang.String str69 = uRL9.getQuery();
        java.lang.String str70 = uRL9.getAuthority();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertNotNull(entryCollection47);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(archiveList60);
        org.junit.Assert.assertNotNull(entryCollection61);
        org.junit.Assert.assertNotNull(asciiBytesMap62);
        org.junit.Assert.assertEquals(uRL64.toString(), "/archive://[hi!://:100/hi!]:1hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + ":100" + "'", str70, ":100");
    }

    @Test
    public void test09776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09776");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!", "hi!://hi!:1/[://[archive://:10archive]:100archive://:10archive]:0", 35, "[hi!://:100]:97");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test09777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09777");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.root;
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = null;
        fileEntry7.name = asciiBytes8;
        java.io.File file10 = fileEntry7.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = fileEntry7.name;
        java.io.File file12 = fileEntry7.getFile();
        java.io.File file13 = null;
        fileEntry7.file = file13;
        java.io.File file15 = null;
        fileEntry7.file = file15;
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(asciiBytes11);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test09778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09778");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL9.getPath();
        java.lang.String str39 = uRL9.getPath();
        java.lang.String str40 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file42 = explodedArchive41.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter43 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList44 = explodedArchive41.getNestedArchives(entryFilter43);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter45 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList46 = explodedArchive41.getNestedArchives(entryFilter45);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap47 = explodedArchive41.entries;
        java.util.jar.Manifest manifest48 = null;
        explodedArchive41.manifest = manifest48;
        boolean boolean50 = explodedArchive41.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter51 = null;
        org.springframework.boot.loader.archive.Archive archive52 = explodedArchive41.getFilteredArchive(entryRenameFilter51);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry53 = explodedArchive41.new FileEntry();
        java.lang.Class<?> wildcardClass54 = fileEntry53.getClass();
        java.io.File file55 = null;
        java.io.File file56 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter59 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList60 = explodedArchive57.getNestedArchives(entryFilter59);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter61 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList62 = explodedArchive57.getNestedArchives(entryFilter61);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap63 = explodedArchive57.entries;
        explodedArchive57.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter66 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList67 = explodedArchive57.getNestedArchives(entryFilter66);
        explodedArchive57.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap70 = explodedArchive57.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive(file56, asciiBytesMap70);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive(file55, asciiBytesMap70);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler73 = explodedArchive72.new FilteredURLStreamHandler();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection74 = explodedArchive72.getEntries();
        java.lang.Class<?> wildcardClass75 = entryCollection74.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[] { wildcardClass54, wildcardClass75 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj77 = uRL9.getContent(classArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(archiveList44);
        org.junit.Assert.assertNotNull(archiveList46);
        org.junit.Assert.assertNotNull(asciiBytesMap47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(archive52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(archiveList60);
        org.junit.Assert.assertNotNull(archiveList62);
        org.junit.Assert.assertNotNull(asciiBytesMap63);
        org.junit.Assert.assertNotNull(archiveList67);
        org.junit.Assert.assertNotNull(asciiBytesMap70);
        org.junit.Assert.assertNotNull(entryCollection74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray76);
    }

    @Test
    public void test09779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09779");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getQuery();
        java.lang.String str15 = uRL13.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL27 = new java.net.URL(uRL13, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL28 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str29 = uRL28.getProtocol();
        java.lang.String str30 = uRL28.getPath();
        java.lang.String str31 = uRL28.getRef();
        java.lang.String str32 = uRL28.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive38.filtered = true;
        java.util.jar.Manifest manifest41 = null;
        explodedArchive38.manifest = manifest41;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter43 = null;
        org.springframework.boot.loader.archive.Archive archive44 = explodedArchive38.getFilteredArchive(entryRenameFilter43);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive38.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection46 = explodedArchive38.getEntries();
        java.util.jar.Manifest manifest47 = explodedArchive38.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter48 = null;
        org.springframework.boot.loader.archive.Archive archive49 = explodedArchive38.getFilteredArchive(entryRenameFilter48);
        java.util.jar.Manifest manifest50 = null;
        explodedArchive38.manifest = manifest50;
        java.util.jar.Manifest manifest52 = null;
        explodedArchive38.manifest = manifest52;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler54 = explodedArchive38.new FilteredURLStreamHandler();
        java.net.URL uRL55 = new java.net.URL("archive", "hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", 10, "hi!://:100/[/hi!://:100/archive]", (java.net.URLStreamHandler) filteredURLStreamHandler54);
        java.net.URL uRL56 = new java.net.URL(uRL28, "[hi!://:100/hi!://:100/:100]", (java.net.URLStreamHandler) filteredURLStreamHandler54);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL28.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "archive" + "'", str30, "archive");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "archive" + "'", str32, "archive");
        org.junit.Assert.assertNotNull(archive44);
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNotNull(entryCollection46);
        org.junit.Assert.assertNull(manifest47);
        org.junit.Assert.assertNotNull(archive49);
        org.junit.Assert.assertEquals(uRL55.toString(), "archive://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:10hi!://:100/[/hi!://:100/archive]");
        org.junit.Assert.assertEquals(uRL56.toString(), "archive://:10/[hi!://:100/hi!://:100/:100]");
    }

    @Test
    public void test09780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09780");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        java.io.File file5 = explodedArchive0.root;
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest8 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest9 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = explodedArchive0.new FileEntry();
        java.io.File file11 = null;
        fileEntry10.file = file11;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNull(manifest9);
    }

    @Test
    public void test09781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09781");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.io.File file3 = explodedArchive0.root;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        java.io.File file5 = null;
        explodedArchive0.root = file5;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        java.lang.String str8 = explodedArchive0.toString();
        java.util.jar.Manifest manifest9 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file11 = null;
        explodedArchive0.root = file11;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection13 = explodedArchive0.getEntries();
        java.io.File file14 = null;
        explodedArchive0.root = file14;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNotNull(entryCollection13);
    }

    @Test
    public void test09782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09782");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL9.getPath();
        java.lang.String str39 = uRL9.getPath();
        java.lang.String str40 = uRL9.getUserInfo();
        java.lang.String str41 = uRL9.toExternalForm();
        java.lang.String str42 = uRL9.getQuery();
        java.lang.String str43 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file46 = explodedArchive45.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter47 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList48 = explodedArchive45.getNestedArchives(entryFilter47);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter49 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList50 = explodedArchive45.getNestedArchives(entryFilter49);
        java.lang.String str51 = explodedArchive45.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry52 = explodedArchive45.new FileEntry();
        explodedArchive45.filtered = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler55 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL56 = new java.net.URL(uRL9, "[/archive:///archive:0hi!://:100]:0", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str62 = explodedArchive61.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection63 = explodedArchive61.getEntries();
        java.util.jar.Manifest manifest64 = explodedArchive61.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler65 = explodedArchive61.new FilteredURLStreamHandler();
        java.net.URL uRL66 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.lang.String str67 = uRL66.getHost();
        java.lang.String str68 = uRL66.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str74 = explodedArchive73.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection75 = explodedArchive73.getEntries();
        java.util.jar.Manifest manifest76 = explodedArchive73.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler77 = explodedArchive73.new FilteredURLStreamHandler();
        java.net.URL uRL78 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler77);
        java.lang.String str79 = uRL78.getQuery();
        java.lang.String str80 = uRL78.getHost();
        int int81 = uRL78.getPort();
        boolean boolean82 = uRL66.sameFile(uRL78);
        java.net.URL uRL84 = new java.net.URL(uRL78, "");
        java.lang.String str85 = uRL84.getProtocol();
        java.lang.String str86 = uRL84.getHost();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection87 = filteredURLStreamHandler55.openConnection(uRL84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!://:100" + "'", str41, "hi!://:100");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(archiveList48);
        org.junit.Assert.assertNotNull(archiveList50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "archive" + "'", str51, "archive");
        org.junit.Assert.assertEquals(uRL56.toString(), "hi!://:100/[/archive:///archive:0hi!://:100]:0");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "archive" + "'", str62, "archive");
        org.junit.Assert.assertNotNull(entryCollection63);
        org.junit.Assert.assertNull(manifest64);
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "archive" + "'", str74, "archive");
        org.junit.Assert.assertNotNull(entryCollection75);
        org.junit.Assert.assertNull(manifest76);
        org.junit.Assert.assertEquals(uRL78.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 100 + "'", int81 == 100);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertEquals(uRL84.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "hi!" + "'", str85, "hi!");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
    }

    @Test
    public void test09783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09783");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap2 = null;
        explodedArchive0.entries = asciiBytesMap2;
        java.util.jar.Manifest manifest4 = null;
        explodedArchive0.manifest = manifest4;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive0.manifest = manifest6;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection8 = explodedArchive0.getEntries();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
    }

    @Test
    public void test09784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09784");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive3.getNestedArchives(entryFilter5);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive3.getNestedArchives(entryFilter7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap11);
        explodedArchive12.filtered = true;
        java.io.File file15 = null;
        explodedArchive12.root = file15;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive12.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive19.entries;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = explodedArchive19.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
    }

    @Test
    public void test09785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09785");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive1.new FileEntry();
        java.lang.String str6 = explodedArchive1.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive1.new FileEntry();
        java.util.jar.Manifest manifest8 = null;
        explodedArchive1.manifest = manifest8;
        java.lang.String str10 = explodedArchive1.toString();
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive13.getNestedArchives(entryFilter20);
        java.io.File file22 = null;
        java.io.File file23 = null;
        java.io.File file24 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive25.getNestedArchives(entryFilter27);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive25.getNestedArchives(entryFilter29);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap31 = explodedArchive25.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file24, asciiBytesMap31);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap33 = explodedArchive32.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap33);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap33);
        explodedArchive13.entries = asciiBytesMap33;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap33);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive37.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap38);
        explodedArchive1.entries = asciiBytesMap38;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap38);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive41.new FileEntry();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter43 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList44 = explodedArchive41.getNestedArchives(entryFilter43);
        java.util.jar.Manifest manifest45 = null;
        explodedArchive41.manifest = manifest45;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "archive" + "'", str10, "archive");
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNotNull(asciiBytesMap31);
        org.junit.Assert.assertNotNull(asciiBytesMap33);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertNotNull(archiveList44);
    }

    @Test
    public void test09786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09786");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        java.io.File file5 = explodedArchive0.root;
        java.lang.String str6 = explodedArchive0.toString();
        boolean boolean7 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest9 = explodedArchive0.manifest;
        boolean boolean10 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest11 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.lang.String str18 = explodedArchive12.toString();
        java.util.jar.Manifest manifest19 = explodedArchive12.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive12.entries;
        java.io.File file21 = null;
        explodedArchive12.root = file21;
        java.io.File file23 = null;
        java.io.File file24 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive25.getNestedArchives(entryFilter27);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive25.getNestedArchives(entryFilter29);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap31 = explodedArchive25.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file24, asciiBytesMap31);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap33 = explodedArchive32.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap33);
        explodedArchive34.filtered = true;
        java.util.jar.Manifest manifest37 = explodedArchive34.getManifest();
        java.util.jar.Manifest manifest38 = explodedArchive34.manifest;
        java.io.File file39 = null;
        explodedArchive34.root = file39;
        java.io.File file41 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter44 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList45 = explodedArchive42.getNestedArchives(entryFilter44);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive42.getNestedArchives(entryFilter46);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap48 = explodedArchive42.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file41, asciiBytesMap48);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap50 = explodedArchive49.entries;
        explodedArchive34.entries = asciiBytesMap50;
        explodedArchive12.entries = asciiBytesMap50;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap53 = explodedArchive12.entries;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap54 = explodedArchive12.entries;
        java.io.File file55 = null;
        explodedArchive12.root = file55;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry57 = explodedArchive12.new FileEntry();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive58 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNotNull(asciiBytesMap31);
        org.junit.Assert.assertNotNull(asciiBytesMap33);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertNull(manifest38);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(archiveList45);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertNotNull(asciiBytesMap48);
        org.junit.Assert.assertNotNull(asciiBytesMap50);
        org.junit.Assert.assertNotNull(asciiBytesMap53);
        org.junit.Assert.assertNotNull(asciiBytesMap54);
    }

    @Test
    public void test09787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09787");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry12.name;
        java.io.File file14 = fileEntry12.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes15 = fileEntry12.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes16 = fileEntry12.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes17 = fileEntry12.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes18 = null;
        fileEntry12.name = asciiBytes18;
        java.io.File file20 = fileEntry12.getFile();
        java.io.File file21 = null;
        fileEntry12.file = file21;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(asciiBytes13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(asciiBytes15);
        org.junit.Assert.assertNull(asciiBytes16);
        org.junit.Assert.assertNull(asciiBytes17);
        org.junit.Assert.assertNull(file20);
    }

    @Test
    public void test09788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09788");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str42 = uRL9.getQuery();
        java.lang.String str43 = uRL9.getRef();
        java.lang.String str44 = uRL9.getQuery();
        java.lang.String str45 = uRL9.getRef();
        java.lang.String str46 = uRL9.getRef();
        java.lang.String str47 = uRL9.getHost();
        java.lang.String str48 = uRL9.getQuery();
        java.net.URL uRL50 = new java.net.URL(uRL9, "hi!://:100/hi!://:100/hi!://hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100/hi!://:100/hi!://:100/hi!://hi!");
    }

    @Test
    public void test09789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09789");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry12.name;
        java.io.File file14 = fileEntry12.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes15 = fileEntry12.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes16 = fileEntry12.getName();
        java.io.File file17 = fileEntry12.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes18 = fileEntry12.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes19 = fileEntry12.name;
        java.io.File file20 = fileEntry12.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes21 = fileEntry12.name;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(asciiBytes13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(asciiBytes15);
        org.junit.Assert.assertNull(asciiBytes16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(asciiBytes18);
        org.junit.Assert.assertNull(asciiBytes19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(asciiBytes21);
    }

    @Test
    public void test09790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09790");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive4.entries = asciiBytesMap6;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive4.manifest = manifest8;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL11 = new java.net.URL("hi!://:100/archive", "/archive", (int) (byte) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler10);
        java.lang.String str12 = uRL11.getPath();
        java.lang.String str13 = uRL11.getFile();
        java.lang.String str14 = uRL11.toExternalForm();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str16 = explodedArchive15.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry17 = explodedArchive15.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes18 = fileEntry17.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes19 = fileEntry17.name;
        java.io.File file20 = null;
        fileEntry17.file = file20;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes22 = fileEntry17.getName();
        java.lang.Class<?> wildcardClass23 = fileEntry17.getClass();
        java.lang.Class[] classArray24 = new java.lang.Class[] { wildcardClass23 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj25 = uRL11.getContent(classArray24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertEquals(uRL11.toString(), "hi!://:100/archive:///archive:1hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!://:100/archive" + "'", str12, "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100/archive" + "'", str13, "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!://:100/archive:///archive:1hi!://:100/archive" + "'", str14, "hi!://:100/archive:///archive:1hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "archive" + "'", str16, "archive");
        org.junit.Assert.assertNull(asciiBytes18);
        org.junit.Assert.assertNull(asciiBytes19);
        org.junit.Assert.assertNull(asciiBytes22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(classArray24);
    }

    @Test
    public void test09791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09791");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.root;
        java.lang.String str6 = explodedArchive0.toString();
        boolean boolean7 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive0.getEntries();
        java.io.File file10 = null;
        explodedArchive0.root = file10;
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(entryCollection9);
    }

    @Test
    public void test09792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09792");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getDefaultPort();
        java.lang.String str13 = uRL9.getPath();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI14 = uRL9.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test09793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09793");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest3 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(manifest3);
        org.junit.Assert.assertNull(manifest4);
    }

    @Test
    public void test09794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09794");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL37.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive40.getNestedArchives(entryFilter42);
        explodedArchive40.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive40.getNestedArchives(entryFilter46);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler48 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL49 = new java.net.URL(uRL37, "", (java.net.URLStreamHandler) filteredURLStreamHandler48);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str55 = explodedArchive54.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection56 = explodedArchive54.getEntries();
        java.util.jar.Manifest manifest57 = explodedArchive54.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler58 = explodedArchive54.new FilteredURLStreamHandler();
        java.net.URL uRL59 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler58);
        java.lang.String str60 = uRL59.getHost();
        java.lang.String str61 = uRL59.getUserInfo();
        java.lang.String str62 = uRL59.getRef();
        boolean boolean63 = uRL37.sameFile(uRL59);
        java.net.Proxy proxy64 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection65 = uRL59.openConnection(proxy64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/archive" + "'", str38, "/archive");
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "archive" + "'", str55, "archive");
        org.junit.Assert.assertNotNull(entryCollection56);
        org.junit.Assert.assertNull(manifest57);
        org.junit.Assert.assertEquals(uRL59.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test09795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09795");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getQuery();
        java.lang.String str15 = uRL13.getPath();
        java.lang.String str16 = uRL13.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive18.getNestedArchives(entryFilter20);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive18.getNestedArchives(entryFilter22);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = explodedArchive18.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive18.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL(uRL13, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL27 = new java.net.URL("hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", "hi!://:100/[hi!://:100/hi!]", (int) '#', "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str28 = uRL27.getRef();
        int int29 = uRL27.getPort();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNotNull(asciiBytesMap24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://:100/[hi!://:100/hi!]]:35hi!://:100/hi!");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 35 + "'", int29 == 35);
    }

    @Test
    public void test09796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09796");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        java.lang.String str11 = uRL9.getQuery();
        java.lang.String str12 = uRL9.getRef();
        java.lang.String str13 = uRL9.toExternalForm();
        java.lang.String str14 = uRL9.getPath();
        java.net.URL uRL16 = new java.net.URL(uRL9, "[hi!://:100/hi!]:1");
        java.lang.String str17 = uRL16.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100" + "'", str13, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/[hi!://:100/hi!]:1");
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test09797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09797");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.util.jar.Manifest manifest9 = explodedArchive0.manifest;
        java.lang.String str10 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection11 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest12 = null;
        explodedArchive0.manifest = manifest12;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "archive" + "'", str10, "archive");
        org.junit.Assert.assertNotNull(entryCollection11);
    }

    @Test
    public void test09798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09798");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap4 = null;
        explodedArchive0.entries = asciiBytesMap4;
        java.io.File file6 = explodedArchive0.root;
        java.io.File file7 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive8.getNestedArchives(entryFilter12);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive8.entries;
        explodedArchive0.entries = asciiBytesMap14;
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler18 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str20 = explodedArchive19.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection21 = explodedArchive19.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter22 = null;
        org.springframework.boot.loader.archive.Archive archive23 = explodedArchive19.getFilteredArchive(entryRenameFilter22);
        java.io.File file24 = explodedArchive19.root;
        java.lang.String str25 = explodedArchive19.toString();
        boolean boolean26 = explodedArchive19.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive19.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = fileEntry27.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes29 = null;
        fileEntry27.name = asciiBytes29;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive31 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "archive" + "'", str20, "archive");
        org.junit.Assert.assertNotNull(entryCollection21);
        org.junit.Assert.assertNotNull(archive23);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(asciiBytes28);
    }

    @Test
    public void test09799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09799");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive0.getNestedArchives(entryFilter5);
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest8 = explodedArchive0.getManifest();
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(manifest8);
    }

    @Test
    public void test09800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09800");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        java.lang.String str12 = uRL9.getHost();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str20 = explodedArchive19.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection21 = explodedArchive19.getEntries();
        java.util.jar.Manifest manifest22 = explodedArchive19.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getQuery();
        java.lang.String str26 = uRL24.getHost();
        int int27 = uRL24.getPort();
        java.lang.String str28 = uRL24.getQuery();
        java.net.URL uRL30 = new java.net.URL(uRL24, "");
        java.lang.String str31 = uRL30.getPath();
        int int32 = uRL30.getDefaultPort();
        java.lang.String str33 = uRL30.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str43 = explodedArchive42.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection44 = explodedArchive42.getEntries();
        java.util.jar.Manifest manifest45 = explodedArchive42.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler46 = explodedArchive42.new FilteredURLStreamHandler();
        java.net.URL uRL47 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler46);
        java.lang.String str48 = uRL47.getFile();
        int int49 = uRL47.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str56 = explodedArchive55.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection57 = explodedArchive55.getEntries();
        java.util.jar.Manifest manifest58 = explodedArchive55.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler59 = explodedArchive55.new FilteredURLStreamHandler();
        java.net.URL uRL60 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.lang.String str61 = uRL60.getQuery();
        java.lang.String str62 = uRL60.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str69 = explodedArchive68.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection70 = explodedArchive68.getEntries();
        java.util.jar.Manifest manifest71 = explodedArchive68.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler72 = explodedArchive68.new FilteredURLStreamHandler();
        java.net.URL uRL73 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler72);
        java.net.URL uRL74 = new java.net.URL(uRL60, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler72);
        java.net.URL uRL75 = new java.net.URL(uRL47, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler72);
        java.net.URL uRL76 = new java.net.URL("archive", "", (int) (byte) 10, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler72);
        java.lang.String str77 = uRL76.getFile();
        boolean boolean78 = uRL30.sameFile(uRL76);
        boolean boolean79 = uRL9.sameFile(uRL76);
        java.net.URI uRI80 = uRL76.toURI();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "archive" + "'", str20, "archive");
        org.junit.Assert.assertNotNull(entryCollection21);
        org.junit.Assert.assertNull(manifest22);
        org.junit.Assert.assertEquals(uRL24.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "archive" + "'", str43, "archive");
        org.junit.Assert.assertNotNull(entryCollection44);
        org.junit.Assert.assertNull(manifest45);
        org.junit.Assert.assertEquals(uRL47.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "archive" + "'", str56, "archive");
        org.junit.Assert.assertNotNull(entryCollection57);
        org.junit.Assert.assertNull(manifest58);
        org.junit.Assert.assertEquals(uRL60.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "archive" + "'", str69, "archive");
        org.junit.Assert.assertNotNull(entryCollection70);
        org.junit.Assert.assertNull(manifest71);
        org.junit.Assert.assertEquals(uRL73.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL74.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL75.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL76.toString(), "archive://:10:100");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + ":100" + "'", str77, ":100");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(uRI80);
    }

    @Test
    public void test09801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09801");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("[:100]:52", "hi!://:100/archive", "://[hi!://:100/:100]:100/hi!://:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: [:100]:52");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test09802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09802");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.io.File file8 = null;
        explodedArchive0.root = file8;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.lang.String str16 = explodedArchive10.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive10.new FilteredURLStreamHandler();
        java.io.File file18 = null;
        java.io.File file19 = null;
        java.io.File file20 = null;
        java.io.File file21 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file23 = explodedArchive22.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive22.getNestedArchives(entryFilter24);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive22.getNestedArchives(entryFilter26);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = explodedArchive22.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file21, asciiBytesMap28);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive29.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file20, asciiBytesMap30);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file19, asciiBytesMap30);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap30);
        explodedArchive10.entries = asciiBytesMap30;
        explodedArchive0.entries = asciiBytesMap30;
        java.io.File file36 = null;
        explodedArchive0.root = file36;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "archive" + "'", str16, "archive");
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNotNull(asciiBytesMap28);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
    }

    @Test
    public void test09803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09803");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive8.entries;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        explodedArchive8.filtered = true;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive8.entries;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL14 = explodedArchive8.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNotNull(asciiBytesMap13);
    }

    @Test
    public void test09804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09804");
        java.lang.String str1 = java.net.URLConnection.getDefaultRequestProperty("hi!://:100/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test09805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09805");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap8);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler11 = explodedArchive10.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter14 = null;
        org.springframework.boot.loader.archive.Archive archive15 = explodedArchive10.getFilteredArchive(entryRenameFilter14);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter16 = null;
        org.springframework.boot.loader.archive.Archive archive17 = explodedArchive10.getFilteredArchive(entryRenameFilter16);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archive15);
        org.junit.Assert.assertNotNull(archive17);
    }

    @Test
    public void test09806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09806");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/archive", "hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", "hi!://:100/://[hi!://:100/:100]:100/hi!://:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test09807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09807");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str29 = explodedArchive28.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive28.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL32.getAuthority();
        int int34 = uRL32.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file37 = explodedArchive36.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter38 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList39 = explodedArchive36.getNestedArchives(entryFilter38);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter40 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList41 = explodedArchive36.getNestedArchives(entryFilter40);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap42 = explodedArchive36.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler43 = explodedArchive36.new FilteredURLStreamHandler();
        java.net.URL uRL44 = new java.net.URL(uRL32, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        java.net.URL uRL45 = new java.net.URL("/hi!://:100", "", (int) (byte) 0, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        java.net.URL uRL46 = new java.net.URL("", "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", (int) (byte) 1, "/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        java.net.URL uRL47 = new java.net.URL("hi!://:100/hi!://[hi!:1]:100[/hi!://:100/archive]", "/archive://[hi!://:100/hi!]:1/hi!", 52, "[/hi!://:100/archive]:0", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        java.net.URL uRL48 = new java.net.URL(":52", "hi!://:100/hi!:1", (int) ' ', ":100://[archive://:10archive]hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str54 = explodedArchive53.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection55 = explodedArchive53.getEntries();
        java.util.jar.Manifest manifest56 = explodedArchive53.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler57 = explodedArchive53.new FilteredURLStreamHandler();
        java.net.URL uRL58 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler57);
        java.lang.String str59 = uRL58.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str62 = explodedArchive61.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection63 = explodedArchive61.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler64 = explodedArchive61.new FilteredURLStreamHandler();
        java.net.URL uRL65 = new java.net.URL(uRL58, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler64);
        java.lang.String str66 = uRL65.getUserInfo();
        java.lang.String str67 = uRL65.getAuthority();
        int int68 = uRL65.getDefaultPort();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection69 = filteredURLStreamHandler43.openConnection(uRL65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + ":100" + "'", str33, ":100");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(archiveList39);
        org.junit.Assert.assertNotNull(archiveList41);
        org.junit.Assert.assertNotNull(asciiBytesMap42);
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL45.toString(), "/hi!://:100://:0archive://:10archive");
        org.junit.Assert.assertEquals(uRL46.toString(), "://[hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1]:1/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals(uRL47.toString(), "hi!://:100/hi!://[hi!:1]:100[/hi!://:100/archive]://[/archive://[hi!://:100/hi!]:1/hi!]:52[/hi!://:100/archive]:0");
        org.junit.Assert.assertEquals(uRL48.toString(), ":52://[hi!://:100/hi!:1]:32:100://[archive://:10archive]hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "archive" + "'", str54, "archive");
        org.junit.Assert.assertNotNull(entryCollection55);
        org.junit.Assert.assertNull(manifest56);
        org.junit.Assert.assertEquals(uRL58.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "archive" + "'", str62, "archive");
        org.junit.Assert.assertNotNull(entryCollection63);
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + ":100" + "'", str67, ":100");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
    }

    @Test
    public void test09808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09808");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = null;
        explodedArchive1.entries = asciiBytesMap5;
        boolean boolean7 = explodedArchive1.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive1.new FileEntry();
        java.io.File file9 = null;
        java.io.File file10 = null;
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap20);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap20);
        explodedArchive1.entries = asciiBytesMap20;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive24.entries;
        java.io.File file26 = explodedArchive24.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str28 = explodedArchive27.toString();
        java.util.jar.Manifest manifest29 = null;
        explodedArchive27.manifest = manifest29;
        java.util.jar.Manifest manifest31 = explodedArchive27.getManifest();
        boolean boolean32 = explodedArchive27.filtered;
        java.util.jar.Manifest manifest33 = explodedArchive27.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive27.entries;
        java.io.File file35 = null;
        java.io.File file36 = null;
        java.io.File file37 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter40 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList41 = explodedArchive38.getNestedArchives(entryFilter40);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive38.getNestedArchives(entryFilter42);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap44 = explodedArchive38.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive(file37, asciiBytesMap44);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap46 = explodedArchive45.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive(file36, asciiBytesMap46);
        explodedArchive47.filtered = true;
        java.io.File file50 = null;
        explodedArchive47.root = file50;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection52 = explodedArchive47.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap53 = explodedArchive47.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file35, asciiBytesMap53);
        explodedArchive27.entries = asciiBytesMap53;
        explodedArchive24.entries = asciiBytesMap53;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry57 = explodedArchive24.new FileEntry();
        java.util.jar.Manifest manifest58 = null;
        explodedArchive24.manifest = manifest58;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "archive" + "'", str28, "archive");
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(archiveList41);
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertNotNull(asciiBytesMap44);
        org.junit.Assert.assertNotNull(asciiBytesMap46);
        org.junit.Assert.assertNotNull(entryCollection52);
        org.junit.Assert.assertNotNull(asciiBytesMap53);
    }

    @Test
    public void test09809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09809");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getFile();
        java.lang.String str25 = uRL9.getAuthority();
        int int26 = uRL9.getPort();
        java.lang.String str27 = uRL9.getRef();
        int int28 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str39 = uRL38.getQuery();
        java.lang.String str40 = uRL38.getRef();
        java.lang.String str41 = uRL38.getRef();
        java.lang.String str42 = uRL38.toExternalForm();
        int int43 = uRL38.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler45 = null;
        java.net.URL uRL46 = new java.net.URL(uRL38, "hi!://:100/hi!://:100", uRLStreamHandler45);
        java.lang.String str47 = uRL46.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str53 = explodedArchive52.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection54 = explodedArchive52.getEntries();
        java.util.jar.Manifest manifest55 = explodedArchive52.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler56 = explodedArchive52.new FilteredURLStreamHandler();
        java.net.URL uRL57 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler56);
        java.lang.String str58 = uRL57.getQuery();
        java.lang.String str59 = uRL57.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str66 = explodedArchive65.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection67 = explodedArchive65.getEntries();
        java.util.jar.Manifest manifest68 = explodedArchive65.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler69 = explodedArchive65.new FilteredURLStreamHandler();
        java.net.URL uRL70 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler69);
        java.net.URL uRL71 = new java.net.URL(uRL57, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler69);
        java.lang.String str72 = uRL57.getAuthority();
        java.lang.String str73 = uRL57.getUserInfo();
        java.lang.String str74 = uRL57.getRef();
        boolean boolean75 = uRL46.sameFile(uRL57);
        boolean boolean76 = uRL9.sameFile(uRL57);
        java.lang.String str77 = uRL57.getFile();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + ":100" + "'", str25, ":100");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!://:100" + "'", str42, "hi!://:100");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "archive" + "'", str53, "archive");
        org.junit.Assert.assertNotNull(entryCollection54);
        org.junit.Assert.assertNull(manifest55);
        org.junit.Assert.assertEquals(uRL57.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "archive" + "'", str66, "archive");
        org.junit.Assert.assertNotNull(entryCollection67);
        org.junit.Assert.assertNull(manifest68);
        org.junit.Assert.assertEquals(uRL70.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL71.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + ":100" + "'", str72, ":100");
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
    }

    @Test
    public void test09810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09810");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str42 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str48 = explodedArchive47.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection49 = explodedArchive47.getEntries();
        java.util.jar.Manifest manifest50 = explodedArchive47.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive47.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.lang.String str53 = uRL52.getQuery();
        java.lang.String str54 = uRL52.getRef();
        java.lang.String str55 = uRL52.getRef();
        java.lang.String str56 = uRL52.toExternalForm();
        int int57 = uRL52.getDefaultPort();
        boolean boolean58 = uRL9.sameFile(uRL52);
        java.net.URL uRL60 = new java.net.URL(uRL9, "/archive");
        int int61 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str72 = explodedArchive71.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap73 = null;
        explodedArchive71.entries = asciiBytesMap73;
        java.util.jar.Manifest manifest75 = null;
        explodedArchive71.manifest = manifest75;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler77 = explodedArchive71.new FilteredURLStreamHandler();
        java.net.URL uRL78 = new java.net.URL("hi!", ":100", (int) '4', "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler77);
        java.net.URL uRL79 = new java.net.URL("hi!://:100/hi!://:100/hi!", "/hi!://:100/archive", (-1), "", (java.net.URLStreamHandler) filteredURLStreamHandler77);
        java.net.URL uRL80 = new java.net.URL(uRL9, "hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10", (java.net.URLStreamHandler) filteredURLStreamHandler77);
        java.lang.String str81 = uRL9.toExternalForm();
        java.lang.String str82 = uRL9.getQuery();
        java.lang.String str83 = uRL9.toExternalForm();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "archive" + "'", str48, "archive");
        org.junit.Assert.assertNotNull(entryCollection49);
        org.junit.Assert.assertNull(manifest50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!://:100" + "'", str56, "hi!://:100");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals(uRL60.toString(), "hi!://:100/archive");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "archive" + "'", str72, "archive");
        org.junit.Assert.assertEquals(uRL78.toString(), "hi!://[:100]:52hi!");
        org.junit.Assert.assertEquals(uRL79.toString(), "hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]");
        org.junit.Assert.assertEquals(uRL80.toString(), "hi!://:100/hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!://:100" + "'", str81, "hi!://:100");
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!://:100" + "'", str83, "hi!://:100");
    }

    @Test
    public void test09811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09811");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str2 = explodedArchive1.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection3 = explodedArchive1.getEntries();
        java.util.jar.Manifest manifest4 = explodedArchive1.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive1.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter6 = null;
        org.springframework.boot.loader.archive.Archive archive7 = explodedArchive1.getFilteredArchive(entryRenameFilter6);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive1.new FileEntry();
        java.io.File file9 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        explodedArchive10.filtered = false;
        java.util.jar.Manifest manifest16 = explodedArchive10.manifest;
        java.io.File file17 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive18.getNestedArchives(entryFilter20);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive18.getNestedArchives(entryFilter22);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = explodedArchive18.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap24);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive25.entries;
        explodedArchive10.entries = asciiBytesMap26;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap26);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive28.getNestedArchives(entryFilter29);
        java.io.File file31 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive32.getNestedArchives(entryFilter34);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive32.getNestedArchives(entryFilter36);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive32.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive32.getNestedArchives(entryFilter39);
        java.io.File file41 = null;
        java.io.File file42 = null;
        java.io.File file43 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive44.getNestedArchives(entryFilter46);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter48 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList49 = explodedArchive44.getNestedArchives(entryFilter48);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap50 = explodedArchive44.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive(file43, asciiBytesMap50);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap52 = explodedArchive51.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file42, asciiBytesMap52);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file41, asciiBytesMap52);
        explodedArchive32.entries = asciiBytesMap52;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive(file31, asciiBytesMap52);
        java.util.jar.Manifest manifest57 = null;
        explodedArchive56.manifest = manifest57;
        java.io.File file59 = explodedArchive56.root;
        java.io.File file60 = null;
        java.io.File file61 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file63 = explodedArchive62.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter64 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList65 = explodedArchive62.getNestedArchives(entryFilter64);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter66 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList67 = explodedArchive62.getNestedArchives(entryFilter66);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap68 = explodedArchive62.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive(file61, asciiBytesMap68);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap70 = explodedArchive69.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive(file60, asciiBytesMap70);
        explodedArchive71.filtered = true;
        java.io.File file74 = null;
        explodedArchive71.root = file74;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection76 = explodedArchive71.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection77 = explodedArchive71.getEntries();
        java.util.jar.Manifest manifest78 = null;
        explodedArchive71.manifest = manifest78;
        java.io.File file80 = explodedArchive71.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap81 = explodedArchive71.entries;
        explodedArchive56.entries = asciiBytesMap81;
        explodedArchive28.entries = asciiBytesMap81;
        explodedArchive1.entries = asciiBytesMap81;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive85 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap81);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter86 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList87 = explodedArchive85.getNestedArchives(entryFilter86);
        explodedArchive85.filtered = true;
        boolean boolean90 = explodedArchive85.filtered;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "archive" + "'", str2, "archive");
        org.junit.Assert.assertNotNull(entryCollection3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNotNull(archive7);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNull(manifest16);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNotNull(asciiBytesMap24);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertNotNull(archiveList49);
        org.junit.Assert.assertNotNull(asciiBytesMap50);
        org.junit.Assert.assertNotNull(asciiBytesMap52);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(archiveList65);
        org.junit.Assert.assertNotNull(archiveList67);
        org.junit.Assert.assertNotNull(asciiBytesMap68);
        org.junit.Assert.assertNotNull(asciiBytesMap70);
        org.junit.Assert.assertNotNull(entryCollection76);
        org.junit.Assert.assertNotNull(entryCollection77);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNotNull(asciiBytesMap81);
        org.junit.Assert.assertNotNull(archiveList87);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test09812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09812");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str15 = explodedArchive14.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection16 = explodedArchive14.getEntries();
        java.util.jar.Manifest manifest17 = explodedArchive14.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler18 = explodedArchive14.new FilteredURLStreamHandler();
        java.net.URL uRL19 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler18);
        java.lang.String str20 = uRL19.getQuery();
        java.lang.String str21 = uRL19.getPath();
        boolean boolean22 = uRL9.sameFile(uRL19);
        java.net.URLStreamHandler uRLStreamHandler24 = null;
        java.net.URL uRL25 = new java.net.URL(uRL19, "", uRLStreamHandler24);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getQuery();
        java.lang.String str37 = uRL35.getHost();
        int int38 = uRL35.getPort();
        java.lang.String str39 = uRL35.getQuery();
        java.net.URL uRL41 = new java.net.URL(uRL35, "");
        java.lang.String str42 = uRL41.getUserInfo();
        int int43 = uRL41.getPort();
        boolean boolean44 = uRL25.sameFile(uRL41);
        java.lang.String str45 = uRL41.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "archive" + "'", str15, "archive");
        org.junit.Assert.assertNotNull(entryCollection16);
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertEquals(uRL19.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 100 + "'", int38 == 100);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(str45);
    }

    @Test
    public void test09813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09813");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL23.getQuery();
        java.lang.String str25 = uRL23.getQuery();
        java.net.Proxy proxy26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection27 = uRL23.openConnection(proxy26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test09814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09814");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler3 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest4 = null;
        explodedArchive0.manifest = manifest4;
        java.lang.String str6 = explodedArchive0.toString();
        java.io.File file7 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = explodedArchive8.new FileEntry();
        java.util.jar.Manifest manifest11 = explodedArchive8.getManifest();
        java.util.jar.Manifest manifest12 = explodedArchive8.manifest;
        java.io.File file13 = null;
        explodedArchive8.root = file13;
        explodedArchive8.filtered = true;
        java.io.File file17 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive18.getNestedArchives(entryFilter20);
        explodedArchive18.filtered = false;
        java.util.jar.Manifest manifest24 = explodedArchive18.manifest;
        java.io.File file25 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file27 = explodedArchive26.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive26.getNestedArchives(entryFilter28);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive26.getNestedArchives(entryFilter30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file25, asciiBytesMap32);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive33.entries;
        explodedArchive18.entries = asciiBytesMap34;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap34);
        java.util.jar.Manifest manifest37 = null;
        explodedArchive36.manifest = manifest37;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive36.entries;
        explodedArchive8.entries = asciiBytesMap39;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file7, asciiBytesMap39);
        explodedArchive0.entries = asciiBytesMap39;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive0.getEntries();
        java.io.File file44 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file46 = explodedArchive45.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter47 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList48 = explodedArchive45.getNestedArchives(entryFilter47);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter49 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList50 = explodedArchive45.getNestedArchives(entryFilter49);
        explodedArchive45.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap53 = explodedArchive45.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file44, asciiBytesMap53);
        explodedArchive0.entries = asciiBytesMap53;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter56 = null;
        org.springframework.boot.loader.archive.Archive archive57 = explodedArchive0.getFilteredArchive(entryRenameFilter56);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive58.filtered = true;
        java.util.jar.Manifest manifest61 = null;
        explodedArchive58.manifest = manifest61;
        java.io.File file63 = explodedArchive58.root;
        java.lang.String str64 = explodedArchive58.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry65 = explodedArchive58.new FileEntry();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive66 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertNull(manifest12);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(archiveList48);
        org.junit.Assert.assertNotNull(archiveList50);
        org.junit.Assert.assertNotNull(asciiBytesMap53);
        org.junit.Assert.assertNotNull(archive57);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "archive" + "'", str64, "archive");
    }

    @Test
    public void test09815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09815");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("/:52://[hi!://:100/hi!://:100/hi!://:100/hi!://:100]:10[hi!://:100/hi!]", "/hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!", "hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /:52://[hi!://:100/hi!://:100/hi!://:100/hi!://:100]:10[hi!://:100/hi!]");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test09816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09816");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getFile();
        int int37 = uRL35.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str44 = explodedArchive43.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive43.getEntries();
        java.util.jar.Manifest manifest46 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.lang.String str49 = uRL48.getQuery();
        java.lang.String str50 = uRL48.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str57 = explodedArchive56.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection58 = explodedArchive56.getEntries();
        java.util.jar.Manifest manifest59 = explodedArchive56.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler60 = explodedArchive56.new FilteredURLStreamHandler();
        java.net.URL uRL61 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL62 = new java.net.URL(uRL48, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL63 = new java.net.URL(uRL35, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL64 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL66 = new java.net.URL(uRL9, "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "archive" + "'", str44, "archive");
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "archive" + "'", str57, "archive");
        org.junit.Assert.assertNotNull(entryCollection58);
        org.junit.Assert.assertNull(manifest59);
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/hi!://:100/archive");
    }

    @Test
    public void test09817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09817");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap1 = explodedArchive0.entries;
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        boolean boolean4 = explodedArchive0.filtered;
        java.io.File file5 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file5, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(asciiBytesMap1);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test09818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09818");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getProtocol();
        java.lang.String str14 = uRL9.getPath();
        java.lang.String str15 = uRL9.getAuthority();
        java.lang.String str16 = uRL9.getRef();
        int int17 = uRL9.getPort();
        java.lang.String str18 = uRL9.getPath();
        java.net.URL uRL20 = new java.net.URL(uRL9, "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive22.filtered = true;
        java.util.jar.Manifest manifest25 = null;
        explodedArchive22.manifest = manifest25;
        java.io.File file27 = explodedArchive22.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler28 = explodedArchive22.new FilteredURLStreamHandler();
        java.net.URL uRL29 = new java.net.URL(uRL20, "hi!://:100/hi!://:100/:100", (java.net.URLStreamHandler) filteredURLStreamHandler28);
        java.lang.String str30 = uRL29.getFile();
        java.lang.String str31 = uRL29.getHost();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + ":100" + "'", str15, ":100");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals(uRL20.toString(), "hi!://:100/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!://:100/hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!://:100/hi!://:100/:100" + "'", str30, "/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!://:100/hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
    }

    @Test
    public void test09819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09819");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.io.File file11 = null;
        explodedArchive0.root = file11;
        java.util.jar.Manifest manifest13 = null;
        explodedArchive0.manifest = manifest13;
        java.util.jar.Manifest manifest15 = explodedArchive0.getManifest();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNull(manifest15);
    }

    @Test
    public void test09820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09820");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getFile();
        int int37 = uRL35.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str44 = explodedArchive43.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive43.getEntries();
        java.util.jar.Manifest manifest46 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.lang.String str49 = uRL48.getQuery();
        java.lang.String str50 = uRL48.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str57 = explodedArchive56.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection58 = explodedArchive56.getEntries();
        java.util.jar.Manifest manifest59 = explodedArchive56.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler60 = explodedArchive56.new FilteredURLStreamHandler();
        java.net.URL uRL61 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL62 = new java.net.URL(uRL48, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL63 = new java.net.URL(uRL35, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL64 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL66 = new java.net.URL(uRL64, ":100");
        java.lang.String str67 = uRL66.getHost();
        int int68 = uRL66.getPort();
        java.lang.String str69 = uRL66.getAuthority();
        java.lang.String str70 = uRL66.getAuthority();
        java.lang.String str71 = uRL66.getUserInfo();
        java.lang.String str72 = uRL66.getPath();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "archive" + "'", str44, "archive");
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "archive" + "'", str57, "archive");
        org.junit.Assert.assertNotNull(entryCollection58);
        org.junit.Assert.assertNull(manifest59);
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + ":100" + "'", str69, ":100");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + ":100" + "'", str70, ":100");
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "/:100" + "'", str72, "/:100");
    }

    @Test
    public void test09821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09821");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getProtocol();
        java.lang.String str14 = uRL9.getPath();
        java.lang.String str15 = uRL9.getAuthority();
        java.lang.String str16 = uRL9.getAuthority();
        java.lang.String str17 = uRL9.getUserInfo();
        int int18 = uRL9.getDefaultPort();
        java.lang.String str19 = uRL9.getHost();
        int int20 = uRL9.getDefaultPort();
        java.lang.String str21 = uRL9.getFile();
        java.lang.String str22 = uRL9.getFile();
        java.lang.String str23 = uRL9.getHost();
        int int24 = uRL9.getPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + ":100" + "'", str15, ":100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + ":100" + "'", str16, ":100");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
    }

    @Test
    public void test09822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09822");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive0.new FileEntry();
        boolean boolean6 = explodedArchive0.filtered;
        java.io.File file7 = null;
        explodedArchive0.root = file7;
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file9, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test09823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09823");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        java.lang.String str12 = uRL9.toExternalForm();
        java.lang.String str13 = uRL9.getProtocol();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!://:100" + "'", str12, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test09824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09824");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getFile();
        int int28 = uRL26.getDefaultPort();
        java.lang.String str29 = uRL26.getRef();
        boolean boolean30 = uRL9.sameFile(uRL26);
        java.lang.String str31 = uRL9.getHost();
        int int32 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str38 = explodedArchive37.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection39 = explodedArchive37.getEntries();
        java.util.jar.Manifest manifest40 = explodedArchive37.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive37.new FilteredURLStreamHandler();
        java.net.URL uRL42 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.lang.String str43 = uRL42.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str54 = explodedArchive53.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection55 = explodedArchive53.getEntries();
        java.util.jar.Manifest manifest56 = explodedArchive53.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler57 = explodedArchive53.new FilteredURLStreamHandler();
        java.net.URL uRL58 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler57);
        java.lang.String str59 = uRL58.getQuery();
        java.lang.String str60 = uRL58.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str67 = explodedArchive66.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection68 = explodedArchive66.getEntries();
        java.util.jar.Manifest manifest69 = explodedArchive66.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler70 = explodedArchive66.new FilteredURLStreamHandler();
        java.net.URL uRL71 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler70);
        java.net.URL uRL72 = new java.net.URL(uRL58, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler70);
        java.net.URL uRL73 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler70);
        java.net.URL uRL74 = new java.net.URL(uRL42, "", (java.net.URLStreamHandler) filteredURLStreamHandler70);
        java.lang.String str75 = uRL74.getProtocol();
        java.lang.String str76 = uRL74.getFile();
        boolean boolean77 = uRL9.sameFile(uRL74);
        java.lang.String str78 = uRL74.getPath();
        java.lang.String str79 = uRL74.getHost();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertNotNull(entryCollection39);
        org.junit.Assert.assertNull(manifest40);
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "archive" + "'", str54, "archive");
        org.junit.Assert.assertNotNull(entryCollection55);
        org.junit.Assert.assertNull(manifest56);
        org.junit.Assert.assertEquals(uRL58.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "archive" + "'", str67, "archive");
        org.junit.Assert.assertNotNull(entryCollection68);
        org.junit.Assert.assertNull(manifest69);
        org.junit.Assert.assertEquals(uRL71.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL72.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL73.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL74.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
    }

    @Test
    public void test09825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09825");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive1.getNestedArchives(entryFilter8);
        java.io.File file10 = null;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap21);
        explodedArchive1.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry26 = explodedArchive25.new FileEntry();
        explodedArchive25.filtered = true;
        explodedArchive25.filtered = true;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter31 = null;
        org.springframework.boot.loader.archive.Archive archive32 = explodedArchive25.getFilteredArchive(entryRenameFilter31);
        java.io.File file33 = explodedArchive25.root;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNotNull(archive32);
        org.junit.Assert.assertNull(file33);
    }

    @Test
    public void test09826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09826");
        java.io.File file4 = null;
        java.io.File file5 = null;
        java.io.File file6 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive7.getNestedArchives(entryFilter9);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive7.getNestedArchives(entryFilter11);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive7.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive(file6, asciiBytesMap13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file5, asciiBytesMap15);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap15);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler18 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL19 = new java.net.URL("hi!://:100/:100", "hi!://:100/hi!:1", (int) (short) 100, "/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler18);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        java.util.jar.Manifest manifest27 = explodedArchive24.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler28 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL29 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler28);
        java.lang.String str30 = uRL29.getQuery();
        java.lang.String str31 = uRL29.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str38 = explodedArchive37.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection39 = explodedArchive37.getEntries();
        java.util.jar.Manifest manifest40 = explodedArchive37.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive37.new FilteredURLStreamHandler();
        java.net.URL uRL42 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.net.URL uRL43 = new java.net.URL(uRL29, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        int int44 = uRL43.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str50 = explodedArchive49.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection51 = explodedArchive49.getEntries();
        java.util.jar.Manifest manifest52 = explodedArchive49.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler53 = explodedArchive49.new FilteredURLStreamHandler();
        java.net.URL uRL54 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        java.lang.String str55 = uRL54.getHost();
        java.lang.String str56 = uRL54.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str62 = explodedArchive61.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection63 = explodedArchive61.getEntries();
        java.util.jar.Manifest manifest64 = explodedArchive61.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler65 = explodedArchive61.new FilteredURLStreamHandler();
        java.net.URL uRL66 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.lang.String str67 = uRL66.getQuery();
        java.lang.String str68 = uRL66.getHost();
        int int69 = uRL66.getPort();
        boolean boolean70 = uRL54.sameFile(uRL66);
        int int71 = uRL54.getPort();
        java.lang.String str72 = uRL54.getAuthority();
        boolean boolean73 = uRL43.sameFile(uRL54);
        java.lang.String str74 = uRL54.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str77 = explodedArchive76.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection78 = explodedArchive76.getEntries();
        java.util.jar.Manifest manifest79 = explodedArchive76.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler80 = explodedArchive76.new FilteredURLStreamHandler();
        java.net.URL uRL81 = new java.net.URL(uRL54, "[://[archive://:10archive]:100archive://:10archive]:0", (java.net.URLStreamHandler) filteredURLStreamHandler80);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection82 = filteredURLStreamHandler18.openConnection(uRL54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(asciiBytesMap13);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertEquals(uRL19.toString(), "hi!://:100/:100://[hi!://:100/hi!:1]:100/hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertNull(manifest27);
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertNotNull(entryCollection39);
        org.junit.Assert.assertNull(manifest40);
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "archive" + "'", str50, "archive");
        org.junit.Assert.assertNotNull(entryCollection51);
        org.junit.Assert.assertNull(manifest52);
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "archive" + "'", str62, "archive");
        org.junit.Assert.assertNotNull(entryCollection63);
        org.junit.Assert.assertNull(manifest64);
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 100 + "'", int69 == 100);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 100 + "'", int71 == 100);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + ":100" + "'", str72, ":100");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "archive" + "'", str77, "archive");
        org.junit.Assert.assertNotNull(entryCollection78);
        org.junit.Assert.assertNull(manifest79);
        org.junit.Assert.assertEquals(uRL81.toString(), "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:0");
    }

    @Test
    public void test09827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09827");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.lang.String str17 = uRL9.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str23 = explodedArchive22.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection24 = explodedArchive22.getEntries();
        java.util.jar.Manifest manifest25 = explodedArchive22.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler26 = explodedArchive22.new FilteredURLStreamHandler();
        java.net.URL uRL27 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler26);
        java.lang.String str28 = uRL27.getQuery();
        java.lang.String str29 = uRL27.getPath();
        boolean boolean30 = uRL9.sameFile(uRL27);
        java.lang.String str31 = uRL27.getQuery();
        java.lang.String str32 = uRL27.toExternalForm();
        java.lang.String str33 = uRL27.getHost();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "archive" + "'", str23, "archive");
        org.junit.Assert.assertNotNull(entryCollection24);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!://:100" + "'", str32, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
    }

    @Test
    public void test09828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09828");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str3 = explodedArchive2.toString();
        boolean boolean4 = explodedArchive2.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive2.getFilteredArchive(entryRenameFilter5);
        explodedArchive2.filtered = true;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive2.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter13 = null;
        org.springframework.boot.loader.archive.Archive archive14 = explodedArchive12.getFilteredArchive(entryRenameFilter13);
        java.io.File file15 = explodedArchive12.root;
        explodedArchive12.filtered = true;
        java.util.jar.Manifest manifest18 = null;
        explodedArchive12.manifest = manifest18;
        java.util.jar.Manifest manifest20 = explodedArchive12.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry21 = explodedArchive12.new FileEntry();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "archive" + "'", str3, "archive");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(archive14);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(manifest20);
    }

    @Test
    public void test09829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09829");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.lang.String str5 = explodedArchive0.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter9 = null;
        org.springframework.boot.loader.archive.Archive archive10 = explodedArchive0.getFilteredArchive(entryRenameFilter9);
        boolean boolean11 = explodedArchive0.filtered;
        java.io.File file12 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file12, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archive10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test09830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09830");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getFile();
        java.lang.String str25 = uRL9.getAuthority();
        int int26 = uRL9.getPort();
        java.lang.String str27 = uRL9.getRef();
        int int28 = uRL9.getDefaultPort();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI29 = uRL9.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + ":100" + "'", str25, ":100");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
    }

    @Test
    public void test09831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09831");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.lang.String str8 = explodedArchive2.toString();
        java.util.jar.Manifest manifest9 = explodedArchive2.manifest;
        java.io.File file10 = null;
        explodedArchive2.root = file10;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry16 = explodedArchive12.new FileEntry();
        boolean boolean17 = explodedArchive12.filtered;
        boolean boolean18 = explodedArchive12.filtered;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive12.getNestedArchives(entryFilter19);
        java.io.File file21 = null;
        java.io.File file22 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive23.getNestedArchives(entryFilter25);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive23.getNestedArchives(entryFilter27);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive23.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap29);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file21, asciiBytesMap29);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive31.entries;
        explodedArchive12.entries = asciiBytesMap32;
        explodedArchive2.entries = asciiBytesMap32;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive2.getNestedArchives(entryFilter35);
        java.io.File file37 = explodedArchive2.root;
        explodedArchive2.filtered = true;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive40.getNestedArchives(entryFilter42);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry44 = explodedArchive40.new FileEntry();
        java.lang.String str45 = explodedArchive40.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry46 = explodedArchive40.new FileEntry();
        java.util.jar.Manifest manifest47 = null;
        explodedArchive40.manifest = manifest47;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap49 = explodedArchive40.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file51 = explodedArchive50.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter52 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList53 = explodedArchive50.getNestedArchives(entryFilter52);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter54 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList55 = explodedArchive50.getNestedArchives(entryFilter54);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap56 = explodedArchive50.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter57 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList58 = explodedArchive50.getNestedArchives(entryFilter57);
        java.io.File file59 = null;
        java.io.File file60 = null;
        java.io.File file61 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file63 = explodedArchive62.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter64 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList65 = explodedArchive62.getNestedArchives(entryFilter64);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter66 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList67 = explodedArchive62.getNestedArchives(entryFilter66);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap68 = explodedArchive62.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive(file61, asciiBytesMap68);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap70 = explodedArchive69.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive(file60, asciiBytesMap70);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive(file59, asciiBytesMap70);
        explodedArchive50.entries = asciiBytesMap70;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler74 = explodedArchive50.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest75 = explodedArchive50.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str77 = explodedArchive76.toString();
        java.util.jar.Manifest manifest78 = null;
        explodedArchive76.manifest = manifest78;
        java.util.jar.Manifest manifest80 = explodedArchive76.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap81 = explodedArchive76.entries;
        explodedArchive50.entries = asciiBytesMap81;
        explodedArchive40.entries = asciiBytesMap81;
        explodedArchive2.entries = asciiBytesMap81;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive85 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap81);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive86 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap81);
        java.io.File file87 = explodedArchive86.root;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNotNull(asciiBytesMap29);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "archive" + "'", str45, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap49);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(archiveList53);
        org.junit.Assert.assertNotNull(archiveList55);
        org.junit.Assert.assertNotNull(asciiBytesMap56);
        org.junit.Assert.assertNotNull(archiveList58);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(archiveList65);
        org.junit.Assert.assertNotNull(archiveList67);
        org.junit.Assert.assertNotNull(asciiBytesMap68);
        org.junit.Assert.assertNotNull(asciiBytesMap70);
        org.junit.Assert.assertNull(manifest75);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "archive" + "'", str77, "archive");
        org.junit.Assert.assertNull(manifest80);
        org.junit.Assert.assertNotNull(asciiBytesMap81);
        org.junit.Assert.assertNull(file87);
    }

    @Test
    public void test09832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09832");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        boolean boolean8 = explodedArchive0.filtered;
        java.io.File file9 = explodedArchive0.root;
        java.io.File file10 = null;
        explodedArchive0.root = file10;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive0.getNestedArchives(entryFilter12);
        java.util.jar.Manifest manifest14 = null;
        explodedArchive0.manifest = manifest14;
        boolean boolean16 = explodedArchive0.filtered;
        java.io.File file17 = null;
        explodedArchive0.root = file17;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test09833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09833");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry2 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest3 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest4 = explodedArchive0.manifest;
        java.io.File file5 = null;
        explodedArchive0.root = file5;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = explodedArchive0.new FileEntry();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest3);
        org.junit.Assert.assertNull(manifest4);
    }

    @Test
    public void test09834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09834");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getProtocol();
        java.lang.String str14 = uRL9.getPath();
        java.lang.String str15 = uRL9.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getFile();
        int int28 = uRL26.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str35 = explodedArchive34.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection36 = explodedArchive34.getEntries();
        java.util.jar.Manifest manifest37 = explodedArchive34.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str40 = uRL39.getQuery();
        java.lang.String str41 = uRL39.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str48 = explodedArchive47.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection49 = explodedArchive47.getEntries();
        java.util.jar.Manifest manifest50 = explodedArchive47.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive47.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.net.URL uRL53 = new java.net.URL(uRL39, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.net.URL uRL54 = new java.net.URL(uRL26, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.net.URL uRL55 = new java.net.URL(uRL9, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.lang.String str56 = uRL55.getUserInfo();
        java.lang.String str57 = uRL55.getUserInfo();
        java.lang.String str58 = uRL55.getProtocol();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + ":100" + "'", str15, ":100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "archive" + "'", str35, "archive");
        org.junit.Assert.assertNotNull(entryCollection36);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "archive" + "'", str48, "archive");
        org.junit.Assert.assertNotNull(entryCollection49);
        org.junit.Assert.assertNull(manifest50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL53.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL55.toString(), "hi!://:100/hi!://:100/hi!");
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
    }

    @Test
    public void test09835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09835");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        java.lang.String str11 = uRL9.getFile();
        java.lang.String str12 = uRL9.getHost();
        java.lang.String str13 = uRL9.getRef();
        int int14 = uRL9.getPort();
        java.io.File file15 = null;
        java.io.File file16 = null;
        java.io.File file17 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive18.getNestedArchives(entryFilter20);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive18.getNestedArchives(entryFilter22);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = explodedArchive18.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap24);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive25.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file16, asciiBytesMap26);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler28 = explodedArchive27.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive27.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive27.getNestedArchives(entryFilter30);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive32.getNestedArchives(entryFilter34);
        explodedArchive32.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter38 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList39 = explodedArchive32.getNestedArchives(entryFilter38);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter40 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList41 = explodedArchive32.getNestedArchives(entryFilter40);
        java.util.jar.Manifest manifest42 = explodedArchive32.getManifest();
        java.io.File file43 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive44.getNestedArchives(entryFilter46);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter48 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList49 = explodedArchive44.getNestedArchives(entryFilter48);
        explodedArchive44.filtered = false;
        java.util.jar.Manifest manifest52 = null;
        explodedArchive44.manifest = manifest52;
        java.io.File file54 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file56 = explodedArchive55.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter57 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList58 = explodedArchive55.getNestedArchives(entryFilter57);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter59 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList60 = explodedArchive55.getNestedArchives(entryFilter59);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap61 = explodedArchive55.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter62 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList63 = explodedArchive55.getNestedArchives(entryFilter62);
        java.io.File file64 = null;
        java.io.File file65 = null;
        java.io.File file66 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file68 = explodedArchive67.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter69 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList70 = explodedArchive67.getNestedArchives(entryFilter69);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter71 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList72 = explodedArchive67.getNestedArchives(entryFilter71);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap73 = explodedArchive67.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive(file66, asciiBytesMap73);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap75 = explodedArchive74.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive(file65, asciiBytesMap75);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive(file64, asciiBytesMap75);
        explodedArchive55.entries = asciiBytesMap75;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = new org.springframework.boot.loader.archive.ExplodedArchive(file54, asciiBytesMap75);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap80 = explodedArchive79.entries;
        explodedArchive44.entries = asciiBytesMap80;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive(file43, asciiBytesMap80);
        explodedArchive32.entries = asciiBytesMap80;
        explodedArchive27.entries = asciiBytesMap80;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive85 = new org.springframework.boot.loader.archive.ExplodedArchive(file15, asciiBytesMap80);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler86 = explodedArchive85.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest87 = explodedArchive85.getManifest();
        boolean boolean88 = uRL9.equals((java.lang.Object) manifest87);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNotNull(asciiBytesMap24);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(archiveList39);
        org.junit.Assert.assertNotNull(archiveList41);
        org.junit.Assert.assertNull(manifest42);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertNotNull(archiveList49);
        org.junit.Assert.assertNull(file56);
        org.junit.Assert.assertNotNull(archiveList58);
        org.junit.Assert.assertNotNull(archiveList60);
        org.junit.Assert.assertNotNull(asciiBytesMap61);
        org.junit.Assert.assertNotNull(archiveList63);
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNotNull(archiveList70);
        org.junit.Assert.assertNotNull(archiveList72);
        org.junit.Assert.assertNotNull(asciiBytesMap73);
        org.junit.Assert.assertNotNull(asciiBytesMap75);
        org.junit.Assert.assertNotNull(asciiBytesMap80);
        org.junit.Assert.assertNull(manifest87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test09836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09836");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file30 = explodedArchive29.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter31 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList32 = explodedArchive29.getNestedArchives(entryFilter31);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection33 = explodedArchive29.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive29.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("/archive", "hi!://:100/hi!", (int) (byte) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.net.URL uRL37 = new java.net.URL(uRL23, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str38 = uRL37.getQuery();
        java.net.Proxy proxy39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection40 = uRL37.openConnection(proxy39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(archiveList32);
        org.junit.Assert.assertNotNull(entryCollection33);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertEquals(uRL36.toString(), "/archive://[hi!://:100/hi!]:1hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str38);
    }

    @Test
    public void test09837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09837");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        boolean boolean8 = explodedArchive0.filtered;
        java.io.File file9 = explodedArchive0.root;
        boolean boolean10 = explodedArchive0.filtered;
        explodedArchive0.filtered = false;
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive14.getNestedArchives(entryFilter21);
        java.io.File file23 = null;
        java.io.File file24 = null;
        java.io.File file25 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file27 = explodedArchive26.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive26.getNestedArchives(entryFilter28);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive26.getNestedArchives(entryFilter30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file25, asciiBytesMap32);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive33.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file24, asciiBytesMap34);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap34);
        explodedArchive14.entries = asciiBytesMap34;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap34);
        java.util.jar.Manifest manifest39 = null;
        explodedArchive38.manifest = manifest39;
        java.io.File file41 = explodedArchive38.root;
        java.util.jar.Manifest manifest42 = explodedArchive38.getManifest();
        java.io.File file43 = null;
        explodedArchive38.root = file43;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive38.getEntries();
        java.io.File file46 = null;
        java.io.File file47 = null;
        java.io.File file48 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file50 = explodedArchive49.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter51 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList52 = explodedArchive49.getNestedArchives(entryFilter51);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter53 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList54 = explodedArchive49.getNestedArchives(entryFilter53);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap55 = explodedArchive49.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive(file48, asciiBytesMap55);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap57 = explodedArchive56.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive(file47, asciiBytesMap57);
        explodedArchive58.filtered = true;
        java.io.File file61 = null;
        explodedArchive58.root = file61;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection63 = explodedArchive58.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection64 = explodedArchive58.getEntries();
        java.util.jar.Manifest manifest65 = null;
        explodedArchive58.manifest = manifest65;
        java.io.File file67 = explodedArchive58.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap68 = explodedArchive58.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive(file46, asciiBytesMap68);
        explodedArchive38.entries = asciiBytesMap68;
        explodedArchive0.entries = asciiBytesMap68;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry72 = explodedArchive0.new FileEntry();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNull(manifest42);
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(archiveList52);
        org.junit.Assert.assertNotNull(archiveList54);
        org.junit.Assert.assertNotNull(asciiBytesMap55);
        org.junit.Assert.assertNotNull(asciiBytesMap57);
        org.junit.Assert.assertNotNull(entryCollection63);
        org.junit.Assert.assertNotNull(entryCollection64);
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(asciiBytesMap68);
    }

    @Test
    public void test09838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09838");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        boolean boolean5 = explodedArchive0.filtered;
        boolean boolean6 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest7 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry8.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = null;
        fileEntry8.name = asciiBytes10;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(asciiBytes9);
    }

    @Test
    public void test09839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09839");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL1 = new java.net.URL("hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test09840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09840");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        java.io.File file14 = null;
        explodedArchive11.root = file14;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry16 = explodedArchive11.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive11.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive18.getNestedArchives(entryFilter20);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive18.getNestedArchives(entryFilter22);
        explodedArchive18.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive18.getNestedArchives(entryFilter26);
        java.lang.String str28 = explodedArchive18.toString();
        java.lang.String str29 = explodedArchive18.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry30 = explodedArchive18.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive18.new FilteredURLStreamHandler();
        java.io.File file32 = explodedArchive18.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap33 = explodedArchive18.entries;
        explodedArchive11.entries = asciiBytesMap33;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "archive" + "'", str28, "archive");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(asciiBytesMap33);
    }

    @Test
    public void test09841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09841");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive3.getNestedArchives(entryFilter5);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive3.getNestedArchives(entryFilter7);
        explodedArchive3.filtered = false;
        java.util.jar.Manifest manifest11 = null;
        explodedArchive3.manifest = manifest11;
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive14.getNestedArchives(entryFilter21);
        java.io.File file23 = null;
        java.io.File file24 = null;
        java.io.File file25 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file27 = explodedArchive26.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive26.getNestedArchives(entryFilter28);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive26.getNestedArchives(entryFilter30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file25, asciiBytesMap32);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive33.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file24, asciiBytesMap34);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap34);
        explodedArchive14.entries = asciiBytesMap34;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive38.entries;
        explodedArchive3.entries = asciiBytesMap39;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap39);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap39);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap39);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter44 = null;
        org.springframework.boot.loader.archive.Archive archive45 = explodedArchive43.getFilteredArchive(entryRenameFilter44);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertNotNull(archive45);
    }

    @Test
    public void test09842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09842");
        java.net.URL uRL0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL2 = new java.net.URL(uRL0, "hi!://:100/hi!://:100/archive:///archive:0hi!://:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: hi!://:100/hi!://:100/archive:///archive:0hi!://:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test09843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09843");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getHost();
        int int24 = uRL21.getPort();
        java.lang.String str25 = uRL21.getQuery();
        java.net.URL uRL27 = new java.net.URL(uRL21, "");
        java.io.File file29 = null;
        java.io.File file30 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive31.getNestedArchives(entryFilter33);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive31.getNestedArchives(entryFilter35);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap37 = explodedArchive31.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file30, asciiBytesMap37);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive38.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file29, asciiBytesMap39);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL42 = new java.net.URL(uRL27, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.net.URL uRL43 = new java.net.URL("[/:100]:0", "/hi!://:100/archive", (int) (byte) 1, "archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.net.URL uRL44 = new java.net.URL("hi!://:100/hi!://:100/hi!:1", "hi!://:100/hi!://:100/hi!://:100/hi!", 52, "/archive:///archive:0hi!://:100://[hi!://:100/archive]:100/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.net.URL uRL45 = new java.net.URL("/archive:0", "/archive:///archive:0hi!://:100://[/hi!://:100/archive]:100", (int) 'a', "://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.lang.String str46 = uRL45.getRef();
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertNotNull(asciiBytesMap37);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL43.toString(), "[/:100]:0://[/hi!://:100/archive]:1archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive");
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100/hi!://:100/hi!:1://[hi!://:100/hi!://:100/hi!://:100/hi!]:52/archive:///archive:0hi!://:100://[hi!://:100/archive]:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals(uRL45.toString(), "/archive:0://[/archive:///archive:0hi!://:100://[/hi!://:100/archive]:100]:97://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertNull(str46);
    }

    @Test
    public void test09844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09844");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file8 = null;
        explodedArchive0.root = file8;
        boolean boolean10 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive11.getNestedArchives(entryFilter13);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry15 = explodedArchive11.new FileEntry();
        java.io.File file16 = null;
        fileEntry15.file = file16;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes18 = null;
        fileEntry15.name = asciiBytes18;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes20 = fileEntry15.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes21 = fileEntry15.getName();
        java.io.File file22 = fileEntry15.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes23 = null;
        fileEntry15.name = asciiBytes23;
        java.io.File file25 = null;
        fileEntry15.file = file25;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive27 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNull(asciiBytes20);
        org.junit.Assert.assertNull(asciiBytes21);
        org.junit.Assert.assertNull(file22);
    }

    @Test
    public void test09845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09845");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive25.getNestedArchives(entryFilter27);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry29 = explodedArchive25.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler30 = explodedArchive25.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive25.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL(uRL9, "hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL32.getUserInfo();
        java.lang.String str34 = uRL32.getPath();
        java.lang.String str35 = uRL32.getAuthority();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "/hi!://:100/hi!://:100" + "'", str34, "/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + ":100" + "'", str35, ":100");
    }

    @Test
    public void test09846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09846");
        java.net.URL uRL0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        explodedArchive14.filtered = false;
        java.util.jar.Manifest manifest20 = explodedArchive14.manifest;
        java.io.File file21 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file23 = explodedArchive22.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive22.getNestedArchives(entryFilter24);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive22.getNestedArchives(entryFilter26);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = explodedArchive22.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file21, asciiBytesMap28);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive29.entries;
        explodedArchive14.entries = asciiBytesMap30;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive14.new FilteredURLStreamHandler();
        java.net.URL uRL33 = new java.net.URL("hi!://:100", "hi!://:100/hi!://:100/hi!://hi!", (int) (byte) 0, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.net.URL uRL34 = new java.net.URL("hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", "hi!://:100/hi!://hi!:1hi!", (int) (byte) 100, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.net.URL uRL35 = new java.net.URL("/://[archive://:10archive]:100archive://:10archive", "", (int) '4', "hi!://:100/:100", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL36 = new java.net.URL(uRL0, "hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", (java.net.URLStreamHandler) filteredURLStreamHandler32);
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNotNull(asciiBytesMap28);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100://[hi!://:100/hi!://:100/hi!://hi!]:0hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL34.toString(), "hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]://[hi!://:100/hi!://hi!:1hi!]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL35.toString(), "/://[archive://:10archive]:100archive://:10archive://:52hi!://:100/:100");
    }

    @Test
    public void test09847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09847");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = null;
        explodedArchive1.entries = asciiBytesMap5;
        boolean boolean7 = explodedArchive1.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive1.new FileEntry();
        java.io.File file9 = null;
        java.io.File file10 = null;
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap20);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap20);
        explodedArchive1.entries = asciiBytesMap20;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap20);
        java.io.File file25 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file27 = explodedArchive26.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive26.getNestedArchives(entryFilter28);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive26.getNestedArchives(entryFilter30);
        java.lang.String str32 = explodedArchive26.toString();
        java.util.jar.Manifest manifest33 = explodedArchive26.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file25, asciiBytesMap34);
        explodedArchive24.entries = asciiBytesMap34;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap37 = explodedArchive24.entries;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "archive" + "'", str32, "archive");
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertNotNull(asciiBytesMap37);
    }

    @Test
    public void test09848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09848");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getQuery();
        java.net.URL uRL15 = new java.net.URL(uRL9, "");
        java.lang.String str16 = uRL15.getPath();
        java.lang.String str17 = uRL15.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str27 = explodedArchive26.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection28 = explodedArchive26.getEntries();
        java.util.jar.Manifest manifest29 = explodedArchive26.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler30 = explodedArchive26.new FilteredURLStreamHandler();
        java.net.URL uRL31 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler30);
        java.lang.String str32 = uRL31.getAuthority();
        int int33 = uRL31.getPort();
        java.lang.String str34 = uRL31.toExternalForm();
        java.lang.String str35 = uRL31.getPath();
        java.io.File file37 = null;
        java.io.File file38 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file40 = explodedArchive39.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter41 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList42 = explodedArchive39.getNestedArchives(entryFilter41);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter43 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList44 = explodedArchive39.getNestedArchives(entryFilter43);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap45 = explodedArchive39.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file38, asciiBytesMap45);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap47 = explodedArchive46.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive(file37, asciiBytesMap47);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive48.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler50 = explodedArchive48.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter51 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList52 = explodedArchive48.getNestedArchives(entryFilter51);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler53 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL54 = new java.net.URL(uRL31, "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        java.net.URL uRL55 = new java.net.URL("[hi!://:100/hi!]:0", "", (int) (byte) -1, "/:100", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        boolean boolean56 = uRL15.sameFile(uRL55);
        java.lang.String str57 = uRL15.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "archive" + "'", str27, "archive");
        org.junit.Assert.assertNotNull(entryCollection28);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertEquals(uRL31.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!:1" + "'", str32, "hi!:1");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!://hi!:1hi!" + "'", str34, "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(archiveList42);
        org.junit.Assert.assertNotNull(archiveList44);
        org.junit.Assert.assertNotNull(asciiBytesMap45);
        org.junit.Assert.assertNotNull(asciiBytesMap47);
        org.junit.Assert.assertNotNull(archiveList52);
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://hi!:1/hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertEquals(uRL55.toString(), "[hi!://:100/hi!]:0:/:100");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!://:100" + "'", str57, "hi!://:100");
    }

    @Test
    public void test09849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09849");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive0.getNestedArchives(entryFilter8);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive0.getFilteredArchive(entryRenameFilter10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = null;
        fileEntry12.name = asciiBytes13;
        java.io.File file15 = fileEntry12.file;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(archive11);
        org.junit.Assert.assertNull(file15);
    }

    @Test
    public void test09850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09850");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str2 = explodedArchive1.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection3 = explodedArchive1.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler4 = explodedArchive1.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive1.getFilteredArchive(entryRenameFilter5);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str8 = explodedArchive7.toString();
        boolean boolean9 = explodedArchive7.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive7.getFilteredArchive(entryRenameFilter10);
        explodedArchive7.filtered = true;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive7.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive7.entries;
        explodedArchive1.entries = asciiBytesMap15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap15);
        boolean boolean18 = explodedArchive17.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive19.getNestedArchives(entryFilter21);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive19.getNestedArchives(entryFilter23);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive19.getNestedArchives(entryFilter26);
        java.io.File file28 = null;
        java.io.File file29 = null;
        java.io.File file30 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive31.getNestedArchives(entryFilter33);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive31.getNestedArchives(entryFilter35);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap37 = explodedArchive31.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file30, asciiBytesMap37);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive38.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file29, asciiBytesMap39);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file28, asciiBytesMap39);
        explodedArchive19.entries = asciiBytesMap39;
        explodedArchive17.entries = asciiBytesMap39;
        java.io.File file44 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive17.buildEntries(file44, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "archive" + "'", str2, "archive");
        org.junit.Assert.assertNotNull(entryCollection3);
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(archive11);
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertNotNull(asciiBytesMap37);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
    }

    @Test
    public void test09851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09851");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str42 = uRL41.getProtocol();
        int int43 = uRL41.getDefaultPort();
        java.lang.String str44 = uRL41.getAuthority();
        java.lang.String str45 = uRL41.getRef();
        java.lang.String str46 = uRL41.getProtocol();
        java.lang.String str47 = uRL41.getRef();
        int int48 = uRL41.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + ":100" + "'", str44, ":100");
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
    }

    @Test
    public void test09852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09852");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        boolean boolean5 = explodedArchive0.filtered;
        boolean boolean6 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.util.jar.Manifest manifest9 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest10 = null;
        explodedArchive0.manifest = manifest10;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNull(manifest9);
    }

    @Test
    public void test09853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09853");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        java.lang.String str25 = uRL22.getRef();
        java.lang.String str26 = uRL22.toExternalForm();
        boolean boolean27 = uRL9.sameFile(uRL22);
        java.lang.String str28 = uRL22.getUserInfo();
        java.lang.String str29 = uRL22.getHost();
        java.lang.String str30 = uRL22.getRef();
        java.net.Proxy proxy31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection32 = uRL22.openConnection(proxy31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!://:100" + "'", str26, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test09854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09854");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection4 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive0.getNestedArchives(entryFilter5);
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry9 = explodedArchive0.new FileEntry();
        java.io.File file10 = fileEntry9.file;
        java.io.File file11 = fileEntry9.file;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = fileEntry9.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(entryCollection4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
    }

    @Test
    public void test09855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09855");
        java.lang.String str1 = java.net.URLConnection.guessContentTypeFromName("hi!://:100/archive://[://[archive://:10archive]:100archive://:10archive]:0:32hi!://:100");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test09856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09856");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str42 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str48 = explodedArchive47.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection49 = explodedArchive47.getEntries();
        java.util.jar.Manifest manifest50 = explodedArchive47.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive47.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.lang.String str53 = uRL52.getQuery();
        java.lang.String str54 = uRL52.getRef();
        java.lang.String str55 = uRL52.getRef();
        java.lang.String str56 = uRL52.toExternalForm();
        int int57 = uRL52.getDefaultPort();
        boolean boolean58 = uRL9.sameFile(uRL52);
        java.lang.String str59 = uRL9.getQuery();
        java.lang.String str60 = uRL9.getFile();
        java.lang.String str61 = uRL9.toExternalForm();
        java.lang.String str62 = uRL9.getFile();
        java.lang.String str63 = uRL9.getUserInfo();
        java.lang.String str64 = uRL9.getQuery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "archive" + "'", str48, "archive");
        org.junit.Assert.assertNotNull(entryCollection49);
        org.junit.Assert.assertNull(manifest50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!://:100" + "'", str56, "hi!://:100");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!://:100" + "'", str61, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(str64);
    }

    @Test
    public void test09857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09857");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive0.entries;
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        explodedArchive22.filtered = true;
        java.util.jar.Manifest manifest25 = explodedArchive22.getManifest();
        java.util.jar.Manifest manifest26 = explodedArchive22.manifest;
        java.io.File file27 = null;
        explodedArchive22.root = file27;
        java.io.File file29 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive30.getNestedArchives(entryFilter32);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive30.getNestedArchives(entryFilter34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = explodedArchive30.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file29, asciiBytesMap36);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive37.entries;
        explodedArchive22.entries = asciiBytesMap38;
        explodedArchive0.entries = asciiBytesMap38;
        boolean boolean41 = explodedArchive0.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest43 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter44 = null;
        org.springframework.boot.loader.archive.Archive archive45 = explodedArchive0.getFilteredArchive(entryRenameFilter44);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry46 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes47 = fileEntry46.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes48 = fileEntry46.getName();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertNull(manifest26);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(asciiBytesMap36);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertNotNull(archive45);
        org.junit.Assert.assertNull(asciiBytes47);
        org.junit.Assert.assertNull(asciiBytes48);
    }

    @Test
    public void test09858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09858");
        java.io.File file4 = null;
        java.io.File file5 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive6.getNestedArchives(entryFilter8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = null;
        explodedArchive6.entries = asciiBytesMap10;
        boolean boolean12 = explodedArchive6.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry13 = explodedArchive6.new FileEntry();
        java.io.File file14 = null;
        java.io.File file15 = null;
        java.io.File file16 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file18 = explodedArchive17.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive17.getNestedArchives(entryFilter19);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive17.getNestedArchives(entryFilter21);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = explodedArchive17.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file16, asciiBytesMap23);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive24.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file15, asciiBytesMap25);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file14, asciiBytesMap25);
        explodedArchive6.entries = asciiBytesMap25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file5, asciiBytesMap25);
        java.io.File file30 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive31.getNestedArchives(entryFilter33);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive31.getNestedArchives(entryFilter35);
        java.lang.String str37 = explodedArchive31.toString();
        java.util.jar.Manifest manifest38 = explodedArchive31.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive31.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file30, asciiBytesMap39);
        explodedArchive29.entries = asciiBytesMap39;
        java.io.File file42 = null;
        java.io.File file43 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive44.getNestedArchives(entryFilter46);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap48 = null;
        explodedArchive44.entries = asciiBytesMap48;
        java.io.File file50 = explodedArchive44.root;
        java.io.File file51 = explodedArchive44.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter54 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList55 = explodedArchive52.getNestedArchives(entryFilter54);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter56 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList57 = explodedArchive52.getNestedArchives(entryFilter56);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap58 = explodedArchive52.entries;
        explodedArchive44.entries = asciiBytesMap58;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive(file43, asciiBytesMap58);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive(file42, asciiBytesMap58);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file63 = explodedArchive62.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter64 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList65 = explodedArchive62.getNestedArchives(entryFilter64);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter66 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList67 = explodedArchive62.getNestedArchives(entryFilter66);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap68 = explodedArchive62.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter69 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList70 = explodedArchive62.getNestedArchives(entryFilter69);
        java.io.File file71 = null;
        explodedArchive62.root = file71;
        java.io.File file73 = null;
        explodedArchive62.root = file73;
        java.io.File file75 = explodedArchive62.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap76 = explodedArchive62.entries;
        explodedArchive61.entries = asciiBytesMap76;
        explodedArchive29.entries = asciiBytesMap76;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap76);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler80 = explodedArchive79.new FilteredURLStreamHandler();
        java.net.URL uRL81 = new java.net.URL("/archive://[hi!://:100/hi!]:1/hi!", "[archive://:0hi!://:100/hi!]", 52, "", (java.net.URLStreamHandler) filteredURLStreamHandler80);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(asciiBytesMap23);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
        org.junit.Assert.assertNull(manifest38);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(archiveList55);
        org.junit.Assert.assertNotNull(archiveList57);
        org.junit.Assert.assertNotNull(asciiBytesMap58);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(archiveList65);
        org.junit.Assert.assertNotNull(archiveList67);
        org.junit.Assert.assertNotNull(asciiBytesMap68);
        org.junit.Assert.assertNotNull(archiveList70);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNotNull(asciiBytesMap76);
        org.junit.Assert.assertEquals(uRL81.toString(), "/archive://[hi!://:100/hi!]:1/hi!://[archive://:0hi!://:100/hi!]:52");
    }

    @Test
    public void test09859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09859");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        explodedArchive0.filtered = true;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive0.getEntries();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(entryCollection10);
    }

    @Test
    public void test09860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09860");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str2 = explodedArchive1.toString();
        java.lang.String str3 = explodedArchive1.toString();
        java.util.jar.Manifest manifest4 = explodedArchive1.getManifest();
        java.lang.String str5 = explodedArchive1.toString();
        java.io.File file6 = null;
        java.io.File file7 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive8.getNestedArchives(entryFilter12);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive8.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file7, asciiBytesMap14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive15.entries;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter17 = null;
        org.springframework.boot.loader.archive.Archive archive18 = explodedArchive15.getFilteredArchive(entryRenameFilter17);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive15.getNestedArchives(entryFilter19);
        java.util.jar.Manifest manifest21 = explodedArchive15.manifest;
        explodedArchive15.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive24.getNestedArchives(entryFilter26);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive24.getNestedArchives(entryFilter28);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive24.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter31 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList32 = explodedArchive24.getNestedArchives(entryFilter31);
        java.io.File file33 = null;
        java.io.File file34 = null;
        java.io.File file35 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file37 = explodedArchive36.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter38 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList39 = explodedArchive36.getNestedArchives(entryFilter38);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter40 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList41 = explodedArchive36.getNestedArchives(entryFilter40);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap42 = explodedArchive36.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file35, asciiBytesMap42);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap44 = explodedArchive43.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive(file34, asciiBytesMap44);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file33, asciiBytesMap44);
        explodedArchive24.entries = asciiBytesMap44;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter48 = null;
        org.springframework.boot.loader.archive.Archive archive49 = explodedArchive24.getFilteredArchive(entryRenameFilter48);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter50 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList51 = explodedArchive24.getNestedArchives(entryFilter50);
        java.io.File file52 = explodedArchive24.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap53 = explodedArchive24.entries;
        explodedArchive15.entries = asciiBytesMap53;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap55 = explodedArchive15.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive(file6, asciiBytesMap55);
        explodedArchive1.entries = asciiBytesMap55;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap55);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "archive" + "'", str2, "archive");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "archive" + "'", str3, "archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNotNull(archive18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNotNull(archiveList32);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(archiveList39);
        org.junit.Assert.assertNotNull(archiveList41);
        org.junit.Assert.assertNotNull(asciiBytesMap42);
        org.junit.Assert.assertNotNull(asciiBytesMap44);
        org.junit.Assert.assertNotNull(archive49);
        org.junit.Assert.assertNotNull(archiveList51);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(asciiBytesMap53);
        org.junit.Assert.assertNotNull(asciiBytesMap55);
    }

    @Test
    public void test09861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09861");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.io.File file3 = explodedArchive0.root;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = explodedArchive0.entries;
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.util.jar.Manifest manifest9 = null;
        explodedArchive0.manifest = manifest9;
        java.util.jar.Manifest manifest11 = null;
        explodedArchive0.manifest = manifest11;
        java.io.File file13 = explodedArchive0.root;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNotNull(asciiBytesMap5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNull(file13);
    }

    @Test
    public void test09862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09862");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler3 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter4 = null;
        org.springframework.boot.loader.archive.Archive archive5 = explodedArchive0.getFilteredArchive(entryRenameFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
        java.util.jar.Manifest manifest8 = explodedArchive0.manifest;
        explodedArchive0.filtered = false;
        java.io.File file11 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file11, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNull(manifest8);
    }

    @Test
    public void test09863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09863");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive1.getNestedArchives(entryFilter8);
        java.io.File file10 = null;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap21);
        explodedArchive1.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap21);
        java.util.jar.Manifest manifest26 = null;
        explodedArchive25.manifest = manifest26;
        java.util.jar.Manifest manifest28 = null;
        explodedArchive25.manifest = manifest28;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler30 = explodedArchive25.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive25.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest32 = explodedArchive25.manifest;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNull(manifest32);
    }

    @Test
    public void test09864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09864");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive2.getNestedArchives(entryFilter9);
        java.io.File file11 = null;
        java.io.File file12 = null;
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive21.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap22);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap22);
        explodedArchive2.entries = asciiBytesMap22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap22);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap27);
        boolean boolean29 = explodedArchive28.filtered;
        explodedArchive28.filtered = true;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test09865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09865");
        java.net.URLConnection.setDefaultRequestProperty("/hi!://:100/hi!://:100/hi!://:100/hi!://:100", "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:0");
    }

    @Test
    public void test09866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09866");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("[://[archive://:10archive]:100archive://:10archive]:0://[hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!]:1hi!://:100/hi!://:100/archive", "/hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!", (int) (short) 100, "/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/[/:100]:0");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: [://[archive://:10archive]:100archive://:10archive]:0://[hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!]:1hi!://:100/hi!://:100/archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test09867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09867");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str42 = uRL41.getProtocol();
        int int43 = uRL41.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str49 = explodedArchive48.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection50 = explodedArchive48.getEntries();
        java.util.jar.Manifest manifest51 = explodedArchive48.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler52 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL53 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler52);
        java.lang.String str54 = uRL53.getQuery();
        java.lang.String str55 = uRL53.getRef();
        int int56 = uRL53.getPort();
        java.lang.String str57 = uRL53.getProtocol();
        java.lang.String str58 = uRL53.getPath();
        java.lang.String str59 = uRL53.getPath();
        boolean boolean60 = uRL41.sameFile(uRL53);
        java.lang.String str61 = uRL53.getAuthority();
        java.lang.String str62 = uRL53.getFile();
        java.lang.String str63 = uRL53.getAuthority();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "archive" + "'", str49, "archive");
        org.junit.Assert.assertNotNull(entryCollection50);
        org.junit.Assert.assertNull(manifest51);
        org.junit.Assert.assertEquals(uRL53.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + ":100" + "'", str61, ":100");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + ":100" + "'", str63, ":100");
    }

    @Test
    public void test09868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09868");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getFile();
        java.lang.String str25 = uRL9.getHost();
        java.lang.String str26 = uRL9.getPath();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
    }

    @Test
    public void test09869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09869");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        java.lang.Class<?> wildcardClass7 = explodedArchive0.getClass();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test09870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09870");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getAuthority();
        java.lang.String str25 = uRL9.getRef();
        java.lang.String str26 = uRL9.toExternalForm();
        java.net.Proxy proxy27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection28 = uRL9.openConnection(proxy27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!://:100" + "'", str26, "hi!://:100");
    }

    @Test
    public void test09871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09871");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getAuthority();
        java.lang.String str25 = uRL9.getPath();
        int int26 = uRL9.getPort();
        int int27 = uRL9.getPort();
        java.net.URL uRL29 = new java.net.URL(uRL9, "");
        java.lang.String str30 = uRL9.toExternalForm();
        java.lang.String str31 = uRL9.getPath();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!://:100" + "'", str30, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
    }

    @Test
    public void test09872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09872");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        java.util.jar.Manifest manifest15 = explodedArchive12.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL17 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler16);
        java.lang.String str18 = uRL17.getQuery();
        java.lang.String str19 = uRL17.getRef();
        int int20 = uRL17.getPort();
        java.lang.String str21 = uRL17.getProtocol();
        java.lang.String str22 = uRL17.getPath();
        java.lang.String str23 = uRL17.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str30 = explodedArchive29.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection31 = explodedArchive29.getEntries();
        java.util.jar.Manifest manifest32 = explodedArchive29.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.lang.String str35 = uRL34.getFile();
        int int36 = uRL34.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str43 = explodedArchive42.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection44 = explodedArchive42.getEntries();
        java.util.jar.Manifest manifest45 = explodedArchive42.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler46 = explodedArchive42.new FilteredURLStreamHandler();
        java.net.URL uRL47 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler46);
        java.lang.String str48 = uRL47.getQuery();
        java.lang.String str49 = uRL47.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str56 = explodedArchive55.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection57 = explodedArchive55.getEntries();
        java.util.jar.Manifest manifest58 = explodedArchive55.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler59 = explodedArchive55.new FilteredURLStreamHandler();
        java.net.URL uRL60 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.net.URL uRL61 = new java.net.URL(uRL47, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.net.URL uRL62 = new java.net.URL(uRL34, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.net.URL uRL63 = new java.net.URL(uRL17, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.lang.String str64 = uRL63.getAuthority();
        java.net.URL uRL66 = new java.net.URL(uRL63, ":100");
        java.lang.String str67 = uRL63.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file74 = explodedArchive73.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter75 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList76 = explodedArchive73.getNestedArchives(entryFilter75);
        java.util.jar.Manifest manifest77 = null;
        explodedArchive73.manifest = manifest77;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler79 = explodedArchive73.new FilteredURLStreamHandler();
        java.net.URL uRL80 = new java.net.URL("/hi!:1", "hi!://:100/://[archive://:10archive]:100archive://:10archive", (int) ' ', "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        java.net.URL uRL81 = new java.net.URL(uRL63, "hi!://:100/archive:///archive:1hi!://:100/hi!://:100/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        java.net.URL uRL82 = new java.net.URL("hi!://:100/hi!://:100/archive", "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/[/:100]:0", 35, "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://[hi!://:100/hi!]:0archive://:10:100]:1[hi!://:100/archive]:100", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        java.net.URL uRL83 = new java.net.URL("hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", "[/archive:///archive:0hi!://:100]:0", 52, "hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]://[hi!://:100/hi!://hi!:1hi!]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + ":100" + "'", str23, ":100");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "archive" + "'", str30, "archive");
        org.junit.Assert.assertNotNull(entryCollection31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertEquals(uRL34.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "archive" + "'", str43, "archive");
        org.junit.Assert.assertNotNull(entryCollection44);
        org.junit.Assert.assertNull(manifest45);
        org.junit.Assert.assertEquals(uRL47.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "archive" + "'", str56, "archive");
        org.junit.Assert.assertNotNull(entryCollection57);
        org.junit.Assert.assertNull(manifest58);
        org.junit.Assert.assertEquals(uRL60.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + ":100" + "'", str64, ":100");
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "/hi!://:100/hi!" + "'", str67, "/hi!://:100/hi!");
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNotNull(archiveList76);
        org.junit.Assert.assertEquals(uRL80.toString(), "/hi!:1://[hi!://:100/://[archive://:10archive]:100archive://:10archive]:32hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals(uRL81.toString(), "hi!://:100/hi!://:100/hi!://:100/archive:///archive:1hi!://:100/hi!://:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals(uRL82.toString(), "hi!://:100/hi!://:100/archive://[hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/[/:100]:0]:35hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://[hi!://:100/hi!]:0archive://:10:100]:1[hi!://:100/archive]:100");
        org.junit.Assert.assertEquals(uRL83.toString(), "hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[/archive:///archive:0hi!://:100]:0:52hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]://[hi!://:100/hi!://hi!:1hi!]:100archive://:10archive");
    }

    @Test
    public void test09873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09873");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str3 = explodedArchive2.toString();
        java.util.jar.Manifest manifest4 = null;
        explodedArchive2.manifest = manifest4;
        java.util.jar.Manifest manifest6 = explodedArchive2.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap7);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "archive" + "'", str3, "archive");
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
    }

    @Test
    public void test09874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09874");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.io.File file8 = explodedArchive0.root;
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive11.getNestedArchives(entryFilter13);
        java.util.jar.Manifest manifest15 = explodedArchive11.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.jar.Manifest manifest18 = null;
        explodedArchive16.manifest = manifest18;
        java.util.jar.Manifest manifest20 = explodedArchive16.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive16.entries;
        explodedArchive11.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter23 = null;
        org.springframework.boot.loader.archive.Archive archive24 = explodedArchive11.getFilteredArchive(entryRenameFilter23);
        java.util.jar.Manifest manifest25 = explodedArchive11.getManifest();
        java.util.jar.Manifest manifest26 = null;
        explodedArchive11.manifest = manifest26;
        java.io.File file28 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file30 = explodedArchive29.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter31 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList32 = explodedArchive29.getNestedArchives(entryFilter31);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive29.getNestedArchives(entryFilter33);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap35 = explodedArchive29.entries;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive29.manifest = manifest36;
        java.io.File file38 = null;
        explodedArchive29.root = file38;
        java.io.File file40 = null;
        explodedArchive29.root = file40;
        java.io.File file42 = null;
        explodedArchive29.root = file42;
        java.util.jar.Manifest manifest44 = null;
        explodedArchive29.manifest = manifest44;
        java.io.File file46 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file48 = explodedArchive47.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter49 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList50 = explodedArchive47.getNestedArchives(entryFilter49);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter51 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList52 = explodedArchive47.getNestedArchives(entryFilter51);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap53 = explodedArchive47.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter54 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList55 = explodedArchive47.getNestedArchives(entryFilter54);
        java.io.File file56 = null;
        java.io.File file57 = null;
        java.io.File file58 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter61 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList62 = explodedArchive59.getNestedArchives(entryFilter61);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter63 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList64 = explodedArchive59.getNestedArchives(entryFilter63);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap65 = explodedArchive59.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive(file58, asciiBytesMap65);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap67 = explodedArchive66.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive(file57, asciiBytesMap67);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive(file56, asciiBytesMap67);
        explodedArchive47.entries = asciiBytesMap67;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive(file46, asciiBytesMap67);
        java.util.jar.Manifest manifest72 = null;
        explodedArchive71.manifest = manifest72;
        java.io.File file74 = explodedArchive71.root;
        java.util.jar.Manifest manifest75 = explodedArchive71.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file77 = explodedArchive76.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter78 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList79 = explodedArchive76.getNestedArchives(entryFilter78);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter80 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList81 = explodedArchive76.getNestedArchives(entryFilter80);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap82 = explodedArchive76.entries;
        explodedArchive71.entries = asciiBytesMap82;
        explodedArchive29.entries = asciiBytesMap82;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive85 = new org.springframework.boot.loader.archive.ExplodedArchive(file28, asciiBytesMap82);
        explodedArchive11.entries = asciiBytesMap82;
        explodedArchive0.entries = asciiBytesMap82;
        boolean boolean88 = explodedArchive0.filtered;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNotNull(archive24);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(archiveList32);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNotNull(asciiBytesMap35);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(archiveList50);
        org.junit.Assert.assertNotNull(archiveList52);
        org.junit.Assert.assertNotNull(asciiBytesMap53);
        org.junit.Assert.assertNotNull(archiveList55);
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNotNull(archiveList62);
        org.junit.Assert.assertNotNull(archiveList64);
        org.junit.Assert.assertNotNull(asciiBytesMap65);
        org.junit.Assert.assertNotNull(asciiBytesMap67);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNull(manifest75);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNotNull(archiveList79);
        org.junit.Assert.assertNotNull(archiveList81);
        org.junit.Assert.assertNotNull(asciiBytesMap82);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test09875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09875");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap4 = null;
        explodedArchive0.entries = asciiBytesMap4;
        java.io.File file6 = explodedArchive0.root;
        java.io.File file7 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive8.getNestedArchives(entryFilter12);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive8.entries;
        explodedArchive0.entries = asciiBytesMap14;
        java.io.File file16 = null;
        explodedArchive0.root = file16;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
    }

    @Test
    public void test09876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09876");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive8.entries;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        explodedArchive8.filtered = true;
        java.util.jar.Manifest manifest13 = null;
        explodedArchive8.manifest = manifest13;
        java.io.File file15 = null;
        explodedArchive8.root = file15;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(entryCollection10);
    }

    @Test
    public void test09877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09877");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL(uRL13, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str26 = explodedArchive25.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection27 = explodedArchive25.getEntries();
        java.util.jar.Manifest manifest28 = explodedArchive25.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive25.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.lang.String str31 = uRL30.getFile();
        int int32 = uRL30.getDefaultPort();
        java.lang.String str33 = uRL30.getRef();
        boolean boolean34 = uRL13.sameFile(uRL30);
        java.lang.String str35 = uRL13.getHost();
        java.lang.String str36 = uRL13.getQuery();
        java.lang.String str37 = uRL13.getAuthority();
        java.io.File file51 = null;
        java.io.File file52 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file54 = explodedArchive53.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter55 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList56 = explodedArchive53.getNestedArchives(entryFilter55);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter57 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList58 = explodedArchive53.getNestedArchives(entryFilter57);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap59 = explodedArchive53.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive(file52, asciiBytesMap59);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap61 = explodedArchive60.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive(file51, asciiBytesMap61);
        explodedArchive62.filtered = true;
        java.io.File file65 = null;
        explodedArchive62.root = file65;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection67 = explodedArchive62.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection68 = explodedArchive62.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler69 = explodedArchive62.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler70 = explodedArchive62.new FilteredURLStreamHandler();
        java.net.URL uRL71 = new java.net.URL("[/:100]:0", "hi!://:100/hi!:1", 0, "/:100", (java.net.URLStreamHandler) filteredURLStreamHandler70);
        java.net.URL uRL72 = new java.net.URL("[://[archive://:10archive]:100archive://:10archive]:0", "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", 1, "/:100", (java.net.URLStreamHandler) filteredURLStreamHandler70);
        java.net.URL uRL73 = new java.net.URL("hi!://:100/hi!://hi!:1hi!", "hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", (int) (byte) 10, "hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]", (java.net.URLStreamHandler) filteredURLStreamHandler70);
        java.net.URL uRL74 = new java.net.URL(uRL13, "/://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler70);
        java.net.URL uRL75 = new java.net.URL("hi!://:100/hi!://hi!:1hi!", "hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", (int) (byte) 100, "hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10", (java.net.URLStreamHandler) filteredURLStreamHandler70);
        java.lang.String str76 = uRL75.getQuery();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI77 = uRL75.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100/hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:100hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertEquals(uRL20.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "archive" + "'", str26, "archive");
        org.junit.Assert.assertNotNull(entryCollection27);
        org.junit.Assert.assertNull(manifest28);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + ":100" + "'", str37, ":100");
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(archiveList56);
        org.junit.Assert.assertNotNull(archiveList58);
        org.junit.Assert.assertNotNull(asciiBytesMap59);
        org.junit.Assert.assertNotNull(asciiBytesMap61);
        org.junit.Assert.assertNotNull(entryCollection67);
        org.junit.Assert.assertNotNull(entryCollection68);
        org.junit.Assert.assertEquals(uRL71.toString(), "[/:100]:0://[hi!://:100/hi!:1]:0/:100");
        org.junit.Assert.assertEquals(uRL72.toString(), "[://[archive://:10archive]:100archive://:10archive]:0://[hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1]:1/:100");
        org.junit.Assert.assertEquals(uRL73.toString(), "hi!://:100/hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:10hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]");
        org.junit.Assert.assertEquals(uRL74.toString(), "hi!://:100/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL75.toString(), "hi!://:100/hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:100hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10");
        org.junit.Assert.assertNull(str76);
    }

    @Test
    public void test09878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09878");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection4 = explodedArchive0.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
        java.util.jar.Manifest manifest8 = null;
        explodedArchive0.manifest = manifest8;
        boolean boolean10 = explodedArchive0.filtered;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(entryCollection4);
        org.junit.Assert.assertNotNull(asciiBytesMap5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test09879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09879");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.io.File file3 = explodedArchive0.root;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        java.io.File file5 = null;
        explodedArchive0.root = file5;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        java.lang.String str8 = explodedArchive0.toString();
        java.util.jar.Manifest manifest9 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter11 = null;
        org.springframework.boot.loader.archive.Archive archive12 = explodedArchive0.getFilteredArchive(entryRenameFilter11);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry13 = explodedArchive0.new FileEntry();
        java.io.File file14 = fileEntry13.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes15 = null;
        fileEntry13.name = asciiBytes15;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNotNull(archive12);
        org.junit.Assert.assertNull(file14);
    }

    @Test
    public void test09880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09880");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive0.entries;
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.util.jar.Manifest manifest11 = explodedArchive0.manifest;
        explodedArchive0.filtered = true;
        java.io.File file14 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter15 = null;
        org.springframework.boot.loader.archive.Archive archive16 = explodedArchive0.getFilteredArchive(entryRenameFilter15);
        java.util.jar.Manifest manifest17 = explodedArchive0.getManifest();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archive16);
        org.junit.Assert.assertNull(manifest17);
    }

    @Test
    public void test09881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09881");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("[://[archive://:10archive]:100archive://:10archive]:0", "/:100", 0, "archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: [://[archive://:10archive]:100archive://:10archive]:0");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test09882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09882");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str29 = explodedArchive28.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive28.getEntries();
        java.util.jar.Manifest manifest31 = explodedArchive28.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL33 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.lang.String str34 = uRL33.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str45 = explodedArchive44.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection46 = explodedArchive44.getEntries();
        java.util.jar.Manifest manifest47 = explodedArchive44.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler48 = explodedArchive44.new FilteredURLStreamHandler();
        java.net.URL uRL49 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler48);
        java.lang.String str50 = uRL49.getQuery();
        java.lang.String str51 = uRL49.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str58 = explodedArchive57.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection59 = explodedArchive57.getEntries();
        java.util.jar.Manifest manifest60 = explodedArchive57.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler61 = explodedArchive57.new FilteredURLStreamHandler();
        java.net.URL uRL62 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.net.URL uRL63 = new java.net.URL(uRL49, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.net.URL uRL64 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.net.URL uRL65 = new java.net.URL(uRL33, "", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.lang.String str66 = uRL33.getQuery();
        boolean boolean67 = uRL9.sameFile(uRL33);
        java.lang.String str68 = uRL33.getQuery();
        java.lang.String str69 = uRL33.getRef();
        java.net.URL uRL71 = new java.net.URL(uRL33, "[hi!://:100/hi!]:0");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "archive" + "'", str45, "archive");
        org.junit.Assert.assertNotNull(entryCollection46);
        org.junit.Assert.assertNull(manifest47);
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "archive" + "'", str58, "archive");
        org.junit.Assert.assertNotNull(entryCollection59);
        org.junit.Assert.assertNull(manifest60);
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL64.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertEquals(uRL71.toString(), "hi!://:100/[hi!://:100/hi!]:0");
    }

    @Test
    public void test09883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09883");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        java.util.jar.Manifest manifest15 = explodedArchive12.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL17 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler16);
        java.lang.String str18 = uRL17.getQuery();
        java.lang.String str19 = uRL17.getRef();
        int int20 = uRL17.getPort();
        java.lang.String str21 = uRL17.getProtocol();
        java.lang.String str22 = uRL17.getPath();
        java.lang.String str23 = uRL17.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str30 = explodedArchive29.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection31 = explodedArchive29.getEntries();
        java.util.jar.Manifest manifest32 = explodedArchive29.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.lang.String str35 = uRL34.getFile();
        int int36 = uRL34.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str43 = explodedArchive42.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection44 = explodedArchive42.getEntries();
        java.util.jar.Manifest manifest45 = explodedArchive42.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler46 = explodedArchive42.new FilteredURLStreamHandler();
        java.net.URL uRL47 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler46);
        java.lang.String str48 = uRL47.getQuery();
        java.lang.String str49 = uRL47.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str56 = explodedArchive55.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection57 = explodedArchive55.getEntries();
        java.util.jar.Manifest manifest58 = explodedArchive55.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler59 = explodedArchive55.new FilteredURLStreamHandler();
        java.net.URL uRL60 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.net.URL uRL61 = new java.net.URL(uRL47, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.net.URL uRL62 = new java.net.URL(uRL34, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.net.URL uRL63 = new java.net.URL(uRL17, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.lang.String str64 = uRL63.getAuthority();
        java.net.URL uRL66 = new java.net.URL(uRL63, ":100");
        java.lang.String str67 = uRL63.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file74 = explodedArchive73.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter75 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList76 = explodedArchive73.getNestedArchives(entryFilter75);
        java.util.jar.Manifest manifest77 = null;
        explodedArchive73.manifest = manifest77;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler79 = explodedArchive73.new FilteredURLStreamHandler();
        java.net.URL uRL80 = new java.net.URL("/hi!:1", "hi!://:100/://[archive://:10archive]:100archive://:10archive", (int) ' ', "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        java.net.URL uRL81 = new java.net.URL(uRL63, "hi!://:100/archive:///archive:1hi!://:100/hi!://:100/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        java.net.URL uRL82 = new java.net.URL("hi!://:100/hi!://:100/archive", "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/[/:100]:0", 35, "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://[hi!://:100/hi!]:0archive://:10:100]:1[hi!://:100/archive]:100", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        java.net.URL uRL83 = new java.net.URL("hi!://:100/hi!://:100/:100", "hi!://:100/://[archive://:10archive]:100archive://:10archive", (int) '4', "archive", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + ":100" + "'", str23, ":100");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "archive" + "'", str30, "archive");
        org.junit.Assert.assertNotNull(entryCollection31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertEquals(uRL34.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "archive" + "'", str43, "archive");
        org.junit.Assert.assertNotNull(entryCollection44);
        org.junit.Assert.assertNull(manifest45);
        org.junit.Assert.assertEquals(uRL47.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "archive" + "'", str56, "archive");
        org.junit.Assert.assertNotNull(entryCollection57);
        org.junit.Assert.assertNull(manifest58);
        org.junit.Assert.assertEquals(uRL60.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + ":100" + "'", str64, ":100");
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "/hi!://:100/hi!" + "'", str67, "/hi!://:100/hi!");
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNotNull(archiveList76);
        org.junit.Assert.assertEquals(uRL80.toString(), "/hi!:1://[hi!://:100/://[archive://:10archive]:100archive://:10archive]:32hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals(uRL81.toString(), "hi!://:100/hi!://:100/hi!://:100/archive:///archive:1hi!://:100/hi!://:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals(uRL82.toString(), "hi!://:100/hi!://:100/archive://[hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/[/:100]:0]:35hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://[hi!://:100/hi!]:0archive://:10:100]:1[hi!://:100/archive]:100");
        org.junit.Assert.assertEquals(uRL83.toString(), "hi!://:100/hi!://:100/:100://[hi!://:100/://[archive://:10archive]:100archive://:10archive]:52archive");
    }

    @Test
    public void test09884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09884");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getProtocol();
        java.lang.String str14 = uRL9.getPath();
        java.lang.String str15 = uRL9.getPath();
        java.lang.String str16 = uRL9.getAuthority();
        java.lang.String str17 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str23 = explodedArchive22.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection24 = explodedArchive22.getEntries();
        java.util.jar.Manifest manifest25 = explodedArchive22.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler26 = explodedArchive22.new FilteredURLStreamHandler();
        java.net.URL uRL27 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler26);
        java.lang.String str28 = uRL27.getQuery();
        java.lang.String str29 = uRL27.getRef();
        int int30 = uRL27.getPort();
        java.lang.String str31 = uRL27.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str37 = explodedArchive36.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection38 = explodedArchive36.getEntries();
        java.util.jar.Manifest manifest39 = explodedArchive36.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler40 = explodedArchive36.new FilteredURLStreamHandler();
        java.net.URL uRL41 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler40);
        java.lang.String str42 = uRL41.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str45 = explodedArchive44.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection46 = explodedArchive44.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive44.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL(uRL41, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str54 = explodedArchive53.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection55 = explodedArchive53.getEntries();
        java.util.jar.Manifest manifest56 = explodedArchive53.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler57 = explodedArchive53.new FilteredURLStreamHandler();
        java.net.URL uRL58 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler57);
        java.lang.String str59 = uRL58.getFile();
        int int60 = uRL58.getDefaultPort();
        java.lang.String str61 = uRL58.getRef();
        boolean boolean62 = uRL41.sameFile(uRL58);
        boolean boolean63 = uRL27.sameFile(uRL41);
        java.lang.String str64 = uRL41.getQuery();
        java.lang.String str65 = uRL41.getFile();
        boolean boolean66 = uRL9.sameFile(uRL41);
        java.lang.String str67 = uRL41.getPath();
        java.lang.String str68 = uRL41.getAuthority();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + ":100" + "'", str16, ":100");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "archive" + "'", str23, "archive");
        org.junit.Assert.assertNotNull(entryCollection24);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
        org.junit.Assert.assertNotNull(entryCollection38);
        org.junit.Assert.assertNull(manifest39);
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "archive" + "'", str45, "archive");
        org.junit.Assert.assertNotNull(entryCollection46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "archive" + "'", str54, "archive");
        org.junit.Assert.assertNotNull(entryCollection55);
        org.junit.Assert.assertNull(manifest56);
        org.junit.Assert.assertEquals(uRL58.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + ":100" + "'", str68, ":100");
    }

    @Test
    public void test09885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09885");
        java.io.File file4 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file6 = explodedArchive5.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive5.getNestedArchives(entryFilter7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = null;
        explodedArchive5.entries = asciiBytesMap9;
        java.io.File file11 = explodedArchive5.root;
        java.io.File file12 = explodedArchive5.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        explodedArchive5.entries = asciiBytesMap19;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap19);
        java.io.File file22 = null;
        explodedArchive21.root = file22;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive21.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest25 = null;
        explodedArchive21.manifest = manifest25;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection27 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest28 = null;
        explodedArchive21.manifest = manifest28;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler30 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL31 = new java.net.URL(":100://[hi!://:100/hi!]:100hi!://:100/archive", "/hi!://:100/hi!://hi!", (int) (short) 100, "/[/hi!://:100/archive]", (java.net.URLStreamHandler) filteredURLStreamHandler30);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(entryCollection27);
        org.junit.Assert.assertEquals(uRL31.toString(), ":100://[hi!://:100/hi!]:100hi!://:100/archive://[/hi!://:100/hi!://hi!]:100/[/hi!://:100/archive]");
    }

    @Test
    public void test09886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09886");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        java.util.jar.Manifest manifest13 = null;
        explodedArchive11.manifest = manifest13;
        java.util.jar.Manifest manifest15 = null;
        explodedArchive11.manifest = manifest15;
        java.io.File file17 = null;
        explodedArchive11.root = file17;
        java.lang.String str19 = explodedArchive11.toString();
        java.io.File file20 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file22 = explodedArchive21.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive21.getNestedArchives(entryFilter23);
        explodedArchive21.filtered = false;
        java.util.jar.Manifest manifest27 = explodedArchive21.manifest;
        java.io.File file28 = explodedArchive21.root;
        explodedArchive21.filtered = false;
        java.io.File file31 = null;
        java.io.File file32 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file34 = explodedArchive33.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive33.getNestedArchives(entryFilter35);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter37 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList38 = explodedArchive33.getNestedArchives(entryFilter37);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive33.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file32, asciiBytesMap39);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap41 = explodedArchive40.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file31, asciiBytesMap41);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry43 = explodedArchive42.new FileEntry();
        java.util.jar.Manifest manifest44 = null;
        explodedArchive42.manifest = manifest44;
        explodedArchive42.filtered = true;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap48 = explodedArchive42.entries;
        explodedArchive21.entries = asciiBytesMap48;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive(file20, asciiBytesMap48);
        explodedArchive11.entries = asciiBytesMap48;
        boolean boolean52 = explodedArchive11.filtered;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "archive" + "'", str19, "archive");
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNull(manifest27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertNotNull(archiveList38);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertNotNull(asciiBytesMap41);
        org.junit.Assert.assertNotNull(asciiBytesMap48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test09887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09887");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest3 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler4 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = explodedArchive0.entries;
        java.lang.String str6 = explodedArchive0.toString();
        java.lang.String str7 = explodedArchive0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(manifest3);
        org.junit.Assert.assertNotNull(asciiBytesMap5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
    }

    @Test
    public void test09888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09888");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        java.util.jar.Manifest manifest14 = explodedArchive11.getManifest();
        java.util.jar.Manifest manifest15 = explodedArchive11.manifest;
        explodedArchive11.filtered = false;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive11.getEntries();
        explodedArchive11.filtered = false;
        java.io.File file21 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str23 = explodedArchive22.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection24 = explodedArchive22.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive22.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter26 = null;
        org.springframework.boot.loader.archive.Archive archive27 = explodedArchive22.getFilteredArchive(entryRenameFilter26);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str29 = explodedArchive28.toString();
        boolean boolean30 = explodedArchive28.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter31 = null;
        org.springframework.boot.loader.archive.Archive archive32 = explodedArchive28.getFilteredArchive(entryRenameFilter31);
        explodedArchive28.filtered = true;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive28.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = explodedArchive28.entries;
        explodedArchive22.entries = asciiBytesMap36;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file21, asciiBytesMap36);
        boolean boolean39 = explodedArchive38.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive40.getNestedArchives(entryFilter42);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter44 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList45 = explodedArchive40.getNestedArchives(entryFilter44);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap46 = explodedArchive40.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter47 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList48 = explodedArchive40.getNestedArchives(entryFilter47);
        java.io.File file49 = null;
        java.io.File file50 = null;
        java.io.File file51 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file53 = explodedArchive52.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter54 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList55 = explodedArchive52.getNestedArchives(entryFilter54);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter56 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList57 = explodedArchive52.getNestedArchives(entryFilter56);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap58 = explodedArchive52.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive(file51, asciiBytesMap58);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap60 = explodedArchive59.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive(file50, asciiBytesMap60);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive(file49, asciiBytesMap60);
        explodedArchive40.entries = asciiBytesMap60;
        explodedArchive38.entries = asciiBytesMap60;
        explodedArchive11.entries = asciiBytesMap60;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(manifest14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "archive" + "'", str23, "archive");
        org.junit.Assert.assertNotNull(entryCollection24);
        org.junit.Assert.assertNotNull(archive27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(archive32);
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNotNull(asciiBytesMap36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertNotNull(archiveList45);
        org.junit.Assert.assertNotNull(asciiBytesMap46);
        org.junit.Assert.assertNotNull(archiveList48);
        org.junit.Assert.assertNull(file53);
        org.junit.Assert.assertNotNull(archiveList55);
        org.junit.Assert.assertNotNull(archiveList57);
        org.junit.Assert.assertNotNull(asciiBytesMap58);
        org.junit.Assert.assertNotNull(asciiBytesMap60);
    }

    @Test
    public void test09889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09889");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        boolean boolean9 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = fileEntry10.getName();
        java.io.File file12 = fileEntry10.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry10.name;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(asciiBytes11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(asciiBytes13);
    }

    @Test
    public void test09890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09890");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.jar.Manifest manifest7 = null;
        explodedArchive1.manifest = manifest7;
        java.io.File file9 = explodedArchive1.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry14 = explodedArchive10.new FileEntry();
        boolean boolean15 = explodedArchive10.filtered;
        boolean boolean16 = explodedArchive10.filtered;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive10.getNestedArchives(entryFilter17);
        java.io.File file19 = null;
        java.io.File file20 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file22 = explodedArchive21.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive21.getNestedArchives(entryFilter23);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive21.getNestedArchives(entryFilter25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive21.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file20, asciiBytesMap27);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file19, asciiBytesMap27);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive29.entries;
        explodedArchive10.entries = asciiBytesMap30;
        explodedArchive1.entries = asciiBytesMap30;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap30);
        java.io.File file34 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive33.buildEntries(file34, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
    }

    @Test
    public void test09891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09891");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        java.lang.String str13 = uRL9.getRef();
        java.net.URL uRL15 = new java.net.URL(uRL9, "hi!:1");
        int int16 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getFile();
        int int28 = uRL26.getDefaultPort();
        java.lang.String str29 = uRL26.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str35 = explodedArchive34.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection36 = explodedArchive34.getEntries();
        java.util.jar.Manifest manifest37 = explodedArchive34.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str40 = uRL39.getQuery();
        java.lang.String str41 = uRL39.getRef();
        java.lang.String str42 = uRL39.getRef();
        java.lang.String str43 = uRL39.toExternalForm();
        boolean boolean44 = uRL26.sameFile(uRL39);
        java.lang.String str45 = uRL39.getUserInfo();
        java.lang.String str46 = uRL39.getHost();
        java.lang.String str47 = uRL39.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file50 = explodedArchive49.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter51 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList52 = explodedArchive49.getNestedArchives(entryFilter51);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter53 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList54 = explodedArchive49.getNestedArchives(entryFilter53);
        java.lang.String str55 = explodedArchive49.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler56 = explodedArchive49.new FilteredURLStreamHandler();
        java.net.URL uRL57 = new java.net.URL(uRL39, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler56);
        java.lang.String str58 = uRL57.toExternalForm();
        boolean boolean59 = uRL9.sameFile(uRL57);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream60 = uRL9.openStream();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100/hi!:1");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "archive" + "'", str35, "archive");
        org.junit.Assert.assertNotNull(entryCollection36);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!://:100" + "'", str43, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(archiveList52);
        org.junit.Assert.assertNotNull(archiveList54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "archive" + "'", str55, "archive");
        org.junit.Assert.assertEquals(uRL57.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!://:100/hi!" + "'", str58, "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test09892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09892");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive1.getNestedArchives(entryFilter8);
        java.io.File file10 = null;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap21);
        explodedArchive1.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap21);
        java.util.jar.Manifest manifest26 = null;
        explodedArchive25.manifest = manifest26;
        java.io.File file28 = explodedArchive25.root;
        java.util.jar.Manifest manifest29 = explodedArchive25.getManifest();
        java.io.File file30 = null;
        explodedArchive25.root = file30;
        java.io.File file32 = null;
        explodedArchive25.root = file32;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str35 = explodedArchive34.toString();
        java.util.jar.Manifest manifest36 = null;
        explodedArchive34.manifest = manifest36;
        java.util.jar.Manifest manifest38 = explodedArchive34.getManifest();
        boolean boolean39 = explodedArchive34.filtered;
        java.util.jar.Manifest manifest40 = explodedArchive34.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap41 = explodedArchive34.entries;
        explodedArchive25.entries = asciiBytesMap41;
        java.io.File file43 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive25.buildEntries(file43, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "archive" + "'", str35, "archive");
        org.junit.Assert.assertNull(manifest38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(manifest40);
        org.junit.Assert.assertNotNull(asciiBytesMap41);
    }

    @Test
    public void test09893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09893");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = null;
        explodedArchive12.entries = asciiBytesMap14;
        java.util.jar.Manifest manifest16 = null;
        explodedArchive12.manifest = manifest16;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler18 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL19 = new java.net.URL("hi!://:100/hi!", "hi!://:100/hi!", 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler18);
        java.net.URL uRL20 = new java.net.URL("", ":100", 97, "archive://:10:100", (java.net.URLStreamHandler) filteredURLStreamHandler18);
        java.net.URL uRL21 = new java.net.URL("[/hi!://:100/archive]", "[hi!://:100/hi!://:100/:100]", (int) (byte) -1, "[hi!://:100/hi!:1]", (java.net.URLStreamHandler) filteredURLStreamHandler18);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertEquals(uRL19.toString(), "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL20.toString(), "://[:100]:97archive://:10:100");
        org.junit.Assert.assertEquals(uRL21.toString(), "[/hi!://:100/archive]://[hi!://:100/hi!://:100/:100][hi!://:100/hi!:1]");
    }

    @Test
    public void test09894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09894");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str30 = explodedArchive29.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection31 = explodedArchive29.getEntries();
        java.util.jar.Manifest manifest32 = explodedArchive29.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL36 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.lang.String str37 = uRL36.getQuery();
        java.lang.String str38 = uRL36.getFile();
        java.lang.String str39 = uRL36.toExternalForm();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection47 = explodedArchive45.getEntries();
        java.util.jar.Manifest manifest48 = explodedArchive45.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.lang.String str51 = uRL50.getPath();
        java.lang.String str52 = uRL50.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str59 = explodedArchive58.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection60 = explodedArchive58.getEntries();
        java.util.jar.Manifest manifest61 = explodedArchive58.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler62 = explodedArchive58.new FilteredURLStreamHandler();
        java.net.URL uRL63 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler62);
        java.net.URL uRL64 = new java.net.URL(uRL50, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler62);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file71 = explodedArchive70.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter72 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList73 = explodedArchive70.getNestedArchives(entryFilter72);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection74 = explodedArchive70.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap75 = explodedArchive70.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler76 = explodedArchive70.new FilteredURLStreamHandler();
        java.net.URL uRL77 = new java.net.URL("/archive", "hi!://:100/hi!", (int) (byte) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler76);
        java.net.URL uRL78 = new java.net.URL(uRL64, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler76);
        java.net.URL uRL79 = new java.net.URL(uRL36, "/archive://[hi!://:100/hi!]:1/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler76);
        java.net.URL uRL80 = new java.net.URL("[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0", "[:100]:52", (int) '#', "/archive:///archive:0hi!://:100://[hi!://:100/archive]:100/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler76);
        java.net.URL uRL81 = new java.net.URL("", "/archive://[hi!://:100/hi!]:1/hi!", (int) (byte) 0, "[hi!://:100/hi!]", (java.net.URLStreamHandler) filteredURLStreamHandler76);
        java.net.Proxy proxy82 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection83 = uRL81.openConnection(proxy82);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "archive" + "'", str30, "archive");
        org.junit.Assert.assertNotNull(entryCollection31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertEquals(uRL34.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL36.toString(), "archive://:10archive");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "archive://:10archive" + "'", str39, "archive://:10archive");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertNotNull(entryCollection47);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "archive" + "'", str59, "archive");
        org.junit.Assert.assertNotNull(entryCollection60);
        org.junit.Assert.assertNull(manifest61);
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNotNull(archiveList73);
        org.junit.Assert.assertNotNull(entryCollection74);
        org.junit.Assert.assertNotNull(asciiBytesMap75);
        org.junit.Assert.assertEquals(uRL77.toString(), "/archive://[hi!://:100/hi!]:1hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL78.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL79.toString(), "archive://:10/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertEquals(uRL80.toString(), "[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0://[:100]:52:35/archive:///archive:0hi!://:100://[hi!://:100/archive]:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals(uRL81.toString(), "://[/archive://[hi!://:100/hi!]:1/hi!]:0[hi!://:100/hi!]");
    }

    @Test
    public void test09895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09895");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        boolean boolean9 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest10 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive0.getNestedArchives(entryFilter11);
        java.util.jar.Manifest manifest13 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter14 = null;
        org.springframework.boot.loader.archive.Archive archive15 = explodedArchive0.getFilteredArchive(entryRenameFilter14);
        java.util.jar.Manifest manifest16 = null;
        explodedArchive0.manifest = manifest16;
        explodedArchive0.filtered = true;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNull(manifest13);
        org.junit.Assert.assertNotNull(archive15);
    }

    @Test
    public void test09896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09896");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive4.getNestedArchives(entryFilter8);
        java.lang.String str10 = explodedArchive4.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler11 = explodedArchive4.new FilteredURLStreamHandler();
        java.io.File file12 = null;
        explodedArchive4.root = file12;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler14 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL15 = new java.net.URL("hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://[hi!://:100/hi!]:0archive://:10:100]:1[hi!://:100/archive]:100", "[hi!://:100/:100]:100", 97, "hi!://:100/hi!://hi!:1hi!", (java.net.URLStreamHandler) filteredURLStreamHandler14);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "archive" + "'", str10, "archive");
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://[hi!://:100/hi!]:0archive://:10:100]:1[hi!://:100/archive]:100://[hi!://:100/:100]:100:97hi!://:100/hi!://hi!:1hi!");
    }

    @Test
    public void test09897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09897");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        explodedArchive0.filtered = false;
        java.util.jar.Manifest manifest10 = null;
        explodedArchive0.manifest = manifest10;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry13 = explodedArchive0.new FileEntry();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
    }

    @Test
    public void test09898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09898");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.io.File file3 = explodedArchive0.root;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        java.io.File file5 = null;
        explodedArchive0.root = file5;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        java.lang.String str8 = explodedArchive0.toString();
        java.util.jar.Manifest manifest9 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive0.new FilteredURLStreamHandler();
        java.lang.String str11 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter12 = null;
        org.springframework.boot.loader.archive.Archive archive13 = explodedArchive0.getFilteredArchive(entryRenameFilter12);
        java.lang.String str14 = explodedArchive0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "archive" + "'", str11, "archive");
        org.junit.Assert.assertNotNull(archive13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "archive" + "'", str14, "archive");
    }

    @Test
    public void test09899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09899");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter16 = null;
        org.springframework.boot.loader.archive.Archive archive17 = explodedArchive12.getFilteredArchive(entryRenameFilter16);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str19 = explodedArchive18.toString();
        boolean boolean20 = explodedArchive18.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter21 = null;
        org.springframework.boot.loader.archive.Archive archive22 = explodedArchive18.getFilteredArchive(entryRenameFilter21);
        explodedArchive18.filtered = true;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection25 = explodedArchive18.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive18.entries;
        explodedArchive12.entries = asciiBytesMap26;
        boolean boolean28 = explodedArchive12.filtered;
        explodedArchive12.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL("hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10", "[/hi!://:100/archive]", (int) (byte) -1, "hi!://:100/hi!://:100/hi!://hi!", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.net.URL uRL33 = new java.net.URL("hi!://:100/[/:100]:0", "hi!://:100/hi!://:100/archive", 0, "hi!://:100/hi!://:100/hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.net.URL uRL34 = new java.net.URL("hi!://:100/hi!://:100/hi!://:100/hi!://hi!", "[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:1", (int) (byte) 10, "hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNotNull(archive17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "archive" + "'", str19, "archive");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(archive22);
        org.junit.Assert.assertNotNull(entryCollection25);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10://[/hi!://:100/archive]hi!://:100/hi!://:100/hi!://hi!");
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100/[/:100]:0://[hi!://:100/hi!://:100/archive]:0hi!://:100/hi!://:100/hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL34.toString(), "hi!://:100/hi!://:100/hi!://:100/hi!://hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:1:10hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]");
    }

    @Test
    public void test09900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09900");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive8.getNestedArchives(entryFilter12);
        explodedArchive8.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive8.getNestedArchives(entryFilter16);
        java.lang.String str18 = explodedArchive8.toString();
        java.lang.String str19 = explodedArchive8.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry20 = explodedArchive8.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("/hi!://:100/hi!://:100/hi!://:100", "/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!", (int) (short) -1, "[archive://:10archive]", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL("[/hi!://:100/archive]:32", "[/:100]:0", (int) (short) 10, "hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL23.getQuery();
        java.lang.String str25 = uRL23.getHost();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj26 = uRL23.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "archive" + "'", str19, "archive");
        org.junit.Assert.assertEquals(uRL22.toString(), "/hi!://:100/hi!://:100/hi!://:100://[/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!][archive://:10archive]");
        org.junit.Assert.assertEquals(uRL23.toString(), "[/hi!://:100/archive]:32://[/:100]:0:10hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[/:100]:0" + "'", str25, "[/:100]:0");
    }

    @Test
    public void test09901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09901");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        boolean boolean8 = explodedArchive0.filtered;
        java.io.File file9 = explodedArchive0.root;
        java.io.File file10 = null;
        explodedArchive0.root = file10;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive0.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter14 = null;
        org.springframework.boot.loader.archive.Archive archive15 = explodedArchive0.getFilteredArchive(entryRenameFilter14);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archive15);
    }

    @Test
    public void test09902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09902");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getHost();
        int int24 = uRL21.getPort();
        java.lang.String str25 = uRL21.getQuery();
        boolean boolean26 = uRL9.sameFile(uRL21);
        java.net.URL uRL28 = new java.net.URL(uRL21, "hi!:1");
        java.lang.String str29 = uRL28.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/hi!:1");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!://:100/hi!:1" + "'", str29, "hi!://:100/hi!:1");
    }

    @Test
    public void test09903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09903");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("hi!://:100/archive:///archive:0hi!://:100", "[hi!://:100]:97", "hi!://:100/hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:100hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://:100/archive:///archive:0hi!://:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test09904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09904");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.lang.String str5 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        java.lang.String str9 = explodedArchive0.toString();
        boolean boolean10 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest11 = null;
        explodedArchive0.manifest = manifest11;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive0.entries;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
    }

    @Test
    public void test09905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09905");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("hi!://:100/:100", ":100://[hi!://:100/hi!]:100hi!://:100/archive", (-1), "");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://:100/:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test09906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09906");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getFile();
        int int28 = uRL26.getDefaultPort();
        java.lang.String str29 = uRL26.getRef();
        boolean boolean30 = uRL9.sameFile(uRL26);
        java.lang.String str31 = uRL26.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive33.filtered = true;
        java.io.File file36 = null;
        explodedArchive33.root = file36;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection38 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest39 = null;
        explodedArchive33.manifest = manifest39;
        boolean boolean41 = explodedArchive33.filtered;
        java.util.jar.Manifest manifest42 = null;
        explodedArchive33.manifest = manifest42;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler44 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL45 = new java.net.URL(uRL26, "[://[archive://:10archive]:100archive://:10archive]:100", (java.net.URLStreamHandler) filteredURLStreamHandler44);
        int int46 = uRL45.getDefaultPort();
        java.lang.String str47 = uRL45.getPath();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(entryCollection38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "/[://[archive://:10archive]:100archive://:10archive]:100" + "'", str47, "/[://[archive://:10archive]:100archive://:10archive]:100");
    }

    @Test
    public void test09907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09907");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getProtocol();
        java.lang.String str14 = uRL9.getPath();
        java.lang.String str15 = uRL9.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getQuery();
        java.lang.String str28 = uRL26.getHost();
        int int29 = uRL26.getPort();
        java.lang.String str30 = uRL26.getQuery();
        java.net.URL uRL32 = new java.net.URL(uRL26, "");
        java.lang.String str33 = uRL32.getPath();
        int int34 = uRL32.getDefaultPort();
        java.lang.String str35 = uRL32.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str42 = explodedArchive41.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive41.getEntries();
        java.util.jar.Manifest manifest44 = explodedArchive41.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive41.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.lang.String str47 = uRL46.getPath();
        java.lang.String str48 = uRL46.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str55 = explodedArchive54.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection56 = explodedArchive54.getEntries();
        java.util.jar.Manifest manifest57 = explodedArchive54.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler58 = explodedArchive54.new FilteredURLStreamHandler();
        java.net.URL uRL59 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler58);
        java.net.URL uRL60 = new java.net.URL(uRL46, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler58);
        java.net.URL uRL61 = new java.net.URL(uRL32, "/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler58);
        java.net.URL uRL62 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler58);
        java.lang.String str63 = uRL9.getRef();
        java.net.URLStreamHandler uRLStreamHandler65 = null;
        java.net.URL uRL66 = new java.net.URL(uRL9, "[/hi!://:100/archive]", uRLStreamHandler65);
        java.lang.String str67 = uRL9.toExternalForm();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + ":100" + "'", str15, ":100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "archive" + "'", str42, "archive");
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertNull(manifest44);
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "archive" + "'", str55, "archive");
        org.junit.Assert.assertNotNull(entryCollection56);
        org.junit.Assert.assertNull(manifest57);
        org.junit.Assert.assertEquals(uRL59.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL60.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100/archive");
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/[/hi!://:100/archive]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!://:100" + "'", str67, "hi!://:100");
    }

    @Test
    public void test09908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09908");
        java.io.File file12 = null;
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive21.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap22);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive23.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("/hi!://:100/archive", "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!", (int) (byte) 100, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.net.URL uRL26 = new java.net.URL("/hi!://:100/hi!", "hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", (int) (short) 0, "hi!://[:100]:52hi!", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.net.URL uRL27 = new java.net.URL("hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!", "/[/hi!://:100/archive]", (int) '4', "[:100]:52", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream28 = uRL27.openStream();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertEquals(uRL25.toString(), "/hi!://:100/archive://[hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!]:100hi!://:100");
        org.junit.Assert.assertEquals(uRL26.toString(), "/hi!://:100/hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0hi!://[:100]:52hi!");
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!://[/[/hi!://:100/archive]]:52[:100]:52");
    }

    @Test
    public void test09909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09909");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        boolean boolean5 = explodedArchive0.filtered;
        boolean boolean6 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry9 = explodedArchive0.new FileEntry();
        java.io.File file10 = fileEntry9.getFile();
        java.io.File file11 = fileEntry9.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = fileEntry9.name;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(asciiBytes12);
    }

    @Test
    public void test09910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09910");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL9.toExternalForm();
        java.lang.String str39 = uRL9.getQuery();
        java.lang.String str40 = uRL9.getHost();
        int int41 = uRL9.getPort();
        int int42 = uRL9.getPort();
        java.lang.String str43 = uRL9.getAuthority();
        java.lang.String str44 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str51 = explodedArchive50.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection52 = explodedArchive50.getEntries();
        java.util.jar.Manifest manifest53 = explodedArchive50.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler54 = explodedArchive50.new FilteredURLStreamHandler();
        java.net.URL uRL55 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler54);
        java.lang.String str56 = uRL55.getFile();
        int int57 = uRL55.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str64 = explodedArchive63.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection65 = explodedArchive63.getEntries();
        java.util.jar.Manifest manifest66 = explodedArchive63.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler67 = explodedArchive63.new FilteredURLStreamHandler();
        java.net.URL uRL68 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler67);
        java.lang.String str69 = uRL68.getQuery();
        java.lang.String str70 = uRL68.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str77 = explodedArchive76.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection78 = explodedArchive76.getEntries();
        java.util.jar.Manifest manifest79 = explodedArchive76.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler80 = explodedArchive76.new FilteredURLStreamHandler();
        java.net.URL uRL81 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler80);
        java.net.URL uRL82 = new java.net.URL(uRL68, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler80);
        java.net.URL uRL83 = new java.net.URL(uRL55, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler80);
        java.net.URL uRL84 = new java.net.URL(uRL9, "/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler80);
        java.lang.Object obj85 = null;
        boolean boolean86 = uRL9.equals(obj85);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!://:100" + "'", str38, "hi!://:100");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + ":100" + "'", str43, ":100");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "archive" + "'", str51, "archive");
        org.junit.Assert.assertNotNull(entryCollection52);
        org.junit.Assert.assertNull(manifest53);
        org.junit.Assert.assertEquals(uRL55.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "archive" + "'", str64, "archive");
        org.junit.Assert.assertNotNull(entryCollection65);
        org.junit.Assert.assertNull(manifest66);
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "archive" + "'", str77, "archive");
        org.junit.Assert.assertNotNull(entryCollection78);
        org.junit.Assert.assertNull(manifest79);
        org.junit.Assert.assertEquals(uRL81.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL82.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL83.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL84.toString(), "hi!://:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test09911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09911");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive4.entries = asciiBytesMap6;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive4.manifest = manifest8;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL11 = new java.net.URL("hi!://:100/archive", "/archive", (int) (byte) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler10);
        int int12 = uRL11.getDefaultPort();
        java.net.URL uRL14 = new java.net.URL(uRL11, "hi!://:100/archive:///archive:0hi!://:100");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str20 = explodedArchive19.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection21 = explodedArchive19.getEntries();
        java.util.jar.Manifest manifest22 = explodedArchive19.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str28 = explodedArchive27.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection29 = explodedArchive27.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler30 = explodedArchive27.new FilteredURLStreamHandler();
        java.net.URL uRL31 = new java.net.URL(uRL24, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler30);
        java.lang.String str32 = uRL31.toExternalForm();
        java.lang.String str33 = uRL31.getPath();
        java.lang.String str34 = uRL31.getProtocol();
        int int35 = uRL31.getDefaultPort();
        boolean boolean36 = uRL14.sameFile(uRL31);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertEquals(uRL11.toString(), "hi!://:100/archive:///archive:1hi!://:100/archive");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertEquals(uRL14.toString(), "hi!://:100/archive:///archive:1hi!://:100/hi!://:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "archive" + "'", str20, "archive");
        org.junit.Assert.assertNotNull(entryCollection21);
        org.junit.Assert.assertNull(manifest22);
        org.junit.Assert.assertEquals(uRL24.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "archive" + "'", str28, "archive");
        org.junit.Assert.assertNotNull(entryCollection29);
        org.junit.Assert.assertEquals(uRL31.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!://:100/hi!" + "'", str32, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "/hi!" + "'", str33, "/hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test09912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09912");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive4.new FileEntry();
        boolean boolean9 = explodedArchive4.filtered;
        boolean boolean10 = explodedArchive4.filtered;
        java.util.jar.Manifest manifest11 = null;
        explodedArchive4.manifest = manifest11;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection13 = explodedArchive4.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive4.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL("hi!", "hi!://:100/hi!://:100/hi!://:100/hi!://:100", 10, "[hi!://:100/:100]", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        int int17 = uRL16.getPort();
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(entryCollection13);
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://[hi!://:100/hi!://:100/hi!://:100/hi!://:100]:10[hi!://:100/:100]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10 + "'", int17 == 10);
    }

    @Test
    public void test09913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09913");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getAuthority();
        java.lang.String str25 = uRL9.getPath();
        int int26 = uRL9.getDefaultPort();
        java.lang.String str27 = uRL9.getAuthority();
        java.lang.String str28 = uRL9.getQuery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + ":100" + "'", str27, ":100");
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test09914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09914");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        boolean boolean5 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        boolean boolean8 = explodedArchive0.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive0.entries;
        java.io.File file10 = null;
        java.io.File file11 = null;
        java.io.File file12 = null;
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        explodedArchive14.filtered = false;
        java.util.jar.Manifest manifest20 = explodedArchive14.manifest;
        java.io.File file21 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file23 = explodedArchive22.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive22.getNestedArchives(entryFilter24);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive22.getNestedArchives(entryFilter26);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = explodedArchive22.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file21, asciiBytesMap28);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive29.entries;
        explodedArchive14.entries = asciiBytesMap30;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap30);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap30);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap30);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap30);
        explodedArchive0.entries = asciiBytesMap30;
        java.lang.String str37 = explodedArchive0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNotNull(asciiBytesMap28);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
    }

    @Test
    public void test09915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09915");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = explodedArchive8.new FileEntry();
        java.util.jar.Manifest manifest11 = explodedArchive8.getManifest();
        java.util.jar.Manifest manifest12 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive13.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive13.getNestedArchives(entryFilter18);
        java.util.jar.Manifest manifest20 = null;
        explodedArchive13.manifest = manifest20;
        explodedArchive13.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = explodedArchive13.entries;
        explodedArchive8.entries = asciiBytesMap24;
        explodedArchive0.entries = asciiBytesMap24;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter27 = null;
        org.springframework.boot.loader.archive.Archive archive28 = explodedArchive0.getFilteredArchive(entryRenameFilter27);
        boolean boolean29 = explodedArchive0.filtered;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertNull(manifest12);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap24);
        org.junit.Assert.assertNotNull(archive28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test09916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09916");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.lang.String str5 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive10.getNestedArchives(entryFilter17);
        java.io.File file19 = null;
        java.io.File file20 = null;
        java.io.File file21 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file23 = explodedArchive22.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive22.getNestedArchives(entryFilter24);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive22.getNestedArchives(entryFilter26);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = explodedArchive22.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file21, asciiBytesMap28);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive29.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file20, asciiBytesMap30);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file19, asciiBytesMap30);
        explodedArchive10.entries = asciiBytesMap30;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive10.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest35 = explodedArchive10.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str37 = explodedArchive36.toString();
        java.util.jar.Manifest manifest38 = null;
        explodedArchive36.manifest = manifest38;
        java.util.jar.Manifest manifest40 = explodedArchive36.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap41 = explodedArchive36.entries;
        explodedArchive10.entries = asciiBytesMap41;
        explodedArchive0.entries = asciiBytesMap41;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap44 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter45 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList46 = explodedArchive0.getNestedArchives(entryFilter45);
        java.io.File file47 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry48 = explodedArchive0.new FileEntry();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNotNull(asciiBytesMap28);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
        org.junit.Assert.assertNull(manifest40);
        org.junit.Assert.assertNotNull(asciiBytesMap41);
        org.junit.Assert.assertNotNull(asciiBytesMap44);
        org.junit.Assert.assertNotNull(archiveList46);
        org.junit.Assert.assertNull(file47);
    }

    @Test
    public void test09917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09917");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str3 = explodedArchive2.toString();
        boolean boolean4 = explodedArchive2.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive2.getFilteredArchive(entryRenameFilter5);
        explodedArchive2.filtered = true;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive2.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter13 = null;
        org.springframework.boot.loader.archive.Archive archive14 = explodedArchive12.getFilteredArchive(entryRenameFilter13);
        java.io.File file15 = null;
        java.io.File file16 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file18 = explodedArchive17.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive17.getNestedArchives(entryFilter19);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive17.getNestedArchives(entryFilter21);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = explodedArchive17.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file16, asciiBytesMap23);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive24.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file15, asciiBytesMap25);
        boolean boolean27 = explodedArchive26.filtered;
        explodedArchive26.filtered = false;
        boolean boolean30 = explodedArchive26.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap31 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive26.getNestedArchives(entryFilter32);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive26.entries;
        explodedArchive12.entries = asciiBytesMap34;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive12.getNestedArchives(entryFilter36);
        java.io.File file38 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive12.buildEntries(file38, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "archive" + "'", str3, "archive");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(archive14);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(asciiBytesMap23);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertNotNull(archiveList37);
    }

    @Test
    public void test09918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09918");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        boolean boolean9 = explodedArchive8.filtered;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = explodedArchive8.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test09919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09919");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]://[hi!://:100/hi!://hi!:1hi!]:100archive://:10archive", "hi!://:100/hi!://:100/hi!://:100", (int) (byte) 10, "/hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]://[hi!://:100/hi!://hi!:1hi!]:100archive://:10archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test09920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09920");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry12.name;
        java.io.File file14 = fileEntry12.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes15 = fileEntry12.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes16 = fileEntry12.getName();
        java.io.File file17 = null;
        fileEntry12.file = file17;
        java.io.File file19 = null;
        fileEntry12.file = file19;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(asciiBytes13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(asciiBytes15);
        org.junit.Assert.assertNull(asciiBytes16);
    }

    @Test
    public void test09921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09921");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getFile();
        int int24 = uRL22.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getQuery();
        java.lang.String str37 = uRL35.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str44 = explodedArchive43.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive43.getEntries();
        java.util.jar.Manifest manifest46 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.net.URL uRL49 = new java.net.URL(uRL35, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.net.URL uRL50 = new java.net.URL(uRL22, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.lang.String str51 = uRL22.toExternalForm();
        boolean boolean52 = uRL9.sameFile(uRL22);
        java.lang.String str53 = uRL9.getFile();
        java.lang.String str54 = uRL9.getUserInfo();
        java.lang.String str55 = uRL9.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "archive" + "'", str44, "archive");
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!://:100" + "'", str51, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!://:100" + "'", str55, "hi!://:100");
    }

    @Test
    public void test09922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09922");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL(uRL13, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        java.net.URL uRL21 = new java.net.URL("hi!://:100/[/hi!://:100/archive]", "", (int) 'a', "://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI22 = uRL21.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100/[/hi!://:100/archive]://:97://[archive://:10archive]:100archive://:10archive");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertEquals(uRL20.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100/[/hi!://:100/archive]://:97://[archive://:10archive]:100archive://:10archive");
    }

    @Test
    public void test09923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09923");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive8.getEntries();
        java.io.File file10 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive8.getNestedArchives(entryFilter11);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection13 = explodedArchive8.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter14 = null;
        org.springframework.boot.loader.archive.Archive archive15 = explodedArchive8.getFilteredArchive(entryRenameFilter14);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter16 = null;
        org.springframework.boot.loader.archive.Archive archive17 = explodedArchive8.getFilteredArchive(entryRenameFilter16);
        java.io.File file18 = null;
        explodedArchive8.root = file18;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(entryCollection13);
        org.junit.Assert.assertNotNull(archive15);
        org.junit.Assert.assertNotNull(archive17);
    }

    @Test
    public void test09924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09924");
        java.lang.String str1 = java.net.URLConnection.guessContentTypeFromName("/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!://:100/hi!://:100/:100");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test09925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09925");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive1.getNestedArchives(entryFilter8);
        java.io.File file10 = null;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap21);
        explodedArchive1.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap21);
        java.util.jar.Manifest manifest26 = null;
        explodedArchive25.manifest = manifest26;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry28 = explodedArchive25.new FileEntry();
        java.util.jar.Manifest manifest29 = explodedArchive25.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter30 = null;
        org.springframework.boot.loader.archive.Archive archive31 = explodedArchive25.getFilteredArchive(entryRenameFilter30);
        java.lang.String str32 = archive31.toString();
        java.lang.Class<?> wildcardClass33 = archive31.getClass();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertNotNull(archive31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "archive" + "'", str32, "archive");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test09926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09926");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.lang.String str17 = uRL16.getUserInfo();
        java.lang.String str18 = uRL16.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str20 = explodedArchive19.toString();
        boolean boolean21 = explodedArchive19.filtered;
        java.io.File file22 = explodedArchive19.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str24 = explodedArchive23.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry25 = explodedArchive23.new FileEntry();
        java.util.jar.Manifest manifest26 = explodedArchive23.getManifest();
        java.util.jar.Manifest manifest27 = explodedArchive23.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file29 = explodedArchive28.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive28.getNestedArchives(entryFilter30);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive28.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive28.getNestedArchives(entryFilter33);
        java.util.jar.Manifest manifest35 = null;
        explodedArchive28.manifest = manifest35;
        explodedArchive28.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive28.entries;
        explodedArchive23.entries = asciiBytesMap39;
        explodedArchive19.entries = asciiBytesMap39;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive19.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes43 = fileEntry42.name;
        java.lang.Class<?> wildcardClass44 = fileEntry42.getClass();
        java.lang.Class[] classArray45 = new java.lang.Class[] { wildcardClass44 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj46 = uRL16.getContent(classArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "/hi!" + "'", str18, "/hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "archive" + "'", str20, "archive");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "archive" + "'", str24, "archive");
        org.junit.Assert.assertNull(manifest26);
        org.junit.Assert.assertNull(manifest27);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertNull(asciiBytes43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(classArray45);
    }

    @Test
    public void test09927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09927");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        java.io.File file6 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = null;
        fileEntry4.name = asciiBytes7;
        java.io.File file9 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = fileEntry4.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = null;
        fileEntry4.name = asciiBytes12;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(asciiBytes10);
        org.junit.Assert.assertNull(asciiBytes11);
    }

    @Test
    public void test09928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09928");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes6 = null;
        fileEntry4.name = asciiBytes6;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry4.getName();
        java.io.File file10 = null;
        fileEntry4.file = file10;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry4.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = fileEntry4.getName();
        java.io.File file15 = null;
        fileEntry4.file = file15;
        java.io.File file17 = null;
        fileEntry4.file = file17;
        java.io.File file19 = fileEntry4.getFile();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(asciiBytes9);
        org.junit.Assert.assertNull(asciiBytes12);
        org.junit.Assert.assertNull(asciiBytes13);
        org.junit.Assert.assertNull(asciiBytes14);
        org.junit.Assert.assertNull(file19);
    }

    @Test
    public void test09929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09929");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive0.getNestedArchives(entryFilter8);
        java.util.jar.Manifest manifest10 = explodedArchive0.getManifest();
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        explodedArchive12.filtered = false;
        java.util.jar.Manifest manifest20 = null;
        explodedArchive12.manifest = manifest20;
        java.io.File file22 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive23.getNestedArchives(entryFilter25);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive23.getNestedArchives(entryFilter27);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive23.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive23.getNestedArchives(entryFilter30);
        java.io.File file32 = null;
        java.io.File file33 = null;
        java.io.File file34 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter37 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList38 = explodedArchive35.getNestedArchives(entryFilter37);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive35.getNestedArchives(entryFilter39);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap41 = explodedArchive35.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file34, asciiBytesMap41);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap43 = explodedArchive42.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive(file33, asciiBytesMap43);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive(file32, asciiBytesMap43);
        explodedArchive23.entries = asciiBytesMap43;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap43);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap48 = explodedArchive47.entries;
        explodedArchive12.entries = asciiBytesMap48;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap48);
        explodedArchive0.entries = asciiBytesMap48;
        java.util.jar.Manifest manifest52 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter53 = null;
        org.springframework.boot.loader.archive.Archive archive54 = explodedArchive0.getFilteredArchive(entryRenameFilter53);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap55 = explodedArchive0.entries;
        boolean boolean56 = explodedArchive0.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap57 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry58 = explodedArchive0.new FileEntry();
        java.io.File file59 = fileEntry58.file;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean60 = fileEntry58.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNotNull(asciiBytesMap29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(archiveList38);
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(asciiBytesMap41);
        org.junit.Assert.assertNotNull(asciiBytesMap43);
        org.junit.Assert.assertNotNull(asciiBytesMap48);
        org.junit.Assert.assertNull(manifest52);
        org.junit.Assert.assertNotNull(archive54);
        org.junit.Assert.assertNotNull(asciiBytesMap55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap57);
        org.junit.Assert.assertNull(file59);
    }

    @Test
    public void test09930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09930");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL37.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive40.getNestedArchives(entryFilter42);
        explodedArchive40.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive40.getNestedArchives(entryFilter46);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler48 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL49 = new java.net.URL(uRL37, "", (java.net.URLStreamHandler) filteredURLStreamHandler48);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str55 = explodedArchive54.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection56 = explodedArchive54.getEntries();
        java.util.jar.Manifest manifest57 = explodedArchive54.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler58 = explodedArchive54.new FilteredURLStreamHandler();
        java.net.URL uRL59 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler58);
        java.lang.String str60 = uRL59.getHost();
        java.lang.String str61 = uRL59.getUserInfo();
        java.lang.String str62 = uRL59.getRef();
        boolean boolean63 = uRL37.sameFile(uRL59);
        java.net.URL uRL65 = new java.net.URL(uRL37, "/hi!://:100");
        java.lang.String str66 = uRL65.getPath();
        java.net.URL uRL68 = new java.net.URL(uRL65, "/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        java.lang.String str69 = uRL68.getHost();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/archive" + "'", str38, "/archive");
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "archive" + "'", str55, "archive");
        org.junit.Assert.assertNotNull(entryCollection56);
        org.junit.Assert.assertNull(manifest57);
        org.junit.Assert.assertEquals(uRL59.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "/hi!://:100" + "'", str66, "/hi!://:100");
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
    }

    @Test
    public void test09931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09931");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.jar.Manifest manifest6 = explodedArchive0.getManifest();
        java.io.File file7 = explodedArchive0.root;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNull(file7);
    }

    @Test
    public void test09932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09932");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        java.io.File file6 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry4.getName();
        java.io.File file9 = null;
        fileEntry4.file = file9;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = null;
        fileEntry4.name = asciiBytes12;
        java.io.File file14 = null;
        fileEntry4.file = file14;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes16 = fileEntry4.getName();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = fileEntry4.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(asciiBytes7);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(asciiBytes11);
        org.junit.Assert.assertNull(asciiBytes16);
    }

    @Test
    public void test09933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09933");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = null;
        explodedArchive1.entries = asciiBytesMap5;
        java.io.File file7 = explodedArchive1.root;
        java.io.File file8 = explodedArchive1.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        explodedArchive1.entries = asciiBytesMap15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap15);
        java.util.jar.Manifest manifest18 = null;
        explodedArchive17.manifest = manifest18;
        explodedArchive17.filtered = true;
        java.io.File file22 = null;
        explodedArchive17.root = file22;
        java.util.jar.Manifest manifest24 = explodedArchive17.getManifest();
        java.util.jar.Manifest manifest25 = explodedArchive17.getManifest();
        java.util.jar.Manifest manifest26 = explodedArchive17.manifest;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertNull(manifest26);
    }

    @Test
    public void test09934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09934");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("hi!://:100/[hi!://:100/hi!]:10", "://[archive://:10archive]:100archive://:10archive", 97, "hi!://:100/[hi!://:100/hi!://:100/hi!://:100/archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://:100/[hi!://:100/hi!]:10");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test09935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09935");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        int int24 = uRL23.getPort();
        int int25 = uRL23.getDefaultPort();
        java.lang.String str26 = uRL23.getQuery();
        int int27 = uRL23.getDefaultPort();
        java.lang.String str28 = uRL23.getRef();
        java.lang.String str29 = uRL23.getHost();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
    }

    @Test
    public void test09936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09936");
        java.lang.String str1 = java.net.URLConnection.getDefaultRequestProperty("hi!://:100/[hi!://:100/hi!]:100");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test09937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09937");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        boolean boolean12 = explodedArchive11.filtered;
        explodedArchive11.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive11.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file18 = explodedArchive17.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive17.getNestedArchives(entryFilter19);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry21 = explodedArchive17.new FileEntry();
        java.lang.String str22 = explodedArchive17.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = explodedArchive17.entries;
        java.util.jar.Manifest manifest24 = null;
        explodedArchive17.manifest = manifest24;
        java.io.File file26 = null;
        explodedArchive17.root = file26;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection28 = explodedArchive17.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive17.entries;
        explodedArchive11.entries = asciiBytesMap29;
        java.io.File file31 = null;
        explodedArchive11.root = file31;
        boolean boolean33 = explodedArchive11.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive11.entries;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap23);
        org.junit.Assert.assertNotNull(entryCollection28);
        org.junit.Assert.assertNotNull(asciiBytesMap29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
    }

    @Test
    public void test09938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09938");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL(":100://[archive://:10archive]hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", "[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]", "hi!://hi!:1/[://[archive://:10archive]:100archive://:10archive]:0");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: :100://[archive://:10archive]hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test09939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09939");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("[hi!://:100/:100]:100", "hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", (int) '4', "archive://:10:100://:32/archive://[hi!://:100/hi!]:1/hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: [hi!://:100/:100]:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test09940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09940");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive4.getNestedArchives(entryFilter8);
        java.lang.String str10 = explodedArchive4.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler11 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL12 = new java.net.URL("archive", "", (int) (byte) 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler11);
        java.lang.String str13 = uRL12.getFile();
        int int14 = uRL12.getDefaultPort();
        java.lang.String str15 = uRL12.toExternalForm();
        java.lang.String str16 = uRL12.getProtocol();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj17 = uRL12.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "archive" + "'", str10, "archive");
        org.junit.Assert.assertEquals(uRL12.toString(), "archive://:0hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100/hi!" + "'", str13, "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "archive://:0hi!://:100/hi!" + "'", str15, "archive://:0hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "archive" + "'", str16, "archive");
    }

    @Test
    public void test09941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09941");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive2.getNestedArchives(entryFilter9);
        java.io.File file11 = null;
        java.io.File file12 = null;
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive21.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap22);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap22);
        explodedArchive2.entries = asciiBytesMap22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap22);
        java.util.jar.Manifest manifest27 = null;
        explodedArchive26.manifest = manifest27;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter29 = null;
        org.springframework.boot.loader.archive.Archive archive30 = explodedArchive26.getFilteredArchive(entryRenameFilter29);
        java.io.File file31 = null;
        explodedArchive26.root = file31;
        java.io.File file33 = null;
        java.io.File file34 = null;
        java.io.File file35 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file37 = explodedArchive36.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter38 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList39 = explodedArchive36.getNestedArchives(entryFilter38);
        explodedArchive36.filtered = false;
        java.util.jar.Manifest manifest42 = explodedArchive36.manifest;
        java.io.File file43 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive44.getNestedArchives(entryFilter46);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter48 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList49 = explodedArchive44.getNestedArchives(entryFilter48);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap50 = explodedArchive44.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive(file43, asciiBytesMap50);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap52 = explodedArchive51.entries;
        explodedArchive36.entries = asciiBytesMap52;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file35, asciiBytesMap52);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive(file34, asciiBytesMap52);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive(file33, asciiBytesMap52);
        explodedArchive26.entries = asciiBytesMap52;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap58 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap58);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler60 = explodedArchive59.new FilteredURLStreamHandler();
        java.io.File file61 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive59.buildEntries(file61, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNotNull(archive30);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(archiveList39);
        org.junit.Assert.assertNull(manifest42);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertNotNull(archiveList49);
        org.junit.Assert.assertNotNull(asciiBytesMap50);
        org.junit.Assert.assertNotNull(asciiBytesMap52);
        org.junit.Assert.assertNotNull(asciiBytesMap58);
    }

    @Test
    public void test09942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09942");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive8.entries;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive8.getFilteredArchive(entryRenameFilter10);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive8.getNestedArchives(entryFilter12);
        java.util.jar.Manifest manifest14 = explodedArchive8.manifest;
        explodedArchive8.filtered = false;
        explodedArchive8.filtered = true;
        explodedArchive8.filtered = false;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(archive11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNull(manifest14);
    }

    @Test
    public void test09943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09943");
        java.net.URLConnection.setDefaultRequestProperty("hi!://:100/://[hi!://:100/:100]:100/hi!://:100", "[hi!://:100/hi!://:100/archive]");
    }

    @Test
    public void test09944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09944");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = null;
        explodedArchive1.entries = asciiBytesMap5;
        java.io.File file7 = explodedArchive1.root;
        java.io.File file8 = explodedArchive1.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        explodedArchive1.entries = asciiBytesMap15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap15);
        java.io.File file18 = null;
        explodedArchive17.root = file18;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry20 = explodedArchive17.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes21 = fileEntry20.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes22 = fileEntry20.getName();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNull(asciiBytes21);
        org.junit.Assert.assertNull(asciiBytes22);
    }

    @Test
    public void test09945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09945");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getProtocol();
        java.lang.String str14 = uRL9.getPath();
        java.lang.String str15 = uRL9.getAuthority();
        java.lang.String str16 = uRL9.getAuthority();
        java.lang.String str17 = uRL9.getUserInfo();
        int int18 = uRL9.getDefaultPort();
        java.lang.String str19 = uRL9.getHost();
        int int20 = uRL9.getDefaultPort();
        java.lang.String str21 = uRL9.getFile();
        java.lang.String str22 = uRL9.getFile();
        int int23 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str29 = explodedArchive28.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive28.getEntries();
        java.util.jar.Manifest manifest31 = explodedArchive28.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL33 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.lang.String str34 = uRL33.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str37 = explodedArchive36.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection38 = explodedArchive36.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler39 = explodedArchive36.new FilteredURLStreamHandler();
        java.net.URL uRL40 = new java.net.URL(uRL33, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler39);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection47 = explodedArchive45.getEntries();
        java.util.jar.Manifest manifest48 = explodedArchive45.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.lang.String str51 = uRL50.getFile();
        int int52 = uRL50.getDefaultPort();
        java.lang.String str53 = uRL50.getRef();
        boolean boolean54 = uRL33.sameFile(uRL50);
        java.lang.String str55 = uRL50.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive57.filtered = true;
        java.io.File file60 = null;
        explodedArchive57.root = file60;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection62 = explodedArchive57.getEntries();
        java.util.jar.Manifest manifest63 = null;
        explodedArchive57.manifest = manifest63;
        boolean boolean65 = explodedArchive57.filtered;
        java.util.jar.Manifest manifest66 = null;
        explodedArchive57.manifest = manifest66;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler68 = explodedArchive57.new FilteredURLStreamHandler();
        java.net.URL uRL69 = new java.net.URL(uRL50, "[://[archive://:10archive]:100archive://:10archive]:100", (java.net.URLStreamHandler) filteredURLStreamHandler68);
        int int70 = uRL69.getDefaultPort();
        boolean boolean71 = uRL9.sameFile(uRL69);
        java.lang.String str72 = uRL69.getPath();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + ":100" + "'", str15, ":100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + ":100" + "'", str16, ":100");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
        org.junit.Assert.assertNotNull(entryCollection38);
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertNotNull(entryCollection47);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertNotNull(entryCollection62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals(uRL69.toString(), "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "/[://[archive://:10archive]:100archive://:10archive]:100" + "'", str72, "/[://[archive://:10archive]:100archive://:10archive]:100");
    }

    @Test
    public void test09946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09946");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        java.io.File file5 = explodedArchive0.root;
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file8 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap15);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive16.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler18 = explodedArchive16.new FilteredURLStreamHandler();
        java.lang.String str19 = explodedArchive16.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive16.getNestedArchives(entryFilter20);
        java.io.File file22 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive23.getNestedArchives(entryFilter25);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive23.getNestedArchives(entryFilter27);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive23.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive23.getNestedArchives(entryFilter30);
        java.io.File file32 = null;
        java.io.File file33 = null;
        java.io.File file34 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter37 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList38 = explodedArchive35.getNestedArchives(entryFilter37);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive35.getNestedArchives(entryFilter39);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap41 = explodedArchive35.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file34, asciiBytesMap41);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap43 = explodedArchive42.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive(file33, asciiBytesMap43);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive(file32, asciiBytesMap43);
        explodedArchive23.entries = asciiBytesMap43;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap43);
        java.util.jar.Manifest manifest48 = null;
        explodedArchive47.manifest = manifest48;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection50 = explodedArchive47.getEntries();
        java.io.File file51 = null;
        explodedArchive47.root = file51;
        java.io.File file53 = null;
        explodedArchive47.root = file53;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap55 = explodedArchive47.entries;
        explodedArchive16.entries = asciiBytesMap55;
        explodedArchive0.entries = asciiBytesMap55;
        boolean boolean58 = explodedArchive0.filtered;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "archive" + "'", str19, "archive");
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNotNull(asciiBytesMap29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(archiveList38);
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(asciiBytesMap41);
        org.junit.Assert.assertNotNull(asciiBytesMap43);
        org.junit.Assert.assertNotNull(entryCollection50);
        org.junit.Assert.assertNotNull(asciiBytesMap55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test09947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09947");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        java.io.File file5 = explodedArchive0.root;
        java.util.jar.Manifest manifest6 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.util.jar.Manifest manifest11 = null;
        explodedArchive0.manifest = manifest11;
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest15 = null;
        explodedArchive0.manifest = manifest15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file18 = explodedArchive17.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive17.getNestedArchives(entryFilter19);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive17.getNestedArchives(entryFilter21);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = explodedArchive17.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive17.getNestedArchives(entryFilter24);
        java.io.File file26 = null;
        explodedArchive17.root = file26;
        java.io.File file28 = null;
        explodedArchive17.root = file28;
        java.util.jar.Manifest manifest30 = explodedArchive17.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter31 = null;
        org.springframework.boot.loader.archive.Archive archive32 = explodedArchive17.getFilteredArchive(entryRenameFilter31);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter33 = null;
        org.springframework.boot.loader.archive.Archive archive34 = explodedArchive17.getFilteredArchive(entryRenameFilter33);
        explodedArchive17.filtered = false;
        java.io.File file37 = explodedArchive17.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive17.entries;
        explodedArchive0.entries = asciiBytesMap38;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str40 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(asciiBytesMap23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNull(manifest30);
        org.junit.Assert.assertNotNull(archive32);
        org.junit.Assert.assertNotNull(archive34);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
    }

    @Test
    public void test09948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09948");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getHost();
        int int24 = uRL21.getPort();
        boolean boolean25 = uRL9.sameFile(uRL21);
        int int26 = uRL9.getPort();
        java.lang.String str27 = uRL9.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive32.getNestedArchives(entryFilter34);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection36 = explodedArchive32.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap37 = explodedArchive32.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL("/archive", "hi!://:100/hi!", (int) (byte) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection47 = explodedArchive45.getEntries();
        java.util.jar.Manifest manifest48 = explodedArchive45.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.lang.String str51 = uRL50.getFile();
        int int52 = uRL50.getDefaultPort();
        java.lang.String str53 = uRL50.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str60 = explodedArchive59.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection61 = explodedArchive59.getEntries();
        java.util.jar.Manifest manifest62 = explodedArchive59.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive59.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.lang.String str65 = uRL64.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str72 = explodedArchive71.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection73 = explodedArchive71.getEntries();
        java.util.jar.Manifest manifest74 = explodedArchive71.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler75 = explodedArchive71.new FilteredURLStreamHandler();
        java.net.URL uRL76 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler75);
        java.lang.String str77 = uRL76.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str80 = explodedArchive79.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection81 = explodedArchive79.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler82 = explodedArchive79.new FilteredURLStreamHandler();
        java.net.URL uRL83 = new java.net.URL(uRL76, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler82);
        java.net.URL uRL84 = new java.net.URL(uRL64, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler82);
        java.net.URL uRL85 = new java.net.URL(uRL50, "/archive", (java.net.URLStreamHandler) filteredURLStreamHandler82);
        java.net.URL uRL86 = new java.net.URL(uRL39, "/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler82);
        boolean boolean87 = uRL9.sameFile(uRL39);
        java.lang.String str88 = uRL39.getHost();
        java.lang.String str89 = uRL39.getRef();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI90 = uRL39.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in path at index 11: /archive://[hi!://:100/hi!]:1hi!://:100/archive");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + ":100" + "'", str27, ":100");
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(entryCollection36);
        org.junit.Assert.assertNotNull(asciiBytesMap37);
        org.junit.Assert.assertEquals(uRL39.toString(), "/archive://[hi!://:100/hi!]:1hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertNotNull(entryCollection47);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "archive" + "'", str60, "archive");
        org.junit.Assert.assertNotNull(entryCollection61);
        org.junit.Assert.assertNull(manifest62);
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "archive" + "'", str72, "archive");
        org.junit.Assert.assertNotNull(entryCollection73);
        org.junit.Assert.assertNull(manifest74);
        org.junit.Assert.assertEquals(uRL76.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "archive" + "'", str80, "archive");
        org.junit.Assert.assertNotNull(entryCollection81);
        org.junit.Assert.assertEquals(uRL83.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL84.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL85.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL86.toString(), "/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[hi!://:100/hi!]" + "'", str88, "[hi!://:100/hi!]");
        org.junit.Assert.assertNull(str89);
    }

    @Test
    public void test09949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09949");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive1.getNestedArchives(entryFilter8);
        java.io.File file10 = null;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap21);
        explodedArchive1.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap21);
        java.util.jar.Manifest manifest26 = null;
        explodedArchive25.manifest = manifest26;
        java.io.File file28 = explodedArchive25.root;
        java.util.jar.Manifest manifest29 = explodedArchive25.getManifest();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive25.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter31 = null;
        org.springframework.boot.loader.archive.Archive archive32 = explodedArchive25.getFilteredArchive(entryRenameFilter31);
        java.io.File file33 = null;
        explodedArchive25.root = file33;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertNotNull(archive32);
    }

    @Test
    public void test09950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09950");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        boolean boolean5 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection7 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest8 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive0.getNestedArchives(entryFilter9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = null;
        explodedArchive0.entries = asciiBytesMap11;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(entryCollection7);
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNotNull(archiveList10);
    }

    @Test
    public void test09951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09951");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        boolean boolean5 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection7 = explodedArchive0.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive0.entries;
        java.lang.String str9 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = explodedArchive0.new FileEntry();
        java.io.File file11 = fileEntry10.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = null;
        fileEntry10.name = asciiBytes12;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = fileEntry10.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes15 = fileEntry10.name;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = fileEntry10.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(entryCollection7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(asciiBytes14);
        org.junit.Assert.assertNull(asciiBytes15);
    }

    @Test
    public void test09952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09952");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/[hi!://:100/hi!://:100/hi!://:100/archive", "/hi!://:100", 100, "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/[/:100]:0");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /[hi!://:100/hi!://:100/hi!://:100/archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test09953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09953");
        java.net.URLConnection.setDefaultRequestProperty("/[/:100]:0", "");
    }

    @Test
    public void test09954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09954");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        boolean boolean2 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest3 = explodedArchive0.manifest;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection4 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest5 = null;
        explodedArchive0.manifest = manifest5;
        java.io.File file7 = null;
        explodedArchive0.root = file7;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(manifest3);
        org.junit.Assert.assertNotNull(entryCollection4);
    }

    @Test
    public void test09955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09955");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        java.util.jar.Manifest manifest15 = explodedArchive12.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL17 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler16);
        java.lang.String str18 = uRL17.getQuery();
        java.lang.String str19 = uRL17.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str26 = explodedArchive25.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection27 = explodedArchive25.getEntries();
        java.util.jar.Manifest manifest28 = explodedArchive25.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive25.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.net.URL uRL31 = new java.net.URL(uRL17, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.net.URL uRL32 = new java.net.URL("/hi!://:100", "archive", (int) (short) 1, "/archive", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.net.URL uRL33 = new java.net.URL(":100", "[hi!://:100/hi!]", (int) (short) 100, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.lang.String str34 = uRL33.toString();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "archive" + "'", str26, "archive");
        org.junit.Assert.assertNotNull(entryCollection27);
        org.junit.Assert.assertNull(manifest28);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL31.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL32.toString(), "/hi!://:100://archive:1/archive");
        org.junit.Assert.assertEquals(uRL33.toString(), ":100://[hi!://:100/hi!]:100hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + ":100://[hi!://:100/hi!]:100hi!://:100/archive" + "'", str34, ":100://[hi!://:100/hi!]:100hi!://:100/archive");
    }

    @Test
    public void test09956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09956");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        java.io.File file3 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive4.getNestedArchives(entryFilter8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive4.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file3, asciiBytesMap10);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = explodedArchive11.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap12);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap12);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive15.getNestedArchives(entryFilter16);
        java.util.jar.Manifest manifest18 = explodedArchive15.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive15.new FilteredURLStreamHandler();
        java.io.File file20 = explodedArchive15.root;
        boolean boolean21 = explodedArchive15.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter22 = null;
        org.springframework.boot.loader.archive.Archive archive23 = explodedArchive15.getFilteredArchive(entryRenameFilter22);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(asciiBytesMap12);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(archive23);
    }

    @Test
    public void test09957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09957");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!://:100/[hi!://:100/hi!]", "[hi!://:100/[hi!://:100/hi!]]", (-1), "/:52", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.toExternalForm();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100/[hi!://:100/hi!]://[hi!://:100/[hi!://:100/hi!]]/:52");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!://:100/[hi!://:100/hi!]://[hi!://:100/[hi!://:100/hi!]]/:52" + "'", str10, "hi!://:100/[hi!://:100/hi!]://[hi!://:100/[hi!://:100/hi!]]/:52");
    }

    @Test
    public void test09958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09958");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        boolean boolean5 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection7 = explodedArchive0.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive0.entries;
        java.lang.String str9 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = explodedArchive0.new FileEntry();
        java.io.File file11 = fileEntry10.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = null;
        fileEntry10.name = asciiBytes12;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = fileEntry10.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes15 = fileEntry10.getName();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(entryCollection7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(asciiBytes14);
        org.junit.Assert.assertNull(asciiBytes15);
    }

    @Test
    public void test09959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09959");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getPath();
        java.lang.String str15 = uRL13.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL27 = new java.net.URL(uRL13, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str28 = uRL27.getAuthority();
        java.lang.String str29 = uRL27.getRef();
        int int30 = uRL27.getDefaultPort();
        java.lang.String str31 = uRL27.getHost();
        java.lang.String str32 = uRL27.getUserInfo();
        java.lang.String str33 = uRL27.toExternalForm();
        java.net.URL uRL35 = new java.net.URL(uRL27, "[hi!://:100/hi!:1]");
        java.io.File file41 = null;
        java.io.File file42 = null;
        java.io.File file43 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive44.getNestedArchives(entryFilter46);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter48 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList49 = explodedArchive44.getNestedArchives(entryFilter48);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap50 = explodedArchive44.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive(file43, asciiBytesMap50);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap52 = explodedArchive51.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file42, asciiBytesMap52);
        explodedArchive53.filtered = true;
        java.io.File file56 = null;
        explodedArchive53.root = file56;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection58 = explodedArchive53.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection59 = explodedArchive53.getEntries();
        java.util.jar.Manifest manifest60 = null;
        explodedArchive53.manifest = manifest60;
        java.io.File file62 = explodedArchive53.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap63 = explodedArchive53.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive(file41, asciiBytesMap63);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter65 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList66 = explodedArchive64.getNestedArchives(entryFilter65);
        explodedArchive64.filtered = true;
        java.io.File file69 = null;
        explodedArchive64.root = file69;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler71 = explodedArchive64.new FilteredURLStreamHandler();
        java.net.URL uRL72 = new java.net.URL("/hi!:1", "/:100", 10, "hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", (java.net.URLStreamHandler) filteredURLStreamHandler71);
        java.net.URL uRL73 = new java.net.URL(uRL27, "[:100]:52", (java.net.URLStreamHandler) filteredURLStreamHandler71);
        java.net.URL uRL74 = new java.net.URL("/archive:///archive:0hi!://:100://[hi!://:100/archive]:100/archive:///archive:0hi!://:100", "[hi!://:100/hi!]", 52, "/[hi!://:100/hi!://:100/hi!://:100/archive://[/hi!:1]:1", (java.net.URLStreamHandler) filteredURLStreamHandler71);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + ":100" + "'", str28, ":100");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!://:100/hi!://:100" + "'", str33, "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100/hi!://[hi!://:100/hi!:1]");
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertNotNull(archiveList49);
        org.junit.Assert.assertNotNull(asciiBytesMap50);
        org.junit.Assert.assertNotNull(asciiBytesMap52);
        org.junit.Assert.assertNotNull(entryCollection58);
        org.junit.Assert.assertNotNull(entryCollection59);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNotNull(asciiBytesMap63);
        org.junit.Assert.assertNotNull(archiveList66);
        org.junit.Assert.assertEquals(uRL72.toString(), "/hi!:1://[/:100]:10hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]");
        org.junit.Assert.assertEquals(uRL73.toString(), "hi!://:100/hi!://[:100]:52");
        org.junit.Assert.assertEquals(uRL74.toString(), "/archive:///archive:0hi!://:100://[hi!://:100/archive]:100/archive:///archive:0hi!://:100://[hi!://:100/hi!]:52/[hi!://:100/hi!://:100/hi!://:100/archive://[/hi!:1]:1");
    }

    @Test
    public void test09960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09960");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = fileEntry4.file;
        java.io.File file6 = fileEntry4.getFile();
        java.io.File file7 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = null;
        fileEntry4.name = asciiBytes8;
        java.io.File file10 = null;
        fileEntry4.file = file10;
        java.io.File file12 = fileEntry4.getFile();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test09961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09961");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        int int12 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str23 = explodedArchive22.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection24 = explodedArchive22.getEntries();
        java.util.jar.Manifest manifest25 = explodedArchive22.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler26 = explodedArchive22.new FilteredURLStreamHandler();
        java.net.URL uRL27 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler26);
        java.lang.String str28 = uRL27.getQuery();
        java.lang.String str29 = uRL27.getHost();
        int int30 = uRL27.getPort();
        java.lang.String str31 = uRL27.getQuery();
        java.net.URL uRL33 = new java.net.URL(uRL27, "");
        java.io.File file35 = null;
        java.io.File file36 = null;
        java.io.File file37 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter40 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList41 = explodedArchive38.getNestedArchives(entryFilter40);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive38.getNestedArchives(entryFilter42);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap44 = explodedArchive38.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive(file37, asciiBytesMap44);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap46 = explodedArchive45.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive(file36, asciiBytesMap46);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive(file35, asciiBytesMap46);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL(uRL33, "", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.net.URL uRL51 = new java.net.URL(":100", "archive://:10archive", (int) (short) -1, "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.net.URL uRL52 = new java.net.URL(uRL9, "hi!://:100/://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj53 = uRL52.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "archive" + "'", str23, "archive");
        org.junit.Assert.assertNotNull(entryCollection24);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(archiveList41);
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertNotNull(asciiBytesMap44);
        org.junit.Assert.assertNotNull(asciiBytesMap46);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL51.toString(), ":100://[archive://:10archive]hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100/hi!://:100/://[archive://:10archive]:100archive://:10archive");
    }

    @Test
    public void test09962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09962");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getProtocol();
        java.lang.String str14 = uRL9.getPath();
        java.lang.String str15 = uRL9.getPath();
        java.lang.String str16 = uRL9.getUserInfo();
        java.lang.String str17 = uRL9.getProtocol();
        java.lang.Class<?> wildcardClass18 = uRL9.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test09963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09963");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getPath();
        java.lang.String str15 = uRL13.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL27 = new java.net.URL(uRL13, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL28 = new java.net.URL("/hi!://:100", "[/hi!://:100/archive]:0", (int) '#', ":100", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str29 = uRL28.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file40 = explodedArchive39.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter41 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList42 = explodedArchive39.getNestedArchives(entryFilter41);
        explodedArchive39.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter45 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList46 = explodedArchive39.getNestedArchives(entryFilter45);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive39.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL("/hi!://:100/hi!://:100", "/:52", 35, "hi!://:100/hi!://:100/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.net.URL uRL49 = new java.net.URL("/://[archive://:10archive]:100archive://:10archive://[/hi!://:100]:32archive://:0hi!://:100/hi!", "", 0, "/hi!://:100/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.net.URL uRL50 = new java.net.URL(uRL28, "hi!://hi!:1hi!", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        int int51 = uRL50.getPort();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL28.toString(), "/hi!://:100://[/hi!://:100/archive]:0:35:100");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + ":100" + "'", str29, ":100");
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(archiveList42);
        org.junit.Assert.assertNotNull(archiveList46);
        org.junit.Assert.assertEquals(uRL48.toString(), "/hi!://:100/hi!://:100://[/:52]:35hi!://:100/hi!://:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals(uRL49.toString(), "/://[archive://:10archive]:100archive://:10archive://[/hi!://:100]:32archive://:0hi!://:100/hi!://:0/hi!://:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals(uRL50.toString(), "/hi!://:100://[/hi!://:100/archive]:0:35/hi!://hi!:1hi!");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 35 + "'", int51 == 35);
    }

    @Test
    public void test09964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09964");
        java.lang.String str1 = java.net.URLConnection.getDefaultRequestProperty("hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!:///archive:0/archive");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test09965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09965");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap8);
        boolean boolean11 = explodedArchive10.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive10.new FilteredURLStreamHandler();
        explodedArchive10.filtered = false;
        boolean boolean15 = explodedArchive10.filtered;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test09966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09966");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
        explodedArchive0.filtered = true;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive0.getEntries();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(entryCollection10);
    }

    @Test
    public void test09967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09967");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive8.entries;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        boolean boolean11 = explodedArchive8.filtered;
        java.util.jar.Manifest manifest12 = null;
        explodedArchive8.manifest = manifest12;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry14 = explodedArchive8.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str16 = explodedArchive15.toString();
        boolean boolean17 = explodedArchive15.filtered;
        java.io.File file18 = explodedArchive15.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str20 = explodedArchive19.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry21 = explodedArchive19.new FileEntry();
        java.util.jar.Manifest manifest22 = explodedArchive19.getManifest();
        java.util.jar.Manifest manifest23 = explodedArchive19.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive24.getNestedArchives(entryFilter26);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection28 = explodedArchive24.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive24.getNestedArchives(entryFilter29);
        java.util.jar.Manifest manifest31 = null;
        explodedArchive24.manifest = manifest31;
        explodedArchive24.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap35 = explodedArchive24.entries;
        explodedArchive19.entries = asciiBytesMap35;
        explodedArchive15.entries = asciiBytesMap35;
        explodedArchive8.entries = asciiBytesMap35;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str39 = explodedArchive8.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "archive" + "'", str16, "archive");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "archive" + "'", str20, "archive");
        org.junit.Assert.assertNull(manifest22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNotNull(entryCollection28);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNotNull(asciiBytesMap35);
    }

    @Test
    public void test09968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09968");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes6 = null;
        fileEntry4.name = asciiBytes6;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry4.getName();
        java.io.File file9 = null;
        fileEntry4.file = file9;
        java.io.File file11 = fileEntry4.file;
        java.io.File file12 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = null;
        fileEntry4.name = asciiBytes13;
        java.io.File file15 = fileEntry4.file;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = fileEntry4.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file15);
    }

    @Test
    public void test09969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09969");
        java.net.URLConnection.setDefaultRequestProperty("hi!://[:100]:52hi!", "/hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://[hi!://:100/:100]:100");
    }

    @Test
    public void test09970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09970");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        java.io.File file6 = null;
        fileEntry4.file = file6;
        java.io.File file8 = fileEntry4.getFile();
        java.io.File file9 = null;
        fileEntry4.file = file9;
        java.io.File file11 = fileEntry4.file;
        java.io.File file12 = fileEntry4.getFile();
        java.io.File file13 = null;
        fileEntry4.file = file13;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test09971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09971");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive4.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("/archive:///archive:0hi!://:100", "/archive", 10, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        // The following exception was thrown during execution in test generation
        try {
            java.io.InputStream inputStream11 = uRL10.openStream();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertEquals(uRL10.toString(), "/archive:///archive:0hi!://:100:///archive:10hi!://:100/hi!");
    }

    @Test
    public void test09972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09972");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getFile();
        java.lang.String str25 = uRL9.getAuthority();
        java.net.URL uRL27 = new java.net.URL(uRL9, "");
        java.lang.String str28 = uRL27.getQuery();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI29 = uRL27.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + ":100" + "'", str25, ":100");
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test09973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09973");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive4.entries = asciiBytesMap6;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive4.manifest = manifest8;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL11 = new java.net.URL("hi!://:100/hi!", "hi!://:100/hi!", 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler10);
        java.lang.String str12 = uRL11.getProtocol();
        java.lang.String str13 = uRL11.toExternalForm();
        java.lang.String str14 = uRL11.toExternalForm();
        java.lang.String str15 = uRL11.getRef();
        java.lang.String str16 = uRL11.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertEquals(uRL11.toString(), "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!://:100/hi!" + "'", str12, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!" + "'", str13, "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!" + "'", str14, "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!" + "'", str16, "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
    }

    @Test
    public void test09974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09974");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str19 = explodedArchive18.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection20 = explodedArchive18.getEntries();
        java.util.jar.Manifest manifest21 = explodedArchive18.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive18.new FilteredURLStreamHandler();
        java.net.URL uRL23 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler22);
        java.lang.String str24 = uRL23.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str39 = explodedArchive38.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection40 = explodedArchive38.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive38.new FilteredURLStreamHandler();
        java.net.URL uRL42 = new java.net.URL(uRL35, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.net.URL uRL43 = new java.net.URL(uRL23, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.net.URL uRL44 = new java.net.URL(uRL9, "/archive", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.lang.String str45 = uRL9.getFile();
        int int46 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str52 = explodedArchive51.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection53 = explodedArchive51.getEntries();
        java.util.jar.Manifest manifest54 = explodedArchive51.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler55 = explodedArchive51.new FilteredURLStreamHandler();
        java.net.URL uRL56 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.lang.String str57 = uRL56.getQuery();
        java.lang.String str58 = uRL56.getHost();
        int int59 = uRL56.getPort();
        java.lang.String str60 = uRL56.getQuery();
        java.net.URL uRL62 = new java.net.URL(uRL56, "");
        java.io.File file64 = null;
        java.io.File file65 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file67 = explodedArchive66.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter68 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList69 = explodedArchive66.getNestedArchives(entryFilter68);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter70 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList71 = explodedArchive66.getNestedArchives(entryFilter70);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap72 = explodedArchive66.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive(file65, asciiBytesMap72);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap74 = explodedArchive73.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive(file64, asciiBytesMap74);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler76 = explodedArchive75.new FilteredURLStreamHandler();
        java.net.URL uRL77 = new java.net.URL(uRL62, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler76);
        java.lang.String str78 = uRL62.getRef();
        java.lang.String str79 = uRL62.getProtocol();
        boolean boolean80 = uRL9.sameFile(uRL62);
        java.lang.String str81 = uRL62.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "archive" + "'", str19, "archive");
        org.junit.Assert.assertNotNull(entryCollection20);
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "archive" + "'", str39, "archive");
        org.junit.Assert.assertNotNull(entryCollection40);
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "archive" + "'", str52, "archive");
        org.junit.Assert.assertNotNull(entryCollection53);
        org.junit.Assert.assertNull(manifest54);
        org.junit.Assert.assertEquals(uRL56.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file67);
        org.junit.Assert.assertNotNull(archiveList69);
        org.junit.Assert.assertNotNull(archiveList71);
        org.junit.Assert.assertNotNull(asciiBytesMap72);
        org.junit.Assert.assertNotNull(asciiBytesMap74);
        org.junit.Assert.assertEquals(uRL77.toString(), "hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(str81);
    }

    @Test
    public void test09975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09975");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("hi!://hi!:1/[://[archive://:10archive]:100archive://:10archive]:0", "[hi!:1]", "[hi!://:100/hi!://:100/:100]");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://hi!:1/[://[archive://:10archive]:100archive://:10archive]:0");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test09976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09976");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap8);
        boolean boolean11 = explodedArchive10.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive10.new FilteredURLStreamHandler();
        explodedArchive10.filtered = false;
        java.util.jar.Manifest manifest15 = explodedArchive10.manifest;
        boolean boolean16 = explodedArchive10.filtered;
        java.util.jar.Manifest manifest17 = explodedArchive10.getManifest();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(manifest17);
    }

    @Test
    public void test09977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09977");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.lang.String str17 = uRL16.getAuthority();
        int int18 = uRL16.getDefaultPort();
        java.lang.String str19 = uRL16.getQuery();
        java.lang.String str20 = uRL16.getUserInfo();
        int int21 = uRL16.getDefaultPort();
        java.lang.String str22 = uRL16.getFile();
        java.lang.String str23 = uRL16.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + ":100" + "'", str17, ":100");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "/hi!" + "'", str22, "/hi!");
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test09978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09978");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection5 = explodedArchive1.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive1.getNestedArchives(entryFilter6);
        java.util.jar.Manifest manifest8 = null;
        explodedArchive1.manifest = manifest8;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = explodedArchive1.new FileEntry();
        java.io.File file11 = explodedArchive1.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive1.new FileEntry();
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str15 = explodedArchive14.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry16 = explodedArchive14.new FileEntry();
        java.util.jar.Manifest manifest17 = explodedArchive14.getManifest();
        java.util.jar.Manifest manifest18 = explodedArchive14.manifest;
        java.io.File file19 = null;
        explodedArchive14.root = file19;
        explodedArchive14.filtered = true;
        java.io.File file23 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive24.getNestedArchives(entryFilter26);
        explodedArchive24.filtered = false;
        java.util.jar.Manifest manifest30 = explodedArchive24.manifest;
        java.io.File file31 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive32.getNestedArchives(entryFilter34);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive32.getNestedArchives(entryFilter36);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive32.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file31, asciiBytesMap38);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap40 = explodedArchive39.entries;
        explodedArchive24.entries = asciiBytesMap40;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap40);
        java.util.jar.Manifest manifest43 = null;
        explodedArchive42.manifest = manifest43;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap45 = explodedArchive42.entries;
        explodedArchive14.entries = asciiBytesMap45;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap45);
        explodedArchive1.entries = asciiBytesMap45;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap45);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap50 = explodedArchive49.entries;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(entryCollection5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "archive" + "'", str15, "archive");
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNull(manifest30);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertNotNull(asciiBytesMap40);
        org.junit.Assert.assertNotNull(asciiBytesMap45);
        org.junit.Assert.assertNotNull(asciiBytesMap50);
    }

    @Test
    public void test09979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09979");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = explodedArchive0.getManifest();
        java.lang.String str8 = explodedArchive0.toString();
        java.util.jar.Manifest manifest9 = explodedArchive0.manifest;
        java.io.File file10 = null;
        explodedArchive0.root = file10;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertNull(manifest9);
    }

    @Test
    public void test09980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09980");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive0.entries;
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        explodedArchive22.filtered = true;
        java.util.jar.Manifest manifest25 = explodedArchive22.getManifest();
        java.util.jar.Manifest manifest26 = explodedArchive22.manifest;
        java.io.File file27 = null;
        explodedArchive22.root = file27;
        java.io.File file29 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive30.getNestedArchives(entryFilter32);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive30.getNestedArchives(entryFilter34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = explodedArchive30.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file29, asciiBytesMap36);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive37.entries;
        explodedArchive22.entries = asciiBytesMap38;
        explodedArchive0.entries = asciiBytesMap38;
        boolean boolean41 = explodedArchive0.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest43 = explodedArchive0.getManifest();
        boolean boolean44 = explodedArchive0.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap45 = explodedArchive0.entries;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection46 = explodedArchive0.getEntries();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertNull(manifest26);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(asciiBytesMap36);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap45);
        org.junit.Assert.assertNotNull(entryCollection46);
    }

    @Test
    public void test09981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09981");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str2 = explodedArchive1.toString();
        boolean boolean3 = explodedArchive1.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter4 = null;
        org.springframework.boot.loader.archive.Archive archive5 = explodedArchive1.getFilteredArchive(entryRenameFilter4);
        java.io.File file6 = explodedArchive1.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str8 = explodedArchive7.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive7.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive7.getFilteredArchive(entryRenameFilter10);
        java.io.File file12 = explodedArchive7.root;
        java.lang.String str13 = explodedArchive7.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive7.entries;
        explodedArchive1.entries = asciiBytesMap14;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap14);
        java.io.File file17 = explodedArchive16.root;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "archive" + "'", str2, "archive");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(archive5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNotNull(archive11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertNull(file17);
    }

    @Test
    public void test09982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09982");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry12.getName();
        java.io.File file14 = null;
        fileEntry12.file = file14;
        java.io.File file16 = fileEntry12.file;
        java.io.File file17 = null;
        fileEntry12.file = file17;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes19 = fileEntry12.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes20 = null;
        fileEntry12.name = asciiBytes20;
        java.io.File file22 = null;
        fileEntry12.file = file22;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes24 = fileEntry12.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes25 = null;
        fileEntry12.name = asciiBytes25;
        java.io.File file27 = fileEntry12.getFile();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(asciiBytes13);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(asciiBytes19);
        org.junit.Assert.assertNull(asciiBytes24);
        org.junit.Assert.assertNull(file27);
    }

    @Test
    public void test09983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09983");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.jar.Manifest manifest4 = null;
        explodedArchive0.manifest = manifest4;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = explodedArchive0.new FileEntry();
        java.io.File file7 = explodedArchive0.root;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection8 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest9 = null;
        explodedArchive0.manifest = manifest9;
        java.io.File file11 = null;
        explodedArchive0.root = file11;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry13 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = fileEntry13.getName();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(entryCollection8);
        org.junit.Assert.assertNull(asciiBytes14);
    }

    @Test
    public void test09984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09984");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap8);
        boolean boolean11 = explodedArchive10.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive10.getNestedArchives(entryFilter13);
        java.lang.Class<?> wildcardClass15 = archiveList14.getClass();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(asciiBytesMap12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test09985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09985");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        java.io.File file14 = null;
        explodedArchive11.root = file14;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection16 = explodedArchive11.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive11.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive11.getNestedArchives(entryFilter18);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive11.getNestedArchives(entryFilter20);
        java.io.File file22 = null;
        java.io.File file23 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive24.getNestedArchives(entryFilter26);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive24.getNestedArchives(entryFilter28);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive24.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive31.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap32);
        boolean boolean34 = explodedArchive33.filtered;
        explodedArchive33.filtered = false;
        boolean boolean37 = explodedArchive33.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive33.entries;
        explodedArchive11.entries = asciiBytesMap38;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter40 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList41 = explodedArchive11.getNestedArchives(entryFilter40);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler42 = explodedArchive11.new FilteredURLStreamHandler();
        java.io.File file43 = explodedArchive11.root;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(entryCollection16);
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertNotNull(archiveList41);
        org.junit.Assert.assertNull(file43);
    }

    @Test
    public void test09986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09986");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = null;
        fileEntry12.name = asciiBytes13;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes15 = fileEntry12.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes16 = fileEntry12.getName();
        java.io.File file17 = fileEntry12.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes18 = fileEntry12.getName();
        java.io.File file19 = fileEntry12.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes20 = null;
        fileEntry12.name = asciiBytes20;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = fileEntry12.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(asciiBytes15);
        org.junit.Assert.assertNull(asciiBytes16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(asciiBytes18);
        org.junit.Assert.assertNull(file19);
    }

    @Test
    public void test09987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09987");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str29 = explodedArchive28.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive28.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.net.URL uRL33 = new java.net.URL(uRL13, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str34 = uRL13.getFile();
        java.lang.String str35 = uRL13.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str41 = explodedArchive40.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive40.getEntries();
        java.util.jar.Manifest manifest43 = explodedArchive40.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler44 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL45 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler44);
        java.lang.String str46 = uRL45.getQuery();
        java.lang.String str47 = uRL45.getRef();
        java.lang.String str48 = uRL45.getRef();
        java.net.URL uRL50 = new java.net.URL(uRL45, "hi!");
        boolean boolean51 = uRL13.sameFile(uRL50);
        java.lang.String str52 = uRL50.getUserInfo();
        java.lang.String str53 = uRL50.toExternalForm();
        java.net.URL uRL55 = new java.net.URL(uRL50, "hi!://hi!:1hi!");
        java.lang.String str56 = uRL50.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str59 = explodedArchive58.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection60 = explodedArchive58.getEntries();
        java.io.File file61 = explodedArchive58.root;
        java.util.jar.Manifest manifest62 = explodedArchive58.getManifest();
        java.io.File file63 = null;
        explodedArchive58.root = file63;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry65 = explodedArchive58.new FileEntry();
        java.lang.String str66 = explodedArchive58.toString();
        java.util.jar.Manifest manifest67 = explodedArchive58.getManifest();
        explodedArchive58.filtered = true;
        java.io.File file70 = null;
        explodedArchive58.root = file70;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler72 = explodedArchive58.new FilteredURLStreamHandler();
        java.net.URL uRL73 = new java.net.URL(uRL50, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler72);
        java.net.URL uRL74 = new java.net.URL("hi!://:100/hi!://:100/hi!://:100/archive", "/hi!://:100/hi!://:100://[/hi!:1]:52[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0", 0, "/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!://:100/hi!://:100/:100", (java.net.URLStreamHandler) filteredURLStreamHandler72);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "archive" + "'", str41, "archive");
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!://:100/hi!" + "'", str53, "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL55.toString(), "hi!://:100/hi!://hi!:1hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "archive" + "'", str59, "archive");
        org.junit.Assert.assertNotNull(entryCollection60);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNull(manifest62);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "archive" + "'", str66, "archive");
        org.junit.Assert.assertNull(manifest67);
        org.junit.Assert.assertEquals(uRL73.toString(), "hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL74.toString(), "hi!://:100/hi!://:100/hi!://:100/archive://[/hi!://:100/hi!://:100://[/hi!:1]:52[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0]:0/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!://:100/hi!://:100/:100");
    }

    @Test
    public void test09988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09988");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getAuthority();
        java.lang.String str25 = uRL9.getUserInfo();
        java.lang.String str26 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str41 = explodedArchive40.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive40.getEntries();
        java.util.jar.Manifest manifest43 = explodedArchive40.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler44 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL45 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler44);
        java.lang.String str46 = uRL45.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str49 = explodedArchive48.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection50 = explodedArchive48.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL(uRL45, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.lang.String str53 = uRL52.getAuthority();
        int int54 = uRL52.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file57 = explodedArchive56.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter58 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList59 = explodedArchive56.getNestedArchives(entryFilter58);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter60 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList61 = explodedArchive56.getNestedArchives(entryFilter60);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap62 = explodedArchive56.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive56.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL(uRL52, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL65 = new java.net.URL("/hi!://:100", "", (int) (byte) 0, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL66 = new java.net.URL("hi!://:100/hi!://:100/hi!", "[hi!://:100/hi!]", (int) (byte) -1, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL67 = new java.net.URL(uRL9, "/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.lang.String str68 = uRL9.getPath();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "archive" + "'", str41, "archive");
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "archive" + "'", str49, "archive");
        org.junit.Assert.assertNotNull(entryCollection50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + ":100" + "'", str53, ":100");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(archiveList59);
        org.junit.Assert.assertNotNull(archiveList61);
        org.junit.Assert.assertNotNull(asciiBytesMap62);
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL65.toString(), "/hi!://:100://:0archive://:10archive");
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/hi!://:100/hi!://[hi!://:100/hi!]hi!://:100");
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
    }

    @Test
    public void test09989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09989");
        java.net.URLConnection.setDefaultRequestProperty("/hi!://:100/hi!://:100://[/hi!:1]:52[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0", "/hi!://:100/hi!://hi!");
    }

    @Test
    public void test09990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09990");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        java.io.File file3 = null;
        java.io.File file4 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file6 = explodedArchive5.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive5.getNestedArchives(entryFilter7);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive5.getNestedArchives(entryFilter9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive5.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap11);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file3, asciiBytesMap11);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap14);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap14);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap14);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry18 = explodedArchive17.new FileEntry();
        java.io.File file19 = null;
        fileEntry18.file = file19;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes21 = fileEntry18.name;
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertNull(asciiBytes21);
    }

    @Test
    public void test09991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09991");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive0.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry12.getName();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNull(asciiBytes13);
    }

    @Test
    public void test09992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09992");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/hi!:1://[/:100]:10hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", "[://[archive://:10archive]:100archive://:10archive]:100://[/hi!://:100/archive]:0:35[archive://:10archive]", (int) '4', "hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /hi!:1://[/:100]:10hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test09993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09993");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive0.getFilteredArchive(entryRenameFilter5);
        java.io.File file7 = null;
        explodedArchive0.root = file7;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry9 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive0.getNestedArchives(entryFilter10);
        java.io.File file12 = null;
        explodedArchive0.root = file12;
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertNotNull(archiveList11);
    }

    @Test
    public void test09994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09994");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL1 = new java.net.URL("/archive://:32/archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: /archive://:32/archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test09995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09995");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getFile();
        java.lang.String str13 = uRL9.getProtocol();
        java.lang.String str14 = uRL9.getAuthority();
        java.io.File file16 = null;
        java.io.File file17 = null;
        java.io.File file18 = null;
        java.io.File file19 = null;
        java.io.File file20 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file22 = explodedArchive21.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive21.getNestedArchives(entryFilter23);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive21.getNestedArchives(entryFilter25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive21.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file20, asciiBytesMap27);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file19, asciiBytesMap27);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive29.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap30);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap30);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file16, asciiBytesMap30);
        java.lang.String str34 = explodedArchive33.toString();
        java.io.File file35 = explodedArchive33.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL(uRL9, "/hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        int int38 = uRL37.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + ":100" + "'", str14, ":100");
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
    }

    @Test
    public void test09996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09996");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        int int17 = uRL16.getPort();
        java.lang.String str18 = uRL16.toExternalForm();
        java.lang.String str19 = uRL16.getQuery();
        java.lang.String str20 = uRL16.getPath();
        java.lang.String str21 = uRL16.getAuthority();
        int int22 = uRL16.getPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!://:100/hi!" + "'", str18, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "/hi!" + "'", str20, "/hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + ":100" + "'", str21, ":100");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
    }

    @Test
    public void test09997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09997");
        java.lang.String str1 = java.net.URLConnection.getDefaultRequestProperty("[/hi!://:100/archive]:0://:52[://[archive://:10archive]:100archive://:10archive]:100");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test09998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09998");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getQuery();
        java.lang.String str15 = uRL13.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL27 = new java.net.URL(uRL13, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL28 = new java.net.URL("/archive", "/archive", (int) (byte) 0, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str39 = uRL38.getQuery();
        java.lang.String str40 = uRL38.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str47 = explodedArchive46.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection48 = explodedArchive46.getEntries();
        java.util.jar.Manifest manifest49 = explodedArchive46.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler50 = explodedArchive46.new FilteredURLStreamHandler();
        java.net.URL uRL51 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        java.net.URL uRL52 = new java.net.URL(uRL38, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        java.lang.String str53 = uRL38.getFile();
        java.lang.String str54 = uRL38.getRef();
        java.net.URL uRL56 = new java.net.URL(uRL38, "");
        boolean boolean57 = uRL28.sameFile(uRL56);
        java.lang.String str58 = uRL56.toExternalForm();
        int int59 = uRL56.getDefaultPort();
        java.lang.String str60 = uRL56.getHost();
        java.lang.String str61 = uRL56.getRef();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL28.toString(), "/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "archive" + "'", str47, "archive");
        org.junit.Assert.assertNotNull(entryCollection48);
        org.junit.Assert.assertNull(manifest49);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals(uRL56.toString(), "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!://:100" + "'", str58, "hi!://:100");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNull(str61);
    }

    @Test
    public void test09999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test09999");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        boolean boolean12 = explodedArchive11.filtered;
        explodedArchive11.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive11.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file18 = explodedArchive17.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive17.getNestedArchives(entryFilter19);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry21 = explodedArchive17.new FileEntry();
        java.lang.String str22 = explodedArchive17.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = explodedArchive17.entries;
        java.util.jar.Manifest manifest24 = null;
        explodedArchive17.manifest = manifest24;
        java.io.File file26 = null;
        explodedArchive17.root = file26;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection28 = explodedArchive17.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive17.entries;
        explodedArchive11.entries = asciiBytesMap29;
        java.io.File file31 = null;
        explodedArchive11.root = file31;
        java.util.jar.Manifest manifest33 = explodedArchive11.manifest;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap23);
        org.junit.Assert.assertNotNull(entryCollection28);
        org.junit.Assert.assertNotNull(asciiBytesMap29);
        org.junit.Assert.assertNull(manifest33);
    }

    @Test
    public void test10000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test10000");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        java.util.jar.Manifest manifest15 = explodedArchive12.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL17 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler16);
        java.lang.String str18 = uRL17.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str29 = explodedArchive28.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive28.getEntries();
        java.util.jar.Manifest manifest31 = explodedArchive28.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL33 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.lang.String str34 = uRL33.getQuery();
        java.lang.String str35 = uRL33.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str42 = explodedArchive41.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive41.getEntries();
        java.util.jar.Manifest manifest44 = explodedArchive41.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive41.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL47 = new java.net.URL(uRL33, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL48 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL49 = new java.net.URL(uRL17, "", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL50 = new java.net.URL("hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", "hi!://:100/:100://[archive://:10archive]hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", (-1), "hi!://:100/hi!://:100/hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.net.URL uRL51 = new java.net.URL("[archive://:0hi!://:100/hi!]", "[/hi!://:100/archive]:32", 1, "[/hi!://:100/archive]:1", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.lang.String str52 = uRL51.getRef();
        java.net.Proxy proxy53 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection54 = uRL51.openConnection(proxy53);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "archive" + "'", str42, "archive");
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertNull(manifest44);
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL47.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL48.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]://[hi!://:100/:100://[archive://:10archive]hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1]hi!://:100/hi!://:100/hi!:1");
        org.junit.Assert.assertEquals(uRL51.toString(), "[archive://:0hi!://:100/hi!]://[/hi!://:100/archive]:32:1[/hi!://:100/archive]:1");
        org.junit.Assert.assertNull(str52);
    }
}

