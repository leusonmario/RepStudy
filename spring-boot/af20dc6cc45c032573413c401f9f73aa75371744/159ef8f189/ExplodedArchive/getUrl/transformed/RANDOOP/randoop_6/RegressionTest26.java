import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest26 {

    public static boolean debug = false;

    @Test
    public void test13001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13001");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = explodedArchive2.new FileEntry();
        java.lang.String str7 = explodedArchive2.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive2.new FileEntry();
        java.util.jar.Manifest manifest9 = null;
        explodedArchive2.manifest = manifest9;
        java.lang.String str11 = explodedArchive2.toString();
        java.io.File file12 = null;
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive14.getNestedArchives(entryFilter21);
        java.io.File file23 = null;
        java.io.File file24 = null;
        java.io.File file25 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file27 = explodedArchive26.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive26.getNestedArchives(entryFilter28);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive26.getNestedArchives(entryFilter30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file25, asciiBytesMap32);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive33.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file24, asciiBytesMap34);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap34);
        explodedArchive14.entries = asciiBytesMap34;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive38.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap39);
        explodedArchive2.entries = asciiBytesMap39;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap39);
        java.io.File file43 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive44.getNestedArchives(entryFilter46);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry48 = explodedArchive44.new FileEntry();
        java.lang.String str49 = explodedArchive44.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry50 = explodedArchive44.new FileEntry();
        java.util.jar.Manifest manifest51 = null;
        explodedArchive44.manifest = manifest51;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap53 = explodedArchive44.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file43, asciiBytesMap53);
        explodedArchive42.entries = asciiBytesMap53;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap53);
        java.lang.String str57 = explodedArchive56.toString();
        java.io.File file58 = null;
        java.io.File file59 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file61 = explodedArchive60.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter62 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList63 = explodedArchive60.getNestedArchives(entryFilter62);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter64 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList65 = explodedArchive60.getNestedArchives(entryFilter64);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap66 = explodedArchive60.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive(file59, asciiBytesMap66);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap68 = explodedArchive67.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive(file58, asciiBytesMap68);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry70 = explodedArchive69.new FileEntry();
        java.util.jar.Manifest manifest71 = null;
        explodedArchive69.manifest = manifest71;
        java.util.jar.Manifest manifest73 = null;
        explodedArchive69.manifest = manifest73;
        explodedArchive69.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry77 = explodedArchive69.new FileEntry();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive78 = explodedArchive56.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "archive" + "'", str11, "archive");
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "archive" + "'", str49, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap53);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "archive" + "'", str57, "archive");
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(archiveList63);
        org.junit.Assert.assertNotNull(archiveList65);
        org.junit.Assert.assertNotNull(asciiBytesMap66);
        org.junit.Assert.assertNotNull(asciiBytesMap68);
    }

    @Test
    public void test13002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13002");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap8);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler11 = explodedArchive10.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest12 = null;
        explodedArchive10.manifest = manifest12;
        java.util.jar.Manifest manifest14 = null;
        explodedArchive10.manifest = manifest14;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
    }

    @Test
    public void test13003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13003");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getQuery();
        java.net.URL uRL15 = new java.net.URL(uRL9, "");
        java.lang.String str16 = uRL15.getPath();
        int int17 = uRL15.getDefaultPort();
        java.lang.String str18 = uRL15.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        java.util.jar.Manifest manifest27 = explodedArchive24.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler28 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL29 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler28);
        java.lang.String str30 = uRL29.getPath();
        java.lang.String str31 = uRL29.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str38 = explodedArchive37.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection39 = explodedArchive37.getEntries();
        java.util.jar.Manifest manifest40 = explodedArchive37.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive37.new FilteredURLStreamHandler();
        java.net.URL uRL42 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.net.URL uRL43 = new java.net.URL(uRL29, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.net.URL uRL44 = new java.net.URL(uRL15, "/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file55 = explodedArchive54.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter56 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList57 = explodedArchive54.getNestedArchives(entryFilter56);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry58 = explodedArchive54.new FileEntry();
        java.lang.String str59 = explodedArchive54.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry60 = explodedArchive54.new FileEntry();
        explodedArchive54.filtered = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive54.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL("hi!://:100/hi!:1", ":100", (int) (short) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL65 = new java.net.URL("hi!://:100/hi!://:100", "hi!://:100/hi!", (int) '4', "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL66 = new java.net.URL(uRL44, "/://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.lang.String str67 = uRL66.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertNull(manifest27);
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertNotNull(entryCollection39);
        org.junit.Assert.assertNull(manifest40);
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertNotNull(archiveList57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "archive" + "'", str59, "archive");
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100/hi!:1://[:100]:1hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/hi!://:100://[hi!://:100/hi!]:52hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertNull(str67);
    }

    @Test
    public void test13004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13004");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        boolean boolean9 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest10 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive0.getNestedArchives(entryFilter11);
        java.util.jar.Manifest manifest13 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter14 = null;
        org.springframework.boot.loader.archive.Archive archive15 = explodedArchive0.getFilteredArchive(entryRenameFilter14);
        java.util.jar.Manifest manifest16 = null;
        explodedArchive0.manifest = manifest16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry18 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes19 = null;
        fileEntry18.name = asciiBytes19;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNull(manifest13);
        org.junit.Assert.assertNotNull(archive15);
    }

    @Test
    public void test13005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13005");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str42 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str48 = explodedArchive47.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection49 = explodedArchive47.getEntries();
        java.util.jar.Manifest manifest50 = explodedArchive47.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive47.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.lang.String str53 = uRL52.getQuery();
        java.lang.String str54 = uRL52.getRef();
        java.lang.String str55 = uRL52.getRef();
        java.lang.String str56 = uRL52.toExternalForm();
        int int57 = uRL52.getDefaultPort();
        boolean boolean58 = uRL9.sameFile(uRL52);
        java.net.URL uRL60 = new java.net.URL(uRL9, "/archive");
        int int61 = uRL9.getDefaultPort();
        java.lang.String str62 = uRL9.getAuthority();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "archive" + "'", str48, "archive");
        org.junit.Assert.assertNotNull(entryCollection49);
        org.junit.Assert.assertNull(manifest50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!://:100" + "'", str56, "hi!://:100");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals(uRL60.toString(), "hi!://:100/archive");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + ":100" + "'", str62, ":100");
    }

    @Test
    public void test13006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13006");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive0.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = null;
        fileEntry12.name = asciiBytes13;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes15 = fileEntry12.name;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNull(asciiBytes15);
    }

    @Test
    public void test13007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13007");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str15 = explodedArchive14.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection16 = explodedArchive14.getEntries();
        java.util.jar.Manifest manifest17 = explodedArchive14.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler18 = explodedArchive14.new FilteredURLStreamHandler();
        java.net.URL uRL19 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler18);
        java.lang.String str20 = uRL19.getQuery();
        java.lang.String str21 = uRL19.getPath();
        boolean boolean22 = uRL9.sameFile(uRL19);
        java.net.URLStreamHandler uRLStreamHandler24 = null;
        java.net.URL uRL25 = new java.net.URL(uRL19, "", uRLStreamHandler24);
        java.lang.String str26 = uRL25.toExternalForm();
        java.lang.Class<?> wildcardClass27 = uRL25.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "archive" + "'", str15, "archive");
        org.junit.Assert.assertNotNull(entryCollection16);
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertEquals(uRL19.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!://:100" + "'", str26, "hi!://:100");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test13008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13008");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        java.io.File file5 = explodedArchive0.root;
        java.lang.String str6 = explodedArchive0.toString();
        boolean boolean7 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest9 = explodedArchive0.manifest;
        java.io.File file10 = null;
        explodedArchive0.root = file10;
        boolean boolean12 = explodedArchive0.filtered;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test13009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13009");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive0.getFilteredArchive(entryRenameFilter5);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection7 = explodedArchive0.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection8 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest9 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive0.getFilteredArchive(entryRenameFilter10);
        java.util.jar.Manifest manifest12 = null;
        explodedArchive0.manifest = manifest12;
        java.util.jar.Manifest manifest14 = null;
        explodedArchive0.manifest = manifest14;
        java.io.File file16 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry17 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes18 = fileEntry17.name;
        java.io.File file19 = fileEntry17.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes20 = fileEntry17.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes21 = fileEntry17.name;
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertNotNull(entryCollection7);
        org.junit.Assert.assertNotNull(entryCollection8);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNotNull(archive11);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(asciiBytes18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(asciiBytes20);
        org.junit.Assert.assertNull(asciiBytes21);
    }

    @Test
    public void test13010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13010");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str42 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str48 = explodedArchive47.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection49 = explodedArchive47.getEntries();
        java.util.jar.Manifest manifest50 = explodedArchive47.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive47.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.lang.String str53 = uRL52.getQuery();
        java.lang.String str54 = uRL52.getRef();
        java.lang.String str55 = uRL52.getRef();
        java.lang.String str56 = uRL52.toExternalForm();
        int int57 = uRL52.getDefaultPort();
        boolean boolean58 = uRL9.sameFile(uRL52);
        java.lang.String str59 = uRL9.getQuery();
        java.net.URL uRL61 = new java.net.URL(uRL9, "://[hi!://:100/:100]:100/hi!://:100");
        java.lang.String str62 = uRL9.getProtocol();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "archive" + "'", str48, "archive");
        org.junit.Assert.assertNotNull(entryCollection49);
        org.junit.Assert.assertNull(manifest50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!://:100" + "'", str56, "hi!://:100");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100/://[hi!://:100/:100]:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
    }

    @Test
    public void test13011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13011");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = null;
        fileEntry4.file = file5;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = null;
        fileEntry4.name = asciiBytes7;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = null;
        fileEntry4.name = asciiBytes10;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = null;
        fileEntry4.name = asciiBytes12;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = fileEntry4.getName();
        java.io.File file15 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes16 = null;
        fileEntry4.name = asciiBytes16;
        java.io.File file18 = null;
        fileEntry4.file = file18;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes9);
        org.junit.Assert.assertNull(asciiBytes14);
        org.junit.Assert.assertNull(file15);
    }

    @Test
    public void test13012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13012");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        explodedArchive2.filtered = false;
        java.util.jar.Manifest manifest8 = explodedArchive2.manifest;
        java.io.File file9 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive17.entries;
        explodedArchive2.entries = asciiBytesMap18;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap18);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap18);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive21.new FilteredURLStreamHandler();
        boolean boolean23 = explodedArchive21.filtered;
        boolean boolean24 = explodedArchive21.filtered;
        java.util.jar.Manifest manifest25 = explodedArchive21.getManifest();
        java.io.File file26 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive21.buildEntries(file26, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(manifest25);
    }

    @Test
    public void test13013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13013");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        boolean boolean5 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive0.getNestedArchives(entryFilter8);
        java.util.jar.Manifest manifest10 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive0.new FileEntry();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(manifest10);
    }

    @Test
    public void test13014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13014");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        java.io.File file5 = explodedArchive0.root;
        java.lang.String str6 = explodedArchive0.toString();
        boolean boolean7 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive0.manifest = manifest8;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive0.getEntries();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(entryCollection10);
    }

    @Test
    public void test13015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13015");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        java.util.jar.Manifest manifest15 = explodedArchive12.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL17 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler16);
        java.lang.String str18 = uRL17.getQuery();
        java.lang.String str19 = uRL17.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str26 = explodedArchive25.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection27 = explodedArchive25.getEntries();
        java.util.jar.Manifest manifest28 = explodedArchive25.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive25.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.net.URL uRL31 = new java.net.URL(uRL17, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.net.URL uRL32 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.net.URL uRL33 = new java.net.URL("hi!://hi!:1hi!", "hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", 32, "/archive", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str36 = explodedArchive35.toString();
        boolean boolean37 = explodedArchive35.filtered;
        java.io.File file38 = explodedArchive35.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler39 = explodedArchive35.new FilteredURLStreamHandler();
        java.net.URL uRL40 = new java.net.URL(uRL33, "hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", (java.net.URLStreamHandler) filteredURLStreamHandler39);
        java.lang.String str41 = uRL33.getProtocol();
        java.lang.String str42 = uRL33.toExternalForm();
        java.lang.String str43 = uRL33.getQuery();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "archive" + "'", str26, "archive");
        org.junit.Assert.assertNotNull(entryCollection27);
        org.junit.Assert.assertNull(manifest28);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL31.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL32.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/archive");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "archive" + "'", str36, "archive");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!://hi!:1hi!" + "'", str41, "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/archive" + "'", str42, "hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/archive");
        org.junit.Assert.assertNull(str43);
    }

    @Test
    public void test13016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13016");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getFile();
        int int37 = uRL35.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str44 = explodedArchive43.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive43.getEntries();
        java.util.jar.Manifest manifest46 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.lang.String str49 = uRL48.getQuery();
        java.lang.String str50 = uRL48.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str57 = explodedArchive56.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection58 = explodedArchive56.getEntries();
        java.util.jar.Manifest manifest59 = explodedArchive56.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler60 = explodedArchive56.new FilteredURLStreamHandler();
        java.net.URL uRL61 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL62 = new java.net.URL(uRL48, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL63 = new java.net.URL(uRL35, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL64 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL66 = new java.net.URL(uRL64, ":100");
        java.net.URL uRL68 = new java.net.URL(uRL66, "/archive");
        java.lang.String str69 = uRL66.getPath();
        java.io.File file70 = null;
        java.io.File file71 = null;
        java.io.File file72 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file74 = explodedArchive73.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter75 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList76 = explodedArchive73.getNestedArchives(entryFilter75);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter77 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList78 = explodedArchive73.getNestedArchives(entryFilter77);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap79 = explodedArchive73.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive80 = new org.springframework.boot.loader.archive.ExplodedArchive(file72, asciiBytesMap79);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive81 = new org.springframework.boot.loader.archive.ExplodedArchive(file71, asciiBytesMap79);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap82 = explodedArchive81.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = new org.springframework.boot.loader.archive.ExplodedArchive(file70, asciiBytesMap82);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler84 = explodedArchive83.new FilteredURLStreamHandler();
        java.lang.Class<?> wildcardClass85 = filteredURLStreamHandler84.getClass();
        java.lang.Class[] classArray86 = new java.lang.Class[] { wildcardClass85 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj87 = uRL66.getContent(classArray86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "archive" + "'", str44, "archive");
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "archive" + "'", str57, "archive");
        org.junit.Assert.assertNotNull(entryCollection58);
        org.junit.Assert.assertNull(manifest59);
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "/:100" + "'", str69, "/:100");
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNotNull(archiveList76);
        org.junit.Assert.assertNotNull(archiveList78);
        org.junit.Assert.assertNotNull(asciiBytesMap79);
        org.junit.Assert.assertNotNull(asciiBytesMap82);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(classArray86);
    }

    @Test
    public void test13017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13017");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        java.io.File file5 = explodedArchive0.root;
        java.util.jar.Manifest manifest6 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.util.jar.Manifest manifest11 = null;
        explodedArchive0.manifest = manifest11;
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest15 = null;
        explodedArchive0.manifest = manifest15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file18 = explodedArchive17.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive17.getNestedArchives(entryFilter19);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive17.getNestedArchives(entryFilter21);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = explodedArchive17.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive17.getNestedArchives(entryFilter24);
        java.io.File file26 = null;
        explodedArchive17.root = file26;
        java.io.File file28 = null;
        explodedArchive17.root = file28;
        java.util.jar.Manifest manifest30 = explodedArchive17.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter31 = null;
        org.springframework.boot.loader.archive.Archive archive32 = explodedArchive17.getFilteredArchive(entryRenameFilter31);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter33 = null;
        org.springframework.boot.loader.archive.Archive archive34 = explodedArchive17.getFilteredArchive(entryRenameFilter33);
        explodedArchive17.filtered = false;
        java.io.File file37 = explodedArchive17.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive17.entries;
        explodedArchive0.entries = asciiBytesMap38;
        java.io.File file40 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file40, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(asciiBytesMap23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNull(manifest30);
        org.junit.Assert.assertNotNull(archive32);
        org.junit.Assert.assertNotNull(archive34);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
    }

    @Test
    public void test13018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13018");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive8.getNestedArchives(entryFilter12);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive8.entries;
        java.util.jar.Manifest manifest15 = null;
        explodedArchive8.manifest = manifest15;
        boolean boolean17 = explodedArchive8.filtered;
        java.util.jar.Manifest manifest18 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive8.getNestedArchives(entryFilter19);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive8.getNestedArchives(entryFilter21);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive8.getNestedArchives(entryFilter23);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0", "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100", (int) (byte) -1, "hi!://:100/archive:///archive:1hi!://:100/hi!://:100/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getFile();
        int int39 = uRL37.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection47 = explodedArchive45.getEntries();
        java.util.jar.Manifest manifest48 = explodedArchive45.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.lang.String str51 = uRL50.getQuery();
        java.lang.String str52 = uRL50.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str59 = explodedArchive58.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection60 = explodedArchive58.getEntries();
        java.util.jar.Manifest manifest61 = explodedArchive58.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler62 = explodedArchive58.new FilteredURLStreamHandler();
        java.net.URL uRL63 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler62);
        java.net.URL uRL64 = new java.net.URL(uRL50, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler62);
        java.net.URL uRL65 = new java.net.URL(uRL37, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler62);
        java.lang.String str66 = uRL65.getUserInfo();
        java.net.URL uRL68 = new java.net.URL(uRL65, "hi!");
        java.lang.String str69 = uRL68.getHost();
        java.lang.String str70 = uRL68.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive72.filtered = true;
        explodedArchive72.filtered = true;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap77 = explodedArchive72.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler78 = explodedArchive72.new FilteredURLStreamHandler();
        java.net.URL uRL79 = new java.net.URL(uRL68, "hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler78);
        java.net.URL uRL80 = new java.net.URL(uRL26, "/[/hi!://:100/archive]", (java.net.URLStreamHandler) filteredURLStreamHandler78);
        java.net.URL uRL81 = new java.net.URL("[://[archive://:10archive]:100archive://:10archive]:0", "hi!://:100", (int) (short) 100, "/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler78);
        java.net.URL uRL83 = new java.net.URL(uRL81, "[hi!://:100]");
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertEquals(uRL26.toString(), "[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0://[hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100]hi!://:100/archive:///archive:1hi!://:100/hi!://:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertNotNull(entryCollection47);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "archive" + "'", str59, "archive");
        org.junit.Assert.assertNotNull(entryCollection60);
        org.junit.Assert.assertNull(manifest61);
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/archive");
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + ":100" + "'", str70, ":100");
        org.junit.Assert.assertNotNull(asciiBytesMap77);
        org.junit.Assert.assertEquals(uRL79.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL80.toString(), "[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0://[hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100]/[/hi!://:100/archive]");
        org.junit.Assert.assertEquals(uRL81.toString(), "[://[archive://:10archive]:100archive://:10archive]:0://[hi!://:100]:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL83.toString(), "[://[archive://:10archive]:100archive://:10archive]:0://[hi!://:100]:100/hi!://[hi!://:100]");
    }

    @Test
    public void test13019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13019");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.lang.String str17 = uRL16.getUserInfo();
        java.lang.String str18 = uRL16.getAuthority();
        int int19 = uRL16.getPort();
        java.lang.String str20 = uRL16.getProtocol();
        java.net.URL uRL22 = new java.net.URL(uRL16, "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str28 = explodedArchive27.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection29 = explodedArchive27.getEntries();
        java.util.jar.Manifest manifest30 = explodedArchive27.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive27.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL32.getQuery();
        java.lang.String str34 = uRL32.getRef();
        java.lang.String str35 = uRL32.getRef();
        java.net.URL uRL37 = new java.net.URL(uRL32, "hi!");
        java.lang.String str38 = uRL37.getRef();
        java.lang.String str39 = uRL37.getRef();
        java.lang.String str40 = uRL37.getUserInfo();
        boolean boolean41 = uRL22.sameFile(uRL37);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str47 = explodedArchive46.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection48 = explodedArchive46.getEntries();
        java.util.jar.Manifest manifest49 = explodedArchive46.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler50 = explodedArchive46.new FilteredURLStreamHandler();
        java.net.URL uRL51 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        java.lang.String str52 = uRL51.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str55 = explodedArchive54.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection56 = explodedArchive54.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler57 = explodedArchive54.new FilteredURLStreamHandler();
        java.net.URL uRL58 = new java.net.URL(uRL51, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler57);
        java.lang.String str59 = uRL51.getFile();
        java.lang.String str60 = uRL51.getFile();
        java.lang.String str61 = uRL51.getAuthority();
        java.net.URL uRL63 = new java.net.URL(uRL51, "/hi!://:100/hi!://:100/hi!");
        boolean boolean64 = uRL22.sameFile(uRL51);
        java.lang.String str65 = uRL22.getQuery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + ":100" + "'", str18, ":100");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100/hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "archive" + "'", str28, "archive");
        org.junit.Assert.assertNotNull(entryCollection29);
        org.junit.Assert.assertNull(manifest30);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "archive" + "'", str47, "archive");
        org.junit.Assert.assertNotNull(entryCollection48);
        org.junit.Assert.assertNull(manifest49);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "archive" + "'", str55, "archive");
        org.junit.Assert.assertNotNull(entryCollection56);
        org.junit.Assert.assertEquals(uRL58.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + ":100" + "'", str61, ":100");
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/hi!://:100/hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(str65);
    }

    @Test
    public void test13020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13020");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive3.getNestedArchives(entryFilter5);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive3.getNestedArchives(entryFilter7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap11);
        explodedArchive12.filtered = true;
        java.io.File file15 = null;
        explodedArchive12.root = file15;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive12.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive12.new FilteredURLStreamHandler();
        java.lang.String str20 = explodedArchive12.toString();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter21 = null;
        org.springframework.boot.loader.archive.Archive archive22 = explodedArchive12.getFilteredArchive(entryRenameFilter21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive23.getNestedArchives(entryFilter25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = null;
        explodedArchive23.entries = asciiBytesMap27;
        java.io.File file29 = explodedArchive23.root;
        java.io.File file30 = explodedArchive23.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive31.getNestedArchives(entryFilter33);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive31.getNestedArchives(entryFilter35);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap37 = explodedArchive31.entries;
        explodedArchive23.entries = asciiBytesMap37;
        explodedArchive23.filtered = false;
        java.lang.String str41 = explodedArchive23.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive23.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str44 = explodedArchive43.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive43.getEntries();
        java.util.jar.Manifest manifest46 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive43.new FilteredURLStreamHandler();
        boolean boolean48 = explodedArchive43.filtered;
        java.util.jar.Manifest manifest49 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file51 = explodedArchive50.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter52 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList53 = explodedArchive50.getNestedArchives(entryFilter52);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter54 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList55 = explodedArchive50.getNestedArchives(entryFilter54);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap56 = explodedArchive50.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter57 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList58 = explodedArchive50.getNestedArchives(entryFilter57);
        java.io.File file59 = null;
        java.io.File file60 = null;
        java.io.File file61 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file63 = explodedArchive62.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter64 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList65 = explodedArchive62.getNestedArchives(entryFilter64);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter66 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList67 = explodedArchive62.getNestedArchives(entryFilter66);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap68 = explodedArchive62.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive(file61, asciiBytesMap68);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap70 = explodedArchive69.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive(file60, asciiBytesMap70);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive(file59, asciiBytesMap70);
        explodedArchive50.entries = asciiBytesMap70;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler74 = explodedArchive50.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest75 = explodedArchive50.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str77 = explodedArchive76.toString();
        java.util.jar.Manifest manifest78 = null;
        explodedArchive76.manifest = manifest78;
        java.util.jar.Manifest manifest80 = explodedArchive76.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap81 = explodedArchive76.entries;
        explodedArchive50.entries = asciiBytesMap81;
        explodedArchive43.entries = asciiBytesMap81;
        explodedArchive23.entries = asciiBytesMap81;
        explodedArchive12.entries = asciiBytesMap81;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap86 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive87 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap86);
        explodedArchive87.filtered = false;
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "archive" + "'", str20, "archive");
        org.junit.Assert.assertNotNull(archive22);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertNotNull(asciiBytesMap37);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "archive" + "'", str41, "archive");
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "archive" + "'", str44, "archive");
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(manifest49);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(archiveList53);
        org.junit.Assert.assertNotNull(archiveList55);
        org.junit.Assert.assertNotNull(asciiBytesMap56);
        org.junit.Assert.assertNotNull(archiveList58);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(archiveList65);
        org.junit.Assert.assertNotNull(archiveList67);
        org.junit.Assert.assertNotNull(asciiBytesMap68);
        org.junit.Assert.assertNotNull(asciiBytesMap70);
        org.junit.Assert.assertNull(manifest75);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "archive" + "'", str77, "archive");
        org.junit.Assert.assertNull(manifest80);
        org.junit.Assert.assertNotNull(asciiBytesMap81);
        org.junit.Assert.assertNotNull(asciiBytesMap86);
    }

    @Test
    public void test13021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13021");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getHost();
        int int24 = uRL21.getPort();
        boolean boolean25 = uRL9.sameFile(uRL21);
        java.net.URL uRL27 = new java.net.URL(uRL21, "");
        java.lang.String str28 = uRL27.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str35 = explodedArchive34.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection36 = explodedArchive34.getEntries();
        java.util.jar.Manifest manifest37 = explodedArchive34.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str40 = uRL39.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str43 = explodedArchive42.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection44 = explodedArchive42.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive42.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL39, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.lang.String str47 = uRL46.getAuthority();
        int int48 = uRL46.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file51 = explodedArchive50.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter52 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList53 = explodedArchive50.getNestedArchives(entryFilter52);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter54 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList55 = explodedArchive50.getNestedArchives(entryFilter54);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap56 = explodedArchive50.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler57 = explodedArchive50.new FilteredURLStreamHandler();
        java.net.URL uRL58 = new java.net.URL(uRL46, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler57);
        java.io.File file64 = null;
        java.io.File file65 = null;
        java.io.File file66 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file68 = explodedArchive67.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter69 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList70 = explodedArchive67.getNestedArchives(entryFilter69);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter71 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList72 = explodedArchive67.getNestedArchives(entryFilter71);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap73 = explodedArchive67.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive(file66, asciiBytesMap73);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap75 = explodedArchive74.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive(file65, asciiBytesMap75);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive(file64, asciiBytesMap75);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler78 = explodedArchive77.new FilteredURLStreamHandler();
        java.net.URL uRL79 = new java.net.URL("hi!://:100/:100", "hi!://:100/hi!:1", (int) (short) 100, "/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler78);
        java.net.URL uRL80 = new java.net.URL(uRL46, "[archive://:10:100]:1", (java.net.URLStreamHandler) filteredURLStreamHandler78);
        java.net.URL uRL81 = new java.net.URL(uRL27, "[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]", (java.net.URLStreamHandler) filteredURLStreamHandler78);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "archive" + "'", str35, "archive");
        org.junit.Assert.assertNotNull(entryCollection36);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "archive" + "'", str43, "archive");
        org.junit.Assert.assertNotNull(entryCollection44);
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + ":100" + "'", str47, ":100");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(archiveList53);
        org.junit.Assert.assertNotNull(archiveList55);
        org.junit.Assert.assertNotNull(asciiBytesMap56);
        org.junit.Assert.assertEquals(uRL58.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNotNull(archiveList70);
        org.junit.Assert.assertNotNull(archiveList72);
        org.junit.Assert.assertNotNull(asciiBytesMap73);
        org.junit.Assert.assertNotNull(asciiBytesMap75);
        org.junit.Assert.assertEquals(uRL79.toString(), "hi!://:100/:100://[hi!://:100/hi!:1]:100/hi!");
        org.junit.Assert.assertEquals(uRL80.toString(), "hi!://:100/[archive://:10:100]:1");
        org.junit.Assert.assertEquals(uRL81.toString(), "hi!://:100/[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]");
    }

    @Test
    public void test13022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13022");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive4.entries = asciiBytesMap6;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive4.manifest = manifest8;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL11 = new java.net.URL("hi!://:100/hi!", "hi!://:100/hi!", 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler10);
        java.lang.String str12 = uRL11.getProtocol();
        java.lang.String str13 = uRL11.toExternalForm();
        java.lang.String str14 = uRL11.toExternalForm();
        java.lang.String str15 = uRL11.getRef();
        java.lang.String str16 = uRL11.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getFile();
        int int28 = uRL26.getDefaultPort();
        java.lang.String str29 = uRL26.getRef();
        java.lang.String str30 = uRL26.getRef();
        java.lang.String str31 = uRL26.getQuery();
        boolean boolean32 = uRL11.sameFile(uRL26);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertEquals(uRL11.toString(), "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!://:100/hi!" + "'", str12, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!" + "'", str13, "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!" + "'", str14, "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!://:100/hi!" + "'", str16, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test13023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13023");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry2 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest3 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest4 = explodedArchive0.manifest;
        java.io.File file5 = null;
        explodedArchive0.root = file5;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = null;
        fileEntry7.name = asciiBytes8;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = null;
        fileEntry7.name = asciiBytes10;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest3);
        org.junit.Assert.assertNull(manifest4);
    }

    @Test
    public void test13024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13024");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes6 = null;
        fileEntry4.name = asciiBytes6;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = null;
        fileEntry4.name = asciiBytes8;
        java.io.File file10 = fileEntry4.file;
        java.io.File file11 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = null;
        fileEntry4.name = asciiBytes12;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = fileEntry4.getName();
        java.io.File file15 = null;
        fileEntry4.file = file15;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(asciiBytes14);
    }

    @Test
    public void test13025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13025");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = null;
        fileEntry4.file = file5;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = null;
        fileEntry4.name = asciiBytes7;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry4.name;
        java.io.File file10 = fileEntry4.file;
        java.io.File file11 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = null;
        fileEntry4.name = asciiBytes12;
        java.io.File file14 = fileEntry4.getFile();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file14);
    }

    @Test
    public void test13026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13026");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str29 = explodedArchive28.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive28.getEntries();
        java.util.jar.Manifest manifest31 = explodedArchive28.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL33 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.lang.String str34 = uRL33.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str45 = explodedArchive44.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection46 = explodedArchive44.getEntries();
        java.util.jar.Manifest manifest47 = explodedArchive44.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler48 = explodedArchive44.new FilteredURLStreamHandler();
        java.net.URL uRL49 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler48);
        java.lang.String str50 = uRL49.getQuery();
        java.lang.String str51 = uRL49.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str58 = explodedArchive57.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection59 = explodedArchive57.getEntries();
        java.util.jar.Manifest manifest60 = explodedArchive57.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler61 = explodedArchive57.new FilteredURLStreamHandler();
        java.net.URL uRL62 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.net.URL uRL63 = new java.net.URL(uRL49, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.net.URL uRL64 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.net.URL uRL65 = new java.net.URL(uRL33, "", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.lang.String str66 = uRL33.getQuery();
        boolean boolean67 = uRL9.sameFile(uRL33);
        java.lang.String str68 = uRL33.getQuery();
        java.lang.String str69 = uRL33.getRef();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI70 = uRL33.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "archive" + "'", str45, "archive");
        org.junit.Assert.assertNotNull(entryCollection46);
        org.junit.Assert.assertNull(manifest47);
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "archive" + "'", str58, "archive");
        org.junit.Assert.assertNotNull(entryCollection59);
        org.junit.Assert.assertNull(manifest60);
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL64.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(str69);
    }

    @Test
    public void test13027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13027");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.net.URL uRL29 = new java.net.URL(uRL9, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive31.getNestedArchives(entryFilter33);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive31.getNestedArchives(entryFilter35);
        java.lang.String str37 = explodedArchive31.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL(uRL29, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str40 = uRL29.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap47 = null;
        explodedArchive45.entries = asciiBytesMap47;
        java.util.jar.Manifest manifest49 = null;
        explodedArchive45.manifest = manifest49;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL("hi!://:100/hi!", "hi!://:100/hi!", 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.lang.String str53 = uRL52.getPath();
        java.lang.String str54 = uRL52.getHost();
        boolean boolean55 = uRL29.sameFile(uRL52);
        java.lang.String str56 = uRL29.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/:100");
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/:100" + "'", str40, "/:100");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!://:100/hi!" + "'", str53, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[hi!://:100/hi!]" + "'", str54, "[hi!://:100/hi!]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!://:100/:100" + "'", str56, "hi!://:100/:100");
    }

    @Test
    public void test13028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13028");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.io.File file9 = null;
        java.io.File file10 = null;
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap20);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap20);
        explodedArchive0.entries = asciiBytesMap20;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest25 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str27 = explodedArchive26.toString();
        java.util.jar.Manifest manifest28 = null;
        explodedArchive26.manifest = manifest28;
        java.util.jar.Manifest manifest30 = explodedArchive26.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap31 = explodedArchive26.entries;
        explodedArchive0.entries = asciiBytesMap31;
        java.io.File file33 = null;
        java.io.File file34 = null;
        java.io.File file35 = null;
        java.io.File file36 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file38 = explodedArchive37.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive37.getNestedArchives(entryFilter39);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter41 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList42 = explodedArchive37.getNestedArchives(entryFilter41);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap43 = explodedArchive37.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive(file36, asciiBytesMap43);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap45 = explodedArchive44.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file35, asciiBytesMap45);
        explodedArchive46.filtered = true;
        java.io.File file49 = null;
        explodedArchive46.root = file49;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection51 = explodedArchive46.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap52 = explodedArchive46.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file34, asciiBytesMap52);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file33, asciiBytesMap52);
        explodedArchive0.entries = asciiBytesMap52;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter56 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList57 = explodedArchive0.getNestedArchives(entryFilter56);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry58 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str60 = explodedArchive59.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection61 = explodedArchive59.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler62 = explodedArchive59.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter63 = null;
        org.springframework.boot.loader.archive.Archive archive64 = explodedArchive59.getFilteredArchive(entryRenameFilter63);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter65 = null;
        org.springframework.boot.loader.archive.Archive archive66 = explodedArchive59.getFilteredArchive(entryRenameFilter65);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter67 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList68 = explodedArchive59.getNestedArchives(entryFilter67);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry69 = explodedArchive59.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file71 = explodedArchive70.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter72 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList73 = explodedArchive70.getNestedArchives(entryFilter72);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter74 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList75 = explodedArchive70.getNestedArchives(entryFilter74);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap76 = explodedArchive70.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter77 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList78 = explodedArchive70.getNestedArchives(entryFilter77);
        java.util.jar.Manifest manifest79 = explodedArchive70.getManifest();
        java.lang.String str80 = explodedArchive70.toString();
        explodedArchive70.filtered = true;
        java.io.File file83 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive84 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file85 = explodedArchive84.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter86 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList87 = explodedArchive84.getNestedArchives(entryFilter86);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry88 = explodedArchive84.new FileEntry();
        java.lang.String str89 = explodedArchive84.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry90 = explodedArchive84.new FileEntry();
        java.util.jar.Manifest manifest91 = null;
        explodedArchive84.manifest = manifest91;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap93 = explodedArchive84.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive94 = new org.springframework.boot.loader.archive.ExplodedArchive(file83, asciiBytesMap93);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap95 = explodedArchive94.entries;
        explodedArchive70.entries = asciiBytesMap95;
        explodedArchive59.entries = asciiBytesMap95;
        explodedArchive0.entries = asciiBytesMap95;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "archive" + "'", str27, "archive");
        org.junit.Assert.assertNull(manifest30);
        org.junit.Assert.assertNotNull(asciiBytesMap31);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(archiveList42);
        org.junit.Assert.assertNotNull(asciiBytesMap43);
        org.junit.Assert.assertNotNull(asciiBytesMap45);
        org.junit.Assert.assertNotNull(entryCollection51);
        org.junit.Assert.assertNotNull(asciiBytesMap52);
        org.junit.Assert.assertNotNull(archiveList57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "archive" + "'", str60, "archive");
        org.junit.Assert.assertNotNull(entryCollection61);
        org.junit.Assert.assertNotNull(archive64);
        org.junit.Assert.assertNotNull(archive66);
        org.junit.Assert.assertNotNull(archiveList68);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNotNull(archiveList73);
        org.junit.Assert.assertNotNull(archiveList75);
        org.junit.Assert.assertNotNull(asciiBytesMap76);
        org.junit.Assert.assertNotNull(archiveList78);
        org.junit.Assert.assertNull(manifest79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "archive" + "'", str80, "archive");
        org.junit.Assert.assertNull(file85);
        org.junit.Assert.assertNotNull(archiveList87);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "archive" + "'", str89, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap93);
        org.junit.Assert.assertNotNull(asciiBytesMap95);
    }

    @Test
    public void test13029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13029");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.net.URL uRL29 = new java.net.URL(uRL9, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.lang.String str30 = uRL9.getProtocol();
        int int31 = uRL9.getPort();
        java.lang.String str32 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str38 = explodedArchive37.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection39 = explodedArchive37.getEntries();
        java.util.jar.Manifest manifest40 = explodedArchive37.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive37.new FilteredURLStreamHandler();
        java.net.URL uRL42 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.lang.String str43 = uRL42.getQuery();
        java.lang.String str44 = uRL42.getRef();
        int int45 = uRL42.getPort();
        java.lang.String str46 = uRL42.getProtocol();
        java.lang.String str47 = uRL42.getPath();
        java.lang.String str48 = uRL42.getAuthority();
        java.lang.String str49 = uRL42.getRef();
        int int50 = uRL42.getPort();
        java.lang.String str51 = uRL42.getAuthority();
        boolean boolean52 = uRL9.sameFile(uRL42);
        int int53 = uRL42.getDefaultPort();
        java.lang.String str54 = uRL42.getQuery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertNotNull(entryCollection39);
        org.junit.Assert.assertNull(manifest40);
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 100 + "'", int45 == 100);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + ":100" + "'", str48, ":100");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 100 + "'", int50 == 100);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + ":100" + "'", str51, ":100");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(str54);
    }

    @Test
    public void test13030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13030");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        int int12 = uRL9.getDefaultPort();
        java.lang.String str13 = uRL9.getQuery();
        int int14 = uRL9.getDefaultPort();
        java.lang.String str15 = uRL9.getRef();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test13031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13031");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        int int24 = uRL23.getPort();
        java.lang.String str25 = uRL23.getPath();
        java.lang.String str26 = uRL23.getPath();
        java.net.URL uRL28 = new java.net.URL(uRL23, "hi!:1");
        java.lang.String str29 = uRL28.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/hi!" + "'", str25, "/hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/hi!" + "'", str26, "/hi!");
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/hi!:1");
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test13032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13032");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive3.getNestedArchives(entryFilter5);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive3.getNestedArchives(entryFilter7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap11);
        explodedArchive12.filtered = true;
        java.io.File file15 = null;
        explodedArchive12.root = file15;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive12.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive12.getEntries();
        java.util.jar.Manifest manifest19 = null;
        explodedArchive12.manifest = manifest19;
        java.io.File file21 = explodedArchive12.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap22);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive23.getNestedArchives(entryFilter24);
        explodedArchive23.filtered = true;
        java.io.File file28 = explodedArchive23.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry29 = explodedArchive23.new FileEntry();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive23.entries;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL31 = explodedArchive23.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
    }

    @Test
    public void test13033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13033");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.toExternalForm();
        java.lang.String str14 = uRL9.getRef();
        java.lang.String str15 = uRL9.getPath();
        java.net.URL uRL17 = new java.net.URL(uRL9, "[://[archive://:10archive]:100archive://:10archive]:0");
        java.net.URLStreamHandler uRLStreamHandler19 = null;
        java.net.URL uRL20 = new java.net.URL(uRL9, "[://[archive://:10archive]:100archive://:10archive]:100", uRLStreamHandler19);
        java.lang.String str21 = uRL20.getUserInfo();
        java.net.URL uRL23 = new java.net.URL(uRL20, "/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100" + "'", str13, "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:0");
        org.junit.Assert.assertEquals(uRL20.toString(), "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
    }

    @Test
    public void test13034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13034");
        java.lang.String str1 = java.net.URLConnection.getDefaultRequestProperty("/archive:///archive:0hi!://:100://[hi!://:100/archive]:100/archive:///archive:0hi!://[hi!://:100/hi!]:0");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test13035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13035");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap8);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive10.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = fileEntry11.getName();
        java.io.File file13 = fileEntry11.file;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = fileEntry11.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNull(asciiBytes12);
        org.junit.Assert.assertNull(file13);
    }

    @Test
    public void test13036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13036");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getFile();
        int int24 = uRL22.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getQuery();
        java.lang.String str37 = uRL35.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str44 = explodedArchive43.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive43.getEntries();
        java.util.jar.Manifest manifest46 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.net.URL uRL49 = new java.net.URL(uRL35, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.net.URL uRL50 = new java.net.URL(uRL22, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.lang.String str51 = uRL22.toExternalForm();
        boolean boolean52 = uRL9.sameFile(uRL22);
        java.lang.String str53 = uRL9.getFile();
        java.lang.String str54 = uRL9.getRef();
        java.lang.String str55 = uRL9.getAuthority();
        java.lang.String str56 = uRL9.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "archive" + "'", str44, "archive");
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!://:100" + "'", str51, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + ":100" + "'", str55, ":100");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!://:100" + "'", str56, "hi!://:100");
    }

    @Test
    public void test13037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13037");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL1 = new java.net.URL(":100://[hi!://:100/hi!]:0archive://:10archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: :100://[hi!://:100/hi!]:0archive://:10archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13038");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.toExternalForm();
        java.lang.String str14 = uRL9.getRef();
        java.lang.String str15 = uRL9.getUserInfo();
        java.lang.String str16 = uRL9.getHost();
        java.lang.String str17 = uRL9.getQuery();
        int int18 = uRL9.getDefaultPort();
        java.lang.String str19 = uRL9.toExternalForm();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100" + "'", str13, "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!://:100" + "'", str19, "hi!://:100");
    }

    @Test
    public void test13039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13039");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getPath();
        java.lang.String str12 = uRL9.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive14.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str28 = explodedArchive27.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection29 = explodedArchive27.getEntries();
        java.util.jar.Manifest manifest30 = explodedArchive27.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive27.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL32.getQuery();
        java.lang.String str34 = uRL32.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str41 = explodedArchive40.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive40.getEntries();
        java.util.jar.Manifest manifest43 = explodedArchive40.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler44 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL45 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler44);
        java.net.URL uRL46 = new java.net.URL(uRL32, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler44);
        int int47 = uRL46.getPort();
        java.lang.String str48 = uRL46.getPath();
        java.lang.String str49 = uRL46.getPath();
        java.lang.String str50 = uRL46.toExternalForm();
        java.lang.String str51 = uRL46.getRef();
        boolean boolean52 = uRL9.sameFile(uRL46);
        int int53 = uRL9.getDefaultPort();
        int int54 = uRL9.getPort();
        java.net.URLStreamHandler uRLStreamHandler56 = null;
        java.net.URL uRL57 = new java.net.URL(uRL9, "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", uRLStreamHandler56);
        java.lang.String str58 = uRL9.toExternalForm();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "archive" + "'", str28, "archive");
        org.junit.Assert.assertNotNull(entryCollection29);
        org.junit.Assert.assertNull(manifest30);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "archive" + "'", str41, "archive");
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "/hi!" + "'", str49, "/hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!://:100/hi!" + "'", str50, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
        org.junit.Assert.assertEquals(uRL57.toString(), "hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!://:100" + "'", str58, "hi!://:100");
    }

    @Test
    public void test13040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13040");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.io.File file3 = explodedArchive0.root;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        java.io.File file5 = null;
        explodedArchive0.root = file5;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest8 = explodedArchive0.manifest;
        explodedArchive0.filtered = true;
        java.io.File file11 = null;
        explodedArchive0.root = file11;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNull(manifest8);
    }

    @Test
    public void test13041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13041");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        java.lang.String str12 = uRL9.getRef();
        java.lang.String str13 = uRL9.toExternalForm();
        int int14 = uRL9.getDefaultPort();
        java.net.URLStreamHandler uRLStreamHandler16 = null;
        java.net.URL uRL17 = new java.net.URL(uRL9, "hi!://:100/hi!://:100", uRLStreamHandler16);
        java.lang.String str18 = uRL17.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str24 = explodedArchive23.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection25 = explodedArchive23.getEntries();
        java.util.jar.Manifest manifest26 = explodedArchive23.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive23.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.lang.String str29 = uRL28.getQuery();
        java.lang.String str30 = uRL28.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str37 = explodedArchive36.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection38 = explodedArchive36.getEntries();
        java.util.jar.Manifest manifest39 = explodedArchive36.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler40 = explodedArchive36.new FilteredURLStreamHandler();
        java.net.URL uRL41 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler40);
        java.net.URL uRL42 = new java.net.URL(uRL28, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler40);
        java.lang.String str43 = uRL28.getAuthority();
        java.lang.String str44 = uRL28.getUserInfo();
        java.lang.String str45 = uRL28.getRef();
        boolean boolean46 = uRL17.sameFile(uRL28);
        int int47 = uRL17.getPort();
        java.lang.String str48 = uRL17.getFile();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100" + "'", str13, "hi!://:100");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "archive" + "'", str24, "archive");
        org.junit.Assert.assertNotNull(entryCollection25);
        org.junit.Assert.assertNull(manifest26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
        org.junit.Assert.assertNotNull(entryCollection38);
        org.junit.Assert.assertNull(manifest39);
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + ":100" + "'", str43, ":100");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!://:100/hi!://:100" + "'", str48, "/hi!://:100/hi!://:100");
    }

    @Test
    public void test13042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13042");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.root;
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter8 = null;
        org.springframework.boot.loader.archive.Archive archive9 = explodedArchive0.getFilteredArchive(entryRenameFilter8);
        boolean boolean10 = explodedArchive0.filtered;
        java.io.File file11 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file11, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNotNull(archive9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test13043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13043");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive4.entries = asciiBytesMap6;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive4.manifest = manifest8;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL11 = new java.net.URL("hi!://:100/hi!", "hi!://:100/hi!", 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler10);
        java.lang.String str12 = uRL11.getPath();
        java.lang.String str13 = uRL11.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str19 = explodedArchive18.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection20 = explodedArchive18.getEntries();
        java.util.jar.Manifest manifest21 = explodedArchive18.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive18.new FilteredURLStreamHandler();
        java.net.URL uRL23 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler22);
        java.lang.String str24 = uRL23.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str39 = explodedArchive38.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection40 = explodedArchive38.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive38.new FilteredURLStreamHandler();
        java.net.URL uRL42 = new java.net.URL(uRL35, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.net.URL uRL43 = new java.net.URL(uRL23, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.lang.String str44 = uRL23.getFile();
        java.lang.String str45 = uRL23.getProtocol();
        java.lang.String str46 = uRL23.getRef();
        boolean boolean47 = uRL11.sameFile(uRL23);
        java.lang.String str48 = uRL23.getProtocol();
        java.lang.String str49 = uRL23.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str55 = explodedArchive54.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection56 = explodedArchive54.getEntries();
        java.util.jar.Manifest manifest57 = explodedArchive54.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler58 = explodedArchive54.new FilteredURLStreamHandler();
        java.net.URL uRL59 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler58);
        java.lang.String str60 = uRL59.getQuery();
        java.lang.String str61 = uRL59.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str68 = explodedArchive67.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection69 = explodedArchive67.getEntries();
        java.util.jar.Manifest manifest70 = explodedArchive67.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler71 = explodedArchive67.new FilteredURLStreamHandler();
        java.net.URL uRL72 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler71);
        java.net.URL uRL73 = new java.net.URL(uRL59, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler71);
        java.lang.String str74 = uRL59.getAuthority();
        java.lang.String str75 = uRL59.getPath();
        int int76 = uRL59.getPort();
        int int77 = uRL59.getPort();
        java.lang.String str78 = uRL59.getUserInfo();
        boolean boolean79 = uRL23.sameFile(uRL59);
        java.lang.String str80 = uRL23.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertEquals(uRL11.toString(), "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!://:100/hi!" + "'", str12, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!://:100/hi!]" + "'", str13, "[hi!://:100/hi!]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "archive" + "'", str19, "archive");
        org.junit.Assert.assertNotNull(entryCollection20);
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "archive" + "'", str39, "archive");
        org.junit.Assert.assertNotNull(entryCollection40);
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + ":100" + "'", str49, ":100");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "archive" + "'", str55, "archive");
        org.junit.Assert.assertNotNull(entryCollection56);
        org.junit.Assert.assertNull(manifest57);
        org.junit.Assert.assertEquals(uRL59.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "archive" + "'", str68, "archive");
        org.junit.Assert.assertNotNull(entryCollection69);
        org.junit.Assert.assertNull(manifest70);
        org.junit.Assert.assertEquals(uRL72.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL73.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + ":100" + "'", str74, ":100");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 100 + "'", int76 == 100);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!://:100" + "'", str80, "hi!://:100");
    }

    @Test
    public void test13044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13044");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive8.entries;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive8.getFilteredArchive(entryRenameFilter10);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive8.getNestedArchives(entryFilter12);
        java.util.jar.Manifest manifest14 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive8.getNestedArchives(entryFilter15);
        java.io.File file17 = null;
        java.io.File file18 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive19.getNestedArchives(entryFilter21);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = null;
        explodedArchive19.entries = asciiBytesMap23;
        java.io.File file25 = explodedArchive19.root;
        java.io.File file26 = explodedArchive19.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive27.getNestedArchives(entryFilter29);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter31 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList32 = explodedArchive27.getNestedArchives(entryFilter31);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap33 = explodedArchive27.entries;
        explodedArchive19.entries = asciiBytesMap33;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap33);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap33);
        explodedArchive8.entries = asciiBytesMap33;
        explodedArchive8.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter40 = null;
        org.springframework.boot.loader.archive.Archive archive41 = explodedArchive8.getFilteredArchive(entryRenameFilter40);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(archive11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNull(manifest14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNotNull(archiveList32);
        org.junit.Assert.assertNotNull(asciiBytesMap33);
        org.junit.Assert.assertNotNull(archive41);
    }

    @Test
    public void test13045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13045");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.jar.Manifest manifest4 = null;
        explodedArchive0.manifest = manifest4;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler6 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file7 = null;
        explodedArchive0.root = file7;
        java.util.jar.Manifest manifest9 = null;
        explodedArchive0.manifest = manifest9;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive11.getNestedArchives(entryFilter13);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry15 = explodedArchive11.new FileEntry();
        java.io.File file16 = fileEntry15.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes17 = null;
        fileEntry15.name = asciiBytes17;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes19 = fileEntry15.getName();
        java.io.File file20 = null;
        fileEntry15.file = file20;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes22 = null;
        fileEntry15.name = asciiBytes22;
        java.io.File file24 = fileEntry15.file;
        java.io.File file25 = fileEntry15.file;
        java.io.File file26 = null;
        fileEntry15.file = file26;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = fileEntry15.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes29 = fileEntry15.name;
        java.io.File file30 = null;
        fileEntry15.file = file30;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive32 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(asciiBytes19);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNull(asciiBytes28);
        org.junit.Assert.assertNull(asciiBytes29);
    }

    @Test
    public void test13046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13046");
        java.io.File file4 = null;
        java.io.File file5 = null;
        java.io.File file6 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive7.getNestedArchives(entryFilter9);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive7.getNestedArchives(entryFilter11);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive7.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive(file6, asciiBytesMap13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file5, asciiBytesMap15);
        explodedArchive16.filtered = true;
        java.io.File file19 = null;
        explodedArchive16.root = file19;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection21 = explodedArchive16.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter22 = null;
        org.springframework.boot.loader.archive.Archive archive23 = explodedArchive16.getFilteredArchive(entryRenameFilter22);
        java.io.File file24 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive25.getNestedArchives(entryFilter27);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive25.getNestedArchives(entryFilter29);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap31 = explodedArchive25.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive25.getNestedArchives(entryFilter32);
        java.io.File file34 = null;
        java.io.File file35 = null;
        java.io.File file36 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file38 = explodedArchive37.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive37.getNestedArchives(entryFilter39);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter41 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList42 = explodedArchive37.getNestedArchives(entryFilter41);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap43 = explodedArchive37.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive(file36, asciiBytesMap43);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap45 = explodedArchive44.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file35, asciiBytesMap45);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive(file34, asciiBytesMap45);
        explodedArchive25.entries = asciiBytesMap45;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file24, asciiBytesMap45);
        explodedArchive16.entries = asciiBytesMap45;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap45);
        java.io.File file52 = explodedArchive51.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler53 = explodedArchive51.new FilteredURLStreamHandler();
        java.net.URL uRL54 = new java.net.URL("[://[archive://:10archive]:100archive://:10archive]:100://[/hi!://:100/archive]:0:35[archive://:10archive]", "://[archive://:10archive]:100archive://:10archive", (int) '4', "/hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        java.lang.String str55 = uRL54.toString();
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(asciiBytesMap13);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNotNull(entryCollection21);
        org.junit.Assert.assertNotNull(archive23);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNotNull(asciiBytesMap31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(archiveList42);
        org.junit.Assert.assertNotNull(asciiBytesMap43);
        org.junit.Assert.assertNotNull(asciiBytesMap45);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertEquals(uRL54.toString(), "[://[archive://:10archive]:100archive://:10archive]:100://[/hi!://:100/archive]:0:35[archive://:10archive]://[://[archive://:10archive]:100archive://:10archive]:52/hi!:1");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[://[archive://:10archive]:100archive://:10archive]:100://[/hi!://:100/archive]:0:35[archive://:10archive]://[://[archive://:10archive]:100archive://:10archive]:52/hi!:1" + "'", str55, "[://[archive://:10archive]:100archive://:10archive]:100://[/hi!://:100/archive]:0:35[archive://:10archive]://[://[archive://:10archive]:100archive://:10archive]:52/hi!:1");
    }

    @Test
    public void test13047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13047");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler3 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter4 = null;
        org.springframework.boot.loader.archive.Archive archive5 = explodedArchive0.getFilteredArchive(entryRenameFilter4);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter6 = null;
        org.springframework.boot.loader.archive.Archive archive7 = explodedArchive0.getFilteredArchive(entryRenameFilter6);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive0.getNestedArchives(entryFilter8);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = fileEntry10.name;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = fileEntry10.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive5);
        org.junit.Assert.assertNotNull(archive7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(asciiBytes11);
    }

    @Test
    public void test13048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13048");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL(":1", "[archive://:10archive]:100", (int) '#', "hi!://:100/hi!://:100:///archivehi!://:100/hi!://:100/hi!://[/hi!://:100/archive]");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: :1");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13049");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive0.getNestedArchives(entryFilter8);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive0.getFilteredArchive(entryRenameFilter10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest13 = explodedArchive0.manifest;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter15 = null;
        org.springframework.boot.loader.archive.Archive archive16 = explodedArchive0.getFilteredArchive(entryRenameFilter15);
        java.util.jar.Manifest manifest17 = null;
        explodedArchive0.manifest = manifest17;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(archive11);
        org.junit.Assert.assertNull(manifest13);
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNotNull(archive16);
    }

    @Test
    public void test13050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13050");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        boolean boolean2 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        java.io.File file5 = null;
        explodedArchive0.root = file5;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter11 = null;
        org.springframework.boot.loader.archive.Archive archive12 = explodedArchive0.getFilteredArchive(entryRenameFilter11);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNotNull(archive12);
    }

    @Test
    public void test13051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13051");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive4.entries = asciiBytesMap6;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive4.manifest = manifest8;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL11 = new java.net.URL("hi!://:100/hi!", "hi!://:100/hi!", 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler10);
        java.lang.String str12 = uRL11.getPath();
        java.lang.String str13 = uRL11.getProtocol();
        java.lang.String str14 = uRL11.getAuthority();
        java.lang.String str15 = uRL11.getFile();
        java.lang.String str16 = uRL11.getAuthority();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertEquals(uRL11.toString(), "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!://:100/hi!" + "'", str12, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100/hi!" + "'", str13, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[hi!://:100/hi!]:0" + "'", str14, "[hi!://:100/hi!]:0");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!://:100/hi!" + "'", str15, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[hi!://:100/hi!]:0" + "'", str16, "[hi!://:100/hi!]:0");
    }

    @Test
    public void test13052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13052");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = null;
        explodedArchive4.entries = asciiBytesMap6;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive4.manifest = manifest8;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL11 = new java.net.URL("hi!://:100/hi!", "hi!://:100/hi!", 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler10);
        java.lang.String str12 = uRL11.getPath();
        java.lang.String str13 = uRL11.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str19 = explodedArchive18.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection20 = explodedArchive18.getEntries();
        java.util.jar.Manifest manifest21 = explodedArchive18.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive18.new FilteredURLStreamHandler();
        java.net.URL uRL23 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler22);
        java.lang.String str24 = uRL23.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str39 = explodedArchive38.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection40 = explodedArchive38.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive38.new FilteredURLStreamHandler();
        java.net.URL uRL42 = new java.net.URL(uRL35, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.net.URL uRL43 = new java.net.URL(uRL23, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.lang.String str44 = uRL23.getFile();
        java.lang.String str45 = uRL23.getProtocol();
        java.lang.String str46 = uRL23.getRef();
        boolean boolean47 = uRL11.sameFile(uRL23);
        java.lang.String str48 = uRL23.getProtocol();
        java.lang.String str49 = uRL23.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str55 = explodedArchive54.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection56 = explodedArchive54.getEntries();
        java.util.jar.Manifest manifest57 = explodedArchive54.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler58 = explodedArchive54.new FilteredURLStreamHandler();
        java.net.URL uRL59 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler58);
        java.lang.String str60 = uRL59.getQuery();
        java.lang.String str61 = uRL59.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str68 = explodedArchive67.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection69 = explodedArchive67.getEntries();
        java.util.jar.Manifest manifest70 = explodedArchive67.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler71 = explodedArchive67.new FilteredURLStreamHandler();
        java.net.URL uRL72 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler71);
        java.net.URL uRL73 = new java.net.URL(uRL59, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler71);
        java.lang.String str74 = uRL59.getAuthority();
        java.lang.String str75 = uRL59.getPath();
        int int76 = uRL59.getPort();
        int int77 = uRL59.getPort();
        java.lang.String str78 = uRL59.getUserInfo();
        boolean boolean79 = uRL23.sameFile(uRL59);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI80 = uRL23.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertEquals(uRL11.toString(), "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!://:100/hi!" + "'", str12, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!://:100/hi!]" + "'", str13, "[hi!://:100/hi!]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "archive" + "'", str19, "archive");
        org.junit.Assert.assertNotNull(entryCollection20);
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "archive" + "'", str39, "archive");
        org.junit.Assert.assertNotNull(entryCollection40);
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + ":100" + "'", str49, ":100");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "archive" + "'", str55, "archive");
        org.junit.Assert.assertNotNull(entryCollection56);
        org.junit.Assert.assertNull(manifest57);
        org.junit.Assert.assertEquals(uRL59.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "archive" + "'", str68, "archive");
        org.junit.Assert.assertNotNull(entryCollection69);
        org.junit.Assert.assertNull(manifest70);
        org.junit.Assert.assertEquals(uRL72.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL73.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + ":100" + "'", str74, ":100");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 100 + "'", int76 == 100);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 100 + "'", int77 == 100);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test13053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13053");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL9.getPath();
        java.lang.String str39 = uRL9.getPath();
        java.lang.String str40 = uRL9.getQuery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNull(str40);
    }

    @Test
    public void test13054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13054");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
        java.util.jar.Manifest manifest8 = null;
        explodedArchive0.manifest = manifest8;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler11 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection12 = explodedArchive0.getEntries();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(entryCollection12);
    }

    @Test
    public void test13055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13055");
        java.net.URLConnection.setDefaultRequestProperty("hi!://:100/hi!://[hi!:1]:100[/hi!://:100/archive]", "/hi!://:100/hi!://:100/hi!://:100/hi!://:100");
    }

    @Test
    public void test13056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13056");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        java.io.File file3 = null;
        java.io.File file4 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file6 = explodedArchive5.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive5.getNestedArchives(entryFilter7);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive5.getNestedArchives(entryFilter9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive5.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap11);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file3, asciiBytesMap11);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap14);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap14);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap14);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter18 = null;
        org.springframework.boot.loader.archive.Archive archive19 = explodedArchive17.getFilteredArchive(entryRenameFilter18);
        boolean boolean20 = explodedArchive17.filtered;
        java.util.jar.Manifest manifest21 = explodedArchive17.getManifest();
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertNotNull(archive19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(manifest21);
    }

    @Test
    public void test13057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13057");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes6 = null;
        fileEntry4.name = asciiBytes6;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = null;
        fileEntry4.name = asciiBytes8;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = null;
        fileEntry4.name = asciiBytes10;
        java.io.File file12 = null;
        fileEntry4.file = file12;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = fileEntry4.name;
        java.io.File file15 = fileEntry4.file;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(asciiBytes14);
        org.junit.Assert.assertNull(file15);
    }

    @Test
    public void test13058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13058");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes6 = null;
        fileEntry4.name = asciiBytes6;
        java.io.File file8 = fileEntry4.file;
        java.io.File file9 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = null;
        fileEntry4.name = asciiBytes10;
        java.io.File file12 = fileEntry4.file;
        java.io.File file13 = null;
        fileEntry4.file = file13;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes15 = null;
        fileEntry4.name = asciiBytes15;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes17 = null;
        fileEntry4.name = asciiBytes17;
        java.io.File file19 = null;
        fileEntry4.file = file19;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test13059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13059");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes6 = fileEntry5.name;
        java.io.File file7 = fileEntry5.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry5.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry5.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = fileEntry5.getName();
        java.io.File file11 = fileEntry5.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = fileEntry5.getName();
        java.io.File file13 = fileEntry5.getFile();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNull(asciiBytes6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(asciiBytes9);
        org.junit.Assert.assertNull(asciiBytes10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(asciiBytes12);
        org.junit.Assert.assertNull(file13);
    }

    @Test
    public void test13060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13060");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL1 = new java.net.URL("[hi!://[hi!://:100/hi!]:0archive://:10:100]:10");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: [hi!://[hi!://:100/hi!]:0archive://:10:100]:10");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13061");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        java.io.File file14 = null;
        explodedArchive11.root = file14;
        java.io.File file16 = null;
        explodedArchive11.root = file16;
        boolean boolean18 = explodedArchive11.filtered;
        java.util.jar.Manifest manifest19 = explodedArchive11.manifest;
        java.io.File file20 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive11.buildEntries(file20, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(manifest19);
    }

    @Test
    public void test13062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13062");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL9.getPath();
        java.net.URL uRL40 = new java.net.URL(uRL9, "hi!://:100/hi!://:100/hi!://:100");
        java.net.URL uRL42 = new java.net.URL(uRL40, "[://[archive://:10archive]:100archive://:10archive]");
        java.lang.String str43 = uRL40.getRef();
        java.lang.String str44 = uRL40.getFile();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "/hi!://:100/hi!://:100/hi!://:100" + "'", str44, "/hi!://:100/hi!://:100/hi!://:100");
    }

    @Test
    public void test13063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13063");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive8.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive8.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive8.new FileEntry();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter12 = null;
        org.springframework.boot.loader.archive.Archive archive13 = explodedArchive8.getFilteredArchive(entryRenameFilter12);
        boolean boolean14 = explodedArchive8.filtered;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNotNull(archive13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test13064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13064");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        boolean boolean5 = explodedArchive0.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry7.getName();
        java.io.File file9 = null;
        fileEntry7.file = file9;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = null;
        fileEntry7.name = asciiBytes11;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry7.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = null;
        fileEntry7.name = asciiBytes14;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(asciiBytes13);
    }

    @Test
    public void test13065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13065");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        java.io.File file6 = null;
        fileEntry4.file = file6;
        java.io.File file8 = null;
        fileEntry4.file = file8;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = fileEntry4.getName();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = fileEntry4.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(asciiBytes10);
    }

    @Test
    public void test13066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13066");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry12.getName();
        java.io.File file14 = null;
        fileEntry12.file = file14;
        java.io.File file16 = fileEntry12.file;
        java.io.File file17 = null;
        fileEntry12.file = file17;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes19 = fileEntry12.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes20 = null;
        fileEntry12.name = asciiBytes20;
        java.io.File file22 = null;
        fileEntry12.file = file22;
        java.io.File file24 = fileEntry12.file;
        java.io.File file25 = fileEntry12.getFile();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(asciiBytes13);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(asciiBytes19);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNull(file25);
    }

    @Test
    public void test13067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13067");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection4 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive0.getNestedArchives(entryFilter5);
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry9 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = fileEntry9.name;
        java.io.File file11 = fileEntry9.getFile();
        java.io.File file12 = fileEntry9.file;
        java.io.File file13 = fileEntry9.file;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(entryCollection4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNull(asciiBytes10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
    }

    @Test
    public void test13068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13068");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("/hi!://:100", "archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive://[archive://:10:100]:1[hi!://:100/:100]", (int) (short) 100, "hi!://:100://[hi!://:100/hi!://:100/hi!://hi!]:0hi!://:100/archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /hi!://:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13069");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        explodedArchive2.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive2.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter12 = null;
        org.springframework.boot.loader.archive.Archive archive13 = explodedArchive2.getFilteredArchive(entryRenameFilter12);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry14 = explodedArchive2.new FileEntry();
        java.util.jar.Manifest manifest15 = explodedArchive2.manifest;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection16 = explodedArchive2.getEntries();
        java.util.jar.Manifest manifest17 = explodedArchive2.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap18);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap18);
        java.util.jar.Manifest manifest21 = explodedArchive20.manifest;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(archive13);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertNotNull(entryCollection16);
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNull(manifest21);
    }

    @Test
    public void test13070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13070");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str42 = uRL9.getUserInfo();
        java.lang.String str43 = uRL9.getHost();
        java.lang.String str44 = uRL9.getRef();
        java.net.URL uRL46 = new java.net.URL(uRL9, "/hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100/hi!://:100/hi!");
    }

    @Test
    public void test13071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13071");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL(":100://[hi!://:100/hi!]:100hi!://:100/archive", "", "archive://:0/:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: :100://[hi!://:100/hi!]:100hi!://:100/archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13072");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getFile();
        int int37 = uRL35.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str44 = explodedArchive43.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive43.getEntries();
        java.util.jar.Manifest manifest46 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.lang.String str49 = uRL48.getQuery();
        java.lang.String str50 = uRL48.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str57 = explodedArchive56.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection58 = explodedArchive56.getEntries();
        java.util.jar.Manifest manifest59 = explodedArchive56.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler60 = explodedArchive56.new FilteredURLStreamHandler();
        java.net.URL uRL61 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL62 = new java.net.URL(uRL48, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL63 = new java.net.URL(uRL35, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL64 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL66 = new java.net.URL(uRL64, ":100");
        java.lang.String str67 = uRL66.toExternalForm();
        java.lang.String str68 = uRL66.getQuery();
        java.net.URL uRL70 = new java.net.URL(uRL66, "hi!:1");
        java.lang.String str71 = uRL70.getRef();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "archive" + "'", str44, "archive");
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "archive" + "'", str57, "archive");
        org.junit.Assert.assertNotNull(entryCollection58);
        org.junit.Assert.assertNull(manifest59);
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!://:100/:100" + "'", str67, "hi!://:100/:100");
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertEquals(uRL70.toString(), "hi!://:100/hi!:1");
        org.junit.Assert.assertNull(str71);
    }

    @Test
    public void test13073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13073");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", "hi!://:100/[/hi!:1]", ":1");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13074");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive0.entries;
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        explodedArchive22.filtered = true;
        java.util.jar.Manifest manifest25 = explodedArchive22.getManifest();
        java.util.jar.Manifest manifest26 = explodedArchive22.manifest;
        java.io.File file27 = null;
        explodedArchive22.root = file27;
        java.io.File file29 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive30.getNestedArchives(entryFilter32);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive30.getNestedArchives(entryFilter34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = explodedArchive30.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file29, asciiBytesMap36);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive37.entries;
        explodedArchive22.entries = asciiBytesMap38;
        explodedArchive0.entries = asciiBytesMap38;
        boolean boolean41 = explodedArchive0.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest43 = explodedArchive0.getManifest();
        boolean boolean44 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest45 = explodedArchive0.getManifest();
        java.lang.String str46 = explodedArchive0.toString();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertNull(manifest26);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(asciiBytesMap36);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(manifest45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
    }

    @Test
    public void test13075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13075");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL25 = new java.net.URL(uRL9, "[:100]");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str35 = explodedArchive34.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection36 = explodedArchive34.getEntries();
        java.util.jar.Manifest manifest37 = explodedArchive34.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL40 = new java.net.URL("hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100", "hi!://:100/:100", (int) (byte) -1, "/[hi!://:100/hi!://:100/hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        boolean boolean41 = uRL25.sameFile(uRL40);
        int int42 = uRL25.getPort();
        int int43 = uRL25.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100/[:100]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "archive" + "'", str35, "archive");
        org.junit.Assert.assertNotNull(entryCollection36);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100://[hi!://:100/:100]/[hi!://:100/hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
    }

    @Test
    public void test13076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13076");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        java.util.jar.Manifest manifest15 = explodedArchive12.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL17 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler16);
        java.lang.String str18 = uRL17.getFile();
        int int19 = uRL17.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str26 = explodedArchive25.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection27 = explodedArchive25.getEntries();
        java.util.jar.Manifest manifest28 = explodedArchive25.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive25.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.lang.String str31 = uRL30.getQuery();
        java.lang.String str32 = uRL30.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str39 = explodedArchive38.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection40 = explodedArchive38.getEntries();
        java.util.jar.Manifest manifest41 = explodedArchive38.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler42 = explodedArchive38.new FilteredURLStreamHandler();
        java.net.URL uRL43 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler42);
        java.net.URL uRL44 = new java.net.URL(uRL30, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler42);
        java.net.URL uRL45 = new java.net.URL(uRL17, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler42);
        java.net.URL uRL46 = new java.net.URL("archive", "", (int) (byte) 10, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler42);
        java.lang.String str47 = uRL46.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str53 = explodedArchive52.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection54 = explodedArchive52.getEntries();
        java.util.jar.Manifest manifest55 = explodedArchive52.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler56 = explodedArchive52.new FilteredURLStreamHandler();
        java.net.URL uRL57 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler56);
        java.lang.String str58 = uRL57.getQuery();
        java.lang.String str59 = uRL57.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str66 = explodedArchive65.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection67 = explodedArchive65.getEntries();
        java.util.jar.Manifest manifest68 = explodedArchive65.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler69 = explodedArchive65.new FilteredURLStreamHandler();
        java.net.URL uRL70 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler69);
        java.net.URL uRL71 = new java.net.URL(uRL57, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler69);
        int int72 = uRL71.getPort();
        java.lang.String str73 = uRL71.getPath();
        java.lang.String str74 = uRL71.getPath();
        java.lang.String str75 = uRL71.toExternalForm();
        java.lang.String str76 = uRL71.getRef();
        java.lang.String str77 = uRL71.getPath();
        boolean boolean78 = uRL46.sameFile(uRL71);
        int int79 = uRL71.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive85 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file86 = explodedArchive85.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter87 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList88 = explodedArchive85.getNestedArchives(entryFilter87);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry89 = explodedArchive85.new FileEntry();
        java.lang.String str90 = explodedArchive85.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry91 = explodedArchive85.new FileEntry();
        explodedArchive85.filtered = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler94 = explodedArchive85.new FilteredURLStreamHandler();
        java.net.URL uRL95 = new java.net.URL("hi!://:100/hi!:1", ":100", (int) (short) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler94);
        java.net.URL uRL96 = new java.net.URL(uRL71, "hi!://:100/hi!://:100/hi!://hi!", (java.net.URLStreamHandler) filteredURLStreamHandler94);
        java.net.URL uRL97 = new java.net.URL("[hi!://:100/archive]:100", "[hi!://:100/:100]", (-1), "/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler94);
        java.lang.String str98 = uRL97.getQuery();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "archive" + "'", str26, "archive");
        org.junit.Assert.assertNotNull(entryCollection27);
        org.junit.Assert.assertNull(manifest28);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "archive" + "'", str39, "archive");
        org.junit.Assert.assertNotNull(entryCollection40);
        org.junit.Assert.assertNull(manifest41);
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL46.toString(), "archive://:10:100");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "archive" + "'", str53, "archive");
        org.junit.Assert.assertNotNull(entryCollection54);
        org.junit.Assert.assertNull(manifest55);
        org.junit.Assert.assertEquals(uRL57.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "archive" + "'", str66, "archive");
        org.junit.Assert.assertNotNull(entryCollection67);
        org.junit.Assert.assertNull(manifest68);
        org.junit.Assert.assertEquals(uRL70.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL71.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "/hi!" + "'", str73, "/hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "/hi!" + "'", str74, "/hi!");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!://:100/hi!" + "'", str75, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "/hi!" + "'", str77, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(file86);
        org.junit.Assert.assertNotNull(archiveList88);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "archive" + "'", str90, "archive");
        org.junit.Assert.assertEquals(uRL95.toString(), "hi!://:100/hi!:1://[:100]:1hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL96.toString(), "hi!://:100/hi!://:100/hi!://:100/hi!://hi!");
        org.junit.Assert.assertEquals(uRL97.toString(), "[hi!://:100/archive]:100://[hi!://:100/:100]/archive:///archive:0hi!://:100");
        org.junit.Assert.assertNull(str98);
    }

    @Test
    public void test13077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13077");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getFile();
        int int15 = uRL13.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getQuery();
        java.lang.String str28 = uRL26.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str35 = explodedArchive34.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection36 = explodedArchive34.getEntries();
        java.util.jar.Manifest manifest37 = explodedArchive34.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL40 = new java.net.URL(uRL26, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL41 = new java.net.URL(uRL13, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str52 = explodedArchive51.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection53 = explodedArchive51.getEntries();
        java.util.jar.Manifest manifest54 = explodedArchive51.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler55 = explodedArchive51.new FilteredURLStreamHandler();
        java.net.URL uRL56 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.lang.String str57 = uRL56.getQuery();
        java.lang.String str58 = uRL56.getHost();
        int int59 = uRL56.getPort();
        java.lang.String str60 = uRL56.getQuery();
        java.net.URL uRL62 = new java.net.URL(uRL56, "");
        java.io.File file64 = null;
        java.io.File file65 = null;
        java.io.File file66 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file68 = explodedArchive67.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter69 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList70 = explodedArchive67.getNestedArchives(entryFilter69);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter71 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList72 = explodedArchive67.getNestedArchives(entryFilter71);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap73 = explodedArchive67.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive(file66, asciiBytesMap73);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap75 = explodedArchive74.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive(file65, asciiBytesMap75);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive(file64, asciiBytesMap75);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler78 = explodedArchive77.new FilteredURLStreamHandler();
        java.net.URL uRL79 = new java.net.URL(uRL62, "", (java.net.URLStreamHandler) filteredURLStreamHandler78);
        java.net.URL uRL80 = new java.net.URL("hi!://:100/hi!://:100", "/archive", (int) (byte) -1, "hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]", (java.net.URLStreamHandler) filteredURLStreamHandler78);
        java.net.URL uRL81 = new java.net.URL(uRL13, ":52", (java.net.URLStreamHandler) filteredURLStreamHandler78);
        java.net.URL uRL82 = new java.net.URL("hi!://:100/hi!", "hi!://:100/archive:///archive:1hi!://:100/hi!://:100/archive:///archive:0hi!://:100", 1, "[archive://:10archive]://[/archive://[hi!://:100/hi!]:1/hi!]:97hi!://:100/hi!://:100/hi!://hi!", (java.net.URLStreamHandler) filteredURLStreamHandler78);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "archive" + "'", str35, "archive");
        org.junit.Assert.assertNotNull(entryCollection36);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "archive" + "'", str52, "archive");
        org.junit.Assert.assertNotNull(entryCollection53);
        org.junit.Assert.assertNull(manifest54);
        org.junit.Assert.assertEquals(uRL56.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 100 + "'", int59 == 100);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNotNull(archiveList70);
        org.junit.Assert.assertNotNull(archiveList72);
        org.junit.Assert.assertNotNull(asciiBytesMap73);
        org.junit.Assert.assertNotNull(asciiBytesMap75);
        org.junit.Assert.assertEquals(uRL79.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL80.toString(), "hi!://:100/hi!://:100:///archivehi!://:100/hi!://:100/hi!://[/hi!://:100/archive]");
        org.junit.Assert.assertEquals(uRL81.toString(), "hi!://:100/:52");
        org.junit.Assert.assertEquals(uRL82.toString(), "hi!://:100/hi!://[hi!://:100/archive:///archive:1hi!://:100/hi!://:100/archive:///archive:0hi!://:100]:1[archive://:10archive]://[/archive://[hi!://:100/hi!]:1/hi!]:97hi!://:100/hi!://:100/hi!://hi!");
    }

    @Test
    public void test13078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13078");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = fileEntry4.file;
        java.io.File file6 = fileEntry4.getFile();
        java.io.File file7 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = null;
        fileEntry4.name = asciiBytes8;
        java.io.File file10 = fileEntry4.getFile();
        java.io.File file11 = null;
        fileEntry4.file = file11;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file10);
    }

    @Test
    public void test13079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13079");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL1 = new java.net.URL("hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!://[hi!://:100/hi!]:0hi!://:100/hi!://:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!://[hi!://:100/hi!]:0hi!://:100/hi!://:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13080");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = null;
        fileEntry4.file = file5;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = null;
        fileEntry4.name = asciiBytes7;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry4.name;
        java.io.File file10 = fileEntry4.file;
        java.io.File file11 = fileEntry4.getFile();
        java.io.File file12 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = null;
        fileEntry4.name = asciiBytes13;
        java.io.File file15 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes16 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes17 = fileEntry4.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes18 = null;
        fileEntry4.name = asciiBytes18;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(asciiBytes16);
        org.junit.Assert.assertNull(asciiBytes17);
    }

    @Test
    public void test13081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13081");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive1.getNestedArchives(entryFilter8);
        java.io.File file10 = null;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap21);
        explodedArchive1.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry26 = explodedArchive25.new FileEntry();
        java.util.jar.Manifest manifest27 = explodedArchive25.manifest;
        boolean boolean28 = explodedArchive25.filtered;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = explodedArchive25.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNull(manifest27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test13082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13082");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter6 = null;
        org.springframework.boot.loader.archive.Archive archive7 = explodedArchive0.getFilteredArchive(entryRenameFilter6);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = null;
        fileEntry8.name = asciiBytes9;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = fileEntry8.name;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archive7);
        org.junit.Assert.assertNull(asciiBytes11);
    }

    @Test
    public void test13083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13083");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter11 = null;
        org.springframework.boot.loader.archive.Archive archive12 = explodedArchive0.getFilteredArchive(entryRenameFilter11);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry13 = explodedArchive0.new FileEntry();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive0.entries;
        boolean boolean15 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter16 = null;
        org.springframework.boot.loader.archive.Archive archive17 = explodedArchive0.getFilteredArchive(entryRenameFilter16);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(archive12);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(archive17);
    }

    @Test
    public void test13084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13084");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        java.io.File file14 = null;
        explodedArchive11.root = file14;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection16 = explodedArchive11.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive11.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive11.getNestedArchives(entryFilter18);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive11.getNestedArchives(entryFilter20);
        java.io.File file22 = null;
        java.io.File file23 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive24.getNestedArchives(entryFilter26);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive24.getNestedArchives(entryFilter28);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive24.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive31.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap32);
        boolean boolean34 = explodedArchive33.filtered;
        explodedArchive33.filtered = false;
        boolean boolean37 = explodedArchive33.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive33.entries;
        explodedArchive11.entries = asciiBytesMap38;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter40 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList41 = explodedArchive11.getNestedArchives(entryFilter40);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive11.getNestedArchives(entryFilter42);
        java.util.jar.Manifest manifest44 = explodedArchive11.getManifest();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(entryCollection16);
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertNotNull(archiveList41);
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertNull(manifest44);
    }

    @Test
    public void test13085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13085");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getFile();
        java.lang.String str25 = uRL9.getRef();
        java.net.URL uRL27 = new java.net.URL(uRL9, "");
        java.lang.String str28 = uRL9.getHost();
        java.lang.String str29 = uRL9.toExternalForm();
        java.lang.String str30 = uRL9.getRef();
        int int31 = uRL9.getDefaultPort();
        java.lang.String str32 = uRL9.getQuery();
        int int33 = uRL9.getPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!://:100" + "'", str29, "hi!://:100");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
    }

    @Test
    public void test13086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13086");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        boolean boolean5 = explodedArchive0.filtered;
        boolean boolean6 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive0.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler11 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest12 = explodedArchive0.getManifest();
        java.lang.String str13 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file22 = explodedArchive21.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive21.getNestedArchives(entryFilter23);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry25 = explodedArchive21.new FileEntry();
        java.lang.String str26 = explodedArchive21.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive21.entries;
        explodedArchive14.entries = asciiBytesMap27;
        explodedArchive14.filtered = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry31 = explodedArchive14.new FileEntry();
        java.io.File file32 = null;
        fileEntry31.file = file32;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes34 = fileEntry31.name;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive35 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "archive" + "'", str26, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertNull(asciiBytes34);
    }

    @Test
    public void test13087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13087");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap4 = null;
        explodedArchive0.entries = asciiBytesMap4;
        java.io.File file6 = explodedArchive0.root;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry9 = explodedArchive0.new FileEntry();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive0.entries;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive0.entries;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(asciiBytesMap10);
        org.junit.Assert.assertNull(asciiBytesMap11);
    }

    @Test
    public void test13088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13088");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getRef();
        int int24 = uRL21.getPort();
        java.lang.String str25 = uRL21.getProtocol();
        java.lang.String str26 = uRL21.getPath();
        java.lang.String str27 = uRL21.getAuthority();
        java.lang.String str28 = uRL21.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str39 = uRL38.getQuery();
        java.lang.String str40 = uRL38.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str47 = explodedArchive46.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection48 = explodedArchive46.getEntries();
        java.util.jar.Manifest manifest49 = explodedArchive46.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler50 = explodedArchive46.new FilteredURLStreamHandler();
        java.net.URL uRL51 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        java.net.URL uRL52 = new java.net.URL(uRL38, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        java.lang.String str53 = uRL38.getFile();
        java.lang.String str54 = uRL38.getAuthority();
        int int55 = uRL38.getPort();
        java.lang.String str56 = uRL38.getFile();
        java.net.URL uRL58 = new java.net.URL(uRL38, "hi!://:100/hi!://:100");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str65 = explodedArchive64.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection66 = explodedArchive64.getEntries();
        java.util.jar.Manifest manifest67 = explodedArchive64.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler68 = explodedArchive64.new FilteredURLStreamHandler();
        java.net.URL uRL69 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler68);
        java.lang.String str70 = uRL69.getPath();
        java.lang.String str71 = uRL69.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str78 = explodedArchive77.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection79 = explodedArchive77.getEntries();
        java.util.jar.Manifest manifest80 = explodedArchive77.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler81 = explodedArchive77.new FilteredURLStreamHandler();
        java.net.URL uRL82 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler81);
        java.net.URL uRL83 = new java.net.URL(uRL69, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler81);
        java.net.URL uRL84 = new java.net.URL(uRL58, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler81);
        java.lang.String str85 = uRL84.getQuery();
        boolean boolean86 = uRL21.sameFile(uRL84);
        boolean boolean87 = uRL9.sameFile(uRL84);
        java.net.URL uRL89 = new java.net.URL(uRL9, "hi!://:100/[hi!://:100/hi!]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + ":100" + "'", str27, ":100");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "archive" + "'", str47, "archive");
        org.junit.Assert.assertNotNull(entryCollection48);
        org.junit.Assert.assertNull(manifest49);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + ":100" + "'", str54, ":100");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals(uRL58.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "archive" + "'", str65, "archive");
        org.junit.Assert.assertNotNull(entryCollection66);
        org.junit.Assert.assertNull(manifest67);
        org.junit.Assert.assertEquals(uRL69.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "archive" + "'", str78, "archive");
        org.junit.Assert.assertNotNull(entryCollection79);
        org.junit.Assert.assertNull(manifest80);
        org.junit.Assert.assertEquals(uRL82.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL83.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL84.toString(), "hi!://:100/hi!://:100/hi!://hi!");
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertEquals(uRL89.toString(), "hi!://:100/hi!://:100/[hi!://:100/hi!]");
    }

    @Test
    public void test13089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13089");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        java.lang.String str12 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str23 = explodedArchive22.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection24 = explodedArchive22.getEntries();
        java.util.jar.Manifest manifest25 = explodedArchive22.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler26 = explodedArchive22.new FilteredURLStreamHandler();
        java.net.URL uRL27 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler26);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getQuery();
        java.lang.String str39 = uRL37.getPath();
        boolean boolean40 = uRL27.sameFile(uRL37);
        java.net.URLStreamHandler uRLStreamHandler42 = null;
        java.net.URL uRL43 = new java.net.URL(uRL37, "", uRLStreamHandler42);
        int int44 = uRL43.getPort();
        java.lang.String str45 = uRL43.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str56 = explodedArchive55.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap57 = null;
        explodedArchive55.entries = asciiBytesMap57;
        java.util.jar.Manifest manifest59 = null;
        explodedArchive55.manifest = manifest59;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler61 = explodedArchive55.new FilteredURLStreamHandler();
        java.net.URL uRL62 = new java.net.URL("hi!", ":100", (int) '4', "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.net.URL uRL63 = new java.net.URL("hi!://:100/hi!://:100/hi!", "/hi!://:100/archive", (-1), "", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.net.URL uRL64 = new java.net.URL(uRL43, "hi!://hi!:1hi!", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.net.URL uRL65 = new java.net.URL("hi!://:100/hi!://:100/archive", "hi!://:100/:100", (int) (byte) 10, "", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.net.URL uRL66 = new java.net.URL(uRL9, "[hi!://:100/hi!]:0", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.lang.String str67 = uRL66.getUserInfo();
        java.lang.String str68 = uRL66.getHost();
        java.lang.String str69 = uRL66.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "archive" + "'", str23, "archive");
        org.junit.Assert.assertNotNull(entryCollection24);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://:100");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "archive" + "'", str56, "archive");
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://[:100]:52hi!");
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]");
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100/hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10");
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/[hi!://:100/hi!]:0");
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNull(str69);
    }

    @Test
    public void test13090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13090");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        java.io.File file14 = null;
        explodedArchive11.root = file14;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection16 = explodedArchive11.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive11.getEntries();
        java.lang.String str18 = explodedArchive11.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry();
        explodedArchive11.filtered = true;
        boolean boolean22 = explodedArchive11.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry23 = explodedArchive11.new FileEntry();
        java.io.File file24 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str26 = explodedArchive25.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection27 = explodedArchive25.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler28 = explodedArchive25.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter29 = null;
        org.springframework.boot.loader.archive.Archive archive30 = explodedArchive25.getFilteredArchive(entryRenameFilter29);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str32 = explodedArchive31.toString();
        boolean boolean33 = explodedArchive31.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter34 = null;
        org.springframework.boot.loader.archive.Archive archive35 = explodedArchive31.getFilteredArchive(entryRenameFilter34);
        explodedArchive31.filtered = true;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection38 = explodedArchive31.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive31.entries;
        explodedArchive25.entries = asciiBytesMap39;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file24, asciiBytesMap39);
        explodedArchive11.entries = asciiBytesMap39;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL43 = explodedArchive11.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(entryCollection16);
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "archive" + "'", str26, "archive");
        org.junit.Assert.assertNotNull(entryCollection27);
        org.junit.Assert.assertNotNull(archive30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "archive" + "'", str32, "archive");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(archive35);
        org.junit.Assert.assertNotNull(entryCollection38);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
    }

    @Test
    public void test13091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13091");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getFile();
        int int37 = uRL35.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str44 = explodedArchive43.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive43.getEntries();
        java.util.jar.Manifest manifest46 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.lang.String str49 = uRL48.getQuery();
        java.lang.String str50 = uRL48.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str57 = explodedArchive56.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection58 = explodedArchive56.getEntries();
        java.util.jar.Manifest manifest59 = explodedArchive56.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler60 = explodedArchive56.new FilteredURLStreamHandler();
        java.net.URL uRL61 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL62 = new java.net.URL(uRL48, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL63 = new java.net.URL(uRL35, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL64 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL66 = new java.net.URL(uRL64, ":100");
        java.lang.String str67 = uRL66.toExternalForm();
        java.lang.String str68 = uRL66.getQuery();
        int int69 = uRL66.getPort();
        java.lang.String str70 = uRL66.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "archive" + "'", str44, "archive");
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "archive" + "'", str57, "archive");
        org.junit.Assert.assertNotNull(entryCollection58);
        org.junit.Assert.assertNull(manifest59);
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!://:100/:100" + "'", str67, "hi!://:100/:100");
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 100 + "'", int69 == 100);
        org.junit.Assert.assertNull(str70);
    }

    @Test
    public void test13092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13092");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL9.getPath();
        java.lang.String str39 = uRL9.getPath();
        java.lang.String str40 = uRL9.getHost();
        java.lang.String str41 = uRL9.getQuery();
        java.lang.String str42 = uRL9.getQuery();
        java.lang.String str43 = uRL9.getRef();
        int int44 = uRL9.getPort();
        java.lang.String str45 = uRL9.getFile();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
    }

    @Test
    public void test13093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13093");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        java.util.jar.Manifest manifest13 = null;
        explodedArchive11.manifest = manifest13;
        java.util.jar.Manifest manifest15 = explodedArchive11.manifest;
        java.util.jar.Manifest manifest16 = explodedArchive11.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler17 = explodedArchive11.new FilteredURLStreamHandler();
        boolean boolean18 = explodedArchive11.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry();
        java.io.File file20 = null;
        fileEntry19.file = file20;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertNull(manifest16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test13094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13094");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        java.util.jar.Manifest manifest14 = explodedArchive11.getManifest();
        java.util.jar.Manifest manifest15 = explodedArchive11.manifest;
        java.io.File file16 = null;
        explodedArchive11.root = file16;
        java.io.File file18 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive19.getNestedArchives(entryFilter21);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive19.getNestedArchives(entryFilter23);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive26.entries;
        explodedArchive11.entries = asciiBytesMap27;
        java.io.File file29 = null;
        explodedArchive11.root = file29;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection31 = explodedArchive11.getEntries();
        java.util.jar.Manifest manifest32 = explodedArchive11.getManifest();
        java.lang.String str33 = explodedArchive11.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive11.getNestedArchives(entryFilter34);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter36 = null;
        org.springframework.boot.loader.archive.Archive archive37 = explodedArchive11.getFilteredArchive(entryRenameFilter36);
        explodedArchive11.filtered = true;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter40 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList41 = explodedArchive11.getNestedArchives(entryFilter40);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(manifest14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertNotNull(entryCollection31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(archive37);
        org.junit.Assert.assertNotNull(archiveList41);
    }

    @Test
    public void test13095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13095");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.io.File file7 = explodedArchive4.root;
        java.util.jar.Manifest manifest8 = explodedArchive4.getManifest();
        java.io.File file9 = null;
        explodedArchive4.root = file9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive4.new FileEntry();
        java.lang.String str12 = explodedArchive4.toString();
        java.util.jar.Manifest manifest13 = explodedArchive4.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler14 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL15 = new java.net.URL("[archive://:0hi!://:100/hi!]", "", (int) (short) -1, "/archive:///archive:0hi!://:100://[hi!://:100/archive]:100/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler14);
        java.lang.String str16 = uRL15.getUserInfo();
        java.lang.String str17 = uRL15.getPath();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "archive" + "'", str12, "archive");
        org.junit.Assert.assertNull(manifest13);
        org.junit.Assert.assertEquals(uRL15.toString(), "[archive://:0hi!://:100/hi!]:/archive:///archive:0hi!://:100://[hi!://:100/archive]:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/archive:///archive:0hi!://:100://[hi!://:100/archive]:100/archive:///archive:0hi!://:100" + "'", str17, "/archive:///archive:0hi!://:100://[hi!://:100/archive]:100/archive:///archive:0hi!://:100");
    }

    @Test
    public void test13096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13096");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str30 = explodedArchive29.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection31 = explodedArchive29.getEntries();
        java.util.jar.Manifest manifest32 = explodedArchive29.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL36 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL37 = new java.net.URL("archive://:10archive", "[hi!://:100/hi!]", 10, "://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL38 = new java.net.URL("hi!://:100/:100", "hi!://:100/:100", (int) (short) 0, "/archive://[hi!://:100/hi!]:1/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.lang.String str39 = uRL38.getRef();
        java.io.File file45 = null;
        java.io.File file46 = null;
        java.io.File file47 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file49 = explodedArchive48.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter50 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList51 = explodedArchive48.getNestedArchives(entryFilter50);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter52 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList53 = explodedArchive48.getNestedArchives(entryFilter52);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap54 = explodedArchive48.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive(file47, asciiBytesMap54);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap56 = explodedArchive55.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive(file46, asciiBytesMap56);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive(file45, asciiBytesMap56);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler59 = explodedArchive58.new FilteredURLStreamHandler();
        java.net.URL uRL60 = new java.net.URL("/archive:///archive:0hi!://:100", "/archive:///archive:0hi!://:100", (int) (byte) 10, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.net.URL uRL61 = new java.net.URL(uRL38, "hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.lang.String str62 = uRL38.getQuery();
        int int63 = uRL38.getPort();
        java.lang.String str64 = uRL38.getHost();
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "archive" + "'", str30, "archive");
        org.junit.Assert.assertNotNull(entryCollection31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertEquals(uRL34.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL36.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL37.toString(), "archive://:10archive://[hi!://:100/hi!]:10://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(archiveList51);
        org.junit.Assert.assertNotNull(archiveList53);
        org.junit.Assert.assertNotNull(asciiBytesMap54);
        org.junit.Assert.assertNotNull(asciiBytesMap56);
        org.junit.Assert.assertEquals(uRL60.toString(), "/archive:///archive:0hi!://:100://[/archive:///archive:0hi!://:100]:10hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[hi!://:100/:100]" + "'", str64, "[hi!://:100/:100]");
    }

    @Test
    public void test13097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13097");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.io.File file3 = null;
        explodedArchive0.root = file3;
        java.util.jar.Manifest manifest5 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection8 = explodedArchive0.getEntries();
        org.junit.Assert.assertNull(manifest5);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(entryCollection8);
    }

    @Test
    public void test13098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13098");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getQuery();
        java.net.URL uRL15 = new java.net.URL(uRL9, "");
        java.io.File file17 = null;
        java.io.File file18 = null;
        java.io.File file19 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive20.getNestedArchives(entryFilter22);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive20.getNestedArchives(entryFilter24);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file19, asciiBytesMap26);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = explodedArchive27.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap28);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap28);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL(uRL15, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str50 = explodedArchive49.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection51 = explodedArchive49.getEntries();
        java.util.jar.Manifest manifest52 = explodedArchive49.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler53 = explodedArchive49.new FilteredURLStreamHandler();
        java.net.URL uRL54 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        java.lang.String str55 = uRL54.getQuery();
        java.lang.String str56 = uRL54.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str63 = explodedArchive62.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection64 = explodedArchive62.getEntries();
        java.util.jar.Manifest manifest65 = explodedArchive62.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler66 = explodedArchive62.new FilteredURLStreamHandler();
        java.net.URL uRL67 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.net.URL uRL68 = new java.net.URL(uRL54, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.net.URL uRL69 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.net.URL uRL70 = new java.net.URL("archive://:10archive", "[hi!://:100/hi!]", 10, "://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.net.URL uRL71 = new java.net.URL("hi!://:100/:100", "hi!://:100/:100", (int) (short) 0, "/archive://[hi!://:100/hi!]:1/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        boolean boolean72 = uRL32.sameFile(uRL71);
        int int73 = uRL71.getDefaultPort();
        int int74 = uRL71.getPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNotNull(asciiBytesMap28);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "archive" + "'", str50, "archive");
        org.junit.Assert.assertNotNull(entryCollection51);
        org.junit.Assert.assertNull(manifest52);
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "archive" + "'", str63, "archive");
        org.junit.Assert.assertNotNull(entryCollection64);
        org.junit.Assert.assertNull(manifest65);
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL69.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL70.toString(), "archive://:10archive://[hi!://:100/hi!]:10://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL71.toString(), "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
    }

    @Test
    public void test13099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13099");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str19 = explodedArchive18.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection20 = explodedArchive18.getEntries();
        java.util.jar.Manifest manifest21 = explodedArchive18.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive18.new FilteredURLStreamHandler();
        java.net.URL uRL23 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler22);
        java.lang.String str24 = uRL23.getQuery();
        int int25 = uRL23.getPort();
        java.lang.String str26 = uRL23.getFile();
        java.lang.String str27 = uRL23.getAuthority();
        int int28 = uRL23.getDefaultPort();
        boolean boolean29 = uRL9.equals((java.lang.Object) int28);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "archive" + "'", str19, "archive");
        org.junit.Assert.assertNotNull(entryCollection20);
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + ":100" + "'", str27, ":100");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test13100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13100");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry8.name;
        java.io.File file10 = fileEntry8.getFile();
        java.io.File file11 = null;
        fileEntry8.file = file11;
        java.io.File file13 = null;
        fileEntry8.file = file13;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNull(asciiBytes9);
        org.junit.Assert.assertNull(file10);
    }

    @Test
    public void test13101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13101");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file8 = null;
        java.io.File file9 = null;
        java.io.File file10 = null;
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap20);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap20);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap20);
        explodedArchive0.entries = asciiBytesMap20;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest27 = explodedArchive0.manifest;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertNull(manifest27);
    }

    @Test
    public void test13102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13102");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet2 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet2, strArray1);
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet2;
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet2;
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet2;
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet2;
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet2;
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet2;
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet2;
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet2;
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet2;
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet2;
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet2;
        org.springframework.boot.loader.archive.ExplodedArchive.SKIPPED_NAMES = strSet2;
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test13103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13103");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter11 = null;
        org.springframework.boot.loader.archive.Archive archive12 = explodedArchive0.getFilteredArchive(entryRenameFilter11);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry13 = explodedArchive0.new FileEntry();
        boolean boolean14 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest15 = null;
        explodedArchive0.manifest = manifest15;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(archive12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test13104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13104");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.toExternalForm();
        java.lang.String str14 = uRL9.getRef();
        java.lang.String str15 = uRL9.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getHost();
        java.lang.String str28 = uRL25.getProtocol();
        java.lang.String str29 = uRL25.getFile();
        boolean boolean30 = uRL9.sameFile(uRL25);
        java.lang.String str31 = uRL25.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100" + "'", str13, "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test13105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13105");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
        java.lang.String str8 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry9 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = null;
        fileEntry9.name = asciiBytes10;
        java.io.File file12 = fileEntry9.getFile();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = fileEntry9.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test13106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13106");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.lang.String str7 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        explodedArchive8.filtered = false;
        java.util.jar.Manifest manifest14 = explodedArchive8.manifest;
        java.io.File file15 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive16.getNestedArchives(entryFilter18);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive16.getNestedArchives(entryFilter20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive16.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file15, asciiBytesMap22);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = explodedArchive23.entries;
        explodedArchive8.entries = asciiBytesMap24;
        explodedArchive0.entries = asciiBytesMap24;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive0.getNestedArchives(entryFilter28);
        java.util.jar.Manifest manifest30 = explodedArchive0.manifest;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNull(manifest14);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNotNull(asciiBytesMap24);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNull(manifest30);
    }

    @Test
    public void test13107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13107");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive7.getNestedArchives(entryFilter9);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive7.new FileEntry();
        java.lang.String str12 = explodedArchive7.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive7.entries;
        explodedArchive0.entries = asciiBytesMap13;
        java.io.File file15 = explodedArchive0.root;
        boolean boolean16 = explodedArchive0.filtered;
        boolean boolean17 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry18 = explodedArchive0.new FileEntry();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "archive" + "'", str12, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test13108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13108");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap4 = null;
        explodedArchive0.entries = asciiBytesMap4;
        java.io.File file6 = explodedArchive0.root;
        java.io.File file7 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive8.getNestedArchives(entryFilter12);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive8.entries;
        explodedArchive0.entries = asciiBytesMap14;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive0.new FilteredURLStreamHandler();
        explodedArchive0.filtered = true;
        java.lang.String str19 = explodedArchive0.toString();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "archive" + "'", str19, "archive");
    }

    @Test
    public void test13109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13109");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap2 = null;
        explodedArchive0.entries = asciiBytesMap2;
        java.util.jar.Manifest manifest4 = explodedArchive0.manifest;
        java.io.File file5 = null;
        explodedArchive0.root = file5;
        java.io.File file7 = null;
        explodedArchive0.root = file7;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive0.getNestedArchives(entryFilter9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest4);
    }

    @Test
    public void test13110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13110");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive0.getNestedArchives(entryFilter9);
        explodedArchive0.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive0.entries;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive0.getEntries();
        java.lang.String str15 = explodedArchive0.toString();
        java.io.File file16 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file16, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNotNull(asciiBytesMap13);
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "archive" + "'", str15, "archive");
    }

    @Test
    public void test13111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13111");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getAuthority();
        java.lang.String str25 = uRL9.getRef();
        java.lang.String str26 = uRL9.getProtocol();
        java.lang.String str27 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getFile();
        int int39 = uRL37.getDefaultPort();
        java.lang.String str40 = uRL37.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection47 = explodedArchive45.getEntries();
        java.util.jar.Manifest manifest48 = explodedArchive45.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.lang.String str51 = uRL50.getQuery();
        java.lang.String str52 = uRL50.getRef();
        java.lang.String str53 = uRL50.getRef();
        java.lang.String str54 = uRL50.toExternalForm();
        boolean boolean55 = uRL37.sameFile(uRL50);
        java.lang.String str56 = uRL50.getUserInfo();
        java.lang.String str57 = uRL50.getHost();
        java.lang.String str58 = uRL50.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file61 = explodedArchive60.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter62 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList63 = explodedArchive60.getNestedArchives(entryFilter62);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter64 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList65 = explodedArchive60.getNestedArchives(entryFilter64);
        java.lang.String str66 = explodedArchive60.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler67 = explodedArchive60.new FilteredURLStreamHandler();
        java.net.URL uRL68 = new java.net.URL(uRL50, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler67);
        boolean boolean69 = uRL9.sameFile(uRL50);
        java.lang.String str70 = uRL50.getQuery();
        java.lang.String str71 = uRL50.getQuery();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI72 = uRL50.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertNotNull(entryCollection47);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!://:100" + "'", str54, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(archiveList63);
        org.junit.Assert.assertNotNull(archiveList65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "archive" + "'", str66, "archive");
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(str71);
    }

    @Test
    public void test13112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13112");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes6 = null;
        fileEntry4.name = asciiBytes6;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry4.name;
        java.io.File file9 = fileEntry4.getFile();
        java.io.File file10 = fileEntry4.file;
        java.io.File file11 = null;
        fileEntry4.file = file11;
        java.io.File file13 = null;
        fileEntry4.file = file13;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
    }

    @Test
    public void test13113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13113");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = null;
        explodedArchive8.entries = asciiBytesMap10;
        java.util.jar.Manifest manifest12 = null;
        explodedArchive8.manifest = manifest12;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler14 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL15 = new java.net.URL("hi!", ":100", (int) '4', "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler14);
        java.net.URL uRL16 = new java.net.URL("hi!://:100/hi!://:100/hi!", "/hi!://:100/archive", (-1), "", (java.net.URLStreamHandler) filteredURLStreamHandler14);
        int int17 = uRL16.getDefaultPort();
        java.lang.String str18 = uRL16.getRef();
        java.lang.String str19 = uRL16.toExternalForm();
        java.lang.String str20 = uRL16.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str26 = explodedArchive25.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection27 = explodedArchive25.getEntries();
        java.util.jar.Manifest manifest28 = explodedArchive25.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive25.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str37 = explodedArchive36.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection38 = explodedArchive36.getEntries();
        java.util.jar.Manifest manifest39 = explodedArchive36.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler40 = explodedArchive36.new FilteredURLStreamHandler();
        java.net.URL uRL41 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler40);
        java.lang.String str42 = uRL41.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str49 = explodedArchive48.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection50 = explodedArchive48.getEntries();
        java.util.jar.Manifest manifest51 = explodedArchive48.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler52 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL53 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler52);
        java.lang.String str54 = uRL53.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str57 = explodedArchive56.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection58 = explodedArchive56.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler59 = explodedArchive56.new FilteredURLStreamHandler();
        java.net.URL uRL60 = new java.net.URL(uRL53, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.net.URL uRL61 = new java.net.URL(uRL41, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.net.URL uRL62 = new java.net.URL(uRL30, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.lang.String str63 = uRL30.getAuthority();
        java.net.URL uRL65 = new java.net.URL(uRL30, "hi!://:100/archive:///archive:0hi!://:100");
        boolean boolean66 = uRL16.sameFile(uRL65);
        java.lang.String str67 = uRL65.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str73 = explodedArchive72.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection74 = explodedArchive72.getEntries();
        java.util.jar.Manifest manifest75 = explodedArchive72.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler76 = explodedArchive72.new FilteredURLStreamHandler();
        java.net.URL uRL77 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler76);
        java.lang.String str78 = uRL77.getQuery();
        java.lang.String str79 = uRL77.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive85 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str86 = explodedArchive85.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection87 = explodedArchive85.getEntries();
        java.util.jar.Manifest manifest88 = explodedArchive85.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler89 = explodedArchive85.new FilteredURLStreamHandler();
        java.net.URL uRL90 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler89);
        java.net.URL uRL91 = new java.net.URL(uRL77, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler89);
        java.lang.String str92 = uRL77.getFile();
        java.lang.String str93 = uRL77.getAuthority();
        int int94 = uRL77.getPort();
        java.lang.String str95 = uRL77.getFile();
        int int96 = uRL77.getPort();
        boolean boolean97 = uRL65.equals((java.lang.Object) int96);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://[:100]:52hi!");
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]" + "'", str19, "hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "archive" + "'", str26, "archive");
        org.junit.Assert.assertNotNull(entryCollection27);
        org.junit.Assert.assertNull(manifest28);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
        org.junit.Assert.assertNotNull(entryCollection38);
        org.junit.Assert.assertNull(manifest39);
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "archive" + "'", str49, "archive");
        org.junit.Assert.assertNotNull(entryCollection50);
        org.junit.Assert.assertNull(manifest51);
        org.junit.Assert.assertEquals(uRL53.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "archive" + "'", str57, "archive");
        org.junit.Assert.assertNotNull(entryCollection58);
        org.junit.Assert.assertEquals(uRL60.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + ":100" + "'", str63, ":100");
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/hi!://:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "archive" + "'", str73, "archive");
        org.junit.Assert.assertNotNull(entryCollection74);
        org.junit.Assert.assertNull(manifest75);
        org.junit.Assert.assertEquals(uRL77.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "archive" + "'", str86, "archive");
        org.junit.Assert.assertNotNull(entryCollection87);
        org.junit.Assert.assertNull(manifest88);
        org.junit.Assert.assertEquals(uRL90.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL91.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + ":100" + "'", str93, ":100");
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 100 + "'", int94 == 100);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "" + "'", str95, "");
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 100 + "'", int96 == 100);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test13114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13114");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.io.File file3 = null;
        explodedArchive0.root = file3;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection5 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest6 = null;
        explodedArchive0.manifest = manifest6;
        boolean boolean8 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest9 = null;
        explodedArchive0.manifest = manifest9;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive0.new FileEntry();
        java.io.File file12 = fileEntry11.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry11.getName();
        org.junit.Assert.assertNotNull(entryCollection5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(asciiBytes13);
    }

    @Test
    public void test13115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13115");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive0.entries;
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        explodedArchive22.filtered = true;
        java.util.jar.Manifest manifest25 = explodedArchive22.getManifest();
        java.util.jar.Manifest manifest26 = explodedArchive22.manifest;
        java.io.File file27 = null;
        explodedArchive22.root = file27;
        java.io.File file29 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive30.getNestedArchives(entryFilter32);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive30.getNestedArchives(entryFilter34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = explodedArchive30.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file29, asciiBytesMap36);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive37.entries;
        explodedArchive22.entries = asciiBytesMap38;
        explodedArchive0.entries = asciiBytesMap38;
        boolean boolean41 = explodedArchive0.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest43 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter44 = null;
        org.springframework.boot.loader.archive.Archive archive45 = explodedArchive0.getFilteredArchive(entryRenameFilter44);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry46 = explodedArchive0.new FileEntry();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean47 = fileEntry46.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertNull(manifest26);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(asciiBytesMap36);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertNotNull(archive45);
    }

    @Test
    public void test13116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13116");
        java.io.File file12 = null;
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive21.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap22);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive23.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("", "archive://:10archive", (int) (short) 100, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.net.URL uRL26 = new java.net.URL("hi!", "://[archive://:10archive]:100archive://:10archive", 0, "hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.net.URL uRL27 = new java.net.URL("/hi!", "archive", (int) (short) -1, "archive://:10:100", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getQuery();
        java.lang.String str39 = uRL37.getRef();
        int int40 = uRL37.getPort();
        java.lang.String str41 = uRL37.getProtocol();
        boolean boolean42 = uRL27.sameFile(uRL37);
        java.lang.String str43 = uRL37.getQuery();
        java.lang.String str44 = uRL37.getProtocol();
        int int45 = uRL37.getDefaultPort();
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertEquals(uRL25.toString(), "://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals(uRL27.toString(), "/hi!://archivearchive://:10:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
    }

    @Test
    public void test13117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13117");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str42 = uRL9.getQuery();
        java.lang.String str43 = uRL9.getRef();
        java.lang.String str44 = uRL9.getQuery();
        java.lang.String str45 = uRL9.getRef();
        java.lang.String str46 = uRL9.getRef();
        java.lang.String str47 = uRL9.getHost();
        java.lang.String str48 = uRL9.getQuery();
        java.net.URL uRL50 = new java.net.URL(uRL9, "[hi!://:100/hi!]");
        java.io.File file56 = null;
        java.io.File file57 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file59 = explodedArchive58.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter60 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList61 = explodedArchive58.getNestedArchives(entryFilter60);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter62 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList63 = explodedArchive58.getNestedArchives(entryFilter62);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap64 = explodedArchive58.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive(file57, asciiBytesMap64);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap66 = explodedArchive65.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive(file56, asciiBytesMap66);
        explodedArchive67.filtered = true;
        java.io.File file70 = null;
        explodedArchive67.root = file70;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection72 = explodedArchive67.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection73 = explodedArchive67.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler74 = explodedArchive67.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler75 = explodedArchive67.new FilteredURLStreamHandler();
        java.net.URL uRL76 = new java.net.URL("[/:100]:0", "hi!://:100/hi!:1", 0, "/:100", (java.net.URLStreamHandler) filteredURLStreamHandler75);
        java.net.URL uRL77 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler75);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive86 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str87 = explodedArchive86.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection88 = explodedArchive86.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter89 = null;
        org.springframework.boot.loader.archive.Archive archive90 = explodedArchive86.getFilteredArchive(entryRenameFilter89);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler91 = explodedArchive86.new FilteredURLStreamHandler();
        java.net.URL uRL92 = new java.net.URL("hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://[hi!://:100/:100]:100", "hi!://:100/hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100", 52, "hi!://:100/hi!://:100/hi!://hi!", (java.net.URLStreamHandler) filteredURLStreamHandler91);
        java.net.URL uRL93 = new java.net.URL("hi!://:100/:100", "[hi!://:100/hi!]", (int) (byte) -1, ":52", (java.net.URLStreamHandler) filteredURLStreamHandler91);
        boolean boolean94 = uRL9.equals((java.lang.Object) (byte) -1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100/[hi!://:100/hi!]");
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(archiveList61);
        org.junit.Assert.assertNotNull(archiveList63);
        org.junit.Assert.assertNotNull(asciiBytesMap64);
        org.junit.Assert.assertNotNull(asciiBytesMap66);
        org.junit.Assert.assertNotNull(entryCollection72);
        org.junit.Assert.assertNotNull(entryCollection73);
        org.junit.Assert.assertEquals(uRL76.toString(), "[/:100]:0://[hi!://:100/hi!:1]:0/:100");
        org.junit.Assert.assertEquals(uRL77.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "archive" + "'", str87, "archive");
        org.junit.Assert.assertNotNull(entryCollection88);
        org.junit.Assert.assertNotNull(archive90);
        org.junit.Assert.assertEquals(uRL92.toString(), "hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://[hi!://:100/:100]:100://[hi!://:100/hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100]:52hi!://:100/hi!://:100/hi!://hi!");
        org.junit.Assert.assertEquals(uRL93.toString(), "hi!://:100/:100://[hi!://:100/hi!]:52");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test13118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13118");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        int int17 = uRL16.getPort();
        java.lang.String str18 = uRL16.toExternalForm();
        java.lang.String str19 = uRL16.getQuery();
        int int20 = uRL16.getPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!://:100/hi!" + "'", str18, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
    }

    @Test
    public void test13119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13119");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        int int24 = uRL23.getPort();
        int int25 = uRL23.getDefaultPort();
        java.lang.String str26 = uRL23.getQuery();
        java.lang.String str27 = uRL23.toExternalForm();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!://:100/hi!" + "'", str27, "hi!://:100/hi!");
    }

    @Test
    public void test13120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13120");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("[://[archive://:10archive]:100archive://:10archive]:100://[/hi!://:100/archive]:0:35[archive://:10archive]://[://[archive://:10archive]:100archive://:10archive]:52/hi!:1", "/hi!://:100/[hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]]:10", "hi!://:100/:100://[archive://:10archive]hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: [://[archive://:10archive]:100archive://:10archive]:100://[/hi!://:100/archive]:0:35[archive://:10archive]://[://[archive://:10archive]:100archive://:10archive]:52/hi!:1");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13121");
        java.lang.String str1 = java.net.URLConnection.guessContentTypeFromName("archive://:10:100://:32/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test13122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13122");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.lang.String str7 = explodedArchive0.toString();
        java.lang.String str8 = explodedArchive0.toString();
        java.util.jar.Manifest manifest9 = explodedArchive0.manifest;
        boolean boolean10 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest11 = null;
        explodedArchive0.manifest = manifest11;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive0.getNestedArchives(entryFilter13);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection15 = explodedArchive0.getEntries();
        java.io.File file16 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file16, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(entryCollection15);
    }

    @Test
    public void test13123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13123");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getQuery();
        java.lang.String str14 = uRL9.getFile();
        java.lang.String str15 = uRL9.getRef();
        java.lang.String str16 = uRL9.getPath();
        int int17 = uRL9.getDefaultPort();
        java.lang.String str18 = uRL9.getQuery();
        java.net.URL uRL20 = new java.net.URL(uRL9, "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        int int21 = uRL20.getDefaultPort();
        java.lang.String str22 = uRL20.getPath();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals(uRL20.toString(), "hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1" + "'", str22, "/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
    }

    @Test
    public void test13124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13124");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = null;
        fileEntry4.file = file5;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = null;
        fileEntry4.name = asciiBytes7;
        java.io.File file9 = null;
        fileEntry4.file = file9;
        java.io.File file11 = null;
        fileEntry4.file = file11;
        java.io.File file13 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = null;
        fileEntry4.name = asciiBytes14;
        java.io.File file16 = fileEntry4.file;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file16);
    }

    @Test
    public void test13125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13125");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
        java.util.jar.Manifest manifest8 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter9 = null;
        org.springframework.boot.loader.archive.Archive archive10 = explodedArchive0.getFilteredArchive(entryRenameFilter9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive0.new FilteredURLStreamHandler();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNotNull(archive10);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
    }

    @Test
    public void test13126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13126");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str42 = uRL41.getProtocol();
        java.lang.String str43 = uRL41.getFile();
        java.net.URL uRL45 = new java.net.URL(uRL41, "hi!://[:100]:52hi!");
        java.lang.String str46 = uRL41.getHost();
        java.net.Proxy proxy47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection48 = uRL41.openConnection(proxy47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100/hi!://[:100]:52hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
    }

    @Test
    public void test13127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13127");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.lang.String str5 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest7 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest8 = explodedArchive0.manifest;
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive0.getNestedArchives(entryFilter11);
        java.io.File file13 = null;
        explodedArchive0.root = file13;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNotNull(archiveList12);
    }

    @Test
    public void test13128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13128");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        explodedArchive1.filtered = false;
        java.util.jar.Manifest manifest7 = explodedArchive1.manifest;
        java.io.File file8 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap15);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive16.entries;
        explodedArchive1.entries = asciiBytesMap17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap17);
        java.util.jar.Manifest manifest20 = null;
        explodedArchive19.manifest = manifest20;
        java.lang.String str22 = explodedArchive19.toString();
        java.io.File file23 = null;
        explodedArchive19.root = file23;
        boolean boolean25 = explodedArchive19.filtered;
        java.io.File file26 = explodedArchive19.root;
        explodedArchive19.filtered = false;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNotNull(asciiBytesMap17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(file26);
    }

    @Test
    public void test13129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13129");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getProtocol();
        java.lang.String str14 = uRL9.getPath();
        java.lang.String str15 = uRL9.getAuthority();
        java.lang.String str16 = uRL9.getRef();
        int int17 = uRL9.getPort();
        java.lang.String str18 = uRL9.getAuthority();
        int int19 = uRL9.getDefaultPort();
        int int20 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive26.filtered = true;
        java.util.jar.Manifest manifest29 = null;
        explodedArchive26.manifest = manifest29;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter31 = null;
        org.springframework.boot.loader.archive.Archive archive32 = explodedArchive26.getFilteredArchive(entryRenameFilter31);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection33 = explodedArchive26.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive26.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive26.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter36 = null;
        org.springframework.boot.loader.archive.Archive archive37 = explodedArchive26.getFilteredArchive(entryRenameFilter36);
        java.util.jar.Manifest manifest38 = null;
        explodedArchive26.manifest = manifest38;
        java.util.jar.Manifest manifest40 = null;
        explodedArchive26.manifest = manifest40;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler42 = explodedArchive26.new FilteredURLStreamHandler();
        java.net.URL uRL43 = new java.net.URL("archive", "hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", 10, "hi!://:100/[/hi!://:100/archive]", (java.net.URLStreamHandler) filteredURLStreamHandler42);
        java.net.URL uRL44 = new java.net.URL(uRL9, "[archive://:10archive]:1", (java.net.URLStreamHandler) filteredURLStreamHandler42);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + ":100" + "'", str15, ":100");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + ":100" + "'", str18, ":100");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(archive32);
        org.junit.Assert.assertNotNull(entryCollection33);
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertNotNull(archive37);
        org.junit.Assert.assertEquals(uRL43.toString(), "archive://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:10hi!://:100/[/hi!://:100/archive]");
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100/[archive://:10archive]:1");
    }

    @Test
    public void test13130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13130");
        java.net.URLConnection.setDefaultRequestProperty("[/hi!://:100/archive]:0://:52[://[archive://:10archive]:100archive://:10archive]:100", "/[:100]");
    }

    @Test
    public void test13131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13131");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive3.getNestedArchives(entryFilter5);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive3.getNestedArchives(entryFilter7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap11);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap11);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler14 = explodedArchive13.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest15 = explodedArchive13.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNotNull(archiveList18);
    }

    @Test
    public void test13132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13132");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("[/hi!://:100/hi!://:100]:0", "hi!://:100/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", "/hi!://:100/hi!://:100/:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: [/hi!://:100/hi!://:100]:0");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13133");
        java.net.URLConnection.setDefaultRequestProperty("hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/archive", "");
    }

    @Test
    public void test13134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13134");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = null;
        fileEntry4.file = file5;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = null;
        fileEntry4.name = asciiBytes7;
        java.io.File file9 = null;
        fileEntry4.file = file9;
        java.io.File file11 = null;
        fileEntry4.file = file11;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry4.getName();
        java.io.File file14 = fileEntry4.getFile();
        java.io.File file15 = null;
        fileEntry4.file = file15;
        java.io.File file17 = null;
        fileEntry4.file = file17;
        java.io.File file19 = fileEntry4.file;
        java.io.File file20 = fileEntry4.getFile();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
    }

    @Test
    public void test13135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13135");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap4 = null;
        explodedArchive0.entries = asciiBytesMap4;
        java.io.File file6 = explodedArchive0.root;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive0.entries;
        java.io.File file10 = explodedArchive0.root;
        java.util.jar.Manifest manifest11 = null;
        explodedArchive0.manifest = manifest11;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive0.entries;
        explodedArchive0.filtered = false;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(asciiBytesMap9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(asciiBytesMap13);
    }

    @Test
    public void test13136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13136");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive1.new FileEntry();
        java.lang.String str6 = explodedArchive1.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive1.new FileEntry();
        java.util.jar.Manifest manifest8 = null;
        explodedArchive1.manifest = manifest8;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        java.lang.String str12 = explodedArchive11.toString();
        boolean boolean13 = explodedArchive11.filtered;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive11.getNestedArchives(entryFilter14);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = explodedArchive11.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "archive" + "'", str12, "archive");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(archiveList15);
    }

    @Test
    public void test13137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13137");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        explodedArchive0.filtered = false;
        java.util.jar.Manifest manifest9 = explodedArchive0.getManifest();
        java.lang.String str10 = explodedArchive0.toString();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "archive" + "'", str10, "archive");
    }

    @Test
    public void test13138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13138");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.lang.String str7 = explodedArchive0.toString();
        java.util.jar.Manifest manifest8 = explodedArchive0.manifest;
        explodedArchive0.filtered = true;
        java.lang.String str11 = explodedArchive0.toString();
        explodedArchive0.filtered = false;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "archive" + "'", str11, "archive");
    }

    @Test
    public void test13139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13139");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.toExternalForm();
        java.lang.String str14 = uRL9.getRef();
        java.lang.String str15 = uRL9.getPath();
        java.lang.String str16 = uRL9.toExternalForm();
        java.lang.String str17 = uRL9.getProtocol();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100" + "'", str13, "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!://:100" + "'", str16, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test13140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13140");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        java.lang.String str8 = explodedArchive0.toString();
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        boolean boolean11 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest12 = explodedArchive0.getManifest();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(manifest12);
    }

    @Test
    public void test13141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13141");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        java.lang.String str11 = uRL9.getFile();
        java.net.URL uRL13 = new java.net.URL(uRL9, "hi!://:100");
        int int14 = uRL9.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test13142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13142");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.lang.String str17 = uRL16.getUserInfo();
        java.lang.String str18 = uRL16.getUserInfo();
        java.lang.String str19 = uRL16.getQuery();
        java.lang.String str20 = uRL16.getPath();
        int int21 = uRL16.getPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "/hi!" + "'", str20, "/hi!");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
    }

    @Test
    public void test13143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13143");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.io.File file9 = null;
        java.io.File file10 = null;
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap20);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap20);
        explodedArchive0.entries = asciiBytesMap20;
        java.util.jar.Manifest manifest24 = null;
        explodedArchive0.manifest = manifest24;
        java.util.jar.Manifest manifest26 = explodedArchive0.manifest;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection27 = explodedArchive0.getEntries();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNull(manifest26);
        org.junit.Assert.assertNotNull(entryCollection27);
    }

    @Test
    public void test13144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13144");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        java.lang.String str13 = uRL9.getRef();
        java.net.URL uRL15 = new java.net.URL(uRL9, "hi!:1");
        java.lang.String str16 = uRL9.toExternalForm();
        java.lang.String str17 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive18.getNestedArchives(entryFilter20);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive18.getNestedArchives(entryFilter22);
        java.lang.String str24 = explodedArchive18.toString();
        java.util.jar.Manifest manifest25 = explodedArchive18.manifest;
        java.io.File file26 = explodedArchive18.root;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter27 = null;
        org.springframework.boot.loader.archive.Archive archive28 = explodedArchive18.getFilteredArchive(entryRenameFilter27);
        java.lang.Class<?> wildcardClass29 = explodedArchive18.getClass();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive30.getNestedArchives(entryFilter32);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive30.getNestedArchives(entryFilter34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = explodedArchive30.entries;
        java.util.jar.Manifest manifest37 = null;
        explodedArchive30.manifest = manifest37;
        boolean boolean39 = explodedArchive30.filtered;
        java.util.jar.Manifest manifest40 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter41 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList42 = explodedArchive30.getNestedArchives(entryFilter41);
        java.util.jar.Manifest manifest43 = explodedArchive30.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter44 = null;
        org.springframework.boot.loader.archive.Archive archive45 = explodedArchive30.getFilteredArchive(entryRenameFilter44);
        java.io.File file46 = explodedArchive30.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry47 = explodedArchive30.new FileEntry();
        java.util.jar.Manifest manifest48 = explodedArchive30.manifest;
        java.lang.Class<?> wildcardClass49 = explodedArchive30.getClass();
        java.lang.Class[] classArray50 = new java.lang.Class[] { wildcardClass29, wildcardClass49 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj51 = uRL9.getContent(classArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100/hi!:1");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!://:100" + "'", str16, "hi!://:100");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "archive" + "'", str24, "archive");
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(archive28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(asciiBytesMap36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(manifest40);
        org.junit.Assert.assertNotNull(archiveList42);
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertNotNull(archive45);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(classArray50);
    }

    @Test
    public void test13145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13145");
        java.net.URLConnection.setDefaultRequestProperty(":52", "hi!://:100/hi!");
    }

    @Test
    public void test13146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13146");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes6 = null;
        fileEntry4.name = asciiBytes6;
        java.io.File file8 = fileEntry4.file;
        java.io.File file9 = null;
        fileEntry4.file = file9;
        java.io.File file11 = null;
        fileEntry4.file = file11;
        java.io.File file13 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = fileEntry4.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes15 = null;
        fileEntry4.name = asciiBytes15;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes17 = fileEntry4.getName();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(asciiBytes14);
        org.junit.Assert.assertNull(asciiBytes17);
    }

    @Test
    public void test13147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13147");
        java.io.File file4 = null;
        java.io.File file5 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive6.getNestedArchives(entryFilter8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = null;
        explodedArchive6.entries = asciiBytesMap10;
        java.io.File file12 = explodedArchive6.root;
        java.io.File file13 = explodedArchive6.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        explodedArchive6.entries = asciiBytesMap20;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file5, asciiBytesMap20);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap20);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection24 = explodedArchive23.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive23.new FilteredURLStreamHandler();
        java.io.File file26 = explodedArchive23.root;
        java.util.jar.Manifest manifest27 = explodedArchive23.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler28 = explodedArchive23.new FilteredURLStreamHandler();
        java.net.URL uRL29 = new java.net.URL("archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive", "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100", (int) 'a', "hi!://:100/hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler28);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str35 = explodedArchive34.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection36 = explodedArchive34.getEntries();
        java.util.jar.Manifest manifest37 = explodedArchive34.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str40 = uRL39.getQuery();
        java.lang.String str41 = uRL39.getHost();
        java.lang.String str42 = uRL39.toExternalForm();
        java.net.URL uRL44 = new java.net.URL(uRL39, "");
        java.lang.String str45 = uRL44.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str51 = explodedArchive50.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection52 = explodedArchive50.getEntries();
        java.util.jar.Manifest manifest53 = explodedArchive50.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler54 = explodedArchive50.new FilteredURLStreamHandler();
        java.net.URL uRL55 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler54);
        java.lang.String str56 = uRL55.getFile();
        int int57 = uRL55.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str64 = explodedArchive63.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection65 = explodedArchive63.getEntries();
        java.util.jar.Manifest manifest66 = explodedArchive63.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler67 = explodedArchive63.new FilteredURLStreamHandler();
        java.net.URL uRL68 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler67);
        java.lang.String str69 = uRL68.getQuery();
        java.lang.String str70 = uRL68.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str77 = explodedArchive76.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection78 = explodedArchive76.getEntries();
        java.util.jar.Manifest manifest79 = explodedArchive76.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler80 = explodedArchive76.new FilteredURLStreamHandler();
        java.net.URL uRL81 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler80);
        java.net.URL uRL82 = new java.net.URL(uRL68, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler80);
        java.net.URL uRL83 = new java.net.URL(uRL55, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler80);
        java.lang.String str84 = uRL83.getUserInfo();
        java.net.URL uRL86 = new java.net.URL(uRL83, "hi!");
        java.lang.String str87 = uRL83.getFile();
        boolean boolean88 = uRL44.sameFile(uRL83);
        java.net.URL uRL90 = new java.net.URL(uRL44, "[://[archive://:10archive]:100archive://:10archive]:100");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection91 = filteredURLStreamHandler28.openConnection(uRL90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(entryCollection24);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(manifest27);
        org.junit.Assert.assertEquals(uRL29.toString(), "archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive://[hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100]:97hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "archive" + "'", str35, "archive");
        org.junit.Assert.assertNotNull(entryCollection36);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!://:100" + "'", str42, "hi!://:100");
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "archive" + "'", str51, "archive");
        org.junit.Assert.assertNotNull(entryCollection52);
        org.junit.Assert.assertNull(manifest53);
        org.junit.Assert.assertEquals(uRL55.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "archive" + "'", str64, "archive");
        org.junit.Assert.assertNotNull(entryCollection65);
        org.junit.Assert.assertNull(manifest66);
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "archive" + "'", str77, "archive");
        org.junit.Assert.assertNotNull(entryCollection78);
        org.junit.Assert.assertNull(manifest79);
        org.junit.Assert.assertEquals(uRL81.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL82.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL83.toString(), "hi!://:100/archive");
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertEquals(uRL86.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "/archive" + "'", str87, "/archive");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertEquals(uRL90.toString(), "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100");
    }

    @Test
    public void test13148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13148");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter14 = null;
        org.springframework.boot.loader.archive.Archive archive15 = explodedArchive11.getFilteredArchive(entryRenameFilter14);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive11.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter17 = null;
        org.springframework.boot.loader.archive.Archive archive18 = explodedArchive11.getFilteredArchive(entryRenameFilter17);
        java.io.File file19 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive11.buildEntries(file19, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(archive15);
        org.junit.Assert.assertNotNull(archive18);
    }

    @Test
    public void test13149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13149");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str19 = explodedArchive18.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection20 = explodedArchive18.getEntries();
        java.util.jar.Manifest manifest21 = explodedArchive18.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive18.new FilteredURLStreamHandler();
        java.net.URL uRL23 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler22);
        java.lang.String str24 = uRL23.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str39 = explodedArchive38.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection40 = explodedArchive38.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive38.new FilteredURLStreamHandler();
        java.net.URL uRL42 = new java.net.URL(uRL35, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.net.URL uRL43 = new java.net.URL(uRL23, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.net.URL uRL44 = new java.net.URL(uRL9, "/archive", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.lang.String str45 = uRL9.getFile();
        java.lang.String str46 = uRL9.getFile();
        java.lang.String str47 = uRL9.getQuery();
        java.lang.String str48 = uRL9.getPath();
        int int49 = uRL9.getPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "archive" + "'", str19, "archive");
        org.junit.Assert.assertNotNull(entryCollection20);
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "archive" + "'", str39, "archive");
        org.junit.Assert.assertNotNull(entryCollection40);
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
    }

    @Test
    public void test13150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13150");
        java.io.File file4 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file6 = explodedArchive5.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive5.getNestedArchives(entryFilter7);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive5.getNestedArchives(entryFilter9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive5.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap11);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection13 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        java.util.jar.Manifest manifest16 = null;
        explodedArchive12.manifest = manifest16;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler18 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL19 = new java.net.URL("hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", "[://[archive://:10archive]:100archive://:10archive]:100", (int) '#', "hi!://:100/:100", (java.net.URLStreamHandler) filteredURLStreamHandler18);
        java.lang.String str20 = uRL19.getHost();
        java.lang.String str21 = uRL19.toString();
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNotNull(entryCollection13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertEquals(uRL19.toString(), "hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[://[archive://:10archive]:100archive://:10archive]:100:35hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[://[archive://:10archive]:100archive://:10archive]:100" + "'", str20, "[://[archive://:10archive]:100archive://:10archive]:100");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[://[archive://:10archive]:100archive://:10archive]:100:35hi!://:100/:100" + "'", str21, "hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[://[archive://:10archive]:100archive://:10archive]:100:35hi!://:100/:100");
    }

    @Test
    public void test13151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13151");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive2.filtered = true;
        java.util.jar.Manifest manifest5 = null;
        explodedArchive2.manifest = manifest5;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap7);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive9.getNestedArchives(entryFilter10);
        java.util.jar.Manifest manifest12 = null;
        explodedArchive9.manifest = manifest12;
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(archiveList11);
    }

    @Test
    public void test13152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13152");
        java.net.URLConnection.setDefaultRequestProperty("hi!://[:100]:52/hi!://:100/hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100", "hi!://:100/hi!://:100/hi!://:100/hi!://:100/hi!://:100");
    }

    @Test
    public void test13153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13153");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        explodedArchive0.filtered = true;
        java.io.File file10 = explodedArchive0.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive0.entries;
        explodedArchive0.filtered = false;
        java.lang.String str14 = explodedArchive0.toString();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "archive" + "'", str14, "archive");
    }

    @Test
    public void test13154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13154");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        java.io.File file5 = explodedArchive0.root;
        java.lang.String str6 = explodedArchive0.toString();
        explodedArchive0.filtered = false;
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.util.jar.Manifest manifest11 = explodedArchive0.manifest;
        java.io.File file12 = explodedArchive0.root;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection13 = explodedArchive0.getEntries();
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(entryCollection13);
    }

    @Test
    public void test13155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13155");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        int int17 = uRL16.getPort();
        java.lang.String str18 = uRL16.toExternalForm();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive20.new FilteredURLStreamHandler();
        java.io.File file24 = explodedArchive20.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive20.getNestedArchives(entryFilter25);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter27 = null;
        org.springframework.boot.loader.archive.Archive archive28 = explodedArchive20.getFilteredArchive(entryRenameFilter27);
        java.io.File file29 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive30.getNestedArchives(entryFilter32);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive30.getNestedArchives(entryFilter34);
        java.lang.String str36 = explodedArchive30.toString();
        java.util.jar.Manifest manifest37 = explodedArchive30.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive30.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file29, asciiBytesMap38);
        explodedArchive20.entries = asciiBytesMap38;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL42 = new java.net.URL(uRL16, "[hi!://:100/hi!]:10", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str48 = explodedArchive47.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection49 = explodedArchive47.getEntries();
        java.util.jar.Manifest manifest50 = explodedArchive47.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive47.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.lang.String str53 = uRL52.getQuery();
        java.lang.String str54 = uRL52.getRef();
        int int55 = uRL52.getPort();
        java.lang.String str56 = uRL52.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str62 = explodedArchive61.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection63 = explodedArchive61.getEntries();
        java.util.jar.Manifest manifest64 = explodedArchive61.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler65 = explodedArchive61.new FilteredURLStreamHandler();
        java.net.URL uRL66 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.lang.String str67 = uRL66.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str70 = explodedArchive69.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection71 = explodedArchive69.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler72 = explodedArchive69.new FilteredURLStreamHandler();
        java.net.URL uRL73 = new java.net.URL(uRL66, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler72);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str79 = explodedArchive78.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection80 = explodedArchive78.getEntries();
        java.util.jar.Manifest manifest81 = explodedArchive78.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler82 = explodedArchive78.new FilteredURLStreamHandler();
        java.net.URL uRL83 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler82);
        java.lang.String str84 = uRL83.getFile();
        int int85 = uRL83.getDefaultPort();
        java.lang.String str86 = uRL83.getRef();
        boolean boolean87 = uRL66.sameFile(uRL83);
        boolean boolean88 = uRL52.sameFile(uRL66);
        java.lang.String str89 = uRL66.getProtocol();
        java.lang.String str90 = uRL66.getAuthority();
        boolean boolean91 = uRL16.sameFile(uRL66);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj92 = uRL16.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!://:100/hi!" + "'", str18, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNotNull(archive28);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "archive" + "'", str36, "archive");
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100/[hi!://:100/hi!]:10");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "archive" + "'", str48, "archive");
        org.junit.Assert.assertNotNull(entryCollection49);
        org.junit.Assert.assertNull(manifest50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "archive" + "'", str62, "archive");
        org.junit.Assert.assertNotNull(entryCollection63);
        org.junit.Assert.assertNull(manifest64);
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "archive" + "'", str70, "archive");
        org.junit.Assert.assertNotNull(entryCollection71);
        org.junit.Assert.assertEquals(uRL73.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "archive" + "'", str79, "archive");
        org.junit.Assert.assertNotNull(entryCollection80);
        org.junit.Assert.assertNull(manifest81);
        org.junit.Assert.assertEquals(uRL83.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "hi!" + "'", str89, "hi!");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + ":100" + "'", str90, ":100");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test13156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13156");
        java.net.URLConnection.setDefaultRequestProperty("://[archive://:10archive]:100archive://:10archive", "[hi!://:100/archive]:100://[hi!://:100/:100]/archive:///archive:0hi!://:100");
    }

    @Test
    public void test13157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13157");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        java.io.File file5 = explodedArchive0.root;
        java.lang.String str6 = explodedArchive0.toString();
        explodedArchive0.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive0.getFilteredArchive(entryRenameFilter10);
        java.util.jar.Manifest manifest12 = explodedArchive0.getManifest();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(archive11);
        org.junit.Assert.assertNull(manifest12);
    }

    @Test
    public void test13158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13158");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.toExternalForm();
        java.lang.String str14 = uRL9.getRef();
        java.lang.String str15 = uRL9.getProtocol();
        java.lang.String str16 = uRL9.getFile();
        java.lang.String str17 = uRL9.getPath();
        int int18 = uRL9.getPort();
        java.lang.String str19 = uRL9.getUserInfo();
        int int20 = uRL9.getPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100" + "'", str13, "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
    }

    @Test
    public void test13159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13159");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection4 = explodedArchive0.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection5 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = explodedArchive0.new FileEntry();
        java.io.File file7 = fileEntry6.getFile();
        java.io.File file8 = fileEntry6.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry6.name;
        java.io.File file10 = null;
        fileEntry6.file = file10;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(entryCollection4);
        org.junit.Assert.assertNotNull(entryCollection5);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(asciiBytes9);
    }

    @Test
    public void test13160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13160");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        java.io.File file4 = explodedArchive0.root;
        explodedArchive0.filtered = false;
        explodedArchive0.filtered = true;
        java.io.File file9 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = fileEntry10.getName();
        java.io.File file12 = fileEntry10.file;
        java.io.File file13 = null;
        fileEntry10.file = file13;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = fileEntry10.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(asciiBytes11);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test13161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13161");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        explodedArchive11.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive11.new FilteredURLStreamHandler();
        boolean boolean16 = explodedArchive11.filtered;
        explodedArchive11.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive11.new FilteredURLStreamHandler();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test13162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13162");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.lang.String str5 = explodedArchive0.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.lang.String str18 = explodedArchive12.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive12.new FilteredURLStreamHandler();
        boolean boolean20 = explodedArchive12.filtered;
        java.io.File file21 = explodedArchive12.root;
        java.io.File file22 = null;
        explodedArchive12.root = file22;
        java.util.jar.Manifest manifest24 = null;
        explodedArchive12.manifest = manifest24;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap26);
        explodedArchive0.entries = asciiBytesMap26;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive0.getNestedArchives(entryFilter29);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str32 = explodedArchive31.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry33 = explodedArchive31.new FileEntry();
        java.io.File file34 = fileEntry33.file;
        java.io.File file35 = null;
        fileEntry33.file = file35;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes37 = null;
        fileEntry33.name = asciiBytes37;
        java.io.File file39 = fileEntry33.getFile();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive40 = explodedArchive0.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "archive" + "'", str32, "archive");
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(file39);
    }

    @Test
    public void test13163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13163");
        java.lang.String str1 = java.net.URLConnection.getDefaultRequestProperty("/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test13164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13164");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        java.util.jar.Manifest manifest15 = explodedArchive12.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL17 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler16);
        java.lang.String str18 = uRL17.getQuery();
        java.lang.String str19 = uRL17.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str26 = explodedArchive25.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection27 = explodedArchive25.getEntries();
        java.util.jar.Manifest manifest28 = explodedArchive25.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive25.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.net.URL uRL31 = new java.net.URL(uRL17, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.net.URL uRL32 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.net.URL uRL33 = new java.net.URL("/archive:///archive:0hi!://:100", "hi!://:100/archive", (int) (short) 100, "/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.lang.String str34 = uRL33.getFile();
        java.lang.String str35 = uRL33.getUserInfo();
        java.net.URL uRL37 = new java.net.URL(uRL33, "[archive://:10archive]:100");
        java.lang.String str38 = uRL37.getQuery();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "archive" + "'", str26, "archive");
        org.junit.Assert.assertNotNull(entryCollection27);
        org.junit.Assert.assertNull(manifest28);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL31.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL32.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL33.toString(), "/archive:///archive:0hi!://:100://[hi!://:100/archive]:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "/archive:///archive:0hi!://:100" + "'", str34, "/archive:///archive:0hi!://:100");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals(uRL37.toString(), "/archive:///archive:0hi!://:100://[hi!://:100/archive]:100/archive:///archive:0hi!://[archive://:10archive]:100");
        org.junit.Assert.assertNull(str38);
    }

    @Test
    public void test13165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13165");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive0.getFilteredArchive(entryRenameFilter5);
        java.io.File file7 = null;
        explodedArchive0.root = file7;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry9 = explodedArchive0.new FileEntry();
        java.io.File file10 = null;
        explodedArchive0.root = file10;
        java.io.File file12 = null;
        java.io.File file13 = null;
        java.io.File file14 = null;
        java.io.File file15 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive16.getNestedArchives(entryFilter18);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive16.getNestedArchives(entryFilter20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive16.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file15, asciiBytesMap22);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = explodedArchive23.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file14, asciiBytesMap24);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap24);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap24);
        explodedArchive0.entries = asciiBytesMap24;
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter31 = null;
        org.springframework.boot.loader.archive.Archive archive32 = explodedArchive0.getFilteredArchive(entryRenameFilter31);
        java.lang.String str33 = archive32.toString();
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNotNull(asciiBytesMap24);
        org.junit.Assert.assertNotNull(archive32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
    }

    @Test
    public void test13166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13166");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getFile();
        java.lang.String str25 = uRL9.getAuthority();
        java.net.URL uRL27 = new java.net.URL(uRL9, "");
        java.lang.String str28 = uRL27.getFile();
        int int29 = uRL27.getDefaultPort();
        java.lang.String str30 = uRL27.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str36 = explodedArchive35.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection37 = explodedArchive35.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter38 = null;
        org.springframework.boot.loader.archive.Archive archive39 = explodedArchive35.getFilteredArchive(entryRenameFilter38);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler40 = explodedArchive35.new FilteredURLStreamHandler();
        java.net.URL uRL41 = new java.net.URL("hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://[hi!://:100/:100]:100", "hi!://:100/hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100", 52, "hi!://:100/hi!://:100/hi!://hi!", (java.net.URLStreamHandler) filteredURLStreamHandler40);
        java.net.URL uRL43 = new java.net.URL(uRL41, "hi!://:100/hi!");
        boolean boolean44 = uRL27.sameFile(uRL43);
        int int45 = uRL43.getPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + ":100" + "'", str25, ":100");
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "archive" + "'", str36, "archive");
        org.junit.Assert.assertNotNull(entryCollection37);
        org.junit.Assert.assertNotNull(archive39);
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://[hi!://:100/:100]:100://[hi!://:100/hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100]:52hi!://:100/hi!://:100/hi!://hi!");
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://[hi!://:100/:100]:100://[hi!://:100/hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100]:52hi!://:100/hi!://:100/hi!://hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
    }

    @Test
    public void test13167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13167");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getProtocol();
        java.lang.String str14 = uRL9.getPath();
        java.lang.String str15 = uRL9.getAuthority();
        java.lang.String str16 = uRL9.getRef();
        int int17 = uRL9.getPort();
        java.lang.String str18 = uRL9.getAuthority();
        java.lang.String str19 = uRL9.getAuthority();
        java.lang.String str20 = uRL9.getPath();
        java.lang.String str21 = uRL9.getAuthority();
        java.lang.String str22 = uRL9.toExternalForm();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + ":100" + "'", str15, ":100");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + ":100" + "'", str18, ":100");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + ":100" + "'", str19, ":100");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + ":100" + "'", str21, ":100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!://:100" + "'", str22, "hi!://:100");
    }

    @Test
    public void test13168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13168");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap8);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection11 = explodedArchive10.getEntries();
        java.util.jar.Manifest manifest12 = explodedArchive10.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str14 = explodedArchive13.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection15 = explodedArchive13.getEntries();
        java.io.File file16 = explodedArchive13.root;
        java.util.jar.Manifest manifest17 = explodedArchive13.getManifest();
        java.io.File file18 = null;
        explodedArchive13.root = file18;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry20 = explodedArchive13.new FileEntry();
        java.lang.String str21 = explodedArchive13.toString();
        java.io.File file22 = null;
        explodedArchive13.root = file22;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry25 = explodedArchive13.new FileEntry();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive26 = explodedArchive10.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(entryCollection11);
        org.junit.Assert.assertNull(manifest12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "archive" + "'", str14, "archive");
        org.junit.Assert.assertNotNull(entryCollection15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap24);
    }

    @Test
    public void test13169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13169");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.lang.String str17 = uRL9.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str23 = explodedArchive22.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection24 = explodedArchive22.getEntries();
        java.util.jar.Manifest manifest25 = explodedArchive22.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler26 = explodedArchive22.new FilteredURLStreamHandler();
        java.net.URL uRL27 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler26);
        java.lang.String str28 = uRL27.getQuery();
        java.lang.String str29 = uRL27.getPath();
        boolean boolean30 = uRL9.sameFile(uRL27);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str40 = explodedArchive39.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection41 = explodedArchive39.getEntries();
        java.util.jar.Manifest manifest42 = explodedArchive39.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler43 = explodedArchive39.new FilteredURLStreamHandler();
        java.net.URL uRL44 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        java.lang.String str45 = uRL44.getQuery();
        java.lang.String str46 = uRL44.getRef();
        int int47 = uRL44.getPort();
        java.lang.String str48 = uRL44.getProtocol();
        java.lang.String str49 = uRL44.getPath();
        java.lang.String str50 = uRL44.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str57 = explodedArchive56.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection58 = explodedArchive56.getEntries();
        java.util.jar.Manifest manifest59 = explodedArchive56.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler60 = explodedArchive56.new FilteredURLStreamHandler();
        java.net.URL uRL61 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.lang.String str62 = uRL61.getFile();
        int int63 = uRL61.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str70 = explodedArchive69.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection71 = explodedArchive69.getEntries();
        java.util.jar.Manifest manifest72 = explodedArchive69.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler73 = explodedArchive69.new FilteredURLStreamHandler();
        java.net.URL uRL74 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler73);
        java.lang.String str75 = uRL74.getQuery();
        java.lang.String str76 = uRL74.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str83 = explodedArchive82.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection84 = explodedArchive82.getEntries();
        java.util.jar.Manifest manifest85 = explodedArchive82.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler86 = explodedArchive82.new FilteredURLStreamHandler();
        java.net.URL uRL87 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler86);
        java.net.URL uRL88 = new java.net.URL(uRL74, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler86);
        java.net.URL uRL89 = new java.net.URL(uRL61, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler86);
        java.net.URL uRL90 = new java.net.URL(uRL44, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler86);
        java.net.URL uRL91 = new java.net.URL(":100", "hi!://:100/hi!", (int) (byte) 0, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler86);
        boolean boolean92 = uRL9.sameFile(uRL91);
        java.lang.String str93 = uRL91.getUserInfo();
        int int94 = uRL91.getDefaultPort();
        java.lang.String str95 = uRL91.getRef();
        int int96 = uRL91.getPort();
        java.lang.String str97 = uRL91.getProtocol();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI98 = uRL91.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Expected scheme name at index 0: :100://[hi!://:100/hi!]:0archive://:10archive");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "archive" + "'", str23, "archive");
        org.junit.Assert.assertNotNull(entryCollection24);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "archive" + "'", str40, "archive");
        org.junit.Assert.assertNotNull(entryCollection41);
        org.junit.Assert.assertNull(manifest42);
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + ":100" + "'", str50, ":100");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "archive" + "'", str57, "archive");
        org.junit.Assert.assertNotNull(entryCollection58);
        org.junit.Assert.assertNull(manifest59);
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "archive" + "'", str70, "archive");
        org.junit.Assert.assertNotNull(entryCollection71);
        org.junit.Assert.assertNull(manifest72);
        org.junit.Assert.assertEquals(uRL74.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "archive" + "'", str83, "archive");
        org.junit.Assert.assertNotNull(entryCollection84);
        org.junit.Assert.assertNull(manifest85);
        org.junit.Assert.assertEquals(uRL87.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL88.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL89.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL90.toString(), "hi!://:100/hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL91.toString(), ":100://[hi!://:100/hi!]:0archive://:10archive");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNull(str93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertNull(str95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + ":100" + "'", str97, ":100");
    }

    @Test
    public void test13170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13170");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive0.getNestedArchives(entryFilter8);
        java.util.jar.Manifest manifest10 = explodedArchive0.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive0.entries;
        boolean boolean12 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest13 = null;
        explodedArchive0.manifest = manifest13;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive0.getNestedArchives(entryFilter16);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNotNull(archiveList17);
    }

    @Test
    public void test13171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13171");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.io.File file9 = null;
        java.io.File file10 = null;
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap20);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap20);
        explodedArchive0.entries = asciiBytesMap20;
        java.util.jar.Manifest manifest24 = null;
        explodedArchive0.manifest = manifest24;
        java.util.jar.Manifest manifest26 = explodedArchive0.manifest;
        boolean boolean27 = explodedArchive0.filtered;
        explodedArchive0.filtered = false;
        boolean boolean30 = explodedArchive0.filtered;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNull(manifest26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test13172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13172");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = null;
        fileEntry12.name = asciiBytes13;
        java.io.File file15 = fileEntry12.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes16 = fileEntry12.getName();
        java.io.File file17 = fileEntry12.file;
        java.io.File file18 = fileEntry12.getFile();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(asciiBytes16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
    }

    @Test
    public void test13173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13173");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive0.getNestedArchives(entryFilter8);
        java.util.jar.Manifest manifest10 = null;
        explodedArchive0.manifest = manifest10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive0.new FileEntry();
        java.io.File file13 = null;
        fileEntry12.file = file13;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList9);
    }

    @Test
    public void test13174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13174");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getProtocol();
        java.lang.String str14 = uRL9.getPath();
        java.lang.String str15 = uRL9.getAuthority();
        java.lang.String str16 = uRL9.getAuthority();
        java.lang.String str17 = uRL9.getUserInfo();
        int int18 = uRL9.getDefaultPort();
        java.lang.String str19 = uRL9.getHost();
        java.lang.String str20 = uRL9.getQuery();
        java.net.URL uRL22 = new java.net.URL(uRL9, "[/hi!://:100/archive]");
        java.lang.String str23 = uRL9.getRef();
        java.lang.String str24 = uRL9.getQuery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + ":100" + "'", str15, ":100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + ":100" + "'", str16, ":100");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100/[/hi!://:100/archive]");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test13175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13175");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getUserInfo();
        java.lang.String str12 = uRL9.getRef();
        java.lang.String str13 = uRL9.getAuthority();
        java.lang.String str14 = uRL9.getQuery();
        int int15 = uRL9.getPort();
        java.net.URL uRL17 = new java.net.URL(uRL9, "[archive://:10archive]:100");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str23 = explodedArchive22.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection24 = explodedArchive22.getEntries();
        java.util.jar.Manifest manifest25 = explodedArchive22.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler26 = explodedArchive22.new FilteredURLStreamHandler();
        java.net.URL uRL27 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler26);
        java.lang.String str28 = uRL27.getFile();
        java.lang.String str29 = uRL27.getQuery();
        java.lang.String str30 = uRL27.getRef();
        java.net.URL uRL32 = new java.net.URL(uRL27, "hi!://:100/hi!://:100/archive");
        java.lang.String str33 = uRL32.getRef();
        int int34 = uRL32.getPort();
        boolean boolean35 = uRL9.sameFile(uRL32);
        java.lang.String str36 = uRL32.getQuery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + ":100" + "'", str13, ":100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100/[archive://:10archive]:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "archive" + "'", str23, "archive");
        org.junit.Assert.assertNotNull(entryCollection24);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100/hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test13176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13176");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes6 = null;
        fileEntry4.name = asciiBytes6;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = null;
        fileEntry4.name = asciiBytes8;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = null;
        fileEntry4.name = asciiBytes10;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = fileEntry4.name;
        java.io.File file13 = fileEntry4.getFile();
        java.io.File file14 = null;
        fileEntry4.file = file14;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes16 = null;
        fileEntry4.name = asciiBytes16;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = fileEntry4.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(asciiBytes12);
        org.junit.Assert.assertNull(file13);
    }

    @Test
    public void test13177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13177");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        int int24 = uRL23.getPort();
        java.lang.String str25 = uRL23.getPath();
        java.lang.String str26 = uRL23.getPath();
        java.lang.String str27 = uRL23.getPath();
        java.lang.String str28 = uRL23.toExternalForm();
        java.lang.String str29 = uRL23.getFile();
        int int30 = uRL23.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str36 = explodedArchive35.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection37 = explodedArchive35.getEntries();
        java.util.jar.Manifest manifest38 = explodedArchive35.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler39 = explodedArchive35.new FilteredURLStreamHandler();
        java.net.URL uRL40 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler39);
        java.lang.String str41 = uRL40.getFile();
        java.lang.String str42 = uRL40.getQuery();
        java.lang.String str43 = uRL40.getPath();
        java.lang.String str44 = uRL40.getAuthority();
        boolean boolean45 = uRL23.sameFile(uRL40);
        java.lang.String str46 = uRL23.getAuthority();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/hi!" + "'", str25, "/hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/hi!" + "'", str26, "/hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!://:100/hi!" + "'", str28, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "/hi!" + "'", str29, "/hi!");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "archive" + "'", str36, "archive");
        org.junit.Assert.assertNotNull(entryCollection37);
        org.junit.Assert.assertNull(manifest38);
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + ":100" + "'", str44, ":100");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + ":100" + "'", str46, ":100");
    }

    @Test
    public void test13178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13178");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str3 = explodedArchive2.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection4 = explodedArchive2.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive2.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter6 = null;
        org.springframework.boot.loader.archive.Archive archive7 = explodedArchive2.getFilteredArchive(entryRenameFilter6);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        boolean boolean10 = explodedArchive8.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter11 = null;
        org.springframework.boot.loader.archive.Archive archive12 = explodedArchive8.getFilteredArchive(entryRenameFilter11);
        explodedArchive8.filtered = true;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection15 = explodedArchive8.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive8.entries;
        explodedArchive2.entries = asciiBytesMap16;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap16);
        boolean boolean19 = explodedArchive18.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive20.getNestedArchives(entryFilter22);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive20.getNestedArchives(entryFilter24);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive20.getNestedArchives(entryFilter27);
        java.io.File file29 = null;
        java.io.File file30 = null;
        java.io.File file31 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive32.getNestedArchives(entryFilter34);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive32.getNestedArchives(entryFilter36);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive32.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file31, asciiBytesMap38);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap40 = explodedArchive39.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file30, asciiBytesMap40);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file29, asciiBytesMap40);
        explodedArchive20.entries = asciiBytesMap40;
        explodedArchive18.entries = asciiBytesMap40;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap40);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive45.getNestedArchives(entryFilter46);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "archive" + "'", str3, "archive");
        org.junit.Assert.assertNotNull(entryCollection4);
        org.junit.Assert.assertNotNull(archive7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(archive12);
        org.junit.Assert.assertNotNull(entryCollection15);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertNotNull(asciiBytesMap40);
        org.junit.Assert.assertNotNull(archiveList47);
    }

    @Test
    public void test13179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13179");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.io.File file3 = explodedArchive0.root;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        java.io.File file5 = explodedArchive0.root;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest8 = explodedArchive0.getManifest();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(manifest8);
    }

    @Test
    public void test13180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13180");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive0.getNestedArchives(entryFilter8);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive0.new FilteredURLStreamHandler();
        boolean boolean11 = explodedArchive0.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = explodedArchive0.entries;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap12);
    }

    @Test
    public void test13181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13181");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        java.io.File file5 = explodedArchive0.root;
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest8 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive0.getNestedArchives(entryFilter9);
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        java.util.jar.Manifest manifest16 = explodedArchive12.manifest;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter17 = null;
        org.springframework.boot.loader.archive.Archive archive18 = explodedArchive12.getFilteredArchive(entryRenameFilter17);
        java.io.File file19 = null;
        java.io.File file20 = null;
        java.io.File file21 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file23 = explodedArchive22.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive22.getNestedArchives(entryFilter24);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive22.getNestedArchives(entryFilter26);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = explodedArchive22.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file21, asciiBytesMap28);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive29.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file20, asciiBytesMap30);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file19, asciiBytesMap30);
        explodedArchive12.entries = asciiBytesMap30;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap30);
        explodedArchive0.entries = asciiBytesMap30;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNull(manifest16);
        org.junit.Assert.assertNotNull(archive18);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNotNull(asciiBytesMap28);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
    }

    @Test
    public void test13182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13182");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive3.getNestedArchives(entryFilter5);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive3.getNestedArchives(entryFilter7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap11);
        explodedArchive12.filtered = true;
        java.io.File file15 = null;
        explodedArchive12.root = file15;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive12.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive12.getEntries();
        java.util.jar.Manifest manifest19 = null;
        explodedArchive12.manifest = manifest19;
        java.io.File file21 = explodedArchive12.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap22);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection24 = explodedArchive23.getEntries();
        boolean boolean25 = explodedArchive23.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file27 = explodedArchive26.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive26.getNestedArchives(entryFilter28);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry30 = explodedArchive26.new FileEntry();
        boolean boolean31 = explodedArchive26.filtered;
        boolean boolean32 = explodedArchive26.filtered;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive26.getNestedArchives(entryFilter33);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter35 = null;
        org.springframework.boot.loader.archive.Archive archive36 = explodedArchive26.getFilteredArchive(entryRenameFilter35);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap37 = explodedArchive26.entries;
        explodedArchive23.entries = asciiBytesMap37;
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNotNull(entryCollection24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNotNull(archive36);
        org.junit.Assert.assertNotNull(asciiBytesMap37);
    }

    @Test
    public void test13183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13183");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry2 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes3 = fileEntry2.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes4 = fileEntry2.name;
        java.io.File file5 = null;
        fileEntry2.file = file5;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = fileEntry2.getName();
        java.io.File file8 = fileEntry2.getFile();
        java.io.File file9 = fileEntry2.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = fileEntry2.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = fileEntry2.getName();
        java.io.File file12 = fileEntry2.file;
        java.io.File file13 = null;
        fileEntry2.file = file13;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = fileEntry2.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(asciiBytes3);
        org.junit.Assert.assertNull(asciiBytes4);
        org.junit.Assert.assertNull(asciiBytes7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(asciiBytes10);
        org.junit.Assert.assertNull(asciiBytes11);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test13184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13184");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("/hi!://:100/hi!://:100/archive", "/archive://[hi!://:100/hi!]:1/hi!://[hi!://:100]:97/hi!://:100/archive", "hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /hi!://:100/hi!://:100/archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13185");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        java.io.File file6 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry4.name;
        java.io.File file10 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = null;
        fileEntry4.name = asciiBytes11;
        java.io.File file13 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = fileEntry4.name;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(asciiBytes7);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(asciiBytes9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(asciiBytes14);
    }

    @Test
    public void test13186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13186");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        java.io.File file7 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive8.getNestedArchives(entryFilter12);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive8.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file7, asciiBytesMap14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive15.entries;
        explodedArchive0.entries = asciiBytesMap16;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler18 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry20 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive0.new FilteredURLStreamHandler();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNotNull(entryCollection19);
    }

    @Test
    public void test13187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13187");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive0.entries;
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        explodedArchive22.filtered = true;
        java.util.jar.Manifest manifest25 = explodedArchive22.getManifest();
        java.util.jar.Manifest manifest26 = explodedArchive22.manifest;
        java.io.File file27 = null;
        explodedArchive22.root = file27;
        java.io.File file29 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive30.getNestedArchives(entryFilter32);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive30.getNestedArchives(entryFilter34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = explodedArchive30.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file29, asciiBytesMap36);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive37.entries;
        explodedArchive22.entries = asciiBytesMap38;
        explodedArchive0.entries = asciiBytesMap38;
        boolean boolean41 = explodedArchive0.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest43 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter44 = null;
        org.springframework.boot.loader.archive.Archive archive45 = explodedArchive0.getFilteredArchive(entryRenameFilter44);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry46 = explodedArchive0.new FileEntry();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection47 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest48 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest49 = null;
        explodedArchive0.manifest = manifest49;
        java.io.File file51 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file51, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertNull(manifest26);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(asciiBytesMap36);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertNotNull(archive45);
        org.junit.Assert.assertNotNull(entryCollection47);
        org.junit.Assert.assertNull(manifest48);
    }

    @Test
    public void test13188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13188");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = null;
        fileEntry4.file = file5;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = null;
        fileEntry4.name = asciiBytes7;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry4.name;
        java.io.File file10 = fileEntry4.file;
        java.io.File file11 = fileEntry4.getFile();
        java.io.File file12 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = fileEntry4.getName();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(asciiBytes13);
        org.junit.Assert.assertNull(asciiBytes14);
    }

    @Test
    public void test13189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13189");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        java.io.File file14 = null;
        explodedArchive11.root = file14;
        java.io.File file16 = null;
        explodedArchive11.root = file16;
        java.lang.String str18 = explodedArchive11.toString();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
    }

    @Test
    public void test13190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13190");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive4.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("archive://:10archive", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str16 = explodedArchive15.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive15.getEntries();
        java.util.jar.Manifest manifest18 = explodedArchive15.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        java.lang.String str21 = uRL20.getQuery();
        java.lang.String str22 = uRL20.getRef();
        int int23 = uRL20.getPort();
        java.lang.String str24 = uRL20.getProtocol();
        java.lang.String str25 = uRL20.getPath();
        java.lang.String str26 = uRL20.getPath();
        java.lang.String str27 = uRL20.getUserInfo();
        java.lang.String str28 = uRL20.getProtocol();
        boolean boolean29 = uRL10.sameFile(uRL20);
        java.net.URI uRI30 = uRL10.toURI();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file37 = explodedArchive36.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter38 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList39 = explodedArchive36.getNestedArchives(entryFilter38);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter40 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList41 = explodedArchive36.getNestedArchives(entryFilter40);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap42 = explodedArchive36.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter43 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList44 = explodedArchive36.getNestedArchives(entryFilter43);
        java.io.File file45 = null;
        explodedArchive36.root = file45;
        java.io.File file47 = null;
        explodedArchive36.root = file47;
        java.util.jar.Manifest manifest49 = explodedArchive36.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter50 = null;
        org.springframework.boot.loader.archive.Archive archive51 = explodedArchive36.getFilteredArchive(entryRenameFilter50);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter52 = null;
        org.springframework.boot.loader.archive.Archive archive53 = explodedArchive36.getFilteredArchive(entryRenameFilter52);
        explodedArchive36.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler56 = explodedArchive36.new FilteredURLStreamHandler();
        java.net.URL uRL57 = new java.net.URL("[archive://:10archive]", "[hi!://:100/hi!]", (int) (byte) 10, "[/:100]:0", (java.net.URLStreamHandler) filteredURLStreamHandler56);
        java.net.URL uRL58 = new java.net.URL(uRL10, "", (java.net.URLStreamHandler) filteredURLStreamHandler56);
        java.lang.String str59 = uRL10.getHost();
        java.lang.String str60 = uRL10.getAuthority();
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertEquals(uRL10.toString(), "archive://:10archive://:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "archive" + "'", str16, "archive");
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertEquals(uRL20.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(uRI30);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(archiveList39);
        org.junit.Assert.assertNotNull(archiveList41);
        org.junit.Assert.assertNotNull(asciiBytesMap42);
        org.junit.Assert.assertNotNull(archiveList44);
        org.junit.Assert.assertNull(manifest49);
        org.junit.Assert.assertNotNull(archive51);
        org.junit.Assert.assertNotNull(archive53);
        org.junit.Assert.assertEquals(uRL57.toString(), "[archive://:10archive]://[hi!://:100/hi!]:10[/:100]:0");
        org.junit.Assert.assertEquals(uRL58.toString(), "archive://:10archive://:100");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + ":100" + "'", str60, ":100");
    }

    @Test
    public void test13191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13191");
        java.net.URLConnection.setDefaultRequestProperty("hi!://:100/[hi!://:100/hi!]", "[hi!://:100/[hi!://:100/hi!]]");
    }

    @Test
    public void test13192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13192");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str29 = explodedArchive28.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive28.getEntries();
        java.util.jar.Manifest manifest31 = explodedArchive28.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL33 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.lang.String str34 = uRL33.getFile();
        boolean boolean35 = uRL23.sameFile(uRL33);
        int int36 = uRL33.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str42 = explodedArchive41.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive41.getEntries();
        java.util.jar.Manifest manifest44 = explodedArchive41.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive41.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.lang.String str47 = uRL46.getQuery();
        java.lang.String str48 = uRL46.getRef();
        java.lang.String str49 = uRL46.getRef();
        java.net.URL uRL51 = new java.net.URL(uRL46, "hi!");
        boolean boolean52 = uRL33.sameFile(uRL51);
        java.lang.String str53 = uRL51.getAuthority();
        java.net.URL uRL55 = new java.net.URL(uRL51, "hi!://:100/hi!://:100/hi!://:100/hi!://:100");
        java.lang.String str56 = uRL55.getRef();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "archive" + "'", str42, "archive");
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertNull(manifest44);
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + ":100" + "'", str53, ":100");
        org.junit.Assert.assertEquals(uRL55.toString(), "hi!://:100/hi!://:100/hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str56);
    }

    @Test
    public void test13193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13193");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = null;
        explodedArchive1.entries = asciiBytesMap5;
        java.io.File file7 = explodedArchive1.root;
        java.io.File file8 = explodedArchive1.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        explodedArchive1.entries = asciiBytesMap15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap15);
        java.util.jar.Manifest manifest18 = null;
        explodedArchive17.manifest = manifest18;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive17.getNestedArchives(entryFilter20);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive17.getManifest();
        java.util.jar.Manifest manifest24 = null;
        explodedArchive17.manifest = manifest24;
        java.io.File file26 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive17.buildEntries(file26, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
    }

    @Test
    public void test13194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13194");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = null;
        explodedArchive1.entries = asciiBytesMap5;
        java.io.File file7 = explodedArchive1.root;
        java.io.File file8 = explodedArchive1.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        explodedArchive1.entries = asciiBytesMap15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap15);
        java.util.jar.Manifest manifest18 = null;
        explodedArchive17.manifest = manifest18;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry20 = explodedArchive17.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes21 = fileEntry20.getName();
        java.io.File file22 = null;
        fileEntry20.file = file22;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes24 = null;
        fileEntry20.name = asciiBytes24;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes26 = null;
        fileEntry20.name = asciiBytes26;
        java.io.File file28 = fileEntry20.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes29 = null;
        fileEntry20.name = asciiBytes29;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNull(asciiBytes21);
        org.junit.Assert.assertNull(file28);
    }

    @Test
    public void test13195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13195");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("[hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/[/:100]:0]", "/[/:100]:0", (int) (short) 100, "/[hi!://:100/hi!]:10");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: [hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/[/:100]:0]");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13196");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getFile();
        int int37 = uRL35.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str44 = explodedArchive43.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive43.getEntries();
        java.util.jar.Manifest manifest46 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.lang.String str49 = uRL48.getQuery();
        java.lang.String str50 = uRL48.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str57 = explodedArchive56.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection58 = explodedArchive56.getEntries();
        java.util.jar.Manifest manifest59 = explodedArchive56.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler60 = explodedArchive56.new FilteredURLStreamHandler();
        java.net.URL uRL61 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL62 = new java.net.URL(uRL48, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL63 = new java.net.URL(uRL35, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL64 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL66 = new java.net.URL(uRL64, ":100");
        java.lang.String str67 = uRL66.getHost();
        int int68 = uRL66.getPort();
        java.lang.String str69 = uRL66.getHost();
        java.lang.String str70 = uRL66.getAuthority();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "archive" + "'", str44, "archive");
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "archive" + "'", str57, "archive");
        org.junit.Assert.assertNotNull(entryCollection58);
        org.junit.Assert.assertNull(manifest59);
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + ":100" + "'", str70, ":100");
    }

    @Test
    public void test13197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13197");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        java.io.File file7 = explodedArchive0.root;
        explodedArchive0.filtered = false;
        java.io.File file10 = null;
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap20);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry22 = explodedArchive21.new FileEntry();
        java.util.jar.Manifest manifest23 = null;
        explodedArchive21.manifest = manifest23;
        explodedArchive21.filtered = true;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive21.entries;
        explodedArchive0.entries = asciiBytesMap27;
        java.io.File file29 = null;
        java.io.File file30 = null;
        java.io.File file31 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive32.getNestedArchives(entryFilter34);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive32.getNestedArchives(entryFilter36);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive32.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file31, asciiBytesMap38);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file30, asciiBytesMap38);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap41 = explodedArchive40.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file29, asciiBytesMap41);
        java.io.File file43 = null;
        java.io.File file44 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file46 = explodedArchive45.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter47 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList48 = explodedArchive45.getNestedArchives(entryFilter47);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter49 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList50 = explodedArchive45.getNestedArchives(entryFilter49);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap51 = explodedArchive45.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive(file44, asciiBytesMap51);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap53 = explodedArchive52.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file43, asciiBytesMap53);
        boolean boolean55 = explodedArchive54.filtered;
        explodedArchive54.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter58 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList59 = explodedArchive54.getNestedArchives(entryFilter58);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file61 = explodedArchive60.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter62 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList63 = explodedArchive60.getNestedArchives(entryFilter62);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry64 = explodedArchive60.new FileEntry();
        java.lang.String str65 = explodedArchive60.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap66 = explodedArchive60.entries;
        java.util.jar.Manifest manifest67 = null;
        explodedArchive60.manifest = manifest67;
        java.io.File file69 = null;
        explodedArchive60.root = file69;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection71 = explodedArchive60.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap72 = explodedArchive60.entries;
        explodedArchive54.entries = asciiBytesMap72;
        explodedArchive42.entries = asciiBytesMap72;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap75 = explodedArchive42.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file77 = explodedArchive76.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter78 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList79 = explodedArchive76.getNestedArchives(entryFilter78);
        explodedArchive76.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter82 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList83 = explodedArchive76.getNestedArchives(entryFilter82);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler84 = explodedArchive76.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest85 = explodedArchive76.manifest;
        java.util.jar.Manifest manifest86 = explodedArchive76.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap87 = explodedArchive76.entries;
        explodedArchive42.entries = asciiBytesMap87;
        explodedArchive0.entries = asciiBytesMap87;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertNotNull(asciiBytesMap41);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(archiveList48);
        org.junit.Assert.assertNotNull(archiveList50);
        org.junit.Assert.assertNotNull(asciiBytesMap51);
        org.junit.Assert.assertNotNull(asciiBytesMap53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(archiveList59);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(archiveList63);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "archive" + "'", str65, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap66);
        org.junit.Assert.assertNotNull(entryCollection71);
        org.junit.Assert.assertNotNull(asciiBytesMap72);
        org.junit.Assert.assertNotNull(asciiBytesMap75);
        org.junit.Assert.assertNull(file77);
        org.junit.Assert.assertNotNull(archiveList79);
        org.junit.Assert.assertNotNull(archiveList83);
        org.junit.Assert.assertNull(manifest85);
        org.junit.Assert.assertNull(manifest86);
        org.junit.Assert.assertNotNull(asciiBytesMap87);
    }

    @Test
    public void test13198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13198");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("archive://:0/:100", "/://[archive://:10archive]:100archive://:10archive://[/hi!://:100]:32archive://:0hi!://:100/hi!", 52, "[hi!://:100/hi!://:100/:100]:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: archive://:0/:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13199");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getFile();
        java.lang.String str25 = uRL9.getHost();
        int int26 = uRL9.getPort();
        java.lang.String str27 = uRL9.getProtocol();
        java.lang.String str28 = uRL9.getFile();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
    }

    @Test
    public void test13200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13200");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getHost();
        java.lang.String str14 = uRL9.getFile();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test13201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13201");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("hi!://:100/:100", "hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!", (int) (short) -1, "hi!://:100/[hi!://:100/hi!]://[hi!://:100/[hi!://:100/hi!]]/:52");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://:100/:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13202");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str30 = explodedArchive29.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection31 = explodedArchive29.getEntries();
        java.util.jar.Manifest manifest32 = explodedArchive29.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file38 = explodedArchive37.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive37.getNestedArchives(entryFilter39);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry41 = explodedArchive37.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler42 = explodedArchive37.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler43 = explodedArchive37.new FilteredURLStreamHandler();
        java.net.URL uRL44 = new java.net.URL(uRL21, "hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        java.net.URL uRL45 = new java.net.URL("hi!://:100/hi!", "hi!://:100/:100", (int) (short) 100, "/archive://[hi!://:100/hi!]:1/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        java.net.URL uRL46 = new java.net.URL("[hi!://:100/archive]:100", "[/hi!://:100/archive]:0", 1, "hi!://:100/hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str69 = explodedArchive68.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection70 = explodedArchive68.getEntries();
        java.util.jar.Manifest manifest71 = explodedArchive68.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler72 = explodedArchive68.new FilteredURLStreamHandler();
        java.net.URL uRL73 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler72);
        java.lang.String str74 = uRL73.getQuery();
        java.lang.String str75 = uRL73.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive81 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str82 = explodedArchive81.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection83 = explodedArchive81.getEntries();
        java.util.jar.Manifest manifest84 = explodedArchive81.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler85 = explodedArchive81.new FilteredURLStreamHandler();
        java.net.URL uRL86 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler85);
        java.net.URL uRL87 = new java.net.URL(uRL73, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler85);
        java.net.URL uRL88 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler85);
        java.net.URL uRL89 = new java.net.URL("archive://:10archive", "[hi!://:100/hi!]", 10, "://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler85);
        java.net.URL uRL90 = new java.net.URL("hi!://:100/:100", "hi!://:100/:100", (int) (short) 0, "/archive://[hi!://:100/hi!]:1/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler85);
        java.net.URL uRL91 = new java.net.URL("hi!://:100/hi!://:100/hi!", "/hi!://:100", (int) (short) 0, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler85);
        java.net.URL uRL92 = new java.net.URL(uRL46, "[hi!://:100/hi!:1]:52", (java.net.URLStreamHandler) filteredURLStreamHandler85);
        java.net.URL uRL93 = new java.net.URL("hi!://[:100]:52hi!://[hi!:1]/[/hi!://:100/archive]", "[hi!://:100]:97", (int) ' ', "", (java.net.URLStreamHandler) filteredURLStreamHandler85);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "archive" + "'", str30, "archive");
        org.junit.Assert.assertNotNull(entryCollection31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertEquals(uRL34.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertEquals(uRL46.toString(), "[hi!://:100/archive]:100://[/hi!://:100/archive]:0:1hi!://:100/hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "archive" + "'", str69, "archive");
        org.junit.Assert.assertNotNull(entryCollection70);
        org.junit.Assert.assertNull(manifest71);
        org.junit.Assert.assertEquals(uRL73.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "archive" + "'", str82, "archive");
        org.junit.Assert.assertNotNull(entryCollection83);
        org.junit.Assert.assertNull(manifest84);
        org.junit.Assert.assertEquals(uRL86.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL87.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL88.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL89.toString(), "archive://:10archive://[hi!://:100/hi!]:10://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL90.toString(), "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertEquals(uRL91.toString(), "hi!://:100/hi!://:100/hi!://[/hi!://:100]:0hi!://:100");
        org.junit.Assert.assertEquals(uRL92.toString(), "[hi!://:100/archive]:100://[/hi!://:100/archive]:0:1hi!://:100/hi!://:100/[hi!://:100/hi!:1]:52");
        org.junit.Assert.assertEquals(uRL93.toString(), "hi!://[:100]:52hi!://[hi!:1]/[/hi!://:100/archive]://[hi!://:100]:97:32");
    }

    @Test
    public void test13203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13203");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        java.lang.String str25 = uRL22.getRef();
        java.lang.String str26 = uRL22.toExternalForm();
        boolean boolean27 = uRL9.sameFile(uRL22);
        java.lang.String str28 = uRL22.getUserInfo();
        java.lang.String str29 = uRL22.getHost();
        java.lang.String str30 = uRL22.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive32.getNestedArchives(entryFilter34);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive32.getNestedArchives(entryFilter36);
        java.lang.String str38 = explodedArchive32.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler39 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL40 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler39);
        java.lang.String str41 = uRL22.getPath();
        java.net.URL uRL43 = new java.net.URL(uRL22, "[hi!://:100/hi!]");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str50 = explodedArchive49.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection51 = explodedArchive49.getEntries();
        java.util.jar.Manifest manifest52 = explodedArchive49.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler53 = explodedArchive49.new FilteredURLStreamHandler();
        java.net.URL uRL54 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        java.lang.String str55 = uRL54.getQuery();
        java.lang.String str56 = uRL54.getPath();
        java.lang.String str57 = uRL54.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter61 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList62 = explodedArchive59.getNestedArchives(entryFilter61);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter63 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList64 = explodedArchive59.getNestedArchives(entryFilter63);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap65 = explodedArchive59.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler66 = explodedArchive59.new FilteredURLStreamHandler();
        java.net.URL uRL67 = new java.net.URL(uRL54, "", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.net.URL uRL68 = new java.net.URL(uRL43, "hi!://:100/hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.lang.String str69 = uRL68.getPath();
        java.net.URL uRL71 = new java.net.URL(uRL68, "/://[archive://:10archive]:100archive://:10archive");
        java.lang.String str72 = uRL71.toExternalForm();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL74 = new java.net.URL(uRL71, "archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!://:100" + "'", str26, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://:100/[hi!://:100/hi!]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "archive" + "'", str50, "archive");
        org.junit.Assert.assertNotNull(entryCollection51);
        org.junit.Assert.assertNull(manifest52);
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNotNull(archiveList62);
        org.junit.Assert.assertNotNull(archiveList64);
        org.junit.Assert.assertNotNull(asciiBytesMap65);
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100/[hi!://:100/hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "/[hi!://:100/hi!://:100/hi!://:100/archive" + "'", str69, "/[hi!://:100/hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL71.toString(), "hi!://:100/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!://:100/://[archive://:10archive]:100archive://:10archive" + "'", str72, "hi!://:100/://[archive://:10archive]:100archive://:10archive");
    }

    @Test
    public void test13204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13204");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        java.util.jar.Manifest manifest13 = null;
        explodedArchive11.manifest = manifest13;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive11.entries;
        java.util.jar.Manifest manifest16 = explodedArchive11.manifest;
        java.io.File file17 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive18.getNestedArchives(entryFilter20);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive18.getNestedArchives(entryFilter22);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = explodedArchive18.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive18.getNestedArchives(entryFilter25);
        java.io.File file27 = null;
        java.io.File file28 = null;
        java.io.File file29 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive30.getNestedArchives(entryFilter32);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive30.getNestedArchives(entryFilter34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = explodedArchive30.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file29, asciiBytesMap36);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive37.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file28, asciiBytesMap38);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file27, asciiBytesMap38);
        explodedArchive18.entries = asciiBytesMap38;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap38);
        java.util.jar.Manifest manifest43 = null;
        explodedArchive42.manifest = manifest43;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive42.getEntries();
        java.io.File file46 = null;
        explodedArchive42.root = file46;
        java.io.File file48 = null;
        explodedArchive42.root = file48;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap50 = explodedArchive42.entries;
        explodedArchive11.entries = asciiBytesMap50;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection52 = explodedArchive11.getEntries();
        boolean boolean53 = explodedArchive11.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter54 = null;
        org.springframework.boot.loader.archive.Archive archive55 = explodedArchive11.getFilteredArchive(entryRenameFilter54);
        java.io.File file56 = null;
        explodedArchive11.root = file56;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNull(manifest16);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNotNull(asciiBytesMap24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(asciiBytesMap36);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNotNull(asciiBytesMap50);
        org.junit.Assert.assertNotNull(entryCollection52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(archive55);
    }

    @Test
    public void test13205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13205");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry2 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes3 = fileEntry2.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes4 = fileEntry2.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry2.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes6 = fileEntry2.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = null;
        fileEntry2.name = asciiBytes7;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry2.getName();
        java.io.File file10 = fileEntry2.file;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(asciiBytes3);
        org.junit.Assert.assertNull(asciiBytes4);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(asciiBytes6);
        org.junit.Assert.assertNull(asciiBytes9);
        org.junit.Assert.assertNull(file10);
    }

    @Test
    public void test13206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13206");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        java.io.File file6 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry4.getName();
        java.io.File file9 = null;
        fileEntry4.file = file9;
        java.io.File file11 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = null;
        fileEntry4.name = asciiBytes12;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = fileEntry4.name;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = fileEntry4.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(asciiBytes7);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(asciiBytes14);
    }

    @Test
    public void test13207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13207");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("hi!://:100://[hi!://:100/hi!://:100/hi!://hi!]:0hi!://:100/archive", "hi!://[:100]:52/hi!://:100/hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100", (int) '#', "hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://:100://[hi!://:100/hi!://:100/hi!://hi!]:0hi!://:100/archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13208");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("hi!://:100/:100", "", 10, "[hi!://:100/archive]:100://[hi!://:100/:100]/archive:///archive:0hi!://:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://:100/:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13209");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap4 = null;
        explodedArchive0.entries = asciiBytesMap4;
        boolean boolean6 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive0.new FileEntry();
        java.io.File file8 = null;
        fileEntry7.file = file8;
        java.io.File file10 = null;
        fileEntry7.file = file10;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = null;
        fileEntry7.name = asciiBytes12;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = fileEntry7.getName();
        java.io.File file15 = fileEntry7.file;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(asciiBytes14);
        org.junit.Assert.assertNull(file15);
    }

    @Test
    public void test13210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13210");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = null;
        fileEntry4.file = file5;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = null;
        fileEntry4.name = asciiBytes7;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry4.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = fileEntry4.getName();
        java.io.File file11 = fileEntry4.file;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes9);
        org.junit.Assert.assertNull(asciiBytes10);
        org.junit.Assert.assertNull(file11);
    }

    @Test
    public void test13211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13211");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://:100/hi!://:100]:100hi!://:100/hi!:1", "/archive:///archive:0hi!://:100://[/hi!://:100/archive]:100", 1, "hi!://:100/://[archive://:10archive]:100archive://:10archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://:100/hi!://:100]:100hi!://:100/hi!:1");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13212");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL9.toExternalForm();
        java.lang.String str39 = uRL9.getQuery();
        java.lang.String str40 = uRL9.getQuery();
        java.lang.String str41 = uRL9.getPath();
        int int42 = uRL9.getDefaultPort();
        java.lang.String str43 = uRL9.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str49 = explodedArchive48.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection50 = explodedArchive48.getEntries();
        java.util.jar.Manifest manifest51 = explodedArchive48.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler52 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL53 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler52);
        java.lang.String str54 = uRL53.getQuery();
        java.lang.String str55 = uRL53.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str62 = explodedArchive61.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection63 = explodedArchive61.getEntries();
        java.util.jar.Manifest manifest64 = explodedArchive61.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler65 = explodedArchive61.new FilteredURLStreamHandler();
        java.net.URL uRL66 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.net.URL uRL67 = new java.net.URL(uRL53, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        int int68 = uRL67.getPort();
        java.lang.String str69 = uRL67.getPath();
        java.lang.String str70 = uRL67.getPath();
        java.lang.String str71 = uRL67.getPath();
        java.net.URL uRL73 = new java.net.URL(uRL67, "://[archive://:10archive]:100archive://:10archive");
        boolean boolean74 = uRL9.equals((java.lang.Object) uRL73);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!://:100" + "'", str38, "hi!://:100");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "archive" + "'", str49, "archive");
        org.junit.Assert.assertNotNull(entryCollection50);
        org.junit.Assert.assertNull(manifest51);
        org.junit.Assert.assertEquals(uRL53.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "archive" + "'", str62, "archive");
        org.junit.Assert.assertNotNull(entryCollection63);
        org.junit.Assert.assertNull(manifest64);
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 100 + "'", int68 == 100);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "/hi!" + "'", str69, "/hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "/hi!" + "'", str70, "/hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "/hi!" + "'", str71, "/hi!");
        org.junit.Assert.assertEquals(uRL73.toString(), "hi!://:100/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test13213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13213");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        java.lang.String str25 = uRL22.getRef();
        java.lang.String str26 = uRL22.toExternalForm();
        boolean boolean27 = uRL9.sameFile(uRL22);
        java.lang.String str28 = uRL22.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file35 = explodedArchive34.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive34.getNestedArchives(entryFilter36);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection38 = explodedArchive34.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive34.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler40 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL41 = new java.net.URL("/archive", "hi!://:100/hi!", (int) (byte) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler40);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str48 = explodedArchive47.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection49 = explodedArchive47.getEntries();
        java.util.jar.Manifest manifest50 = explodedArchive47.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive47.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.lang.String str53 = uRL52.getFile();
        int int54 = uRL52.getDefaultPort();
        java.lang.String str55 = uRL52.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str62 = explodedArchive61.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection63 = explodedArchive61.getEntries();
        java.util.jar.Manifest manifest64 = explodedArchive61.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler65 = explodedArchive61.new FilteredURLStreamHandler();
        java.net.URL uRL66 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.lang.String str67 = uRL66.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str74 = explodedArchive73.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection75 = explodedArchive73.getEntries();
        java.util.jar.Manifest manifest76 = explodedArchive73.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler77 = explodedArchive73.new FilteredURLStreamHandler();
        java.net.URL uRL78 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler77);
        java.lang.String str79 = uRL78.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive81 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str82 = explodedArchive81.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection83 = explodedArchive81.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler84 = explodedArchive81.new FilteredURLStreamHandler();
        java.net.URL uRL85 = new java.net.URL(uRL78, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler84);
        java.net.URL uRL86 = new java.net.URL(uRL66, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler84);
        java.net.URL uRL87 = new java.net.URL(uRL52, "/archive", (java.net.URLStreamHandler) filteredURLStreamHandler84);
        java.net.URL uRL88 = new java.net.URL(uRL41, "/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler84);
        java.net.URL uRL89 = new java.net.URL(uRL22, "hi!://:100/hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler84);
        int int90 = uRL89.getPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!://:100" + "'", str26, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertNotNull(entryCollection38);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertEquals(uRL41.toString(), "/archive://[hi!://:100/hi!]:1hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "archive" + "'", str48, "archive");
        org.junit.Assert.assertNotNull(entryCollection49);
        org.junit.Assert.assertNull(manifest50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "archive" + "'", str62, "archive");
        org.junit.Assert.assertNotNull(entryCollection63);
        org.junit.Assert.assertNull(manifest64);
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "archive" + "'", str74, "archive");
        org.junit.Assert.assertNotNull(entryCollection75);
        org.junit.Assert.assertNull(manifest76);
        org.junit.Assert.assertEquals(uRL78.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "archive" + "'", str82, "archive");
        org.junit.Assert.assertNotNull(entryCollection83);
        org.junit.Assert.assertEquals(uRL85.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL86.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL87.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL88.toString(), "/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertEquals(uRL89.toString(), "hi!://:100/hi!://:100/hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 100 + "'", int90 == 100);
    }

    @Test
    public void test13214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13214");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("hi!://hi!:1/[://[archive://:10archive]:100archive://:10archive]:0", "[hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!]:0", "[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:1");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://hi!:1/[://[archive://:10archive]:100archive://:10archive]:0");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13215");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.io.File file3 = null;
        explodedArchive0.root = file3;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection5 = explodedArchive0.getEntries();
        explodedArchive0.filtered = false;
        explodedArchive0.filtered = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest11 = explodedArchive0.manifest;
        explodedArchive0.filtered = false;
        org.junit.Assert.assertNotNull(entryCollection5);
        org.junit.Assert.assertNull(manifest11);
    }

    @Test
    public void test13216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13216");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.io.File file3 = explodedArchive0.root;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        java.io.File file5 = explodedArchive0.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        boolean boolean7 = explodedArchive0.filtered;
        boolean boolean8 = explodedArchive0.filtered;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test13217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13217");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL37.getUserInfo();
        java.io.File file40 = null;
        java.io.File file41 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter44 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList45 = explodedArchive42.getNestedArchives(entryFilter44);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive42.getNestedArchives(entryFilter46);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap48 = explodedArchive42.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file41, asciiBytesMap48);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive(file40, asciiBytesMap48);
        boolean boolean51 = explodedArchive50.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler52 = explodedArchive50.new FilteredURLStreamHandler();
        java.net.URL uRL53 = new java.net.URL(uRL37, "/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler52);
        java.lang.String str54 = uRL53.getFile();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj55 = uRL53.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(archiveList45);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertNotNull(asciiBytesMap48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals(uRL53.toString(), "hi!://:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "/archive:///archive:0hi!://:100" + "'", str54, "/archive:///archive:0hi!://:100");
    }

    @Test
    public void test13218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13218");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = null;
        fileEntry4.file = file5;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = null;
        fileEntry4.name = asciiBytes7;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry4.name;
        java.io.File file10 = fileEntry4.file;
        java.io.File file11 = fileEntry4.getFile();
        java.io.File file12 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = null;
        fileEntry4.name = asciiBytes13;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = fileEntry4.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test13219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13219");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        java.io.File file4 = null;
        explodedArchive0.root = file4;
        java.util.jar.Manifest manifest6 = null;
        explodedArchive0.manifest = manifest6;
        boolean boolean8 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str10 = explodedArchive9.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive9.new FileEntry();
        java.util.jar.Manifest manifest12 = explodedArchive9.getManifest();
        java.util.jar.Manifest manifest13 = explodedArchive9.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive14.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive14.getNestedArchives(entryFilter19);
        java.util.jar.Manifest manifest21 = null;
        explodedArchive14.manifest = manifest21;
        explodedArchive14.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive14.entries;
        explodedArchive9.entries = asciiBytesMap25;
        explodedArchive0.entries = asciiBytesMap25;
        boolean boolean28 = explodedArchive0.filtered;
        java.io.File file29 = null;
        explodedArchive0.root = file29;
        java.lang.String str31 = explodedArchive0.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive0.entries;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "archive" + "'", str10, "archive");
        org.junit.Assert.assertNull(manifest12);
        org.junit.Assert.assertNull(manifest13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap32);
    }

    @Test
    public void test13220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13220");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.io.File file9 = null;
        java.io.File file10 = null;
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap20);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap20);
        explodedArchive0.entries = asciiBytesMap20;
        java.util.jar.Manifest manifest24 = null;
        explodedArchive0.manifest = manifest24;
        java.util.jar.Manifest manifest26 = explodedArchive0.manifest;
        boolean boolean27 = explodedArchive0.filtered;
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive0.getNestedArchives(entryFilter30);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNull(manifest26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(archiveList31);
    }

    @Test
    public void test13221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13221");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.io.File file3 = null;
        explodedArchive0.root = file3;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection5 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest6 = null;
        explodedArchive0.manifest = manifest6;
        boolean boolean8 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest9 = null;
        explodedArchive0.manifest = manifest9;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler11 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = explodedArchive0.entries;
        org.junit.Assert.assertNotNull(entryCollection5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(asciiBytesMap12);
    }

    @Test
    public void test13222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13222");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive1.new FileEntry();
        java.lang.String str6 = explodedArchive1.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive1.new FileEntry();
        java.util.jar.Manifest manifest8 = null;
        explodedArchive1.manifest = manifest8;
        java.lang.String str10 = explodedArchive1.toString();
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive13.getNestedArchives(entryFilter20);
        java.io.File file22 = null;
        java.io.File file23 = null;
        java.io.File file24 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive25.getNestedArchives(entryFilter27);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive25.getNestedArchives(entryFilter29);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap31 = explodedArchive25.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file24, asciiBytesMap31);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap33 = explodedArchive32.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap33);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap33);
        explodedArchive13.entries = asciiBytesMap33;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap33);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive37.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap38);
        explodedArchive1.entries = asciiBytesMap38;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap38);
        java.io.File file42 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file44 = explodedArchive43.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter45 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList46 = explodedArchive43.getNestedArchives(entryFilter45);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry47 = explodedArchive43.new FileEntry();
        java.lang.String str48 = explodedArchive43.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry49 = explodedArchive43.new FileEntry();
        java.util.jar.Manifest manifest50 = null;
        explodedArchive43.manifest = manifest50;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap52 = explodedArchive43.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive(file42, asciiBytesMap52);
        explodedArchive41.entries = asciiBytesMap52;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection55 = explodedArchive41.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection56 = explodedArchive41.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter57 = null;
        org.springframework.boot.loader.archive.Archive archive58 = explodedArchive41.getFilteredArchive(entryRenameFilter57);
        java.util.jar.Manifest manifest59 = null;
        explodedArchive41.manifest = manifest59;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "archive" + "'", str10, "archive");
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNotNull(asciiBytesMap31);
        org.junit.Assert.assertNotNull(asciiBytesMap33);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertNull(file44);
        org.junit.Assert.assertNotNull(archiveList46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "archive" + "'", str48, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap52);
        org.junit.Assert.assertNotNull(entryCollection55);
        org.junit.Assert.assertNotNull(entryCollection56);
        org.junit.Assert.assertNotNull(archive58);
    }

    @Test
    public void test13223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13223");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.jar.Manifest manifest4 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive0.getFilteredArchive(entryRenameFilter5);
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.lang.String str8 = explodedArchive0.toString();
        java.util.jar.Manifest manifest9 = explodedArchive0.manifest;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertNull(manifest9);
    }

    @Test
    public void test13224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13224");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        java.lang.String str12 = uRL9.getHost();
        int int13 = uRL9.getDefaultPort();
        java.lang.String str14 = uRL9.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str20 = explodedArchive19.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection21 = explodedArchive19.getEntries();
        java.util.jar.Manifest manifest22 = explodedArchive19.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getQuery();
        java.lang.String str26 = uRL24.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.net.URL uRL38 = new java.net.URL(uRL24, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str39 = uRL24.getFile();
        java.lang.String str40 = uRL24.getAuthority();
        int int41 = uRL24.getPort();
        java.lang.String str42 = uRL24.getFile();
        java.net.URL uRL44 = new java.net.URL(uRL24, "hi!://:100/hi!://:100");
        boolean boolean45 = uRL9.sameFile(uRL24);
        java.lang.String str46 = uRL9.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str53 = explodedArchive52.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection54 = explodedArchive52.getEntries();
        java.util.jar.Manifest manifest55 = explodedArchive52.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler56 = explodedArchive52.new FilteredURLStreamHandler();
        java.net.URL uRL57 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler56);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str63 = explodedArchive62.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection64 = explodedArchive62.getEntries();
        java.util.jar.Manifest manifest65 = explodedArchive62.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler66 = explodedArchive62.new FilteredURLStreamHandler();
        java.net.URL uRL67 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.lang.String str68 = uRL67.getQuery();
        java.lang.String str69 = uRL67.getPath();
        boolean boolean70 = uRL57.sameFile(uRL67);
        java.net.URLStreamHandler uRLStreamHandler72 = null;
        java.net.URL uRL73 = new java.net.URL(uRL67, "", uRLStreamHandler72);
        int int74 = uRL73.getPort();
        java.lang.String str75 = uRL73.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive85 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str86 = explodedArchive85.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap87 = null;
        explodedArchive85.entries = asciiBytesMap87;
        java.util.jar.Manifest manifest89 = null;
        explodedArchive85.manifest = manifest89;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler91 = explodedArchive85.new FilteredURLStreamHandler();
        java.net.URL uRL92 = new java.net.URL("hi!", ":100", (int) '4', "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler91);
        java.net.URL uRL93 = new java.net.URL("hi!://:100/hi!://:100/hi!", "/hi!://:100/archive", (-1), "", (java.net.URLStreamHandler) filteredURLStreamHandler91);
        java.net.URL uRL94 = new java.net.URL(uRL73, "hi!://hi!:1hi!", (java.net.URLStreamHandler) filteredURLStreamHandler91);
        java.net.URL uRL95 = new java.net.URL(uRL9, "hi!://:100/hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler91);
        java.lang.String str96 = uRL9.getUserInfo();
        java.lang.String str97 = uRL9.getAuthority();
        int int98 = uRL9.getPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "archive" + "'", str20, "archive");
        org.junit.Assert.assertNotNull(entryCollection21);
        org.junit.Assert.assertNull(manifest22);
        org.junit.Assert.assertEquals(uRL24.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + ":100" + "'", str40, ":100");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "archive" + "'", str53, "archive");
        org.junit.Assert.assertNotNull(entryCollection54);
        org.junit.Assert.assertNull(manifest55);
        org.junit.Assert.assertEquals(uRL57.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "archive" + "'", str63, "archive");
        org.junit.Assert.assertNotNull(entryCollection64);
        org.junit.Assert.assertNull(manifest65);
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals(uRL73.toString(), "hi!://:100");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "archive" + "'", str86, "archive");
        org.junit.Assert.assertEquals(uRL92.toString(), "hi!://[:100]:52hi!");
        org.junit.Assert.assertEquals(uRL93.toString(), "hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]");
        org.junit.Assert.assertEquals(uRL94.toString(), "hi!://:100/hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL95.toString(), "hi!://:100/hi!://:100/hi!://:100/hi!");
        org.junit.Assert.assertNull(str96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + ":100" + "'", str97, ":100");
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 100 + "'", int98 == 100);
    }

    @Test
    public void test13225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13225");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str2 = explodedArchive1.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry3 = explodedArchive1.new FileEntry();
        java.util.jar.Manifest manifest4 = explodedArchive1.getManifest();
        java.util.jar.Manifest manifest5 = explodedArchive1.manifest;
        java.io.File file6 = null;
        explodedArchive1.root = file6;
        explodedArchive1.filtered = true;
        java.io.File file10 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive11.getNestedArchives(entryFilter13);
        explodedArchive11.filtered = false;
        java.util.jar.Manifest manifest17 = explodedArchive11.manifest;
        java.io.File file18 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive19.getNestedArchives(entryFilter21);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive19.getNestedArchives(entryFilter23);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive26.entries;
        explodedArchive11.entries = asciiBytesMap27;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap27);
        java.util.jar.Manifest manifest30 = null;
        explodedArchive29.manifest = manifest30;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive29.entries;
        explodedArchive1.entries = asciiBytesMap32;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap32);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry35 = explodedArchive34.new FileEntry();
        java.io.File file36 = fileEntry35.getFile();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "archive" + "'", str2, "archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNull(manifest5);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNull(file36);
    }

    @Test
    public void test13226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13226");
        java.io.File file4 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file6 = explodedArchive5.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive5.getNestedArchives(entryFilter7);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive5.getNestedArchives(entryFilter9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive5.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap11);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection13 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        java.io.File file16 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter17 = null;
        org.springframework.boot.loader.archive.Archive archive18 = explodedArchive12.getFilteredArchive(entryRenameFilter17);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL("/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", "archive://:10archive", (int) (short) -1, "hi!://:100/hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        java.net.URL uRL22 = new java.net.URL(uRL20, "hi!://:100");
        java.io.File file24 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive25.getNestedArchives(entryFilter27);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive25.getNestedArchives(entryFilter29);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap31 = explodedArchive25.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive25.getNestedArchives(entryFilter32);
        java.io.File file34 = null;
        java.io.File file35 = null;
        java.io.File file36 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file38 = explodedArchive37.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive37.getNestedArchives(entryFilter39);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter41 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList42 = explodedArchive37.getNestedArchives(entryFilter41);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap43 = explodedArchive37.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive(file36, asciiBytesMap43);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap45 = explodedArchive44.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file35, asciiBytesMap45);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive(file34, asciiBytesMap45);
        explodedArchive25.entries = asciiBytesMap45;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file24, asciiBytesMap45);
        java.util.jar.Manifest manifest50 = null;
        explodedArchive49.manifest = manifest50;
        boolean boolean52 = explodedArchive49.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap53 = explodedArchive49.entries;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap54 = explodedArchive49.entries;
        boolean boolean55 = explodedArchive49.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap56 = explodedArchive49.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler57 = explodedArchive49.new FilteredURLStreamHandler();
        java.net.URL uRL58 = new java.net.URL(uRL22, "/[hi!://:100/hi!]:10", (java.net.URLStreamHandler) filteredURLStreamHandler57);
        java.lang.String str59 = uRL22.getFile();
        java.lang.String str60 = uRL22.toString();
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNotNull(entryCollection13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(archive18);
        org.junit.Assert.assertEquals(uRL20.toString(), "/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[archive://:10archive]hi!://:100/hi!:1");
        org.junit.Assert.assertEquals(uRL22.toString(), "/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[archive://:10archive]hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNotNull(asciiBytesMap31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(archiveList42);
        org.junit.Assert.assertNotNull(asciiBytesMap43);
        org.junit.Assert.assertNotNull(asciiBytesMap45);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(asciiBytesMap53);
        org.junit.Assert.assertNotNull(asciiBytesMap54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(asciiBytesMap56);
        org.junit.Assert.assertEquals(uRL58.toString(), "/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[archive://:10archive]/[hi!://:100/hi!]:10");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!://:100/hi!://:100" + "'", str59, "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[archive://:10archive]hi!://:100/hi!://:100" + "'", str60, "/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[archive://:10archive]hi!://:100/hi!://:100");
    }

    @Test
    public void test13227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13227");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry2 = explodedArchive0.new FileEntry();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap3 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file5, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap3);
    }

    @Test
    public void test13228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13228");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getFile();
        int int28 = uRL26.getDefaultPort();
        java.lang.String str29 = uRL26.getRef();
        boolean boolean30 = uRL9.sameFile(uRL26);
        java.lang.String str31 = uRL9.getHost();
        java.lang.String str32 = uRL9.getProtocol();
        int int33 = uRL9.getPort();
        int int34 = uRL9.getPort();
        java.lang.String str35 = uRL9.getFile();
        java.lang.String str36 = uRL9.getPath();
        int int37 = uRL9.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
    }

    @Test
    public void test13229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13229");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str42 = uRL41.getProtocol();
        int int43 = uRL41.getDefaultPort();
        java.lang.String str44 = uRL41.getHost();
        java.io.File file49 = null;
        java.io.File file50 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file52 = explodedArchive51.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter53 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList54 = explodedArchive51.getNestedArchives(entryFilter53);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter55 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList56 = explodedArchive51.getNestedArchives(entryFilter55);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap57 = explodedArchive51.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive(file50, asciiBytesMap57);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap59 = explodedArchive58.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive(file49, asciiBytesMap59);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry61 = explodedArchive60.new FileEntry();
        explodedArchive60.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler64 = explodedArchive60.new FilteredURLStreamHandler();
        java.net.URL uRL65 = new java.net.URL("hi!://:100/hi!://hi!:1hi!", "/archive:///archive:0hi!://:100", (int) (byte) 10, "[://[archive://:10archive]:100archive://:10archive]:0", (java.net.URLStreamHandler) filteredURLStreamHandler64);
        java.lang.String str66 = uRL65.getProtocol();
        boolean boolean67 = uRL41.sameFile(uRL65);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection68 = uRL65.openConnection();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(archiveList54);
        org.junit.Assert.assertNotNull(archiveList56);
        org.junit.Assert.assertNotNull(asciiBytesMap57);
        org.junit.Assert.assertNotNull(asciiBytesMap59);
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/hi!://hi!:1hi!://[/archive:///archive:0hi!://:100]:10[://[archive://:10archive]:100archive://:10archive]:0");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!://:100/hi!://hi!:1hi!" + "'", str66, "hi!://:100/hi!://hi!:1hi!");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test13230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13230");
        java.net.URLConnection.setDefaultRequestProperty("/hi!://:100/hi!://:100/hi!://:100/hi!://:100", "archive://:0/:100");
    }

    @Test
    public void test13231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13231");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        boolean boolean12 = explodedArchive11.filtered;
        explodedArchive11.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive11.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file18 = explodedArchive17.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive17.getNestedArchives(entryFilter19);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry21 = explodedArchive17.new FileEntry();
        java.lang.String str22 = explodedArchive17.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = explodedArchive17.entries;
        java.util.jar.Manifest manifest24 = null;
        explodedArchive17.manifest = manifest24;
        java.io.File file26 = null;
        explodedArchive17.root = file26;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection28 = explodedArchive17.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive17.entries;
        explodedArchive11.entries = asciiBytesMap29;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive11.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter32 = null;
        org.springframework.boot.loader.archive.Archive archive33 = explodedArchive11.getFilteredArchive(entryRenameFilter32);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file35 = explodedArchive34.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive34.getNestedArchives(entryFilter36);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter38 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList39 = explodedArchive34.getNestedArchives(entryFilter38);
        java.util.jar.Manifest manifest40 = null;
        explodedArchive34.manifest = manifest40;
        java.io.File file42 = explodedArchive34.root;
        java.io.File file43 = explodedArchive34.root;
        boolean boolean44 = explodedArchive34.filtered;
        java.io.File file45 = explodedArchive34.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap46 = explodedArchive34.entries;
        explodedArchive11.entries = asciiBytesMap46;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap23);
        org.junit.Assert.assertNotNull(entryCollection28);
        org.junit.Assert.assertNotNull(asciiBytesMap29);
        org.junit.Assert.assertNotNull(archive33);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertNotNull(archiveList39);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(asciiBytesMap46);
    }

    @Test
    public void test13232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13232");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getQuery();
        java.net.URL uRL15 = new java.net.URL(uRL9, "");
        java.io.File file17 = null;
        java.io.File file18 = null;
        java.io.File file19 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file21 = explodedArchive20.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive20.getNestedArchives(entryFilter22);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive20.getNestedArchives(entryFilter24);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file19, asciiBytesMap26);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = explodedArchive27.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap28);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap28);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL(uRL15, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str50 = explodedArchive49.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection51 = explodedArchive49.getEntries();
        java.util.jar.Manifest manifest52 = explodedArchive49.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler53 = explodedArchive49.new FilteredURLStreamHandler();
        java.net.URL uRL54 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        java.lang.String str55 = uRL54.getQuery();
        java.lang.String str56 = uRL54.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str63 = explodedArchive62.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection64 = explodedArchive62.getEntries();
        java.util.jar.Manifest manifest65 = explodedArchive62.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler66 = explodedArchive62.new FilteredURLStreamHandler();
        java.net.URL uRL67 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.net.URL uRL68 = new java.net.URL(uRL54, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.net.URL uRL69 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.net.URL uRL70 = new java.net.URL("archive://:10archive", "[hi!://:100/hi!]", 10, "://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.net.URL uRL71 = new java.net.URL("hi!://:100/:100", "hi!://:100/:100", (int) (short) 0, "/archive://[hi!://:100/hi!]:1/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        boolean boolean72 = uRL32.sameFile(uRL71);
        java.lang.String str73 = uRL71.toExternalForm();
        java.lang.String str74 = uRL71.getProtocol();
        java.lang.String str75 = uRL71.getAuthority();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection76 = uRL71.openConnection();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNotNull(asciiBytesMap28);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "archive" + "'", str50, "archive");
        org.junit.Assert.assertNotNull(entryCollection51);
        org.junit.Assert.assertNull(manifest52);
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "archive" + "'", str63, "archive");
        org.junit.Assert.assertNotNull(entryCollection64);
        org.junit.Assert.assertNull(manifest65);
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL69.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL70.toString(), "archive://:10archive://[hi!://:100/hi!]:10://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL71.toString(), "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!" + "'", str73, "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!://:100/:100" + "'", str74, "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[hi!://:100/:100]:0" + "'", str75, "[hi!://:100/:100]:0");
    }

    @Test
    public void test13233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13233");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getProtocol();
        java.lang.String str14 = uRL9.getPath();
        java.lang.String str15 = uRL9.getAuthority();
        java.lang.String str16 = uRL9.getAuthority();
        java.lang.String str17 = uRL9.getUserInfo();
        int int18 = uRL9.getDefaultPort();
        java.lang.String str19 = uRL9.getHost();
        int int20 = uRL9.getDefaultPort();
        java.lang.String str21 = uRL9.getFile();
        java.lang.String str22 = uRL9.getFile();
        java.net.URL uRL24 = new java.net.URL(uRL9, "");
        java.lang.String str25 = uRL9.getFile();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + ":100" + "'", str15, ":100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + ":100" + "'", str16, ":100");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals(uRL24.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
    }

    @Test
    public void test13234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13234");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive0.new FileEntry();
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        java.util.jar.Manifest manifest11 = null;
        explodedArchive0.manifest = manifest11;
        java.io.File file13 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file13, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
    }

    @Test
    public void test13235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13235");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.lang.String str7 = explodedArchive1.toString();
        java.util.jar.Manifest manifest8 = explodedArchive1.manifest;
        java.io.File file9 = explodedArchive1.root;
        explodedArchive1.filtered = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive1.new FileEntry();
        java.io.File file13 = null;
        java.io.File file14 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive15.getNestedArchives(entryFilter17);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive15.getNestedArchives(entryFilter19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive15.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file14, asciiBytesMap21);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = explodedArchive22.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap23);
        explodedArchive24.filtered = true;
        java.io.File file27 = null;
        explodedArchive24.root = file27;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection29 = explodedArchive24.getEntries();
        java.io.File file30 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive31.getNestedArchives(entryFilter33);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive31.getNestedArchives(entryFilter35);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap37 = explodedArchive31.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file30, asciiBytesMap37);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection39 = explodedArchive38.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler40 = explodedArchive38.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry41 = explodedArchive38.new FileEntry();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap42 = explodedArchive38.entries;
        explodedArchive24.entries = asciiBytesMap42;
        explodedArchive1.entries = asciiBytesMap42;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap42);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNotNull(asciiBytesMap23);
        org.junit.Assert.assertNotNull(entryCollection29);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertNotNull(asciiBytesMap37);
        org.junit.Assert.assertNotNull(entryCollection39);
        org.junit.Assert.assertNotNull(asciiBytesMap42);
    }

    @Test
    public void test13236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13236");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/[/:100]:0", "hi!://:100/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", (int) (short) 10, "[hi!://:100/hi!]:1://[hi!://:100/[hi!://:100/hi!]]:35hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/[/:100]:0");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13237");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.jar.Manifest manifest4 = null;
        explodedArchive0.manifest = manifest4;
        explodedArchive0.filtered = true;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter8 = null;
        org.springframework.boot.loader.archive.Archive archive9 = explodedArchive0.getFilteredArchive(entryRenameFilter8);
        java.io.File file10 = explodedArchive0.root;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection11 = explodedArchive0.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive0.getNestedArchives(entryFilter13);
        java.util.jar.Manifest manifest15 = null;
        explodedArchive0.manifest = manifest15;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archive9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(entryCollection11);
        org.junit.Assert.assertNotNull(asciiBytesMap12);
        org.junit.Assert.assertNotNull(archiveList14);
    }

    @Test
    public void test13238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13238");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive0.new FilteredURLStreamHandler();
        boolean boolean6 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive8.getNestedArchives(entryFilter12);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive8.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive15.getNestedArchives(entryFilter17);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive15.getNestedArchives(entryFilter19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive15.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive15.getNestedArchives(entryFilter22);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive24.getNestedArchives(entryFilter26);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive24.getNestedArchives(entryFilter28);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive24.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter31 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList32 = explodedArchive24.getNestedArchives(entryFilter31);
        java.io.File file33 = null;
        java.io.File file34 = null;
        java.io.File file35 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file37 = explodedArchive36.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter38 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList39 = explodedArchive36.getNestedArchives(entryFilter38);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter40 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList41 = explodedArchive36.getNestedArchives(entryFilter40);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap42 = explodedArchive36.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file35, asciiBytesMap42);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap44 = explodedArchive43.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive(file34, asciiBytesMap44);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file33, asciiBytesMap44);
        explodedArchive24.entries = asciiBytesMap44;
        explodedArchive15.entries = asciiBytesMap44;
        explodedArchive8.entries = asciiBytesMap44;
        explodedArchive0.entries = asciiBytesMap44;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNotNull(archiveList32);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(archiveList39);
        org.junit.Assert.assertNotNull(archiveList41);
        org.junit.Assert.assertNotNull(asciiBytesMap42);
        org.junit.Assert.assertNotNull(asciiBytesMap44);
    }

    @Test
    public void test13239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13239");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        java.util.jar.Manifest manifest13 = null;
        explodedArchive11.manifest = manifest13;
        java.util.jar.Manifest manifest15 = null;
        explodedArchive11.manifest = manifest15;
        java.io.File file17 = null;
        explodedArchive11.root = file17;
        java.lang.String str19 = explodedArchive11.toString();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter20 = null;
        org.springframework.boot.loader.archive.Archive archive21 = explodedArchive11.getFilteredArchive(entryRenameFilter20);
        java.util.jar.Manifest manifest22 = explodedArchive11.getManifest();
        java.io.File file23 = null;
        explodedArchive11.root = file23;
        java.util.jar.Manifest manifest25 = explodedArchive11.manifest;
        explodedArchive11.filtered = false;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "archive" + "'", str19, "archive");
        org.junit.Assert.assertNotNull(archive21);
        org.junit.Assert.assertNull(manifest22);
        org.junit.Assert.assertNull(manifest25);
    }

    @Test
    public void test13240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13240");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getAuthority();
        java.lang.String str25 = uRL9.getUserInfo();
        java.lang.String str26 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str41 = explodedArchive40.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive40.getEntries();
        java.util.jar.Manifest manifest43 = explodedArchive40.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler44 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL45 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler44);
        java.lang.String str46 = uRL45.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str49 = explodedArchive48.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection50 = explodedArchive48.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL(uRL45, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.lang.String str53 = uRL52.getAuthority();
        int int54 = uRL52.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file57 = explodedArchive56.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter58 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList59 = explodedArchive56.getNestedArchives(entryFilter58);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter60 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList61 = explodedArchive56.getNestedArchives(entryFilter60);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap62 = explodedArchive56.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive56.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL(uRL52, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL65 = new java.net.URL("/hi!://:100", "", (int) (byte) 0, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL66 = new java.net.URL("hi!://:100/hi!://:100/hi!", "[hi!://:100/hi!]", (int) (byte) -1, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL67 = new java.net.URL(uRL9, "/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL69 = new java.net.URL(uRL9, "[hi!://:100/hi!]:10");
        java.net.URL uRL71 = new java.net.URL(uRL69, "hi!://:100/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]");
        int int72 = uRL71.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "archive" + "'", str41, "archive");
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "archive" + "'", str49, "archive");
        org.junit.Assert.assertNotNull(entryCollection50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + ":100" + "'", str53, ":100");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(archiveList59);
        org.junit.Assert.assertNotNull(archiveList61);
        org.junit.Assert.assertNotNull(asciiBytesMap62);
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL65.toString(), "/hi!://:100://:0archive://:10archive");
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/hi!://:100/hi!://[hi!://:100/hi!]hi!://:100");
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL69.toString(), "hi!://:100/[hi!://:100/hi!]:10");
        org.junit.Assert.assertEquals(uRL71.toString(), "hi!://:100/[hi!://:100/hi!://:100/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
    }

    @Test
    public void test13241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13241");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        boolean boolean5 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        java.io.File file7 = explodedArchive0.root;
        java.util.jar.Manifest manifest8 = explodedArchive0.getManifest();
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file9, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(manifest8);
    }

    @Test
    public void test13242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13242");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.io.File file9 = null;
        java.io.File file10 = null;
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap20);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap20);
        explodedArchive0.entries = asciiBytesMap20;
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry26 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes27 = fileEntry26.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = null;
        fileEntry26.name = asciiBytes28;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNull(asciiBytes27);
    }

    @Test
    public void test13243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13243");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.net.URL uRL29 = new java.net.URL(uRL9, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive31.getNestedArchives(entryFilter33);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive31.getNestedArchives(entryFilter35);
        java.lang.String str37 = explodedArchive31.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL(uRL29, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str40 = uRL29.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap47 = null;
        explodedArchive45.entries = asciiBytesMap47;
        java.util.jar.Manifest manifest49 = null;
        explodedArchive45.manifest = manifest49;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL("hi!://:100/hi!", "hi!://:100/hi!", 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.lang.String str53 = uRL52.getPath();
        java.lang.String str54 = uRL52.getHost();
        boolean boolean55 = uRL29.sameFile(uRL52);
        java.lang.String str56 = uRL52.getQuery();
        java.lang.String str57 = uRL52.toExternalForm();
        java.lang.String str58 = uRL52.toExternalForm();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/:100");
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/:100" + "'", str40, "/:100");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!://:100/hi!" + "'", str53, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[hi!://:100/hi!]" + "'", str54, "[hi!://:100/hi!]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!" + "'", str57, "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!" + "'", str58, "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
    }

    @Test
    public void test13244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13244");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive1.new FileEntry();
        java.lang.String str6 = explodedArchive1.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive1.new FileEntry();
        java.util.jar.Manifest manifest8 = null;
        explodedArchive1.manifest = manifest8;
        java.lang.String str10 = explodedArchive1.toString();
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive13.getNestedArchives(entryFilter20);
        java.io.File file22 = null;
        java.io.File file23 = null;
        java.io.File file24 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file26 = explodedArchive25.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive25.getNestedArchives(entryFilter27);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive25.getNestedArchives(entryFilter29);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap31 = explodedArchive25.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive(file24, asciiBytesMap31);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap33 = explodedArchive32.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap33);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap33);
        explodedArchive13.entries = asciiBytesMap33;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap33);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap38 = explodedArchive37.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap38);
        explodedArchive1.entries = asciiBytesMap38;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap38);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive41.new FileEntry();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter43 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList44 = explodedArchive41.getNestedArchives(entryFilter43);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter45 = null;
        org.springframework.boot.loader.archive.Archive archive46 = explodedArchive41.getFilteredArchive(entryRenameFilter45);
        boolean boolean47 = explodedArchive41.filtered;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "archive" + "'", str10, "archive");
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNotNull(asciiBytesMap31);
        org.junit.Assert.assertNotNull(asciiBytesMap33);
        org.junit.Assert.assertNotNull(asciiBytesMap38);
        org.junit.Assert.assertNotNull(archiveList44);
        org.junit.Assert.assertNotNull(archive46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test13245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13245");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL37.getUserInfo();
        java.lang.String str39 = uRL37.getProtocol();
        java.lang.String str40 = uRL37.getAuthority();
        java.lang.String str41 = uRL37.getUserInfo();
        java.lang.String str42 = uRL37.getUserInfo();
        int int43 = uRL37.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + ":100" + "'", str40, ":100");
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
    }

    @Test
    public void test13246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13246");
        java.io.File file4 = null;
        java.io.File file5 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive6.getNestedArchives(entryFilter8);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive6.getNestedArchives(entryFilter10);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = explodedArchive6.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file5, asciiBytesMap12);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap14);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry16 = explodedArchive15.new FileEntry();
        explodedArchive15.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter19 = null;
        org.springframework.boot.loader.archive.Archive archive20 = explodedArchive15.getFilteredArchive(entryRenameFilter19);
        java.lang.String str21 = explodedArchive15.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL23 = new java.net.URL("hi!:1", "hi!://:100/archive:///archive:1hi!://:100/archive", (int) (short) -1, "[hi!://:100/:100]:100", (java.net.URLStreamHandler) filteredURLStreamHandler22);
        java.net.URL uRL25 = new java.net.URL(uRL23, "hi!://:100/[hi!://:100/hi!]://[hi!://:100/[hi!://:100/hi!]]/:52");
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(asciiBytesMap12);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertNotNull(archive20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!:1://[hi!://:100/archive:///archive:1hi!://:100/archive][hi!://:100/:100]:100");
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!:1://[hi!://:100/archive:///archive:1hi!://:100/archive][hi!://:100/hi!://:100/[hi!://:100/hi!]://[hi!://:100/[hi!://:100/hi!]]/:52");
    }

    @Test
    public void test13247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13247");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        boolean boolean5 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive0.entries;
        java.io.File file8 = null;
        java.io.File file9 = null;
        java.io.File file10 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive11.getNestedArchives(entryFilter13);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive11.getNestedArchives(entryFilter15);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive11.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive18.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap19);
        explodedArchive20.filtered = true;
        java.io.File file23 = null;
        explodedArchive20.root = file23;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection25 = explodedArchive20.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap26);
        explodedArchive0.entries = asciiBytesMap26;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive0.getNestedArchives(entryFilter29);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter31 = null;
        org.springframework.boot.loader.archive.Archive archive32 = explodedArchive0.getFilteredArchive(entryRenameFilter31);
        boolean boolean33 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap35 = explodedArchive0.entries;
        explodedArchive0.filtered = true;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(asciiBytesMap17);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(entryCollection25);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNotNull(archive32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap35);
    }

    @Test
    public void test13248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13248");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry12.name;
        java.io.File file14 = fileEntry12.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes15 = fileEntry12.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes16 = fileEntry12.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes17 = null;
        fileEntry12.name = asciiBytes17;
        java.io.File file19 = fileEntry12.getFile();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(asciiBytes13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(asciiBytes15);
        org.junit.Assert.assertNull(asciiBytes16);
        org.junit.Assert.assertNull(file19);
    }

    @Test
    public void test13249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13249");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("[hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]]:10", "[hi!://:100/hi!]:100", "/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: [hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]]:10");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13250");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter9 = null;
        org.springframework.boot.loader.archive.Archive archive10 = explodedArchive8.getFilteredArchive(entryRenameFilter9);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive8.new FileEntry();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection12 = explodedArchive8.getEntries();
        java.lang.String str13 = explodedArchive8.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.lang.String str20 = explodedArchive14.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive14.new FilteredURLStreamHandler();
        boolean boolean22 = explodedArchive14.filtered;
        java.io.File file23 = explodedArchive14.root;
        java.io.File file24 = null;
        explodedArchive14.root = file24;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive14.getNestedArchives(entryFilter26);
        java.util.jar.Manifest manifest28 = null;
        explodedArchive14.manifest = manifest28;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry30 = explodedArchive14.new FileEntry();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive31 = explodedArchive8.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(archive10);
        org.junit.Assert.assertNotNull(entryCollection12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "archive" + "'", str20, "archive");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(archiveList27);
    }

    @Test
    public void test13251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13251");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("/hi!://:100/hi!://:100/hi!://hi!", "[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:1", "hi!://:100/archive:///archive:1hi!://:100/hi!://:100/archive:///archive:0hi!://:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /hi!://:100/hi!://:100/hi!://hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13252");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        boolean boolean9 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest10 = explodedArchive0.manifest;
        java.lang.String str11 = explodedArchive0.toString();
        java.lang.String str12 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry13 = explodedArchive0.new FileEntry();
        java.io.File file14 = null;
        java.io.File file15 = null;
        java.io.File file16 = null;
        java.io.File file17 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive18.getNestedArchives(entryFilter20);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive18.getNestedArchives(entryFilter22);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = explodedArchive18.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap24);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive25.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file16, asciiBytesMap26);
        explodedArchive27.filtered = true;
        java.io.File file30 = null;
        explodedArchive27.root = file30;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive27.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap33 = explodedArchive27.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file15, asciiBytesMap33);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file14, asciiBytesMap33);
        explodedArchive0.entries = asciiBytesMap33;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive0.new FilteredURLStreamHandler();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "archive" + "'", str11, "archive");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "archive" + "'", str12, "archive");
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNotNull(asciiBytesMap24);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNotNull(asciiBytesMap33);
    }

    @Test
    public void test13253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13253");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap4 = null;
        explodedArchive0.entries = asciiBytesMap4;
        java.io.File file6 = explodedArchive0.root;
        java.io.File file7 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive8.getNestedArchives(entryFilter12);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive8.entries;
        explodedArchive0.entries = asciiBytesMap14;
        explodedArchive0.filtered = false;
        java.lang.String str18 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter19 = null;
        org.springframework.boot.loader.archive.Archive archive20 = explodedArchive0.getFilteredArchive(entryRenameFilter19);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry21 = explodedArchive0.new FileEntry();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(archive20);
    }

    @Test
    public void test13254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13254");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        java.io.File file3 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        explodedArchive4.filtered = false;
        java.util.jar.Manifest manifest10 = explodedArchive4.manifest;
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive19.entries;
        explodedArchive4.entries = asciiBytesMap20;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file3, asciiBytesMap20);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap20);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive23.new FilteredURLStreamHandler();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive23.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap25);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap25);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter28 = null;
        org.springframework.boot.loader.archive.Archive archive29 = explodedArchive27.getFilteredArchive(entryRenameFilter28);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNotNull(archive29);
    }

    @Test
    public void test13255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13255");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = null;
        fileEntry4.file = file5;
        java.io.File file7 = fileEntry4.getFile();
        java.io.File file8 = fileEntry4.file;
        java.io.File file9 = fileEntry4.file;
        java.io.File file10 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = fileEntry4.name;
        java.io.File file12 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry4.name;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(asciiBytes11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(asciiBytes13);
    }

    @Test
    public void test13256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13256");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap4 = null;
        explodedArchive0.entries = asciiBytesMap4;
        java.io.File file6 = explodedArchive0.root;
        java.io.File file7 = explodedArchive0.root;
        java.io.File file8 = explodedArchive0.root;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
    }

    @Test
    public void test13257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13257");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getAuthority();
        java.lang.String str25 = uRL9.getRef();
        java.lang.String str26 = uRL9.getProtocol();
        java.lang.String str27 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getPath();
        java.lang.String str39 = uRL37.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection47 = explodedArchive45.getEntries();
        java.util.jar.Manifest manifest48 = explodedArchive45.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.net.URL uRL51 = new java.net.URL(uRL37, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter59 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList60 = explodedArchive57.getNestedArchives(entryFilter59);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection61 = explodedArchive57.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap62 = explodedArchive57.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive57.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL("/archive", "hi!://:100/hi!", (int) (byte) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL65 = new java.net.URL(uRL51, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        boolean boolean66 = uRL9.sameFile(uRL65);
        java.lang.String str67 = uRL9.getProtocol();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj68 = uRL9.getContent();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertNotNull(entryCollection47);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(archiveList60);
        org.junit.Assert.assertNotNull(entryCollection61);
        org.junit.Assert.assertNotNull(asciiBytesMap62);
        org.junit.Assert.assertEquals(uRL64.toString(), "/archive://[hi!://:100/hi!]:1hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
    }

    @Test
    public void test13258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13258");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.io.File file3 = null;
        explodedArchive0.root = file3;
        java.util.jar.Manifest manifest5 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry9 = explodedArchive0.new FileEntry();
        org.junit.Assert.assertNull(manifest5);
        org.junit.Assert.assertNull(manifest6);
    }

    @Test
    public void test13259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13259");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.lang.String str3 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest5 = null;
        explodedArchive0.manifest = manifest5;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "archive" + "'", str3, "archive");
    }

    @Test
    public void test13260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13260");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        boolean boolean9 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest10 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive0.getNestedArchives(entryFilter11);
        explodedArchive0.filtered = false;
        explodedArchive0.filtered = false;
        java.util.jar.Manifest manifest17 = explodedArchive0.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive0.entries;
        java.util.jar.Manifest manifest19 = null;
        explodedArchive0.manifest = manifest19;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
    }

    @Test
    public void test13261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13261");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getFile();
        int int24 = uRL22.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getQuery();
        java.lang.String str37 = uRL35.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str44 = explodedArchive43.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive43.getEntries();
        java.util.jar.Manifest manifest46 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.net.URL uRL49 = new java.net.URL(uRL35, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.net.URL uRL50 = new java.net.URL(uRL22, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.lang.String str51 = uRL22.toExternalForm();
        boolean boolean52 = uRL9.sameFile(uRL22);
        java.lang.String str53 = uRL22.getAuthority();
        java.lang.String str54 = uRL22.getFile();
        java.lang.String str55 = uRL22.getQuery();
        java.lang.String str56 = uRL22.toExternalForm();
        java.lang.String str57 = uRL22.getAuthority();
        java.lang.String str58 = uRL22.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "archive" + "'", str44, "archive");
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!://:100" + "'", str51, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + ":100" + "'", str53, ":100");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!://:100" + "'", str56, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + ":100" + "'", str57, ":100");
        org.junit.Assert.assertNull(str58);
    }

    @Test
    public void test13262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13262");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        java.lang.String str25 = uRL22.getRef();
        java.lang.String str26 = uRL22.toExternalForm();
        boolean boolean27 = uRL9.sameFile(uRL22);
        java.lang.String str28 = uRL22.getUserInfo();
        java.lang.String str29 = uRL22.getHost();
        java.lang.String str30 = uRL22.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file33 = explodedArchive32.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive32.getNestedArchives(entryFilter34);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive32.getNestedArchives(entryFilter36);
        java.lang.String str38 = explodedArchive32.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler39 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL40 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler39);
        java.net.URL uRL42 = new java.net.URL(uRL40, "archive");
        java.net.URL uRL44 = new java.net.URL(uRL40, ":10");
        int int45 = uRL44.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!://:100" + "'", str26, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100/:10");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
    }

    @Test
    public void test13263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13263");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getFile();
        java.lang.String str25 = uRL9.getAuthority();
        java.net.URL uRL27 = new java.net.URL(uRL9, "");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str49 = explodedArchive48.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection50 = explodedArchive48.getEntries();
        java.util.jar.Manifest manifest51 = explodedArchive48.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler52 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL53 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler52);
        java.lang.String str54 = uRL53.getQuery();
        java.lang.String str55 = uRL53.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str62 = explodedArchive61.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection63 = explodedArchive61.getEntries();
        java.util.jar.Manifest manifest64 = explodedArchive61.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler65 = explodedArchive61.new FilteredURLStreamHandler();
        java.net.URL uRL66 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.net.URL uRL67 = new java.net.URL(uRL53, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.net.URL uRL68 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.net.URL uRL69 = new java.net.URL(uRL37, "", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.lang.String str70 = uRL69.getProtocol();
        int int71 = uRL69.getDefaultPort();
        boolean boolean72 = uRL9.sameFile(uRL69);
        java.lang.String str73 = uRL9.getPath();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + ":100" + "'", str25, ":100");
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "archive" + "'", str49, "archive");
        org.junit.Assert.assertNotNull(entryCollection50);
        org.junit.Assert.assertNull(manifest51);
        org.junit.Assert.assertEquals(uRL53.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "archive" + "'", str62, "archive");
        org.junit.Assert.assertNotNull(entryCollection63);
        org.junit.Assert.assertNull(manifest64);
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL68.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL69.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
    }

    @Test
    public void test13264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13264");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getHost();
        int int24 = uRL21.getPort();
        boolean boolean25 = uRL9.sameFile(uRL21);
        java.net.URL uRL27 = new java.net.URL(uRL21, "");
        java.lang.String str28 = uRL27.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str39 = uRL38.getQuery();
        java.lang.String str40 = uRL38.getHost();
        int int41 = uRL38.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str47 = explodedArchive46.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection48 = explodedArchive46.getEntries();
        java.util.jar.Manifest manifest49 = explodedArchive46.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler50 = explodedArchive46.new FilteredURLStreamHandler();
        java.net.URL uRL51 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        java.lang.String str52 = uRL51.getFile();
        int int53 = uRL51.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str60 = explodedArchive59.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection61 = explodedArchive59.getEntries();
        java.util.jar.Manifest manifest62 = explodedArchive59.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive59.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.lang.String str65 = uRL64.getQuery();
        java.lang.String str66 = uRL64.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str73 = explodedArchive72.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection74 = explodedArchive72.getEntries();
        java.util.jar.Manifest manifest75 = explodedArchive72.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler76 = explodedArchive72.new FilteredURLStreamHandler();
        java.net.URL uRL77 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler76);
        java.net.URL uRL78 = new java.net.URL(uRL64, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler76);
        java.net.URL uRL79 = new java.net.URL(uRL51, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler76);
        java.lang.String str80 = uRL51.toExternalForm();
        boolean boolean81 = uRL38.sameFile(uRL51);
        java.lang.String str82 = uRL38.getFile();
        java.lang.String str83 = uRL38.getRef();
        java.lang.String str84 = uRL38.getAuthority();
        java.lang.String str85 = uRL38.getPath();
        boolean boolean86 = uRL27.sameFile(uRL38);
        java.net.URL uRL88 = new java.net.URL(uRL38, "/hi!://[hi!://:100/hi!]:1/archive");
        java.lang.String str89 = uRL88.getProtocol();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + ":100" + "'", str28, ":100");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "archive" + "'", str47, "archive");
        org.junit.Assert.assertNotNull(entryCollection48);
        org.junit.Assert.assertNull(manifest49);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "archive" + "'", str60, "archive");
        org.junit.Assert.assertNotNull(entryCollection61);
        org.junit.Assert.assertNull(manifest62);
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "archive" + "'", str73, "archive");
        org.junit.Assert.assertNotNull(entryCollection74);
        org.junit.Assert.assertNull(manifest75);
        org.junit.Assert.assertEquals(uRL77.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL78.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL79.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!://:100" + "'", str80, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + ":100" + "'", str84, ":100");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertEquals(uRL88.toString(), "hi!://:100/hi!://[hi!://:100/hi!]:1/archive");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "hi!" + "'", str89, "hi!");
    }

    @Test
    public void test13265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13265");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        java.util.jar.Manifest manifest14 = explodedArchive11.getManifest();
        java.util.jar.Manifest manifest15 = explodedArchive11.manifest;
        explodedArchive11.filtered = false;
        java.io.File file18 = explodedArchive11.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive11.new FileEntry();
        java.lang.String str20 = explodedArchive11.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry21 = explodedArchive11.new FileEntry();
        java.io.File file22 = fileEntry21.file;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass23 = file22.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(manifest14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "archive" + "'", str20, "archive");
        org.junit.Assert.assertNull(file22);
    }

    @Test
    public void test13266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13266");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str29 = explodedArchive28.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive28.getEntries();
        java.util.jar.Manifest manifest31 = explodedArchive28.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL33 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.lang.String str34 = uRL33.getFile();
        boolean boolean35 = uRL23.sameFile(uRL33);
        int int36 = uRL33.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str42 = explodedArchive41.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive41.getEntries();
        java.util.jar.Manifest manifest44 = explodedArchive41.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive41.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.lang.String str47 = uRL46.getQuery();
        java.lang.String str48 = uRL46.getRef();
        java.lang.String str49 = uRL46.getRef();
        java.net.URL uRL51 = new java.net.URL(uRL46, "hi!");
        boolean boolean52 = uRL33.sameFile(uRL51);
        int int53 = uRL33.getDefaultPort();
        java.lang.String str54 = uRL33.getFile();
        java.io.File file55 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file57 = explodedArchive56.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter58 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList59 = explodedArchive56.getNestedArchives(entryFilter58);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter60 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList61 = explodedArchive56.getNestedArchives(entryFilter60);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap62 = explodedArchive56.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive(file55, asciiBytesMap62);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection64 = explodedArchive63.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler65 = explodedArchive63.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest66 = explodedArchive63.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter67 = null;
        org.springframework.boot.loader.archive.Archive archive68 = explodedArchive63.getFilteredArchive(entryRenameFilter67);
        boolean boolean69 = uRL33.equals((java.lang.Object) entryRenameFilter67);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "archive" + "'", str42, "archive");
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertNull(manifest44);
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(archiveList59);
        org.junit.Assert.assertNotNull(archiveList61);
        org.junit.Assert.assertNotNull(asciiBytesMap62);
        org.junit.Assert.assertNotNull(entryCollection64);
        org.junit.Assert.assertNull(manifest66);
        org.junit.Assert.assertNotNull(archive68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test13267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13267");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        explodedArchive0.filtered = true;
        java.io.File file10 = explodedArchive0.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest14 = explodedArchive0.getManifest();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNull(manifest14);
    }

    @Test
    public void test13268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13268");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getQuery();
        java.net.URL uRL15 = new java.net.URL(uRL9, "");
        java.lang.String str16 = uRL15.getPath();
        int int17 = uRL15.getDefaultPort();
        java.lang.String str18 = uRL15.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        java.util.jar.Manifest manifest27 = explodedArchive24.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler28 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL29 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler28);
        java.lang.String str30 = uRL29.getPath();
        java.lang.String str31 = uRL29.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str38 = explodedArchive37.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection39 = explodedArchive37.getEntries();
        java.util.jar.Manifest manifest40 = explodedArchive37.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive37.new FilteredURLStreamHandler();
        java.net.URL uRL42 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.net.URL uRL43 = new java.net.URL(uRL29, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.net.URL uRL44 = new java.net.URL(uRL15, "/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.lang.String str45 = uRL15.getAuthority();
        java.lang.String str46 = uRL15.getRef();
        int int47 = uRL15.getPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertNull(manifest27);
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertNotNull(entryCollection39);
        org.junit.Assert.assertNull(manifest40);
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + ":100" + "'", str45, ":100");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
    }

    @Test
    public void test13269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13269");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest6 = null;
        explodedArchive0.manifest = manifest6;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection8 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter9 = null;
        org.springframework.boot.loader.archive.Archive archive10 = explodedArchive0.getFilteredArchive(entryRenameFilter9);
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        explodedArchive22.filtered = true;
        explodedArchive22.filtered = true;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection27 = explodedArchive22.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file29 = explodedArchive28.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive28.getNestedArchives(entryFilter30);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry32 = explodedArchive28.new FileEntry();
        boolean boolean33 = explodedArchive28.filtered;
        boolean boolean34 = explodedArchive28.filtered;
        java.util.jar.Manifest manifest35 = null;
        explodedArchive28.manifest = manifest35;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection37 = explodedArchive28.getEntries();
        java.io.File file38 = explodedArchive28.root;
        boolean boolean39 = explodedArchive28.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection40 = explodedArchive28.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection41 = explodedArchive28.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive28.getNestedArchives(entryFilter42);
        boolean boolean44 = explodedArchive28.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap45 = explodedArchive28.entries;
        explodedArchive22.entries = asciiBytesMap45;
        explodedArchive0.entries = asciiBytesMap45;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection48 = explodedArchive0.getEntries();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(entryCollection8);
        org.junit.Assert.assertNotNull(archive10);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNotNull(entryCollection27);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(entryCollection37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(entryCollection40);
        org.junit.Assert.assertNotNull(entryCollection41);
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap45);
        org.junit.Assert.assertNotNull(entryCollection48);
    }

    @Test
    public void test13270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13270");
        java.io.File file8 = null;
        java.io.File file9 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive17.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap18);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("", "archive://:10archive", (int) (short) 100, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.net.URL uRL22 = new java.net.URL("hi!://:100/archive", "hi!://:100", (int) (byte) 0, "[hi!://:100/hi!]", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str23 = uRL22.getQuery();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI24 = uRL22.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertEquals(uRL21.toString(), "://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]");
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test13271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13271");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        explodedArchive1.filtered = false;
        java.util.jar.Manifest manifest7 = explodedArchive1.manifest;
        java.io.File file8 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap15);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive16.entries;
        explodedArchive1.entries = asciiBytesMap17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap17);
        boolean boolean20 = explodedArchive19.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive19.entries;
        explodedArchive19.filtered = true;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNotNull(asciiBytesMap17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
    }

    @Test
    public void test13272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13272");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = explodedArchive2.new FileEntry();
        java.lang.String str7 = explodedArchive2.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive2.new FileEntry();
        java.util.jar.Manifest manifest9 = null;
        explodedArchive2.manifest = manifest9;
        java.lang.String str11 = explodedArchive2.toString();
        java.io.File file12 = null;
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive14.getNestedArchives(entryFilter21);
        java.io.File file23 = null;
        java.io.File file24 = null;
        java.io.File file25 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file27 = explodedArchive26.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive26.getNestedArchives(entryFilter28);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive26.getNestedArchives(entryFilter30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file25, asciiBytesMap32);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive33.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file24, asciiBytesMap34);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap34);
        explodedArchive14.entries = asciiBytesMap34;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive38.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap39);
        explodedArchive2.entries = asciiBytesMap39;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap39);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap39);
        boolean boolean44 = explodedArchive43.filtered;
        java.lang.String str45 = explodedArchive43.toString();
        java.util.jar.Manifest manifest46 = explodedArchive43.getManifest();
        boolean boolean47 = explodedArchive43.filtered;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "archive" + "'", str11, "archive");
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "archive" + "'", str45, "archive");
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test13273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13273");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("[/hi!://:100/archive]:0", "/://[hi!://:100/:100]:100/hi!://:100", "[hi!://:100/archive]:100://[/hi!://:100/archive]:0:1hi!://:100/hi!://:100/hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: [/hi!://:100/archive]:0");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13274");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file8 = null;
        explodedArchive0.root = file8;
        boolean boolean10 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive0.new FileEntry();
        java.io.File file12 = null;
        explodedArchive0.root = file12;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter14 = null;
        org.springframework.boot.loader.archive.Archive archive15 = explodedArchive0.getFilteredArchive(entryRenameFilter14);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry16 = explodedArchive0.new FileEntry();
        java.io.File file17 = fileEntry16.getFile();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(archive15);
        org.junit.Assert.assertNull(file17);
    }

    @Test
    public void test13275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13275");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.lang.String str17 = uRL16.toExternalForm();
        java.lang.String str18 = uRL16.getPath();
        java.lang.String str19 = uRL16.getProtocol();
        int int20 = uRL16.getDefaultPort();
        int int21 = uRL16.getDefaultPort();
        java.lang.Class<?> wildcardClass22 = uRL16.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!://:100/hi!" + "'", str17, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "/hi!" + "'", str18, "/hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test13276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13276");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str42 = uRL9.getQuery();
        java.lang.String str43 = uRL9.getRef();
        java.net.URL uRL45 = new java.net.URL(uRL9, "/hi!");
        java.lang.String str46 = uRL9.getQuery();
        java.lang.String str47 = uRL9.getRef();
        java.lang.String str48 = uRL9.getQuery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
    }

    @Test
    public void test13277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13277");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.jar.Manifest manifest7 = null;
        explodedArchive1.manifest = manifest7;
        java.io.File file9 = explodedArchive1.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry14 = explodedArchive10.new FileEntry();
        boolean boolean15 = explodedArchive10.filtered;
        boolean boolean16 = explodedArchive10.filtered;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive10.getNestedArchives(entryFilter17);
        java.io.File file19 = null;
        java.io.File file20 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file22 = explodedArchive21.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive21.getNestedArchives(entryFilter23);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive21.getNestedArchives(entryFilter25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive21.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file20, asciiBytesMap27);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file19, asciiBytesMap27);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive29.entries;
        explodedArchive10.entries = asciiBytesMap30;
        explodedArchive1.entries = asciiBytesMap30;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap30);
        explodedArchive33.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry36 = explodedArchive33.new FileEntry();
        java.io.File file37 = fileEntry36.file;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNull(file37);
    }

    @Test
    public void test13278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13278");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        java.io.File file6 = fileEntry4.file;
        java.io.File file7 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = null;
        fileEntry4.name = asciiBytes8;
        java.io.File file10 = fileEntry4.getFile();
        java.io.File file11 = fileEntry4.getFile();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = fileEntry4.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
    }

    @Test
    public void test13279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13279");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap8);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive10.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive10.new FileEntry();
        java.io.File file13 = fileEntry12.file;
        java.io.File file14 = fileEntry12.getFile();
        java.io.File file15 = null;
        fileEntry12.file = file15;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes17 = null;
        fileEntry12.name = asciiBytes17;
        java.io.File file19 = fileEntry12.file;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(file19);
    }

    @Test
    public void test13280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13280");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = null;
        fileEntry4.file = file5;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = null;
        fileEntry4.name = asciiBytes7;
        java.io.File file9 = null;
        fileEntry4.file = file9;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = fileEntry4.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = null;
        fileEntry4.name = asciiBytes12;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = null;
        fileEntry4.name = asciiBytes14;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes16 = null;
        fileEntry4.name = asciiBytes16;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes18 = fileEntry4.name;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes11);
        org.junit.Assert.assertNull(asciiBytes18);
    }

    @Test
    public void test13281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13281");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.lang.String str17 = uRL9.getPath();
        java.lang.String str18 = uRL9.toExternalForm();
        java.lang.String str19 = uRL9.getProtocol();
        java.lang.String str20 = uRL9.getPath();
        int int21 = uRL9.getPort();
        int int22 = uRL9.getPort();
        int int23 = uRL9.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!://:100" + "'", str18, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test13282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13282");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str29 = explodedArchive28.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive28.getEntries();
        java.util.jar.Manifest manifest31 = explodedArchive28.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL33 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.lang.String str34 = uRL33.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str45 = explodedArchive44.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection46 = explodedArchive44.getEntries();
        java.util.jar.Manifest manifest47 = explodedArchive44.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler48 = explodedArchive44.new FilteredURLStreamHandler();
        java.net.URL uRL49 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler48);
        java.lang.String str50 = uRL49.getQuery();
        java.lang.String str51 = uRL49.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str58 = explodedArchive57.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection59 = explodedArchive57.getEntries();
        java.util.jar.Manifest manifest60 = explodedArchive57.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler61 = explodedArchive57.new FilteredURLStreamHandler();
        java.net.URL uRL62 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.net.URL uRL63 = new java.net.URL(uRL49, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.net.URL uRL64 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.net.URL uRL65 = new java.net.URL(uRL33, "", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.lang.String str66 = uRL33.getQuery();
        boolean boolean67 = uRL9.sameFile(uRL33);
        int int68 = uRL9.getDefaultPort();
        java.lang.String str69 = uRL9.toExternalForm();
        java.net.URL uRL71 = new java.net.URL(uRL9, "hi!://:100/hi!://:100/archive");
        java.lang.String str72 = uRL9.getPath();
        java.lang.String str73 = uRL9.getRef();
        java.lang.String str74 = uRL9.toExternalForm();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "archive" + "'", str45, "archive");
        org.junit.Assert.assertNotNull(entryCollection46);
        org.junit.Assert.assertNull(manifest47);
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "archive" + "'", str58, "archive");
        org.junit.Assert.assertNotNull(entryCollection59);
        org.junit.Assert.assertNull(manifest60);
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL64.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!://:100" + "'", str69, "hi!://:100");
        org.junit.Assert.assertEquals(uRL71.toString(), "hi!://:100/hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!://:100" + "'", str74, "hi!://:100");
    }

    @Test
    public void test13283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13283");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL(":1", "hi!://:100/hi!://:100/hi!://:100/archive", "/hi!:1://[/hi!://:100/hi!://:100]:0[hi!://:100/:100]:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: :1");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13284");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        java.io.File file3 = null;
        java.io.File file4 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file6 = explodedArchive5.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive5.getNestedArchives(entryFilter7);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive5.getNestedArchives(entryFilter9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive5.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap11);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file3, asciiBytesMap11);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap14);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap14);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap14);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter18 = null;
        org.springframework.boot.loader.archive.Archive archive19 = explodedArchive17.getFilteredArchive(entryRenameFilter18);
        boolean boolean20 = explodedArchive17.filtered;
        java.io.File file21 = null;
        explodedArchive17.root = file21;
        java.io.File file23 = explodedArchive17.root;
        java.lang.String str24 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection25 = explodedArchive17.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str27 = explodedArchive26.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = null;
        explodedArchive26.entries = asciiBytesMap28;
        java.lang.String str30 = explodedArchive26.toString();
        java.io.File file31 = null;
        explodedArchive26.root = file31;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry33 = explodedArchive26.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes34 = fileEntry33.name;
        java.io.File file35 = fileEntry33.getFile();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive36 = explodedArchive17.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertNotNull(archive19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "archive" + "'", str24, "archive");
        org.junit.Assert.assertNotNull(entryCollection25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "archive" + "'", str27, "archive");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "archive" + "'", str30, "archive");
        org.junit.Assert.assertNull(asciiBytes34);
        org.junit.Assert.assertNull(file35);
    }

    @Test
    public void test13285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13285");
        java.lang.String str1 = java.net.URLConnection.guessContentTypeFromName("hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[://[archive://:10archive]:100archive://:10archive]:100:35hi!://:100/:100");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test13286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13286");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        boolean boolean5 = explodedArchive0.filtered;
        boolean boolean6 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest7 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest8 = null;
        explodedArchive0.manifest = manifest8;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive0.getFilteredArchive(entryRenameFilter10);
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest14 = explodedArchive0.manifest;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNotNull(archive11);
        org.junit.Assert.assertNull(manifest14);
    }

    @Test
    public void test13287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13287");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        java.lang.String str11 = uRL9.getQuery();
        java.lang.String str12 = uRL9.getRef();
        java.net.URL uRL14 = new java.net.URL(uRL9, "hi!://:100/hi!://:100/archive");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str20 = explodedArchive19.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection21 = explodedArchive19.getEntries();
        java.util.jar.Manifest manifest22 = explodedArchive19.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getQuery();
        int int26 = uRL24.getPort();
        java.lang.String str27 = uRL24.getQuery();
        boolean boolean28 = uRL9.sameFile(uRL24);
        java.net.URL uRL30 = new java.net.URL(uRL9, ":100");
        java.lang.String str31 = uRL30.toExternalForm();
        java.lang.String str32 = uRL30.getProtocol();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals(uRL14.toString(), "hi!://:100/hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "archive" + "'", str20, "archive");
        org.junit.Assert.assertNotNull(entryCollection21);
        org.junit.Assert.assertNull(manifest22);
        org.junit.Assert.assertEquals(uRL24.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!://:100/:100" + "'", str31, "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
    }

    @Test
    public void test13288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13288");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getPath();
        java.lang.String str15 = uRL13.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL27 = new java.net.URL(uRL13, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL28 = new java.net.URL("hi!://:100/archive", "hi!://:100/archive", 0, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str35 = explodedArchive34.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = null;
        explodedArchive34.entries = asciiBytesMap36;
        java.util.jar.Manifest manifest38 = null;
        explodedArchive34.manifest = manifest38;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler40 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL41 = new java.net.URL("hi!://:100/hi!", "hi!://:100/hi!", 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler40);
        java.lang.String str42 = uRL41.getPath();
        java.lang.String str43 = uRL41.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str49 = explodedArchive48.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection50 = explodedArchive48.getEntries();
        java.util.jar.Manifest manifest51 = explodedArchive48.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler52 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL53 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler52);
        java.lang.String str54 = uRL53.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str61 = explodedArchive60.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection62 = explodedArchive60.getEntries();
        java.util.jar.Manifest manifest63 = explodedArchive60.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler64 = explodedArchive60.new FilteredURLStreamHandler();
        java.net.URL uRL65 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler64);
        java.lang.String str66 = uRL65.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str69 = explodedArchive68.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection70 = explodedArchive68.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler71 = explodedArchive68.new FilteredURLStreamHandler();
        java.net.URL uRL72 = new java.net.URL(uRL65, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler71);
        java.net.URL uRL73 = new java.net.URL(uRL53, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler71);
        java.lang.String str74 = uRL53.getFile();
        java.lang.String str75 = uRL53.getProtocol();
        java.lang.String str76 = uRL53.getRef();
        boolean boolean77 = uRL41.sameFile(uRL53);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str80 = explodedArchive79.toString();
        boolean boolean81 = explodedArchive79.filtered;
        java.io.File file82 = explodedArchive79.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler83 = explodedArchive79.new FilteredURLStreamHandler();
        java.net.URL uRL84 = new java.net.URL(uRL41, "[/:100]:0", (java.net.URLStreamHandler) filteredURLStreamHandler83);
        java.net.URL uRL85 = new java.net.URL(uRL28, "[://[archive://:10archive]:100archive://:10archive]:100", (java.net.URLStreamHandler) filteredURLStreamHandler83);
        int int86 = uRL85.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/archive://[hi!://:100/archive]:0archive://:10archive");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "archive" + "'", str35, "archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!://:100/hi!" + "'", str42, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[hi!://:100/hi!]" + "'", str43, "[hi!://:100/hi!]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "archive" + "'", str49, "archive");
        org.junit.Assert.assertNotNull(entryCollection50);
        org.junit.Assert.assertNull(manifest51);
        org.junit.Assert.assertEquals(uRL53.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "archive" + "'", str61, "archive");
        org.junit.Assert.assertNotNull(entryCollection62);
        org.junit.Assert.assertNull(manifest63);
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "archive" + "'", str69, "archive");
        org.junit.Assert.assertNotNull(entryCollection70);
        org.junit.Assert.assertEquals(uRL72.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL73.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "archive" + "'", str80, "archive");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertEquals(uRL84.toString(), "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/[/:100]:0");
        org.junit.Assert.assertEquals(uRL85.toString(), "hi!://:100/archive://[hi!://:100/archive]:0archive://[://[archive://:10archive]:100archive://:10archive]:100");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
    }

    @Test
    public void test13289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13289");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        java.io.File file6 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry4.name;
        java.io.File file9 = null;
        fileEntry4.file = file9;
        java.io.File file11 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = fileEntry4.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry4.getName();
        java.io.File file14 = null;
        fileEntry4.file = file14;
        java.io.File file16 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes17 = null;
        fileEntry4.name = asciiBytes17;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(asciiBytes7);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(asciiBytes12);
        org.junit.Assert.assertNull(asciiBytes13);
        org.junit.Assert.assertNull(file16);
    }

    @Test
    public void test13290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13290");
        java.io.File file4 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file6 = explodedArchive5.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive5.getNestedArchives(entryFilter7);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive5.getNestedArchives(entryFilter9);
        java.lang.String str11 = explodedArchive5.toString();
        java.util.jar.Manifest manifest12 = explodedArchive5.manifest;
        java.io.File file13 = null;
        explodedArchive5.root = file13;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive15.getNestedArchives(entryFilter17);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive15.getNestedArchives(entryFilter19);
        java.lang.String str21 = explodedArchive15.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive15.new FilteredURLStreamHandler();
        java.io.File file23 = null;
        java.io.File file24 = null;
        java.io.File file25 = null;
        java.io.File file26 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file28 = explodedArchive27.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive27.getNestedArchives(entryFilter29);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter31 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList32 = explodedArchive27.getNestedArchives(entryFilter31);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap33 = explodedArchive27.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file26, asciiBytesMap33);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap35 = explodedArchive34.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file25, asciiBytesMap35);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file24, asciiBytesMap35);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap35);
        explodedArchive15.entries = asciiBytesMap35;
        explodedArchive5.entries = asciiBytesMap35;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap35);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler42 = explodedArchive41.new FilteredURLStreamHandler();
        java.net.URL uRL43 = new java.net.URL("[:100]", "hi!://:100/hi!://:100/hi!:1", (int) (short) -1, "[hi!://:100/:100]:100", (java.net.URLStreamHandler) filteredURLStreamHandler42);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive52 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str53 = explodedArchive52.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection54 = explodedArchive52.getEntries();
        java.util.jar.Manifest manifest55 = explodedArchive52.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler56 = explodedArchive52.new FilteredURLStreamHandler();
        java.net.URL uRL57 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler56);
        java.lang.String str58 = uRL57.getQuery();
        java.lang.String str59 = uRL57.getHost();
        int int60 = uRL57.getPort();
        java.lang.String str61 = uRL57.getQuery();
        java.net.URL uRL63 = new java.net.URL(uRL57, "");
        java.io.File file65 = null;
        java.io.File file66 = null;
        java.io.File file67 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file69 = explodedArchive68.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter70 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList71 = explodedArchive68.getNestedArchives(entryFilter70);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter72 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList73 = explodedArchive68.getNestedArchives(entryFilter72);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap74 = explodedArchive68.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive(file67, asciiBytesMap74);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap76 = explodedArchive75.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive(file66, asciiBytesMap76);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive(file65, asciiBytesMap76);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler79 = explodedArchive78.new FilteredURLStreamHandler();
        java.net.URL uRL80 = new java.net.URL(uRL63, "", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        java.net.URL uRL81 = new java.net.URL("hi!", "hi!://:100/hi!", (int) (short) 0, "archive://:10:100", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        java.lang.String str82 = uRL81.getPath();
        java.lang.String str83 = uRL81.getHost();
        java.lang.String str84 = uRL81.getAuthority();
        java.lang.String str85 = uRL81.toExternalForm();
        java.net.URL uRL87 = new java.net.URL(uRL81, "/hi!:1");
        boolean boolean88 = uRL43.sameFile(uRL81);
        java.lang.String str89 = uRL81.getQuery();
        int int90 = uRL81.getPort();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection91 = uRL81.openConnection();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "archive" + "'", str11, "archive");
        org.junit.Assert.assertNull(manifest12);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNotNull(archiveList32);
        org.junit.Assert.assertNotNull(asciiBytesMap33);
        org.junit.Assert.assertNotNull(asciiBytesMap35);
        org.junit.Assert.assertEquals(uRL43.toString(), "[:100]://[hi!://:100/hi!://:100/hi!:1][hi!://:100/:100]:100");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "archive" + "'", str53, "archive");
        org.junit.Assert.assertNotNull(entryCollection54);
        org.junit.Assert.assertNull(manifest55);
        org.junit.Assert.assertEquals(uRL57.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 100 + "'", int60 == 100);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file69);
        org.junit.Assert.assertNotNull(archiveList71);
        org.junit.Assert.assertNotNull(archiveList73);
        org.junit.Assert.assertNotNull(asciiBytesMap74);
        org.junit.Assert.assertNotNull(asciiBytesMap76);
        org.junit.Assert.assertEquals(uRL80.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL81.toString(), "hi!://[hi!://:100/hi!]:0archive://:10:100");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "archive://:10:100" + "'", str82, "archive://:10:100");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[hi!://:100/hi!]" + "'", str83, "[hi!://:100/hi!]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[hi!://:100/hi!]:0" + "'", str84, "[hi!://:100/hi!]:0");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "hi!://[hi!://:100/hi!]:0archive://:10:100" + "'", str85, "hi!://[hi!://:100/hi!]:0archive://:10:100");
        org.junit.Assert.assertEquals(uRL87.toString(), "hi!://[hi!://:100/hi!]:0/hi!:1");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
    }

    @Test
    public void test13291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13291");
        java.io.File file8 = null;
        java.io.File file9 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive17.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap18);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("/hi!://:100/archive", "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!", (int) (byte) 100, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.net.URL uRL22 = new java.net.URL("/archive:0", "hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]", (int) (short) 10, "[hi!://:100/hi!]:10", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.net.URL uRL23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection24 = filteredURLStreamHandler20.openConnection(uRL23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertEquals(uRL21.toString(), "/hi!://:100/archive://[hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!]:100hi!://:100");
        org.junit.Assert.assertEquals(uRL22.toString(), "/archive:0://[hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]]:10[hi!://:100/hi!]:10");
    }

    @Test
    public void test13292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13292");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.jar.Manifest manifest4 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str6 = explodedArchive5.toString();
        java.util.jar.Manifest manifest7 = null;
        explodedArchive5.manifest = manifest7;
        java.util.jar.Manifest manifest9 = explodedArchive5.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive5.entries;
        explodedArchive0.entries = asciiBytesMap10;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter12 = null;
        org.springframework.boot.loader.archive.Archive archive13 = explodedArchive0.getFilteredArchive(entryRenameFilter12);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler14 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest15 = null;
        explodedArchive0.manifest = manifest15;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive0.entries;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(archive13);
        org.junit.Assert.assertNotNull(asciiBytesMap17);
    }

    @Test
    public void test13293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13293");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter6 = null;
        org.springframework.boot.loader.archive.Archive archive7 = explodedArchive0.getFilteredArchive(entryRenameFilter6);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive0.new FileEntry();
        java.io.File file9 = fileEntry8.file;
        java.io.File file10 = fileEntry8.file;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archive7);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file10);
    }

    @Test
    public void test13294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13294");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.io.File file3 = null;
        explodedArchive0.root = file3;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection5 = explodedArchive0.getEntries();
        explodedArchive0.filtered = false;
        explodedArchive0.filtered = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = explodedArchive0.new FileEntry();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive0.entries;
        java.io.File file12 = explodedArchive0.root;
        java.io.File file13 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file13, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(entryCollection5);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test13295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13295");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive0.getFilteredArchive(entryRenameFilter5);
        java.io.File file7 = null;
        explodedArchive0.root = file7;
        java.lang.String str9 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive0.getEntries();
        boolean boolean11 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry16 = explodedArchive12.new FileEntry();
        boolean boolean17 = explodedArchive12.filtered;
        boolean boolean18 = explodedArchive12.filtered;
        java.util.jar.Manifest manifest19 = explodedArchive12.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive12.entries;
        explodedArchive0.entries = asciiBytesMap20;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter22 = null;
        org.springframework.boot.loader.archive.Archive archive23 = explodedArchive0.getFilteredArchive(entryRenameFilter22);
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(archive23);
    }

    @Test
    public void test13296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13296");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes6 = fileEntry5.name;
        java.io.File file7 = fileEntry5.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry5.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = fileEntry5.getName();
        java.io.File file10 = fileEntry5.getFile();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNull(asciiBytes6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(asciiBytes9);
        org.junit.Assert.assertNull(file10);
    }

    @Test
    public void test13297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13297");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap4 = null;
        explodedArchive0.entries = asciiBytesMap4;
        boolean boolean6 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        boolean boolean9 = explodedArchive0.filtered;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test13298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13298");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getFile();
        java.lang.String str25 = uRL9.getAuthority();
        int int26 = uRL9.getPort();
        java.net.URL uRL28 = new java.net.URL(uRL9, "/archive");
        java.lang.String str29 = uRL28.toExternalForm();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file31 = explodedArchive30.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive30.getNestedArchives(entryFilter32);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry34 = explodedArchive30.new FileEntry();
        boolean boolean35 = explodedArchive30.filtered;
        boolean boolean36 = explodedArchive30.filtered;
        java.util.jar.Manifest manifest37 = null;
        explodedArchive30.manifest = manifest37;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection39 = explodedArchive30.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection40 = explodedArchive30.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap41 = explodedArchive30.entries;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest43 = explodedArchive30.manifest;
        boolean boolean44 = uRL28.equals((java.lang.Object) manifest43);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + ":100" + "'", str25, ":100");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 100 + "'", int26 == 100);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!://:100/archive" + "'", str29, "hi!://:100/archive");
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(entryCollection39);
        org.junit.Assert.assertNotNull(entryCollection40);
        org.junit.Assert.assertNotNull(asciiBytesMap41);
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test13299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13299");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.jar.Manifest manifest4 = null;
        explodedArchive0.manifest = manifest4;
        explodedArchive0.filtered = true;
        java.lang.String str8 = explodedArchive0.toString();
        explodedArchive0.filtered = false;
        java.util.jar.Manifest manifest11 = null;
        explodedArchive0.manifest = manifest11;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive0.getNestedArchives(entryFilter13);
        java.io.File file15 = explodedArchive0.root;
        java.io.File file16 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file16, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNull(file15);
    }

    @Test
    public void test13300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13300");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive4.getNestedArchives(entryFilter8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive4.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler11 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL12 = new java.net.URL("hi!://:100/hi!:1", "hi!://:100/hi!://:100/hi!", (int) (byte) 0, "[archive://:10archive]", (java.net.URLStreamHandler) filteredURLStreamHandler11);
        java.lang.String str13 = uRL12.getUserInfo();
        int int14 = uRL12.getPort();
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertEquals(uRL12.toString(), "hi!://:100/hi!:1://[hi!://:100/hi!://:100/hi!]:0[archive://:10archive]");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test13301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13301");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", "[/hi!:1]", (int) (byte) 100, "/hi!://:100/hi!://:100/archive");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13302");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive4.getNestedArchives(entryFilter8);
        java.lang.String str10 = explodedArchive4.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler11 = explodedArchive4.new FilteredURLStreamHandler();
        java.io.File file12 = null;
        explodedArchive4.root = file12;
        boolean boolean14 = explodedArchive4.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry15 = explodedArchive4.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL17 = new java.net.URL("/hi!://:100/hi!://:100/hi!://hi!", "/hi!:1://[/:100]:10hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", 32, "archive://:10archive://:100", (java.net.URLStreamHandler) filteredURLStreamHandler16);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "archive" + "'", str10, "archive");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals(uRL17.toString(), "/hi!://:100/hi!://:100/hi!://hi!://[/hi!:1://[/:100]:10hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32archive://:10archive://:100");
    }

    @Test
    public void test13303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13303");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        java.io.File file8 = null;
        explodedArchive0.root = file8;
        boolean boolean10 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest12 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry13 = explodedArchive0.new FileEntry();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive0.getEntries();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(manifest12);
        org.junit.Assert.assertNotNull(entryCollection14);
    }

    @Test
    public void test13304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13304");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        java.io.File file6 = fileEntry4.file;
        java.io.File file7 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry4.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = null;
        fileEntry4.name = asciiBytes9;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = fileEntry4.getName();
        java.io.File file12 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = fileEntry4.name;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(asciiBytes11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(asciiBytes13);
        org.junit.Assert.assertNull(asciiBytes14);
    }

    @Test
    public void test13305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13305");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        int int42 = uRL9.getDefaultPort();
        java.lang.String str43 = uRL9.getProtocol();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI44 = uRL9.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
    }

    @Test
    public void test13306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13306");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        boolean boolean8 = explodedArchive0.filtered;
        java.io.File file9 = explodedArchive0.root;
        java.io.File file10 = null;
        explodedArchive0.root = file10;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive0.getNestedArchives(entryFilter12);
        explodedArchive0.filtered = false;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection16 = explodedArchive0.getEntries();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(entryCollection16);
    }

    @Test
    public void test13307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13307");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.lang.String str17 = uRL16.toExternalForm();
        java.lang.String str18 = uRL16.getPath();
        java.lang.String str19 = uRL16.getRef();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!://:100/hi!" + "'", str17, "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "/hi!" + "'", str18, "/hi!");
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test13308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13308");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive8.getEntries();
        java.io.File file10 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive8.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive8.new FilteredURLStreamHandler();
        java.lang.String str14 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection15 = explodedArchive8.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter16 = null;
        org.springframework.boot.loader.archive.Archive archive17 = explodedArchive8.getFilteredArchive(entryRenameFilter16);
        explodedArchive8.filtered = true;
        java.util.jar.Manifest manifest20 = explodedArchive8.getManifest();
        explodedArchive8.filtered = false;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive8.getEntries();
        boolean boolean24 = explodedArchive8.filtered;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "archive" + "'", str14, "archive");
        org.junit.Assert.assertNotNull(entryCollection15);
        org.junit.Assert.assertNotNull(archive17);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test13309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13309");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getDefaultPort();
        java.lang.String str13 = uRL9.getProtocol();
        java.lang.String str14 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str20 = explodedArchive19.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection21 = explodedArchive19.getEntries();
        java.util.jar.Manifest manifest22 = explodedArchive19.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.getQuery();
        java.lang.String str26 = uRL24.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.net.URL uRL38 = new java.net.URL(uRL24, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str39 = uRL24.getFile();
        java.lang.String str40 = uRL24.getAuthority();
        boolean boolean41 = uRL9.sameFile(uRL24);
        java.net.Proxy proxy42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection43 = uRL9.openConnection(proxy42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "archive" + "'", str20, "archive");
        org.junit.Assert.assertNotNull(entryCollection21);
        org.junit.Assert.assertNull(manifest22);
        org.junit.Assert.assertEquals(uRL24.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + ":100" + "'", str40, ":100");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test13310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13310");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = null;
        explodedArchive1.entries = asciiBytesMap5;
        java.io.File file7 = explodedArchive1.root;
        java.io.File file8 = explodedArchive1.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        explodedArchive1.entries = asciiBytesMap15;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap15);
        java.util.jar.Manifest manifest18 = null;
        explodedArchive17.manifest = manifest18;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry20 = explodedArchive17.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes21 = fileEntry20.getName();
        java.io.File file22 = null;
        fileEntry20.file = file22;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes24 = null;
        fileEntry20.name = asciiBytes24;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes26 = null;
        fileEntry20.name = asciiBytes26;
        java.io.File file28 = fileEntry20.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes29 = fileEntry20.getName();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNull(asciiBytes21);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(asciiBytes29);
    }

    @Test
    public void test13311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13311");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection8 = explodedArchive4.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive4.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive4.getNestedArchives(entryFilter10);
        java.util.jar.Manifest manifest12 = explodedArchive4.manifest;
        explodedArchive4.filtered = true;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive4.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL17 = new java.net.URL("[/archive:///archive:0hi!://:100]:10", "[hi!://:100/hi!]:10", (int) 'a', "hi!://:100/:52", (java.net.URLStreamHandler) filteredURLStreamHandler16);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(entryCollection8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNull(manifest12);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertEquals(uRL17.toString(), "[/archive:///archive:0hi!://:100]:10://[hi!://:100/hi!]:10:97hi!://:100/:52");
    }

    @Test
    public void test13312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13312");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL1 = new java.net.URL("[archive://:10archive]://[/archive://[hi!://:100/hi!]:1/hi!]:97hi!://:100/hi!://:100/hi!://hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: [archive://:10archive]://[/archive://[hi!://:100/hi!]:1/hi!]:97hi!://:100/hi!://:100/hi!://hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13313");
        java.io.File file4 = null;
        java.io.File file5 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive6 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file7 = explodedArchive6.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive6.getNestedArchives(entryFilter8);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive6.getNestedArchives(entryFilter10);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = explodedArchive6.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file5, asciiBytesMap12);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap14);
        explodedArchive15.filtered = true;
        java.io.File file18 = null;
        explodedArchive15.root = file18;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection20 = explodedArchive15.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection21 = explodedArchive15.getEntries();
        java.util.jar.Manifest manifest22 = null;
        explodedArchive15.manifest = manifest22;
        java.io.File file24 = explodedArchive15.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive15.entries;
        java.util.jar.Manifest manifest26 = explodedArchive15.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL("hi!://:100/hi!://:100/hi!://:100/hi!", "[hi!://:100/hi!]", (int) (byte) 1, "archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection29 = uRL28.openConnection();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(asciiBytesMap12);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertNotNull(entryCollection20);
        org.junit.Assert.assertNotNull(entryCollection21);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNull(manifest26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/hi!://:100/hi!://:100/hi!://[hi!://:100/hi!]:1archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive");
    }

    @Test
    public void test13314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13314");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler3 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest4 = null;
        explodedArchive0.manifest = manifest4;
        java.lang.String str6 = explodedArchive0.toString();
        java.io.File file7 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = explodedArchive8.new FileEntry();
        java.util.jar.Manifest manifest11 = explodedArchive8.getManifest();
        java.util.jar.Manifest manifest12 = explodedArchive8.manifest;
        java.io.File file13 = null;
        explodedArchive8.root = file13;
        explodedArchive8.filtered = true;
        java.io.File file17 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive18.getNestedArchives(entryFilter20);
        explodedArchive18.filtered = false;
        java.util.jar.Manifest manifest24 = explodedArchive18.manifest;
        java.io.File file25 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file27 = explodedArchive26.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive26.getNestedArchives(entryFilter28);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive26.getNestedArchives(entryFilter30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file25, asciiBytesMap32);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive33.entries;
        explodedArchive18.entries = asciiBytesMap34;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap34);
        java.util.jar.Manifest manifest37 = null;
        explodedArchive36.manifest = manifest37;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive36.entries;
        explodedArchive8.entries = asciiBytesMap39;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file7, asciiBytesMap39);
        explodedArchive0.entries = asciiBytesMap39;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive0.getEntries();
        java.io.File file44 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file46 = explodedArchive45.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter47 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList48 = explodedArchive45.getNestedArchives(entryFilter47);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter49 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList50 = explodedArchive45.getNestedArchives(entryFilter49);
        java.lang.String str51 = explodedArchive45.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler52 = explodedArchive45.new FilteredURLStreamHandler();
        boolean boolean53 = explodedArchive45.filtered;
        java.io.File file54 = explodedArchive45.root;
        boolean boolean55 = explodedArchive45.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap56 = explodedArchive45.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive(file44, asciiBytesMap56);
        explodedArchive0.entries = asciiBytesMap56;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertNull(manifest12);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(archiveList48);
        org.junit.Assert.assertNotNull(archiveList50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "archive" + "'", str51, "archive");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap56);
    }

    @Test
    public void test13315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13315");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.lang.String str17 = uRL9.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str23 = explodedArchive22.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection24 = explodedArchive22.getEntries();
        java.util.jar.Manifest manifest25 = explodedArchive22.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler26 = explodedArchive22.new FilteredURLStreamHandler();
        java.net.URL uRL27 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler26);
        java.lang.String str28 = uRL27.getQuery();
        java.lang.String str29 = uRL27.getPath();
        boolean boolean30 = uRL9.sameFile(uRL27);
        java.io.File file36 = null;
        java.io.File file37 = null;
        java.io.File file38 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file40 = explodedArchive39.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter41 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList42 = explodedArchive39.getNestedArchives(entryFilter41);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter43 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList44 = explodedArchive39.getNestedArchives(entryFilter43);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap45 = explodedArchive39.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive(file38, asciiBytesMap45);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap47 = explodedArchive46.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive(file37, asciiBytesMap47);
        explodedArchive48.filtered = true;
        java.io.File file51 = null;
        explodedArchive48.root = file51;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection53 = explodedArchive48.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection54 = explodedArchive48.getEntries();
        java.util.jar.Manifest manifest55 = null;
        explodedArchive48.manifest = manifest55;
        java.io.File file57 = explodedArchive48.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap58 = explodedArchive48.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive(file36, asciiBytesMap58);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter60 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList61 = explodedArchive59.getNestedArchives(entryFilter60);
        explodedArchive59.filtered = true;
        java.io.File file64 = null;
        explodedArchive59.root = file64;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler66 = explodedArchive59.new FilteredURLStreamHandler();
        java.net.URL uRL67 = new java.net.URL("[://[archive://:10archive]:100archive://:10archive]:100", "[/hi!://:100/archive]:0", (int) '#', "[archive://:10archive]", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.net.URL uRL68 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.lang.String str69 = uRL68.getRef();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI70 = uRL68.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "archive" + "'", str23, "archive");
        org.junit.Assert.assertNotNull(entryCollection24);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(archiveList42);
        org.junit.Assert.assertNotNull(archiveList44);
        org.junit.Assert.assertNotNull(asciiBytesMap45);
        org.junit.Assert.assertNotNull(asciiBytesMap47);
        org.junit.Assert.assertNotNull(entryCollection53);
        org.junit.Assert.assertNotNull(entryCollection54);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(asciiBytesMap58);
        org.junit.Assert.assertNotNull(archiveList61);
        org.junit.Assert.assertEquals(uRL67.toString(), "[://[archive://:10archive]:100archive://:10archive]:100://[/hi!://:100/archive]:0:35[archive://:10archive]");
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str69);
    }

    @Test
    public void test13316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13316");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("[/hi!://:100]:32", "[/hi!://:100/archive]:1", (int) (byte) 10, "://[hi!://:100/:100]:100/hi!://:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: [/hi!://:100]:32");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13317");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        java.io.File file6 = explodedArchive4.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL8 = new java.net.URL("hi!://:100/://[hi!://:100/:100]:100/hi!://:100", "/hi!://:100", (int) (byte) 10, "hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!://[hi!://:100/hi!]:0hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler7);
        java.io.File file9 = null;
        java.io.File file10 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive11.getNestedArchives(entryFilter13);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive11.getNestedArchives(entryFilter15);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive11.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive18.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap19);
        explodedArchive20.filtered = true;
        java.io.File file23 = null;
        explodedArchive20.root = file23;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection25 = explodedArchive20.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive20.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive20.new FilteredURLStreamHandler();
        java.lang.String str28 = explodedArchive20.toString();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter29 = null;
        org.springframework.boot.loader.archive.Archive archive30 = explodedArchive20.getFilteredArchive(entryRenameFilter29);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive31.getNestedArchives(entryFilter33);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap35 = null;
        explodedArchive31.entries = asciiBytesMap35;
        java.io.File file37 = explodedArchive31.root;
        java.io.File file38 = explodedArchive31.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file40 = explodedArchive39.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter41 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList42 = explodedArchive39.getNestedArchives(entryFilter41);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter43 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList44 = explodedArchive39.getNestedArchives(entryFilter43);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap45 = explodedArchive39.entries;
        explodedArchive31.entries = asciiBytesMap45;
        explodedArchive31.filtered = false;
        java.lang.String str49 = explodedArchive31.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection50 = explodedArchive31.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str52 = explodedArchive51.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection53 = explodedArchive51.getEntries();
        java.util.jar.Manifest manifest54 = explodedArchive51.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler55 = explodedArchive51.new FilteredURLStreamHandler();
        boolean boolean56 = explodedArchive51.filtered;
        java.util.jar.Manifest manifest57 = explodedArchive51.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file59 = explodedArchive58.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter60 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList61 = explodedArchive58.getNestedArchives(entryFilter60);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter62 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList63 = explodedArchive58.getNestedArchives(entryFilter62);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap64 = explodedArchive58.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter65 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList66 = explodedArchive58.getNestedArchives(entryFilter65);
        java.io.File file67 = null;
        java.io.File file68 = null;
        java.io.File file69 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file71 = explodedArchive70.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter72 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList73 = explodedArchive70.getNestedArchives(entryFilter72);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter74 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList75 = explodedArchive70.getNestedArchives(entryFilter74);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap76 = explodedArchive70.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive(file69, asciiBytesMap76);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap78 = explodedArchive77.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = new org.springframework.boot.loader.archive.ExplodedArchive(file68, asciiBytesMap78);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive80 = new org.springframework.boot.loader.archive.ExplodedArchive(file67, asciiBytesMap78);
        explodedArchive58.entries = asciiBytesMap78;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler82 = explodedArchive58.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest83 = explodedArchive58.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive84 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str85 = explodedArchive84.toString();
        java.util.jar.Manifest manifest86 = null;
        explodedArchive84.manifest = manifest86;
        java.util.jar.Manifest manifest88 = explodedArchive84.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap89 = explodedArchive84.entries;
        explodedArchive58.entries = asciiBytesMap89;
        explodedArchive51.entries = asciiBytesMap89;
        explodedArchive31.entries = asciiBytesMap89;
        explodedArchive20.entries = asciiBytesMap89;
        java.lang.Class<?> wildcardClass94 = asciiBytesMap89.getClass();
        java.lang.Class[] classArray95 = new java.lang.Class[] { wildcardClass94 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj96 = uRL8.getContent(classArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertEquals(uRL8.toString(), "hi!://:100/://[hi!://:100/:100]:100/hi!://:100://[/hi!://:100]:10hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!://[hi!://:100/hi!]:0hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(asciiBytesMap17);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(entryCollection25);
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "archive" + "'", str28, "archive");
        org.junit.Assert.assertNotNull(archive30);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNull(file38);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(archiveList42);
        org.junit.Assert.assertNotNull(archiveList44);
        org.junit.Assert.assertNotNull(asciiBytesMap45);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "archive" + "'", str49, "archive");
        org.junit.Assert.assertNotNull(entryCollection50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "archive" + "'", str52, "archive");
        org.junit.Assert.assertNotNull(entryCollection53);
        org.junit.Assert.assertNull(manifest54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(manifest57);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(archiveList61);
        org.junit.Assert.assertNotNull(archiveList63);
        org.junit.Assert.assertNotNull(asciiBytesMap64);
        org.junit.Assert.assertNotNull(archiveList66);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNotNull(archiveList73);
        org.junit.Assert.assertNotNull(archiveList75);
        org.junit.Assert.assertNotNull(asciiBytesMap76);
        org.junit.Assert.assertNotNull(asciiBytesMap78);
        org.junit.Assert.assertNull(manifest83);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "archive" + "'", str85, "archive");
        org.junit.Assert.assertNull(manifest88);
        org.junit.Assert.assertNotNull(asciiBytesMap89);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(classArray95);
    }

    @Test
    public void test13318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13318");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap2 = null;
        explodedArchive0.entries = asciiBytesMap2;
        java.lang.String str4 = explodedArchive0.toString();
        java.io.File file5 = null;
        explodedArchive0.root = file5;
        java.io.File file7 = explodedArchive0.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive0.entries;
        java.util.jar.Manifest manifest9 = explodedArchive0.manifest;
        java.io.File file10 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive11.getNestedArchives(entryFilter13);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection15 = explodedArchive11.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive11.getNestedArchives(entryFilter16);
        java.util.jar.Manifest manifest18 = null;
        explodedArchive11.manifest = manifest18;
        explodedArchive11.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive11.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap22);
        explodedArchive0.entries = asciiBytesMap22;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive0.entries;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "archive" + "'", str4, "archive");
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(asciiBytesMap8);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(entryCollection15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
    }

    @Test
    public void test13319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13319");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest3 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler4 = explodedArchive0.new FilteredURLStreamHandler();
        boolean boolean5 = explodedArchive0.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.jar.Manifest manifest7 = explodedArchive0.getManifest();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(manifest3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNull(manifest7);
    }

    @Test
    public void test13320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13320");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getFile();
        int int15 = uRL13.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getQuery();
        java.lang.String str28 = uRL26.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str35 = explodedArchive34.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection36 = explodedArchive34.getEntries();
        java.util.jar.Manifest manifest37 = explodedArchive34.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL40 = new java.net.URL(uRL26, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL41 = new java.net.URL(uRL13, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL42 = new java.net.URL("archive", "", (int) (byte) 10, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str43 = uRL42.getPath();
        int int44 = uRL42.getPort();
        java.lang.String str45 = uRL42.toExternalForm();
        java.lang.String str46 = uRL42.getAuthority();
        java.lang.String str47 = uRL42.getPath();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "archive" + "'", str35, "archive");
        org.junit.Assert.assertNotNull(entryCollection36);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL42.toString(), "archive://:10:100");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + ":100" + "'", str43, ":100");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10 + "'", int44 == 10);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "archive://:10:100" + "'", str45, "archive://:10:100");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + ":10" + "'", str46, ":10");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + ":100" + "'", str47, ":100");
    }

    @Test
    public void test13321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13321");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive0.getNestedArchives(entryFilter8);
        java.util.jar.Manifest manifest10 = explodedArchive0.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive0.entries;
        java.util.jar.Manifest manifest12 = null;
        explodedArchive0.manifest = manifest12;
        java.util.jar.Manifest manifest14 = null;
        explodedArchive0.manifest = manifest14;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
    }

    @Test
    public void test13322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13322");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.io.File file8 = explodedArchive0.root;
        explodedArchive0.filtered = true;
        java.io.File file11 = null;
        explodedArchive0.root = file11;
        java.io.File file13 = explodedArchive0.root;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file13);
    }

    @Test
    public void test13323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13323");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("[hi!://:100/hi!://:100/:100]:100", "/hi!", "/hi!://:100/hi!://:100/hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: [hi!://:100/hi!://:100/:100]:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13324");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getFile();
        int int15 = uRL13.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getQuery();
        java.lang.String str28 = uRL26.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str35 = explodedArchive34.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection36 = explodedArchive34.getEntries();
        java.util.jar.Manifest manifest37 = explodedArchive34.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL40 = new java.net.URL(uRL26, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL41 = new java.net.URL(uRL13, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str42 = uRL41.getFile();
        java.lang.String str43 = uRL41.getProtocol();
        java.lang.String str44 = uRL41.getQuery();
        java.lang.String str45 = uRL41.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str52 = explodedArchive51.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection53 = explodedArchive51.getEntries();
        java.util.jar.Manifest manifest54 = explodedArchive51.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler55 = explodedArchive51.new FilteredURLStreamHandler();
        java.net.URL uRL56 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.lang.String str57 = uRL56.getQuery();
        java.lang.String str58 = uRL56.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str65 = explodedArchive64.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection66 = explodedArchive64.getEntries();
        java.util.jar.Manifest manifest67 = explodedArchive64.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler68 = explodedArchive64.new FilteredURLStreamHandler();
        java.net.URL uRL69 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler68);
        java.net.URL uRL70 = new java.net.URL(uRL56, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler68);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file73 = explodedArchive72.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter74 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList75 = explodedArchive72.getNestedArchives(entryFilter74);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry76 = explodedArchive72.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler77 = explodedArchive72.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler78 = explodedArchive72.new FilteredURLStreamHandler();
        java.net.URL uRL79 = new java.net.URL(uRL56, "hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler78);
        java.net.URL uRL80 = new java.net.URL(uRL41, "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler78);
        java.net.URL uRL81 = new java.net.URL("archive://:10:100", "hi!://:100/hi!://:100/hi!:1", 100, "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100", (java.net.URLStreamHandler) filteredURLStreamHandler78);
        java.lang.String str82 = uRL81.toExternalForm();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "archive" + "'", str35, "archive");
        org.junit.Assert.assertNotNull(entryCollection36);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "/archive" + "'", str42, "/archive");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "archive" + "'", str52, "archive");
        org.junit.Assert.assertNotNull(entryCollection53);
        org.junit.Assert.assertNull(manifest54);
        org.junit.Assert.assertEquals(uRL56.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "archive" + "'", str65, "archive");
        org.junit.Assert.assertNotNull(entryCollection66);
        org.junit.Assert.assertNull(manifest67);
        org.junit.Assert.assertEquals(uRL69.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL70.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(file73);
        org.junit.Assert.assertNotNull(archiveList75);
        org.junit.Assert.assertEquals(uRL79.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL80.toString(), "hi!://:100/hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertEquals(uRL81.toString(), "archive://:10:100://[hi!://:100/hi!://:100/hi!:1]:100hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "archive://:10:100://[hi!://:100/hi!://:100/hi!:1]:100hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100" + "'", str82, "archive://:10:100://[hi!://:100/hi!://:100/hi!:1]:100hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100");
    }

    @Test
    public void test13325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13325");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive0.getFilteredArchive(entryRenameFilter5);
        java.io.File file7 = null;
        explodedArchive0.root = file7;
        java.lang.String str9 = explodedArchive0.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive0.entries;
        java.util.jar.Manifest manifest11 = null;
        explodedArchive0.manifest = manifest11;
        java.io.File file13 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler14 = explodedArchive0.new FilteredURLStreamHandler();
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(file13);
    }

    @Test
    public void test13326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13326");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        java.io.File file4 = null;
        explodedArchive0.root = file4;
        boolean boolean6 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive0.entries;
        boolean boolean10 = explodedArchive0.filtered;
        java.lang.String str11 = explodedArchive0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "archive" + "'", str11, "archive");
    }

    @Test
    public void test13327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13327");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str42 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str48 = explodedArchive47.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection49 = explodedArchive47.getEntries();
        java.util.jar.Manifest manifest50 = explodedArchive47.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive47.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.lang.String str53 = uRL52.getQuery();
        java.lang.String str54 = uRL52.getRef();
        java.lang.String str55 = uRL52.getRef();
        java.lang.String str56 = uRL52.toExternalForm();
        int int57 = uRL52.getDefaultPort();
        boolean boolean58 = uRL9.sameFile(uRL52);
        java.net.URL uRL60 = new java.net.URL(uRL9, "/archive");
        java.lang.String str61 = uRL9.getUserInfo();
        java.lang.String str62 = uRL9.getProtocol();
        java.lang.String str63 = uRL9.getPath();
        java.lang.String str64 = uRL9.getPath();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "archive" + "'", str48, "archive");
        org.junit.Assert.assertNotNull(entryCollection49);
        org.junit.Assert.assertNull(manifest50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!://:100" + "'", str56, "hi!://:100");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals(uRL60.toString(), "hi!://:100/archive");
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
    }

    @Test
    public void test13328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13328");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive8.getEntries();
        java.io.File file10 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive8.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive8.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest14 = explodedArchive8.manifest;
        java.io.File file15 = null;
        java.io.File file16 = null;
        java.io.File file17 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive18.getNestedArchives(entryFilter20);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive18.getNestedArchives(entryFilter22);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = explodedArchive18.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap24);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive25.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file16, asciiBytesMap26);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry28 = explodedArchive27.new FileEntry();
        explodedArchive27.filtered = false;
        java.io.File file31 = null;
        java.io.File file32 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file34 = explodedArchive33.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive33.getNestedArchives(entryFilter35);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry37 = explodedArchive33.new FileEntry();
        java.lang.String str38 = explodedArchive33.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry39 = explodedArchive33.new FileEntry();
        java.util.jar.Manifest manifest40 = null;
        explodedArchive33.manifest = manifest40;
        java.lang.String str42 = explodedArchive33.toString();
        java.io.File file43 = null;
        java.io.File file44 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file46 = explodedArchive45.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter47 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList48 = explodedArchive45.getNestedArchives(entryFilter47);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter49 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList50 = explodedArchive45.getNestedArchives(entryFilter49);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap51 = explodedArchive45.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter52 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList53 = explodedArchive45.getNestedArchives(entryFilter52);
        java.io.File file54 = null;
        java.io.File file55 = null;
        java.io.File file56 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter59 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList60 = explodedArchive57.getNestedArchives(entryFilter59);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter61 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList62 = explodedArchive57.getNestedArchives(entryFilter61);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap63 = explodedArchive57.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive(file56, asciiBytesMap63);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap65 = explodedArchive64.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive(file55, asciiBytesMap65);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive(file54, asciiBytesMap65);
        explodedArchive45.entries = asciiBytesMap65;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive(file44, asciiBytesMap65);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap70 = explodedArchive69.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive(file43, asciiBytesMap70);
        explodedArchive33.entries = asciiBytesMap70;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive(file32, asciiBytesMap70);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive(file31, asciiBytesMap70);
        explodedArchive27.entries = asciiBytesMap70;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive76 = new org.springframework.boot.loader.archive.ExplodedArchive(file15, asciiBytesMap70);
        explodedArchive8.entries = asciiBytesMap70;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap78 = explodedArchive8.entries;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNull(manifest14);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNotNull(asciiBytesMap24);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "archive" + "'", str42, "archive");
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(archiveList48);
        org.junit.Assert.assertNotNull(archiveList50);
        org.junit.Assert.assertNotNull(asciiBytesMap51);
        org.junit.Assert.assertNotNull(archiveList53);
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(archiveList60);
        org.junit.Assert.assertNotNull(archiveList62);
        org.junit.Assert.assertNotNull(asciiBytesMap63);
        org.junit.Assert.assertNotNull(asciiBytesMap65);
        org.junit.Assert.assertNotNull(asciiBytesMap70);
        org.junit.Assert.assertNotNull(asciiBytesMap78);
    }

    @Test
    public void test13329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13329");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file30 = explodedArchive29.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter31 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList32 = explodedArchive29.getNestedArchives(entryFilter31);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection33 = explodedArchive29.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive29.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("/archive", "hi!://:100/hi!", (int) (byte) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.net.URL uRL37 = new java.net.URL(uRL23, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.lang.String str38 = uRL23.getUserInfo();
        java.lang.String str39 = uRL23.getProtocol();
        java.lang.String str40 = uRL23.getProtocol();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNotNull(archiveList32);
        org.junit.Assert.assertNotNull(entryCollection33);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertEquals(uRL36.toString(), "/archive://[hi!://:100/hi!]:1hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
    }

    @Test
    public void test13330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13330");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        explodedArchive11.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter15 = null;
        org.springframework.boot.loader.archive.Archive archive16 = explodedArchive11.getFilteredArchive(entryRenameFilter15);
        java.lang.String str17 = explodedArchive11.toString();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter18 = null;
        org.springframework.boot.loader.archive.Archive archive19 = explodedArchive11.getFilteredArchive(entryRenameFilter18);
        java.lang.String str20 = explodedArchive11.toString();
        java.util.jar.Manifest manifest21 = null;
        explodedArchive11.manifest = manifest21;
        java.io.File file23 = null;
        explodedArchive11.root = file23;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(archive16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(archive19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "archive" + "'", str20, "archive");
    }

    @Test
    public void test13331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13331");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("/hi!://:100/archive:///archive:0hi!://:100", "hi!://:100/hi!://hi!:1hi!", "hi!://:100/hi!://:100/hi!://hi!");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /hi!://:100/archive:///archive:0hi!://:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13332");
        java.io.File file20 = null;
        java.io.File file21 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file23 = explodedArchive22.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive22.getNestedArchives(entryFilter24);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive22.getNestedArchives(entryFilter26);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap28 = explodedArchive22.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive(file21, asciiBytesMap28);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive29.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file20, asciiBytesMap30);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL33 = new java.net.URL("", "archive://:10archive", (int) (short) 100, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.net.URL uRL34 = new java.net.URL("hi!", "://[archive://:10archive]:100archive://:10archive", 0, "hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.net.URL uRL35 = new java.net.URL("/hi!", "archive", (int) (short) -1, "archive://:10:100", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.net.URL uRL36 = new java.net.URL("/://[archive://:10archive]:100archive://:10archive", "/hi!://:100", 32, "archive://:0hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.net.URL uRL37 = new java.net.URL("archive://:0hi!://:100/hi!://:100/hi!://:100/hi!://:100", "hi!://:100/archive://[://[archive://:10archive]:100archive://:10archive]:0:32hi!://:100", 97, "hi!://:100/hi!://:100/hi!://:100/hi!://hi!", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNotNull(asciiBytesMap28);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertEquals(uRL33.toString(), "://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL34.toString(), "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals(uRL35.toString(), "/hi!://archivearchive://:10:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "/://[archive://:10archive]:100archive://:10archive://[/hi!://:100]:32archive://:0hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "archive://:0hi!://:100/hi!://:100/hi!://:100/hi!://:100://[hi!://:100/archive://[://[archive://:10archive]:100archive://:10archive]:0:32hi!://:100]:97hi!://:100/hi!://:100/hi!://:100/hi!://hi!");
    }

    @Test
    public void test13333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13333");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.io.File file9 = null;
        java.io.File file10 = null;
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap20);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap20);
        explodedArchive0.entries = asciiBytesMap20;
        java.util.jar.Manifest manifest24 = explodedArchive0.getManifest();
        java.io.File file25 = null;
        explodedArchive0.root = file25;
        java.util.jar.Manifest manifest27 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive0.getNestedArchives(entryFilter28);
        java.io.File file30 = explodedArchive0.root;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertNull(manifest27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNull(file30);
    }

    @Test
    public void test13334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13334");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.io.File file9 = null;
        explodedArchive0.root = file9;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter11 = null;
        org.springframework.boot.loader.archive.Archive archive12 = explodedArchive0.getFilteredArchive(entryRenameFilter11);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry13 = explodedArchive0.new FileEntry();
        boolean boolean14 = explodedArchive0.filtered;
        java.io.File file15 = null;
        java.io.File file16 = null;
        java.io.File file17 = null;
        java.io.File file18 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive19.getNestedArchives(entryFilter21);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive19.getNestedArchives(entryFilter23);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap27);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry29 = explodedArchive28.new FileEntry();
        explodedArchive28.filtered = false;
        java.io.File file32 = null;
        java.io.File file33 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file35 = explodedArchive34.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive34.getNestedArchives(entryFilter36);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry38 = explodedArchive34.new FileEntry();
        java.lang.String str39 = explodedArchive34.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry40 = explodedArchive34.new FileEntry();
        java.util.jar.Manifest manifest41 = null;
        explodedArchive34.manifest = manifest41;
        java.lang.String str43 = explodedArchive34.toString();
        java.io.File file44 = null;
        java.io.File file45 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive46 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file47 = explodedArchive46.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter48 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList49 = explodedArchive46.getNestedArchives(entryFilter48);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter50 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList51 = explodedArchive46.getNestedArchives(entryFilter50);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap52 = explodedArchive46.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter53 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList54 = explodedArchive46.getNestedArchives(entryFilter53);
        java.io.File file55 = null;
        java.io.File file56 = null;
        java.io.File file57 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file59 = explodedArchive58.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter60 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList61 = explodedArchive58.getNestedArchives(entryFilter60);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter62 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList63 = explodedArchive58.getNestedArchives(entryFilter62);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap64 = explodedArchive58.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive(file57, asciiBytesMap64);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap66 = explodedArchive65.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive(file56, asciiBytesMap66);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive(file55, asciiBytesMap66);
        explodedArchive46.entries = asciiBytesMap66;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = new org.springframework.boot.loader.archive.ExplodedArchive(file45, asciiBytesMap66);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap71 = explodedArchive70.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive(file44, asciiBytesMap71);
        explodedArchive34.entries = asciiBytesMap71;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive(file33, asciiBytesMap71);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive(file32, asciiBytesMap71);
        explodedArchive28.entries = asciiBytesMap71;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive(file16, asciiBytesMap71);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive(file15, asciiBytesMap71);
        explodedArchive0.entries = asciiBytesMap71;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter80 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList81 = explodedArchive0.getNestedArchives(entryFilter80);
        java.util.jar.Manifest manifest82 = explodedArchive0.manifest;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection83 = explodedArchive0.getEntries();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(archive12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertNull(file35);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "archive" + "'", str39, "archive");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "archive" + "'", str43, "archive");
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(archiveList49);
        org.junit.Assert.assertNotNull(archiveList51);
        org.junit.Assert.assertNotNull(asciiBytesMap52);
        org.junit.Assert.assertNotNull(archiveList54);
        org.junit.Assert.assertNull(file59);
        org.junit.Assert.assertNotNull(archiveList61);
        org.junit.Assert.assertNotNull(archiveList63);
        org.junit.Assert.assertNotNull(asciiBytesMap64);
        org.junit.Assert.assertNotNull(asciiBytesMap66);
        org.junit.Assert.assertNotNull(asciiBytesMap71);
        org.junit.Assert.assertNotNull(archiveList81);
        org.junit.Assert.assertNull(manifest82);
        org.junit.Assert.assertNotNull(entryCollection83);
    }

    @Test
    public void test13335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13335");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("hi!://:100/[hi!://:100/hi!]://[hi!://:100/[hi!://:100/hi!]]/:52", "hi!://:100://[hi!://:100/hi!://:100/hi!://hi!]:0hi!://:100/archive", 10, "hi!://:100/:52");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://:100/[hi!://:100/hi!]://[hi!://:100/[hi!://:100/hi!]]/:52");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13336");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.jar.Manifest manifest4 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive0.getFilteredArchive(entryRenameFilter5);
        java.lang.String str7 = explodedArchive0.toString();
        java.util.jar.Manifest manifest8 = null;
        explodedArchive0.manifest = manifest8;
        java.lang.String str10 = explodedArchive0.toString();
        java.lang.Class<?> wildcardClass11 = explodedArchive0.getClass();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "archive" + "'", str10, "archive");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test13337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13337");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive0.getNestedArchives(entryFilter8);
        java.lang.String str10 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive0.getNestedArchives(entryFilter11);
        java.io.File file13 = null;
        explodedArchive0.root = file13;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter15 = null;
        org.springframework.boot.loader.archive.Archive archive16 = explodedArchive0.getFilteredArchive(entryRenameFilter15);
        java.util.jar.Manifest manifest17 = null;
        explodedArchive0.manifest = manifest17;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "archive" + "'", str10, "archive");
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archive16);
    }

    @Test
    public void test13338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13338");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = explodedArchive2.new FileEntry();
        java.lang.String str7 = explodedArchive2.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive2.new FileEntry();
        java.util.jar.Manifest manifest9 = null;
        explodedArchive2.manifest = manifest9;
        java.lang.String str11 = explodedArchive2.toString();
        java.io.File file12 = null;
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive14.getNestedArchives(entryFilter21);
        java.io.File file23 = null;
        java.io.File file24 = null;
        java.io.File file25 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file27 = explodedArchive26.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive26.getNestedArchives(entryFilter28);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive26.getNestedArchives(entryFilter30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file25, asciiBytesMap32);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive33.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file24, asciiBytesMap34);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap34);
        explodedArchive14.entries = asciiBytesMap34;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive38.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap39);
        explodedArchive2.entries = asciiBytesMap39;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap39);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap39);
        boolean boolean44 = explodedArchive43.filtered;
        java.lang.String str45 = explodedArchive43.toString();
        java.util.jar.Manifest manifest46 = explodedArchive43.getManifest();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str47 = explodedArchive43.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "archive" + "'", str11, "archive");
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "archive" + "'", str45, "archive");
        org.junit.Assert.assertNull(manifest46);
    }

    @Test
    public void test13339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13339");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        java.io.File file5 = explodedArchive0.root;
        java.lang.String str6 = explodedArchive0.toString();
        boolean boolean7 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive0.new FileEntry();
        java.io.File file9 = fileEntry8.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = fileEntry8.getName();
        java.io.File file11 = fileEntry8.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = null;
        fileEntry8.name = asciiBytes12;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes14 = null;
        fileEntry8.name = asciiBytes14;
        java.io.File file16 = fileEntry8.getFile();
        java.io.File file17 = fileEntry8.getFile();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(asciiBytes10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
    }

    @Test
    public void test13340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13340");
        java.io.File file4 = null;
        java.io.File file5 = null;
        java.io.File file6 = null;
        java.io.File file7 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive8.getNestedArchives(entryFilter12);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive8.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file7, asciiBytesMap14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive15.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file6, asciiBytesMap16);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file5, asciiBytesMap16);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive19.getNestedArchives(entryFilter20);
        java.util.jar.Manifest manifest22 = explodedArchive19.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler23 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL24 = new java.net.URL("[/hi!://:100/archive]:0", "/hi!://:100/archive:///archive:0hi!://[archive://:10archive]:100", 0, "", (java.net.URLStreamHandler) filteredURLStreamHandler23);
        java.lang.String str25 = uRL24.toExternalForm();
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(asciiBytesMap14);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNull(manifest22);
        org.junit.Assert.assertEquals(uRL24.toString(), "[/hi!://:100/archive]:0://[/hi!://:100/archive:///archive:0hi!://[archive://:10archive]:100]:0");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[/hi!://:100/archive]:0://[/hi!://:100/archive:///archive:0hi!://[archive://:10archive]:100]:0" + "'", str25, "[/hi!://:100/archive]:0://[/hi!://:100/archive:///archive:0hi!://[archive://:10archive]:100]:0");
    }

    @Test
    public void test13341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13341");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive0.getFilteredArchive(entryRenameFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive0.entries;
        java.lang.String str8 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive0.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive0.entries;
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
    }

    @Test
    public void test13342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13342");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive1.getNestedArchives(entryFilter8);
        java.io.File file10 = null;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap21);
        explodedArchive1.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap21);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive25.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry27 = explodedArchive25.new FileEntry();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection28 = explodedArchive25.getEntries();
        java.lang.String str29 = explodedArchive25.toString();
        java.util.jar.Manifest manifest30 = explodedArchive25.manifest;
        explodedArchive25.filtered = true;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry33 = explodedArchive25.new FileEntry();
        java.io.File file34 = fileEntry33.getFile();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNotNull(entryCollection28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNull(manifest30);
        org.junit.Assert.assertNull(file34);
    }

    @Test
    public void test13343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13343");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        explodedArchive0.filtered = false;
        java.util.jar.Manifest manifest8 = null;
        explodedArchive0.manifest = manifest8;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = explodedArchive0.new FileEntry();
        java.io.File file11 = fileEntry10.getFile();
        java.io.File file12 = null;
        fileEntry10.file = file12;
        java.io.File file14 = fileEntry10.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes15 = fileEntry10.getName();
        java.io.File file16 = fileEntry10.file;
        java.io.File file17 = fileEntry10.file;
        java.io.File file18 = fileEntry10.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes19 = fileEntry10.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes20 = null;
        fileEntry10.name = asciiBytes20;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(asciiBytes15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNull(asciiBytes19);
    }

    @Test
    public void test13344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13344");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive0.getNestedArchives(entryFilter8);
        java.util.jar.Manifest manifest10 = null;
        explodedArchive0.manifest = manifest10;
        boolean boolean12 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter13 = null;
        org.springframework.boot.loader.archive.Archive archive14 = explodedArchive0.getFilteredArchive(entryRenameFilter13);
        java.lang.String str15 = explodedArchive0.toString();
        java.io.File file16 = explodedArchive0.root;
        java.util.jar.Manifest manifest17 = null;
        explodedArchive0.manifest = manifest17;
        java.util.jar.Manifest manifest19 = explodedArchive0.manifest;
        boolean boolean20 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter21 = null;
        org.springframework.boot.loader.archive.Archive archive22 = explodedArchive0.getFilteredArchive(entryRenameFilter21);
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(archive14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "archive" + "'", str15, "archive");
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(archive22);
    }

    @Test
    public void test13345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13345");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.io.File file3 = explodedArchive0.root;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        java.io.File file5 = explodedArchive0.root;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive0.getEntries();
        explodedArchive0.filtered = false;
        java.util.jar.Manifest manifest9 = null;
        explodedArchive0.manifest = manifest9;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(entryCollection6);
    }

    @Test
    public void test13346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13346");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.lang.String str7 = explodedArchive0.toString();
        java.util.jar.Manifest manifest8 = explodedArchive0.manifest;
        java.io.File file9 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive0.getNestedArchives(entryFilter10);
        boolean boolean12 = explodedArchive0.filtered;
        java.io.File file13 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file13, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test13347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13347");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getPath();
        java.lang.String str15 = uRL13.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL27 = new java.net.URL(uRL13, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL28 = new java.net.URL("/hi!://:100", "[/hi!://:100/archive]:0", (int) '#', ":100", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str29 = uRL28.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str36 = explodedArchive35.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection37 = explodedArchive35.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter38 = null;
        org.springframework.boot.loader.archive.Archive archive39 = explodedArchive35.getFilteredArchive(entryRenameFilter38);
        java.io.File file40 = explodedArchive35.root;
        java.util.jar.Manifest manifest41 = explodedArchive35.getManifest();
        java.util.jar.Manifest manifest42 = null;
        explodedArchive35.manifest = manifest42;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler44 = explodedArchive35.new FilteredURLStreamHandler();
        java.net.URL uRL45 = new java.net.URL("/[hi!://:100/hi!://:100/hi!://:100/archive", "[:100]:52", (int) ' ', ":0", (java.net.URLStreamHandler) filteredURLStreamHandler44);
        java.net.URL uRL46 = new java.net.URL(uRL28, "/hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler44);
        java.io.File file47 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file49 = explodedArchive48.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter50 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList51 = explodedArchive48.getNestedArchives(entryFilter50);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter52 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList53 = explodedArchive48.getNestedArchives(entryFilter52);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap54 = explodedArchive48.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter55 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList56 = explodedArchive48.getNestedArchives(entryFilter55);
        java.io.File file57 = null;
        java.io.File file58 = null;
        java.io.File file59 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file61 = explodedArchive60.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter62 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList63 = explodedArchive60.getNestedArchives(entryFilter62);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter64 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList65 = explodedArchive60.getNestedArchives(entryFilter64);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap66 = explodedArchive60.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive(file59, asciiBytesMap66);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap68 = explodedArchive67.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive(file58, asciiBytesMap68);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = new org.springframework.boot.loader.archive.ExplodedArchive(file57, asciiBytesMap68);
        explodedArchive48.entries = asciiBytesMap68;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive(file47, asciiBytesMap68);
        java.util.jar.Manifest manifest73 = null;
        explodedArchive72.manifest = manifest73;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection75 = explodedArchive72.getEntries();
        java.io.File file76 = null;
        explodedArchive72.root = file76;
        java.io.File file78 = null;
        explodedArchive72.root = file78;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap80 = explodedArchive72.entries;
        java.lang.String str81 = explodedArchive72.toString();
        explodedArchive72.filtered = false;
        explodedArchive72.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter86 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList87 = explodedArchive72.getNestedArchives(entryFilter86);
        explodedArchive72.filtered = false;
        java.io.File file90 = null;
        explodedArchive72.root = file90;
        boolean boolean92 = uRL46.equals((java.lang.Object) explodedArchive72);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL28.toString(), "/hi!://:100://[/hi!://:100/archive]:0:35:100");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + ":100" + "'", str29, ":100");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "archive" + "'", str36, "archive");
        org.junit.Assert.assertNotNull(entryCollection37);
        org.junit.Assert.assertNotNull(archive39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(manifest41);
        org.junit.Assert.assertEquals(uRL45.toString(), "/[hi!://:100/hi!://:100/hi!://:100/archive://[:100]:52:32:0");
        org.junit.Assert.assertEquals(uRL46.toString(), "/hi!://:100://[/hi!://:100/archive]:0:35/hi!://:100/archive");
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(archiveList51);
        org.junit.Assert.assertNotNull(archiveList53);
        org.junit.Assert.assertNotNull(asciiBytesMap54);
        org.junit.Assert.assertNotNull(archiveList56);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(archiveList63);
        org.junit.Assert.assertNotNull(archiveList65);
        org.junit.Assert.assertNotNull(asciiBytesMap66);
        org.junit.Assert.assertNotNull(asciiBytesMap68);
        org.junit.Assert.assertNotNull(entryCollection75);
        org.junit.Assert.assertNotNull(asciiBytesMap80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "archive" + "'", str81, "archive");
        org.junit.Assert.assertNotNull(archiveList87);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test13348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13348");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        java.lang.String str12 = uRL9.toExternalForm();
        java.net.URL uRL14 = new java.net.URL(uRL9, "[/hi!://:100/archive]");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI15 = uRL9.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!://:100" + "'", str12, "hi!://:100");
        org.junit.Assert.assertEquals(uRL14.toString(), "hi!://:100/[/hi!://:100/archive]");
    }

    @Test
    public void test13349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13349");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        boolean boolean13 = explodedArchive11.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry14 = explodedArchive11.new FileEntry();
        java.lang.Class<?> wildcardClass15 = fileEntry14.getClass();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test13350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13350");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive0.getNestedArchives(entryFilter8);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive0.getFilteredArchive(entryRenameFilter10);
        java.util.jar.Manifest manifest12 = explodedArchive0.manifest;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(archive11);
        org.junit.Assert.assertNull(manifest12);
    }

    @Test
    public void test13351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13351");
        java.io.File file12 = null;
        java.io.File file13 = null;
        java.io.File file14 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive15.getNestedArchives(entryFilter17);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive15.getNestedArchives(entryFilter19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive15.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file14, asciiBytesMap21);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = explodedArchive22.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap23);
        explodedArchive24.filtered = true;
        java.io.File file27 = null;
        explodedArchive24.root = file27;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection29 = explodedArchive24.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive24.getEntries();
        java.util.jar.Manifest manifest31 = null;
        explodedArchive24.manifest = manifest31;
        java.io.File file33 = explodedArchive24.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive24.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap34);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter36 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList37 = explodedArchive35.getNestedArchives(entryFilter36);
        explodedArchive35.filtered = true;
        java.io.File file40 = null;
        explodedArchive35.root = file40;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler42 = explodedArchive35.new FilteredURLStreamHandler();
        java.net.URL uRL43 = new java.net.URL("/hi!:1", "/:100", 10, "hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", (java.net.URLStreamHandler) filteredURLStreamHandler42);
        java.net.URL uRL44 = new java.net.URL("[/hi!://:100/archive]", "[hi!://:100/hi!]:0", (int) '#', "hi!://[hi!://:100/hi!]:0archive://:10:100", (java.net.URLStreamHandler) filteredURLStreamHandler42);
        java.net.URL uRL45 = new java.net.URL("[hi!://:100/archive]:100://[/hi!://:100/archive]:0:1hi!://:100/hi!://:100/hi!", "hi!://:100/:100://[archive://:10archive]hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", 10, "[/hi!://:100/archive]:1", (java.net.URLStreamHandler) filteredURLStreamHandler42);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNotNull(asciiBytesMap23);
        org.junit.Assert.assertNotNull(entryCollection29);
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertNotNull(archiveList37);
        org.junit.Assert.assertEquals(uRL43.toString(), "/hi!:1://[/:100]:10hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]");
        org.junit.Assert.assertEquals(uRL44.toString(), "[/hi!://:100/archive]://[hi!://:100/hi!]:0:35hi!://[hi!://:100/hi!]:0archive://:10:100");
        org.junit.Assert.assertEquals(uRL45.toString(), "[hi!://:100/archive]:100://[/hi!://:100/archive]:0:1hi!://:100/hi!://:100/hi!://[hi!://:100/:100://[archive://:10archive]hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1]:10[/hi!://:100/archive]:1");
    }

    @Test
    public void test13352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13352");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str2 = explodedArchive1.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection3 = explodedArchive1.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter4 = null;
        org.springframework.boot.loader.archive.Archive archive5 = explodedArchive1.getFilteredArchive(entryRenameFilter4);
        java.io.File file6 = explodedArchive1.root;
        java.lang.String str7 = explodedArchive1.toString();
        boolean boolean8 = explodedArchive1.filtered;
        java.util.jar.Manifest manifest9 = null;
        explodedArchive1.manifest = manifest9;
        java.io.File file11 = null;
        explodedArchive1.root = file11;
        explodedArchive1.filtered = true;
        java.io.File file15 = null;
        java.io.File file16 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file18 = explodedArchive17.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive17.getNestedArchives(entryFilter19);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive17.getNestedArchives(entryFilter21);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = explodedArchive17.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file16, asciiBytesMap23);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive24.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file15, asciiBytesMap25);
        explodedArchive1.entries = asciiBytesMap25;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap25);
        java.util.jar.Manifest manifest29 = explodedArchive28.manifest;
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "archive" + "'", str2, "archive");
        org.junit.Assert.assertNotNull(entryCollection3);
        org.junit.Assert.assertNotNull(archive5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(asciiBytesMap23);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNull(manifest29);
    }

    @Test
    public void test13353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13353");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getProtocol();
        java.lang.String str14 = uRL9.getPath();
        java.lang.String str15 = uRL9.getAuthority();
        java.lang.String str16 = uRL9.getAuthority();
        java.lang.String str17 = uRL9.toExternalForm();
        java.lang.String str18 = uRL9.getRef();
        java.lang.String str19 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        java.util.jar.Manifest manifest27 = explodedArchive24.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler28 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL29 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler28);
        java.lang.String str30 = uRL29.getFile();
        int int31 = uRL29.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str38 = explodedArchive37.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection39 = explodedArchive37.getEntries();
        java.util.jar.Manifest manifest40 = explodedArchive37.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive37.new FilteredURLStreamHandler();
        java.net.URL uRL42 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.lang.String str43 = uRL42.getQuery();
        java.lang.String str44 = uRL42.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str51 = explodedArchive50.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection52 = explodedArchive50.getEntries();
        java.util.jar.Manifest manifest53 = explodedArchive50.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler54 = explodedArchive50.new FilteredURLStreamHandler();
        java.net.URL uRL55 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler54);
        java.net.URL uRL56 = new java.net.URL(uRL42, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler54);
        java.net.URL uRL57 = new java.net.URL(uRL29, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler54);
        java.lang.String str58 = uRL29.getPath();
        java.lang.String str59 = uRL29.getPath();
        boolean boolean60 = uRL9.equals((java.lang.Object) uRL29);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + ":100" + "'", str15, ":100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + ":100" + "'", str16, ":100");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!://:100" + "'", str17, "hi!://:100");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertNull(manifest27);
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertNotNull(entryCollection39);
        org.junit.Assert.assertNull(manifest40);
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "archive" + "'", str51, "archive");
        org.junit.Assert.assertNotNull(entryCollection52);
        org.junit.Assert.assertNull(manifest53);
        org.junit.Assert.assertEquals(uRL55.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL56.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL57.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test13354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13354");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.lang.String str17 = uRL16.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str23 = explodedArchive22.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection24 = explodedArchive22.getEntries();
        java.util.jar.Manifest manifest25 = explodedArchive22.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler26 = explodedArchive22.new FilteredURLStreamHandler();
        java.net.URL uRL27 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler26);
        java.lang.String str28 = uRL27.getQuery();
        java.lang.String str29 = uRL27.getHost();
        int int30 = uRL27.getPort();
        java.lang.String str31 = uRL27.getQuery();
        java.net.URL uRL33 = new java.net.URL(uRL27, "");
        java.io.File file35 = null;
        java.io.File file36 = null;
        java.io.File file37 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file39 = explodedArchive38.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter40 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList41 = explodedArchive38.getNestedArchives(entryFilter40);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive38.getNestedArchives(entryFilter42);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap44 = explodedArchive38.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive(file37, asciiBytesMap44);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap46 = explodedArchive45.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive(file36, asciiBytesMap46);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive(file35, asciiBytesMap46);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL(uRL33, "", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        boolean boolean51 = uRL16.sameFile(uRL33);
        java.lang.String str52 = uRL33.getAuthority();
        java.net.URL uRL54 = new java.net.URL(uRL33, "[://[archive://:10archive]:100archive://:10archive]:100");
        java.net.URL uRL56 = new java.net.URL(uRL54, "[/hi!://:100/archive]:32");
        java.net.Proxy proxy57 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection58 = uRL54.openConnection(proxy57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + ":100" + "'", str17, ":100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "archive" + "'", str23, "archive");
        org.junit.Assert.assertNotNull(entryCollection24);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(archiveList41);
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertNotNull(asciiBytesMap44);
        org.junit.Assert.assertNotNull(asciiBytesMap46);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + ":100" + "'", str52, ":100");
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:100");
        org.junit.Assert.assertEquals(uRL56.toString(), "hi!://:100/[://[archive://:10archive]:100archive://[/hi!://:100/archive]:32");
    }

    @Test
    public void test13355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13355");
        java.io.File file8 = null;
        java.io.File file9 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive17.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap18);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("", "archive://:10archive", (int) (short) 100, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.net.URL uRL22 = new java.net.URL("hi!", "://[archive://:10archive]:100archive://:10archive", 0, "hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str23 = uRL22.toExternalForm();
        java.lang.String str24 = uRL22.getQuery();
        java.lang.String str25 = uRL22.getPath();
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertEquals(uRL21.toString(), "://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1" + "'", str23, "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:1" + "'", str25, "hi!:1");
    }

    @Test
    public void test13356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13356");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL37.getUserInfo();
        java.net.URL uRL40 = new java.net.URL(uRL37, "hi!");
        java.lang.String str41 = uRL40.getHost();
        java.lang.String str42 = uRL40.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive44.filtered = true;
        explodedArchive44.filtered = true;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap49 = explodedArchive44.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler50 = explodedArchive44.new FilteredURLStreamHandler();
        java.net.URL uRL51 = new java.net.URL(uRL40, "hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        java.lang.String str52 = uRL51.getAuthority();
        java.lang.String str53 = uRL51.toExternalForm();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str59 = explodedArchive58.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection60 = explodedArchive58.getEntries();
        java.util.jar.Manifest manifest61 = explodedArchive58.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler62 = explodedArchive58.new FilteredURLStreamHandler();
        java.net.URL uRL63 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler62);
        java.lang.String str64 = uRL63.getFile();
        int int65 = uRL63.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str72 = explodedArchive71.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection73 = explodedArchive71.getEntries();
        java.util.jar.Manifest manifest74 = explodedArchive71.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler75 = explodedArchive71.new FilteredURLStreamHandler();
        java.net.URL uRL76 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler75);
        java.lang.String str77 = uRL76.getQuery();
        java.lang.String str78 = uRL76.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive84 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str85 = explodedArchive84.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection86 = explodedArchive84.getEntries();
        java.util.jar.Manifest manifest87 = explodedArchive84.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler88 = explodedArchive84.new FilteredURLStreamHandler();
        java.net.URL uRL89 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler88);
        java.net.URL uRL90 = new java.net.URL(uRL76, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler88);
        java.net.URL uRL91 = new java.net.URL(uRL63, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler88);
        java.lang.String str92 = uRL91.getUserInfo();
        java.lang.String str93 = uRL91.toExternalForm();
        boolean boolean94 = uRL51.sameFile(uRL91);
        java.lang.String str95 = uRL91.getAuthority();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + ":100" + "'", str42, ":100");
        org.junit.Assert.assertNotNull(asciiBytesMap49);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + ":100" + "'", str52, ":100");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!://:100/hi!://:100/hi!://:100" + "'", str53, "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "archive" + "'", str59, "archive");
        org.junit.Assert.assertNotNull(entryCollection60);
        org.junit.Assert.assertNull(manifest61);
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "archive" + "'", str72, "archive");
        org.junit.Assert.assertNotNull(entryCollection73);
        org.junit.Assert.assertNull(manifest74);
        org.junit.Assert.assertEquals(uRL76.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "archive" + "'", str85, "archive");
        org.junit.Assert.assertNotNull(entryCollection86);
        org.junit.Assert.assertNull(manifest87);
        org.junit.Assert.assertEquals(uRL89.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL90.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL91.toString(), "hi!://:100/archive");
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "hi!://:100/archive" + "'", str93, "hi!://:100/archive");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + ":100" + "'", str95, ":100");
    }

    @Test
    public void test13357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13357");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.lang.String str7 = explodedArchive1.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive1.new FilteredURLStreamHandler();
        java.io.File file9 = null;
        java.io.File file10 = null;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap21);
        explodedArchive1.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap21);
        java.util.jar.Manifest manifest27 = explodedArchive26.getManifest();
        explodedArchive26.filtered = true;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter30 = null;
        org.springframework.boot.loader.archive.Archive archive31 = explodedArchive26.getFilteredArchive(entryRenameFilter30);
        java.io.File file32 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file34 = explodedArchive33.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive33.getNestedArchives(entryFilter35);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter37 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList38 = explodedArchive33.getNestedArchives(entryFilter37);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive33.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file32, asciiBytesMap39);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection41 = explodedArchive40.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler42 = explodedArchive40.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry43 = explodedArchive40.new FileEntry();
        java.io.File file44 = fileEntry43.getFile();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive45 = explodedArchive26.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNull(manifest27);
        org.junit.Assert.assertNotNull(archive31);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertNotNull(archiveList38);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertNotNull(entryCollection41);
        org.junit.Assert.assertNull(file44);
    }

    @Test
    public void test13358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13358");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive3.getNestedArchives(entryFilter5);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive3.getNestedArchives(entryFilter7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap11);
        explodedArchive12.filtered = true;
        java.io.File file15 = null;
        explodedArchive12.root = file15;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive12.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap18);
        java.io.File file20 = explodedArchive19.root;
        java.io.File file21 = null;
        explodedArchive19.root = file21;
        java.util.jar.Manifest manifest23 = explodedArchive19.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive24.getNestedArchives(entryFilter26);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry28 = explodedArchive24.new FileEntry();
        java.io.File file29 = fileEntry28.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes30 = null;
        fileEntry28.name = asciiBytes30;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes32 = fileEntry28.name;
        java.io.File file33 = fileEntry28.getFile();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive34 = explodedArchive19.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(asciiBytes32);
        org.junit.Assert.assertNull(file33);
    }

    @Test
    public void test13359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13359");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive0.entries;
        java.util.jar.Manifest manifest9 = explodedArchive0.getManifest();
        java.io.File file10 = null;
        explodedArchive0.root = file10;
        boolean boolean12 = explodedArchive0.filtered;
        java.io.File file13 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter14 = null;
        org.springframework.boot.loader.archive.Archive archive15 = explodedArchive0.getFilteredArchive(entryRenameFilter14);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter16 = null;
        org.springframework.boot.loader.archive.Archive archive17 = explodedArchive0.getFilteredArchive(entryRenameFilter16);
        explodedArchive0.filtered = false;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archive15);
        org.junit.Assert.assertNotNull(archive17);
    }

    @Test
    public void test13360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13360");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str19 = explodedArchive18.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection20 = explodedArchive18.getEntries();
        java.util.jar.Manifest manifest21 = explodedArchive18.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive18.new FilteredURLStreamHandler();
        java.net.URL uRL23 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler22);
        java.lang.String str24 = uRL23.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str39 = explodedArchive38.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection40 = explodedArchive38.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive38.new FilteredURLStreamHandler();
        java.net.URL uRL42 = new java.net.URL(uRL35, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.net.URL uRL43 = new java.net.URL(uRL23, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.net.URL uRL44 = new java.net.URL(uRL9, "/archive", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.lang.String str45 = uRL44.getHost();
        java.lang.String str46 = uRL44.getPath();
        java.lang.String str47 = uRL44.toExternalForm();
        java.net.Proxy proxy48 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection49 = uRL44.openConnection(proxy48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: proxy can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "archive" + "'", str19, "archive");
        org.junit.Assert.assertNotNull(entryCollection20);
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "archive" + "'", str39, "archive");
        org.junit.Assert.assertNotNull(entryCollection40);
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/archive" + "'", str46, "/archive");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!://:100/archive" + "'", str47, "hi!://:100/archive");
    }

    @Test
    public void test13361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13361");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("hi!://:100/:100", ":1", "hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://:100/:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13362");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        java.util.jar.Manifest manifest14 = explodedArchive11.getManifest();
        java.util.jar.Manifest manifest15 = explodedArchive11.manifest;
        java.io.File file16 = null;
        explodedArchive11.root = file16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry18 = explodedArchive11.new FileEntry();
        java.io.File file19 = null;
        fileEntry18.file = file19;
        java.io.File file21 = null;
        fileEntry18.file = file21;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes23 = null;
        fileEntry18.name = asciiBytes23;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes25 = null;
        fileEntry18.name = asciiBytes25;
        java.io.File file27 = null;
        fileEntry18.file = file27;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(manifest14);
        org.junit.Assert.assertNull(manifest15);
    }

    @Test
    public void test13363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13363");
        java.io.File file4 = null;
        java.io.File file5 = null;
        java.io.File file6 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive7.getNestedArchives(entryFilter9);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive7.getNestedArchives(entryFilter11);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive7.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive(file6, asciiBytesMap13);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive(file5, asciiBytesMap13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive15.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap16);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler18 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL19 = new java.net.URL("[archive://:10archive]", "/archive://[hi!://:100/hi!]:1/hi!", 97, "hi!://:100/hi!://:100/hi!://hi!", (java.net.URLStreamHandler) filteredURLStreamHandler18);
        java.lang.String str20 = uRL19.toExternalForm();
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(asciiBytesMap13);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertEquals(uRL19.toString(), "[archive://:10archive]://[/archive://[hi!://:100/hi!]:1/hi!]:97hi!://:100/hi!://:100/hi!://hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[archive://:10archive]://[/archive://[hi!://:100/hi!]:1/hi!]:97hi!://:100/hi!://:100/hi!://hi!" + "'", str20, "[archive://:10archive]://[/archive://[hi!://:100/hi!]:1/hi!]:97hi!://:100/hi!://:100/hi!://hi!");
    }

    @Test
    public void test13364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13364");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.lang.String str8 = explodedArchive2.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive2.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest10 = explodedArchive2.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive2.entries;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap12);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap12);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive14.entries;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNotNull(asciiBytesMap12);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
    }

    @Test
    public void test13365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13365");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        java.util.jar.Manifest manifest15 = explodedArchive12.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL17 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler16);
        java.lang.String str18 = uRL17.getQuery();
        java.lang.String str19 = uRL17.getHost();
        int int20 = uRL17.getPort();
        java.lang.String str21 = uRL17.getQuery();
        java.net.URL uRL23 = new java.net.URL(uRL17, "");
        java.lang.String str24 = uRL23.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str39 = explodedArchive38.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection40 = explodedArchive38.getEntries();
        java.util.jar.Manifest manifest41 = explodedArchive38.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler42 = explodedArchive38.new FilteredURLStreamHandler();
        java.net.URL uRL43 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler42);
        java.lang.String str44 = uRL43.getQuery();
        java.lang.String str45 = uRL43.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str52 = explodedArchive51.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection53 = explodedArchive51.getEntries();
        java.util.jar.Manifest manifest54 = explodedArchive51.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler55 = explodedArchive51.new FilteredURLStreamHandler();
        java.net.URL uRL56 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        java.net.URL uRL57 = new java.net.URL(uRL43, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler55);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file60 = explodedArchive59.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter61 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList62 = explodedArchive59.getNestedArchives(entryFilter61);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry63 = explodedArchive59.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler64 = explodedArchive59.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler65 = explodedArchive59.new FilteredURLStreamHandler();
        java.net.URL uRL66 = new java.net.URL(uRL43, "hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.net.URL uRL67 = new java.net.URL("hi!://:100/hi!", "hi!://:100/:100", (int) (short) 100, "/archive://[hi!://:100/hi!]:1/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.net.URL uRL68 = new java.net.URL("[hi!://:100/archive]:100", "[/hi!://:100/archive]:0", 1, "hi!://:100/hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.net.URL uRL69 = new java.net.URL(uRL23, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.net.URL uRL70 = new java.net.URL("://[archive://:10archive]:100archive://:10archive", "hi!://:100/hi!", 0, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.net.URL uRL71 = new java.net.URL("hi!://:100/[hi!://:100/hi!]", "[://[archive://:10archive]:100archive://:10archive]:100://[/hi!://:100/archive]:0:35[archive://:10archive]://[://[archive://:10archive]:100archive://:10archive]:52/hi!:1", (int) (short) 1, "hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!://[hi!://:100/hi!]:97hi!://:100/://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "archive" + "'", str39, "archive");
        org.junit.Assert.assertNotNull(entryCollection40);
        org.junit.Assert.assertNull(manifest41);
        org.junit.Assert.assertEquals(uRL43.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "archive" + "'", str52, "archive");
        org.junit.Assert.assertNotNull(entryCollection53);
        org.junit.Assert.assertNull(manifest54);
        org.junit.Assert.assertEquals(uRL56.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL57.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(file60);
        org.junit.Assert.assertNotNull(archiveList62);
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!");
        org.junit.Assert.assertEquals(uRL68.toString(), "[hi!://:100/archive]:100://[/hi!://:100/archive]:0:1hi!://:100/hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL69.toString(), "hi!://:100/hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL70.toString(), "://[archive://:10archive]:100archive://:10archive://[hi!://:100/hi!]:0hi!");
        org.junit.Assert.assertEquals(uRL71.toString(), "hi!://:100/[hi!://:100/hi!]://[://[archive://:10archive]:100archive://:10archive]:100://[/hi!://:100/archive]:0:35[archive://:10archive]://[://[archive://:10archive]:100archive://:10archive]:52/hi!:1:1hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!://[hi!://:100/hi!]:97hi!://:100/://[archive://:10archive]:100archive://:10archive");
    }

    @Test
    public void test13366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13366");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str15 = explodedArchive14.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection16 = explodedArchive14.getEntries();
        java.util.jar.Manifest manifest17 = explodedArchive14.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler18 = explodedArchive14.new FilteredURLStreamHandler();
        java.net.URL uRL19 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler18);
        java.lang.String str20 = uRL19.getQuery();
        java.lang.String str21 = uRL19.getPath();
        boolean boolean22 = uRL9.sameFile(uRL19);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getQuery();
        java.lang.String str39 = uRL37.getRef();
        int int40 = uRL37.getPort();
        java.lang.String str41 = uRL37.getProtocol();
        java.lang.String str42 = uRL37.getPath();
        java.lang.String str43 = uRL37.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str50 = explodedArchive49.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection51 = explodedArchive49.getEntries();
        java.util.jar.Manifest manifest52 = explodedArchive49.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler53 = explodedArchive49.new FilteredURLStreamHandler();
        java.net.URL uRL54 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        java.lang.String str55 = uRL54.getFile();
        int int56 = uRL54.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str63 = explodedArchive62.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection64 = explodedArchive62.getEntries();
        java.util.jar.Manifest manifest65 = explodedArchive62.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler66 = explodedArchive62.new FilteredURLStreamHandler();
        java.net.URL uRL67 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler66);
        java.lang.String str68 = uRL67.getQuery();
        java.lang.String str69 = uRL67.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str76 = explodedArchive75.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection77 = explodedArchive75.getEntries();
        java.util.jar.Manifest manifest78 = explodedArchive75.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler79 = explodedArchive75.new FilteredURLStreamHandler();
        java.net.URL uRL80 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        java.net.URL uRL81 = new java.net.URL(uRL67, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        java.net.URL uRL82 = new java.net.URL(uRL54, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        java.net.URL uRL83 = new java.net.URL(uRL37, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        java.net.URL uRL84 = new java.net.URL(":100", "hi!://:100/hi!", (int) (byte) 0, "archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        java.net.URL uRL85 = new java.net.URL(uRL9, "://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        java.net.URL uRL87 = new java.net.URL(uRL9, "[://[archive://:10archive]:100archive://:10archive]:0");
        java.lang.String str88 = uRL9.getHost();
        java.lang.String str89 = uRL9.getFile();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "archive" + "'", str15, "archive");
        org.junit.Assert.assertNotNull(entryCollection16);
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertEquals(uRL19.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + ":100" + "'", str43, ":100");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "archive" + "'", str50, "archive");
        org.junit.Assert.assertNotNull(entryCollection51);
        org.junit.Assert.assertNull(manifest52);
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "archive" + "'", str63, "archive");
        org.junit.Assert.assertNotNull(entryCollection64);
        org.junit.Assert.assertNull(manifest65);
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "archive" + "'", str76, "archive");
        org.junit.Assert.assertNotNull(entryCollection77);
        org.junit.Assert.assertNull(manifest78);
        org.junit.Assert.assertEquals(uRL80.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL81.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL82.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL83.toString(), "hi!://:100/hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL84.toString(), ":100://[hi!://:100/hi!]:0archive://:10archive");
        org.junit.Assert.assertEquals(uRL85.toString(), "hi!://hi!:1/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL87.toString(), "hi!://hi!:1/[://[archive://:10archive]:100archive://:10archive]:0");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "hi!" + "'", str88, "hi!");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "hi!" + "'", str89, "hi!");
    }

    @Test
    public void test13367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13367");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.toExternalForm();
        java.lang.String str14 = uRL9.getRef();
        java.lang.String str15 = uRL9.getProtocol();
        java.net.URL uRL17 = new java.net.URL(uRL9, "archive");
        java.lang.String str18 = uRL17.getFile();
        java.lang.String str19 = uRL17.toExternalForm();
        java.lang.String str20 = uRL17.toExternalForm();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str27 = explodedArchive26.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection28 = explodedArchive26.getEntries();
        java.util.jar.Manifest manifest29 = explodedArchive26.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler30 = explodedArchive26.new FilteredURLStreamHandler();
        java.net.URL uRL31 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler30);
        java.lang.String str32 = uRL31.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str43 = explodedArchive42.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection44 = explodedArchive42.getEntries();
        java.util.jar.Manifest manifest45 = explodedArchive42.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler46 = explodedArchive42.new FilteredURLStreamHandler();
        java.net.URL uRL47 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler46);
        java.lang.String str48 = uRL47.getQuery();
        java.lang.String str49 = uRL47.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str56 = explodedArchive55.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection57 = explodedArchive55.getEntries();
        java.util.jar.Manifest manifest58 = explodedArchive55.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler59 = explodedArchive55.new FilteredURLStreamHandler();
        java.net.URL uRL60 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.net.URL uRL61 = new java.net.URL(uRL47, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.net.URL uRL62 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.net.URL uRL63 = new java.net.URL(uRL31, "", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.lang.String str64 = uRL63.getProtocol();
        int int65 = uRL63.getDefaultPort();
        java.lang.String str66 = uRL63.getHost();
        java.io.File file72 = null;
        java.io.File file73 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive74 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file75 = explodedArchive74.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter76 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList77 = explodedArchive74.getNestedArchives(entryFilter76);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter78 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList79 = explodedArchive74.getNestedArchives(entryFilter78);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap80 = explodedArchive74.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive81 = new org.springframework.boot.loader.archive.ExplodedArchive(file73, asciiBytesMap80);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap82 = explodedArchive81.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive83 = new org.springframework.boot.loader.archive.ExplodedArchive(file72, asciiBytesMap82);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler84 = explodedArchive83.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler85 = explodedArchive83.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter86 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList87 = explodedArchive83.getNestedArchives(entryFilter86);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler88 = explodedArchive83.new FilteredURLStreamHandler();
        java.net.URL uRL89 = new java.net.URL("archive://:10:100", "/archive:///archive:0hi!://:100", (int) (byte) 1, "/archive", (java.net.URLStreamHandler) filteredURLStreamHandler88);
        java.net.URL uRL90 = new java.net.URL(uRL63, "hi!://:100/hi!://:100/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler88);
        java.net.URL uRL91 = new java.net.URL(uRL17, "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://:100/hi!://:100]:100hi!://:100/hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler88);
        int int92 = uRL17.getDefaultPort();
        java.lang.String str93 = uRL17.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100" + "'", str13, "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "/archive" + "'", str18, "/archive");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!://:100/archive" + "'", str19, "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!://:100/archive" + "'", str20, "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "archive" + "'", str27, "archive");
        org.junit.Assert.assertNotNull(entryCollection28);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertEquals(uRL31.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "archive" + "'", str43, "archive");
        org.junit.Assert.assertNotNull(entryCollection44);
        org.junit.Assert.assertNull(manifest45);
        org.junit.Assert.assertEquals(uRL47.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "archive" + "'", str56, "archive");
        org.junit.Assert.assertNotNull(entryCollection57);
        org.junit.Assert.assertNull(manifest58);
        org.junit.Assert.assertEquals(uRL60.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL62.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertNotNull(archiveList77);
        org.junit.Assert.assertNotNull(archiveList79);
        org.junit.Assert.assertNotNull(asciiBytesMap80);
        org.junit.Assert.assertNotNull(asciiBytesMap82);
        org.junit.Assert.assertNotNull(archiveList87);
        org.junit.Assert.assertEquals(uRL89.toString(), "archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive");
        org.junit.Assert.assertEquals(uRL90.toString(), "hi!://:100/hi!://:100/hi!://:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals(uRL91.toString(), "hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://:100/hi!://:100]:100hi!://:100/hi!:1");
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNull(str93);
    }

    @Test
    public void test13368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13368");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getAuthority();
        java.lang.String str25 = uRL9.getRef();
        java.lang.String str26 = uRL9.getProtocol();
        java.lang.String str27 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getPath();
        java.lang.String str39 = uRL37.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection47 = explodedArchive45.getEntries();
        java.util.jar.Manifest manifest48 = explodedArchive45.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.net.URL uRL51 = new java.net.URL(uRL37, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter59 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList60 = explodedArchive57.getNestedArchives(entryFilter59);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection61 = explodedArchive57.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap62 = explodedArchive57.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive57.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL("/archive", "hi!://:100/hi!", (int) (byte) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL65 = new java.net.URL(uRL51, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        boolean boolean66 = uRL9.sameFile(uRL65);
        java.lang.String str67 = uRL65.getFile();
        java.lang.String str68 = uRL65.getRef();
        java.net.URL uRL70 = new java.net.URL(uRL65, "/:100");
        java.lang.String str71 = uRL70.getRef();
        int int72 = uRL70.getPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertNotNull(entryCollection47);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(archiveList60);
        org.junit.Assert.assertNotNull(entryCollection61);
        org.junit.Assert.assertNotNull(asciiBytesMap62);
        org.junit.Assert.assertEquals(uRL64.toString(), "/archive://[hi!://:100/hi!]:1hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "/hi!://:100" + "'", str67, "/hi!://:100");
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertEquals(uRL70.toString(), "hi!://:100/:100");
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 100 + "'", int72 == 100);
    }

    @Test
    public void test13369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13369");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.jar.Manifest manifest4 = null;
        explodedArchive0.manifest = manifest4;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry6 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter7 = null;
        org.springframework.boot.loader.archive.Archive archive8 = explodedArchive0.getFilteredArchive(entryRenameFilter7);
        java.util.jar.Manifest manifest9 = null;
        explodedArchive0.manifest = manifest9;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archive8);
    }

    @Test
    public void test13370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13370");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str42 = uRL9.getQuery();
        java.lang.String str43 = uRL9.getRef();
        java.net.URL uRL45 = new java.net.URL(uRL9, "/hi!");
        java.lang.String str46 = uRL9.getQuery();
        java.lang.String str47 = uRL9.getRef();
        int int48 = uRL9.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
    }

    @Test
    public void test13371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13371");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL1 = new java.net.URL("hi!://:100/hi!://[hi!://:100/hi!]:0archive://:10:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: hi!://:100/hi!://[hi!://:100/hi!]:0archive://:10:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13372");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        explodedArchive2.filtered = false;
        java.util.jar.Manifest manifest8 = explodedArchive2.manifest;
        java.io.File file9 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive17.entries;
        explodedArchive2.entries = asciiBytesMap18;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap18);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap18);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive21.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest23 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter24 = null;
        org.springframework.boot.loader.archive.Archive archive25 = explodedArchive21.getFilteredArchive(entryRenameFilter24);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertNotNull(archive25);
    }

    @Test
    public void test13373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13373");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        java.io.File file6 = fileEntry4.file;
        java.io.File file7 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry4.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes9 = null;
        fileEntry4.name = asciiBytes9;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = fileEntry4.getName();
        java.io.File file12 = fileEntry4.file;
        java.io.File file13 = null;
        fileEntry4.file = file13;
        java.io.File file15 = fileEntry4.getFile();
        java.io.File file16 = fileEntry4.getFile();
        java.io.File file17 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes18 = fileEntry4.name;
        java.io.File file19 = fileEntry4.getFile();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(asciiBytes11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(asciiBytes18);
        org.junit.Assert.assertNull(file19);
    }

    @Test
    public void test13374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13374");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("archive://:0hi!://:100/hi!", "hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://[hi!://:100/:100]:100", "/archive:///archive:0/:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: archive://:0hi!://:100/hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13375");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive4.getNestedArchives(entryFilter8);
        java.lang.String str10 = explodedArchive4.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler11 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL12 = new java.net.URL("hi!://:100/archive", "[hi!://:100/hi!]:0", (-1), "[hi!://:100/:100]:100", (java.net.URLStreamHandler) filteredURLStreamHandler11);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str30 = explodedArchive29.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection31 = explodedArchive29.getEntries();
        java.util.jar.Manifest manifest32 = explodedArchive29.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.lang.String str35 = uRL34.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str38 = explodedArchive37.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection39 = explodedArchive37.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler40 = explodedArchive37.new FilteredURLStreamHandler();
        java.net.URL uRL41 = new java.net.URL(uRL34, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler40);
        java.net.URL uRL42 = new java.net.URL(uRL22, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler40);
        java.lang.String str43 = uRL22.getFile();
        java.lang.String str44 = uRL22.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str50 = explodedArchive49.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection51 = explodedArchive49.getEntries();
        java.util.jar.Manifest manifest52 = explodedArchive49.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler53 = explodedArchive49.new FilteredURLStreamHandler();
        java.net.URL uRL54 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler53);
        java.lang.String str55 = uRL54.getQuery();
        java.lang.String str56 = uRL54.getRef();
        java.lang.String str57 = uRL54.getRef();
        java.net.URL uRL59 = new java.net.URL(uRL54, "hi!");
        boolean boolean60 = uRL22.sameFile(uRL59);
        java.lang.String str61 = uRL59.getUserInfo();
        java.lang.String str62 = uRL59.toExternalForm();
        java.net.URL uRL64 = new java.net.URL(uRL59, "hi!://hi!:1hi!");
        java.lang.String str65 = uRL59.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str68 = explodedArchive67.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection69 = explodedArchive67.getEntries();
        java.io.File file70 = explodedArchive67.root;
        java.util.jar.Manifest manifest71 = explodedArchive67.getManifest();
        java.io.File file72 = null;
        explodedArchive67.root = file72;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry74 = explodedArchive67.new FileEntry();
        java.lang.String str75 = explodedArchive67.toString();
        java.util.jar.Manifest manifest76 = explodedArchive67.getManifest();
        explodedArchive67.filtered = true;
        java.io.File file79 = null;
        explodedArchive67.root = file79;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler81 = explodedArchive67.new FilteredURLStreamHandler();
        java.net.URL uRL82 = new java.net.URL(uRL59, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler81);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection83 = filteredURLStreamHandler11.openConnection(uRL82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "archive" + "'", str10, "archive");
        org.junit.Assert.assertEquals(uRL12.toString(), "hi!://:100/archive://[hi!://:100/hi!]:0[hi!://:100/:100]:100");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "archive" + "'", str30, "archive");
        org.junit.Assert.assertNotNull(entryCollection31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertEquals(uRL34.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertNotNull(entryCollection39);
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "archive" + "'", str50, "archive");
        org.junit.Assert.assertNotNull(entryCollection51);
        org.junit.Assert.assertNull(manifest52);
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertEquals(uRL59.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!://:100/hi!" + "'", str62, "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100/hi!://hi!:1hi!");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "archive" + "'", str68, "archive");
        org.junit.Assert.assertNotNull(entryCollection69);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNull(manifest71);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "archive" + "'", str75, "archive");
        org.junit.Assert.assertNull(manifest76);
        org.junit.Assert.assertEquals(uRL82.toString(), "hi!://:100/hi!://:100/archive");
    }

    @Test
    public void test13376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13376");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        java.io.File file3 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive4.getNestedArchives(entryFilter8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive4.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file3, asciiBytesMap10);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = explodedArchive11.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap12);
        explodedArchive13.filtered = true;
        java.io.File file16 = null;
        explodedArchive13.root = file16;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry18 = explodedArchive13.new FileEntry();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive13.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap20);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap20);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(asciiBytesMap12);
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
    }

    @Test
    public void test13377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13377");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getQuery();
        int int25 = uRL9.getPort();
        int int26 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getPath();
        java.lang.String str39 = uRL37.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection47 = explodedArchive45.getEntries();
        java.util.jar.Manifest manifest48 = explodedArchive45.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.net.URL uRL51 = new java.net.URL(uRL37, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file58 = explodedArchive57.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter59 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList60 = explodedArchive57.getNestedArchives(entryFilter59);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection61 = explodedArchive57.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap62 = explodedArchive57.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler63 = explodedArchive57.new FilteredURLStreamHandler();
        java.net.URL uRL64 = new java.net.URL("/archive", "hi!://:100/hi!", (int) (byte) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL65 = new java.net.URL(uRL51, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.net.URL uRL66 = new java.net.URL(uRL9, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler63);
        java.lang.String str67 = uRL9.getProtocol();
        java.net.URLStreamHandler uRLStreamHandler69 = null;
        java.net.URL uRL70 = new java.net.URL(uRL9, "/[hi!://:100/hi!]", uRLStreamHandler69);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI71 = uRL9.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertNotNull(entryCollection47);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertNull(file58);
        org.junit.Assert.assertNotNull(archiveList60);
        org.junit.Assert.assertNotNull(entryCollection61);
        org.junit.Assert.assertNotNull(asciiBytesMap62);
        org.junit.Assert.assertEquals(uRL64.toString(), "/archive://[hi!://:100/hi!]:1hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertEquals(uRL70.toString(), "hi!://:100/[hi!://:100/hi!]");
    }

    @Test
    public void test13378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13378");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("hi!://:100/hi!://:100/hi!://:100/hi!://:100", "hi!://:100/hi!://:100/hi!", (int) (short) 1, "hi!://:100/[hi!://:100/hi!]");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://:100/hi!://:100/hi!://:100/hi!://:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13379");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getFile();
        int int15 = uRL13.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getQuery();
        java.lang.String str28 = uRL26.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str35 = explodedArchive34.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection36 = explodedArchive34.getEntries();
        java.util.jar.Manifest manifest37 = explodedArchive34.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL40 = new java.net.URL(uRL26, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL41 = new java.net.URL(uRL13, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str42 = uRL13.toExternalForm();
        java.lang.String str43 = uRL13.getQuery();
        java.lang.String str44 = uRL13.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str55 = explodedArchive54.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection56 = explodedArchive54.getEntries();
        java.util.jar.Manifest manifest57 = explodedArchive54.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler58 = explodedArchive54.new FilteredURLStreamHandler();
        java.net.URL uRL59 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler58);
        java.lang.String str60 = uRL59.getQuery();
        java.lang.String str61 = uRL59.getHost();
        int int62 = uRL59.getPort();
        java.lang.String str63 = uRL59.getQuery();
        java.net.URL uRL65 = new java.net.URL(uRL59, "");
        java.io.File file67 = null;
        java.io.File file68 = null;
        java.io.File file69 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file71 = explodedArchive70.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter72 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList73 = explodedArchive70.getNestedArchives(entryFilter72);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter74 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList75 = explodedArchive70.getNestedArchives(entryFilter74);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap76 = explodedArchive70.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive77 = new org.springframework.boot.loader.archive.ExplodedArchive(file69, asciiBytesMap76);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap78 = explodedArchive77.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive79 = new org.springframework.boot.loader.archive.ExplodedArchive(file68, asciiBytesMap78);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive80 = new org.springframework.boot.loader.archive.ExplodedArchive(file67, asciiBytesMap78);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler81 = explodedArchive80.new FilteredURLStreamHandler();
        java.net.URL uRL82 = new java.net.URL(uRL65, "", (java.net.URLStreamHandler) filteredURLStreamHandler81);
        java.net.URL uRL83 = new java.net.URL("hi!", "hi!://:100/hi!", (int) (short) 0, "archive://:10:100", (java.net.URLStreamHandler) filteredURLStreamHandler81);
        java.net.URL uRL84 = new java.net.URL(uRL13, "/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler81);
        java.net.URL uRL85 = new java.net.URL("[hi!://:100/archive]:100://[/hi!://:100/archive]:0:1hi!://:100/hi!://:100/hi!", "/hi!://:100/archive:///archive:0hi!://[archive://:10archive]:100", (int) (byte) -1, "hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/archive", (java.net.URLStreamHandler) filteredURLStreamHandler81);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "archive" + "'", str35, "archive");
        org.junit.Assert.assertNotNull(entryCollection36);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!://:100" + "'", str42, "hi!://:100");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "archive" + "'", str55, "archive");
        org.junit.Assert.assertNotNull(entryCollection56);
        org.junit.Assert.assertNull(manifest57);
        org.junit.Assert.assertEquals(uRL59.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 100 + "'", int62 == 100);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertEquals(uRL65.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNotNull(archiveList73);
        org.junit.Assert.assertNotNull(archiveList75);
        org.junit.Assert.assertNotNull(asciiBytesMap76);
        org.junit.Assert.assertNotNull(asciiBytesMap78);
        org.junit.Assert.assertEquals(uRL82.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL83.toString(), "hi!://[hi!://:100/hi!]:0archive://:10:100");
        org.junit.Assert.assertEquals(uRL84.toString(), "hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals(uRL85.toString(), "[hi!://:100/archive]:100://[/hi!://:100/archive]:0:1hi!://:100/hi!://:100/hi!://[/hi!://:100/archive:///archive:0hi!://[archive://:10archive]:100]hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/archive");
    }

    @Test
    public void test13380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13380");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive4.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("archive://:10archive", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str16 = explodedArchive15.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive15.getEntries();
        java.util.jar.Manifest manifest18 = explodedArchive15.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        java.lang.String str21 = uRL20.getQuery();
        java.lang.String str22 = uRL20.getRef();
        int int23 = uRL20.getPort();
        java.lang.String str24 = uRL20.getProtocol();
        java.lang.String str25 = uRL20.getPath();
        java.lang.String str26 = uRL20.getPath();
        java.lang.String str27 = uRL20.getUserInfo();
        java.lang.String str28 = uRL20.getProtocol();
        boolean boolean29 = uRL10.sameFile(uRL20);
        java.net.URI uRI30 = uRL10.toURI();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file37 = explodedArchive36.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter38 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList39 = explodedArchive36.getNestedArchives(entryFilter38);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter40 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList41 = explodedArchive36.getNestedArchives(entryFilter40);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap42 = explodedArchive36.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter43 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList44 = explodedArchive36.getNestedArchives(entryFilter43);
        java.io.File file45 = null;
        explodedArchive36.root = file45;
        java.io.File file47 = null;
        explodedArchive36.root = file47;
        java.util.jar.Manifest manifest49 = explodedArchive36.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter50 = null;
        org.springframework.boot.loader.archive.Archive archive51 = explodedArchive36.getFilteredArchive(entryRenameFilter50);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter52 = null;
        org.springframework.boot.loader.archive.Archive archive53 = explodedArchive36.getFilteredArchive(entryRenameFilter52);
        explodedArchive36.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler56 = explodedArchive36.new FilteredURLStreamHandler();
        java.net.URL uRL57 = new java.net.URL("[archive://:10archive]", "[hi!://:100/hi!]", (int) (byte) 10, "[/:100]:0", (java.net.URLStreamHandler) filteredURLStreamHandler56);
        java.net.URL uRL58 = new java.net.URL(uRL10, "", (java.net.URLStreamHandler) filteredURLStreamHandler56);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str64 = explodedArchive63.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap65 = null;
        explodedArchive63.entries = asciiBytesMap65;
        java.util.jar.Manifest manifest67 = null;
        explodedArchive63.manifest = manifest67;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler69 = explodedArchive63.new FilteredURLStreamHandler();
        java.net.URL uRL70 = new java.net.URL("hi!://:100/hi!", "hi!://:100/hi!", 0, "hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler69);
        java.lang.String str71 = uRL70.getQuery();
        java.lang.String str72 = uRL70.getPath();
        java.lang.String str73 = uRL70.getUserInfo();
        java.lang.String str74 = uRL70.getProtocol();
        boolean boolean75 = uRL10.equals((java.lang.Object) str74);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertEquals(uRL10.toString(), "archive://:10archive://:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "archive" + "'", str16, "archive");
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertEquals(uRL20.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(uRI30);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(archiveList39);
        org.junit.Assert.assertNotNull(archiveList41);
        org.junit.Assert.assertNotNull(asciiBytesMap42);
        org.junit.Assert.assertNotNull(archiveList44);
        org.junit.Assert.assertNull(manifest49);
        org.junit.Assert.assertNotNull(archive51);
        org.junit.Assert.assertNotNull(archive53);
        org.junit.Assert.assertEquals(uRL57.toString(), "[archive://:10archive]://[hi!://:100/hi!]:10[/:100]:0");
        org.junit.Assert.assertEquals(uRL58.toString(), "archive://:10archive://:100");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "archive" + "'", str64, "archive");
        org.junit.Assert.assertEquals(uRL70.toString(), "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!://:100/hi!" + "'", str72, "hi!://:100/hi!");
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!://:100/hi!" + "'", str74, "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test13381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13381");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection4 = explodedArchive0.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap5 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
        java.util.jar.Manifest manifest8 = explodedArchive0.manifest;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.lang.String str16 = explodedArchive10.toString();
        java.util.jar.Manifest manifest17 = explodedArchive10.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive10.entries;
        java.util.jar.Manifest manifest19 = explodedArchive10.getManifest();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive10.entries;
        explodedArchive0.entries = asciiBytesMap20;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(entryCollection4);
        org.junit.Assert.assertNotNull(asciiBytesMap5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "archive" + "'", str16, "archive");
        org.junit.Assert.assertNull(manifest17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
    }

    @Test
    public void test13382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13382");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.root;
        java.io.File file18 = explodedArchive16.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL("/archive://[hi!://:100/hi!]:1/hi!", "hi!://:100", (int) 'a', "/hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        java.net.URL uRL21 = new java.net.URL("/archive://[hi!://:100/hi!]:1/hi!", "/hi!://:100/archive", (int) ' ', "hi!://:100/hi!://hi!:1hi!", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        java.net.URL uRL22 = new java.net.URL("hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!", "[:100]", 100, "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        java.net.URL uRL23 = new java.net.URL("/archive://[hi!://:100/hi!]:1hi!://:100/archive", "[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:1", 32, "://[hi!://:100/:100]:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI24 = uRL23.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in path at index 11: /archive://[hi!://:100/hi!]:1hi!://:100/archive://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:1:32://[hi!://:100/:100]:100/hi!://:100");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertEquals(uRL20.toString(), "/archive://[hi!://:100/hi!]:1/hi!://[hi!://:100]:97/hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL21.toString(), "/archive://[hi!://:100/hi!]:1/hi!://[/hi!://:100/archive]:32hi!://:100/hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!://[:100]:100hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL23.toString(), "/archive://[hi!://:100/hi!]:1hi!://:100/archive://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:1:32://[hi!://:100/:100]:100/hi!://:100");
    }

    @Test
    public void test13383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13383");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.io.File file9 = null;
        java.io.File file10 = null;
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap20);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap20);
        explodedArchive0.entries = asciiBytesMap20;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive0.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive0.new FilteredURLStreamHandler();
        java.lang.String str26 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest28 = null;
        explodedArchive0.manifest = manifest28;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "archive" + "'", str26, "archive");
    }

    @Test
    public void test13384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13384");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL(":100://[hi!://:100/hi!]:100hi!://:100/archive", "/hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://[hi!://:100/:100]:100", (int) '4', "://[/archive://[hi!://:100/hi!]:1/hi!]:0[hi!://:100/hi!]");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: :100://[hi!://:100/hi!]:100hi!://:100/archive");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13385");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str16 = explodedArchive15.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive15.getEntries();
        java.util.jar.Manifest manifest18 = explodedArchive15.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        java.lang.String str21 = uRL20.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str28 = explodedArchive27.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection29 = explodedArchive27.getEntries();
        java.util.jar.Manifest manifest30 = explodedArchive27.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive27.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str33 = uRL32.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str36 = explodedArchive35.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection37 = explodedArchive35.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive35.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL(uRL32, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL40 = new java.net.URL(uRL20, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.net.URL uRL41 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str42 = uRL41.getRef();
        java.lang.String str43 = uRL41.getHost();
        int int44 = uRL41.getDefaultPort();
        java.lang.String str45 = uRL41.getAuthority();
        int int46 = uRL41.getDefaultPort();
        java.net.URL uRL48 = new java.net.URL(uRL41, "");
        java.lang.String str49 = uRL41.getAuthority();
        java.lang.String str50 = uRL41.getAuthority();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "archive" + "'", str16, "archive");
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertEquals(uRL20.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "archive" + "'", str28, "archive");
        org.junit.Assert.assertNotNull(entryCollection29);
        org.junit.Assert.assertNull(manifest30);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "archive" + "'", str36, "archive");
        org.junit.Assert.assertNotNull(entryCollection37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + ":100" + "'", str45, ":100");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + ":100" + "'", str49, ":100");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + ":100" + "'", str50, ":100");
    }

    @Test
    public void test13386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13386");
        java.io.File file8 = null;
        java.io.File file9 = null;
        java.io.File file10 = null;
        java.io.File file11 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive12.getNestedArchives(entryFilter19);
        java.io.File file21 = null;
        java.io.File file22 = null;
        java.io.File file23 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file25 = explodedArchive24.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter26 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList27 = explodedArchive24.getNestedArchives(entryFilter26);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive24.getNestedArchives(entryFilter28);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive24.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file23, asciiBytesMap30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive31.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap32);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive(file21, asciiBytesMap32);
        explodedArchive12.entries = asciiBytesMap32;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap32);
        java.util.jar.Manifest manifest37 = null;
        explodedArchive36.manifest = manifest37;
        java.io.File file39 = explodedArchive36.root;
        java.util.jar.Manifest manifest40 = explodedArchive36.getManifest();
        java.io.File file41 = null;
        explodedArchive36.root = file41;
        java.io.File file43 = null;
        explodedArchive36.root = file43;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.jar.Manifest manifest47 = null;
        explodedArchive45.manifest = manifest47;
        java.util.jar.Manifest manifest49 = explodedArchive45.getManifest();
        boolean boolean50 = explodedArchive45.filtered;
        java.util.jar.Manifest manifest51 = explodedArchive45.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap52 = explodedArchive45.entries;
        explodedArchive36.entries = asciiBytesMap52;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap52);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap52);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap52);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler57 = explodedArchive56.new FilteredURLStreamHandler();
        java.net.URL uRL58 = new java.net.URL("hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!", "", (int) (byte) 0, "[:100]:52", (java.net.URLStreamHandler) filteredURLStreamHandler57);
        java.net.URL uRL59 = new java.net.URL("[hi!://:100/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!://:100/hi!://:100]:35", "", (int) (short) 1, "hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler57);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNull(file25);
        org.junit.Assert.assertNotNull(archiveList27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(manifest40);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertNull(manifest49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(manifest51);
        org.junit.Assert.assertNotNull(asciiBytesMap52);
        org.junit.Assert.assertEquals(uRL58.toString(), "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!://:0[:100]:52");
        org.junit.Assert.assertEquals(uRL59.toString(), "[hi!://:100/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!://:100/hi!://:100]:35://:1hi!://:100/hi!://:100");
    }

    @Test
    public void test13387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13387");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        java.io.File file3 = explodedArchive0.root;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        java.io.File file5 = explodedArchive0.root;
        java.io.File file6 = null;
        explodedArchive0.root = file6;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter9 = null;
        org.springframework.boot.loader.archive.Archive archive10 = explodedArchive0.getFilteredArchive(entryRenameFilter9);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archive10);
    }

    @Test
    public void test13388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13388");
        java.io.File file8 = null;
        java.io.File file9 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file11 = explodedArchive10.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter12 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList13 = explodedArchive10.getNestedArchives(entryFilter12);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive10.getNestedArchives(entryFilter14);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive10.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive17.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap18);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive19.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("/hi!://:100/archive", "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!", (int) (byte) 100, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.net.URL uRL22 = new java.net.URL("/hi!://:100/hi!", "hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", (int) (short) 0, "hi!://[:100]:52hi!", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str23 = uRL22.getProtocol();
        int int24 = uRL22.getPort();
        java.lang.String str25 = uRL22.toString();
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(archiveList13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertEquals(uRL21.toString(), "/hi!://:100/archive://[hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!]:100hi!://:100");
        org.junit.Assert.assertEquals(uRL22.toString(), "/hi!://:100/hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0hi!://[:100]:52hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "/hi!://:100/hi!" + "'", str23, "/hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/hi!://:100/hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0hi!://[:100]:52hi!" + "'", str25, "/hi!://:100/hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0hi!://[:100]:52hi!");
    }

    @Test
    public void test13389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13389");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        explodedArchive0.filtered = true;
        java.util.jar.Manifest manifest3 = null;
        explodedArchive0.manifest = manifest3;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter5 = null;
        org.springframework.boot.loader.archive.Archive archive6 = explodedArchive0.getFilteredArchive(entryRenameFilter5);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection7 = explodedArchive0.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection8 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest9 = explodedArchive0.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive0.getFilteredArchive(entryRenameFilter10);
        java.util.jar.Manifest manifest12 = null;
        explodedArchive0.manifest = manifest12;
        java.util.jar.Manifest manifest14 = null;
        explodedArchive0.manifest = manifest14;
        java.io.File file16 = explodedArchive0.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry17 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler18 = explodedArchive0.new FilteredURLStreamHandler();
        org.junit.Assert.assertNotNull(archive6);
        org.junit.Assert.assertNotNull(entryCollection7);
        org.junit.Assert.assertNotNull(entryCollection8);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNotNull(archive11);
        org.junit.Assert.assertNull(file16);
    }

    @Test
    public void test13390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13390");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        java.io.File file14 = null;
        explodedArchive11.root = file14;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection16 = explodedArchive11.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive11.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler18 = explodedArchive11.new FilteredURLStreamHandler();
        java.lang.String str19 = explodedArchive11.toString();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter20 = null;
        org.springframework.boot.loader.archive.Archive archive21 = explodedArchive11.getFilteredArchive(entryRenameFilter20);
        boolean boolean22 = explodedArchive11.filtered;
        java.util.jar.Manifest manifest23 = null;
        explodedArchive11.manifest = manifest23;
        java.io.File file25 = null;
        explodedArchive11.root = file25;
        java.io.File file27 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str29 = explodedArchive28.toString();
        java.util.jar.Manifest manifest30 = null;
        explodedArchive28.manifest = manifest30;
        java.util.jar.Manifest manifest32 = explodedArchive28.getManifest();
        boolean boolean33 = explodedArchive28.filtered;
        java.util.jar.Manifest manifest34 = explodedArchive28.manifest;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive28.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = explodedArchive28.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file27, asciiBytesMap36);
        explodedArchive11.entries = asciiBytesMap36;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(entryCollection16);
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "archive" + "'", str19, "archive");
        org.junit.Assert.assertNotNull(archive21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(manifest34);
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNotNull(asciiBytesMap36);
    }

    @Test
    public void test13391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13391");
        java.net.URLConnection.setDefaultRequestProperty("/:100", "/hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10");
    }

    @Test
    public void test13392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13392");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.lang.String str17 = uRL16.getUserInfo();
        java.lang.String str18 = uRL16.getAuthority();
        int int19 = uRL16.getPort();
        java.lang.String str20 = uRL16.getProtocol();
        java.io.File file26 = null;
        java.io.File file27 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file29 = explodedArchive28.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive28.getNestedArchives(entryFilter30);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive28.getNestedArchives(entryFilter32);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive28.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file27, asciiBytesMap34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = explodedArchive35.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file26, asciiBytesMap36);
        explodedArchive37.filtered = true;
        java.io.File file40 = null;
        explodedArchive37.root = file40;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive37.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive37.getEntries();
        java.util.jar.Manifest manifest44 = null;
        explodedArchive37.manifest = manifest44;
        java.io.File file46 = explodedArchive37.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap47 = explodedArchive37.entries;
        java.util.jar.Manifest manifest48 = explodedArchive37.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive37.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL("hi!://:100/hi!://:100/hi!://:100/hi!", "[hi!://:100/hi!]", (int) (byte) 1, "archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.net.URL uRL51 = new java.net.URL(uRL16, "/://[archive://:10archive]:100archive://:10archive://[/hi!://:100]:32archive://:0hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection52 = uRL51.openConnection();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + ":100" + "'", str18, ":100");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertNotNull(asciiBytesMap36);
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(asciiBytesMap47);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100/hi!://:100/hi!://:100/hi!://[hi!://:100/hi!]:1archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive");
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100/://[archive://:10archive]:100archive://:10archive://[/hi!://:100]:32archive://:0hi!://:100/hi!");
    }

    @Test
    public void test13393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13393");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter9 = null;
        org.springframework.boot.loader.archive.Archive archive10 = explodedArchive8.getFilteredArchive(entryRenameFilter9);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive8.new FileEntry();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection12 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest13 = explodedArchive8.getManifest();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive8.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive8.entries;
        java.util.jar.Manifest manifest16 = explodedArchive8.getManifest();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(archive10);
        org.junit.Assert.assertNotNull(entryCollection12);
        org.junit.Assert.assertNull(manifest13);
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNull(manifest16);
    }

    @Test
    public void test13394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13394");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getQuery();
        java.net.URL uRL15 = new java.net.URL(uRL9, "");
        java.lang.String str16 = uRL15.getUserInfo();
        java.lang.String str17 = uRL15.getPath();
        java.net.URL uRL19 = new java.net.URL(uRL15, "hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://[hi!://:100/:100]:100");
        java.lang.String str20 = uRL15.getProtocol();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals(uRL19.toString(), "hi!://:100/hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://[hi!://:100/:100]:100");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
    }

    @Test
    public void test13395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13395");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str2 = explodedArchive1.toString();
        boolean boolean3 = explodedArchive1.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter4 = null;
        org.springframework.boot.loader.archive.Archive archive5 = explodedArchive1.getFilteredArchive(entryRenameFilter4);
        java.io.File file6 = explodedArchive1.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str8 = explodedArchive7.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive7.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter10 = null;
        org.springframework.boot.loader.archive.Archive archive11 = explodedArchive7.getFilteredArchive(entryRenameFilter10);
        java.io.File file12 = explodedArchive7.root;
        java.lang.String str13 = explodedArchive7.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap14 = explodedArchive7.entries;
        explodedArchive1.entries = asciiBytesMap14;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap14);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL17 = explodedArchive16.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "archive" + "'", str2, "archive");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(archive5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNotNull(archive11);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap14);
    }

    @Test
    public void test13396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13396");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        java.util.jar.Manifest manifest8 = null;
        explodedArchive4.manifest = manifest8;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL11 = new java.net.URL("/hi!", "[hi!://:100/hi!]", (int) (short) 1, "/archive", (java.net.URLStreamHandler) filteredURLStreamHandler10);
        java.lang.String str12 = uRL11.getRef();
        java.lang.String str13 = uRL11.getHost();
        java.lang.String str14 = uRL11.getAuthority();
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertEquals(uRL11.toString(), "/hi!://[hi!://:100/hi!]:1/archive");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!://:100/hi!]" + "'", str13, "[hi!://:100/hi!]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[hi!://:100/hi!]:1" + "'", str14, "[hi!://:100/hi!]:1");
    }

    @Test
    public void test13397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13397");
        java.lang.String str1 = java.net.URLConnection.getDefaultRequestProperty("hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/archive");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test13398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13398");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive7 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file8 = explodedArchive7.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive7.getNestedArchives(entryFilter9);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive7.new FileEntry();
        java.lang.String str12 = explodedArchive7.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = explodedArchive7.entries;
        explodedArchive0.entries = asciiBytesMap13;
        java.io.File file15 = explodedArchive0.root;
        boolean boolean16 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive0.getNestedArchives(entryFilter17);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry19 = explodedArchive0.new FileEntry();
        java.io.File file20 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file20, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "archive" + "'", str12, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap13);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(archiveList18);
    }

    @Test
    public void test13399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13399");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        java.lang.String str12 = uRL9.toExternalForm();
        java.net.URL uRL14 = new java.net.URL(uRL9, "[/hi!://:100/archive]");
        int int15 = uRL9.getPort();
        java.lang.String str16 = uRL9.toExternalForm();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!://:100" + "'", str12, "hi!://:100");
        org.junit.Assert.assertEquals(uRL14.toString(), "hi!://:100/[/hi!://:100/archive]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!://:100" + "'", str16, "hi!://:100");
    }

    @Test
    public void test13400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13400");
        java.lang.String str1 = java.net.URLConnection.guessContentTypeFromName("hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/[/:100]:0");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test13401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13401");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        java.util.jar.Manifest manifest8 = null;
        explodedArchive4.manifest = manifest8;
        explodedArchive4.filtered = true;
        java.lang.String str12 = explodedArchive4.toString();
        java.util.jar.Manifest manifest13 = explodedArchive4.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler14 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL15 = new java.net.URL("[hi!://:100/hi!]:0", "[hi!://:100/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!://:100/hi!://:100]:35", (int) '4', "/archive", (java.net.URLStreamHandler) filteredURLStreamHandler14);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "archive" + "'", str12, "archive");
        org.junit.Assert.assertNull(manifest13);
        org.junit.Assert.assertEquals(uRL15.toString(), "[hi!://:100/hi!]:0://[hi!://:100/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!://:100/hi!://:100]:35:52/archive");
    }

    @Test
    public void test13402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13402");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL37.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive40.getNestedArchives(entryFilter42);
        explodedArchive40.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive40.getNestedArchives(entryFilter46);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler48 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL49 = new java.net.URL(uRL37, "", (java.net.URLStreamHandler) filteredURLStreamHandler48);
        java.lang.String str50 = uRL37.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive64 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str65 = explodedArchive64.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection66 = explodedArchive64.getEntries();
        java.util.jar.Manifest manifest67 = explodedArchive64.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler68 = explodedArchive64.new FilteredURLStreamHandler();
        java.net.URL uRL69 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler68);
        java.lang.String str70 = uRL69.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive72 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str73 = explodedArchive72.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection74 = explodedArchive72.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler75 = explodedArchive72.new FilteredURLStreamHandler();
        java.net.URL uRL76 = new java.net.URL(uRL69, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler75);
        java.lang.String str77 = uRL69.getHost();
        java.lang.String str78 = uRL69.getProtocol();
        java.lang.String str79 = uRL69.toExternalForm();
        java.lang.String str80 = uRL69.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive86 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str87 = explodedArchive86.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection88 = explodedArchive86.getEntries();
        java.util.jar.Manifest manifest89 = explodedArchive86.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler90 = explodedArchive86.new FilteredURLStreamHandler();
        java.net.URL uRL91 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler90);
        java.net.URL uRL92 = new java.net.URL(uRL69, "://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler90);
        java.net.URL uRL93 = new java.net.URL("[/hi!://:100/archive]:0", "hi!://:100/hi!://:100", 52, "/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler90);
        java.net.URL uRL94 = new java.net.URL("[:100]:52", "hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", (-1), "://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler90);
        java.net.URL uRL95 = new java.net.URL(uRL37, "", (java.net.URLStreamHandler) filteredURLStreamHandler90);
        int int96 = uRL37.getDefaultPort();
        java.lang.String str97 = uRL37.getAuthority();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/archive" + "'", str38, "/archive");
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "/archive" + "'", str50, "/archive");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "archive" + "'", str65, "archive");
        org.junit.Assert.assertNotNull(entryCollection66);
        org.junit.Assert.assertNull(manifest67);
        org.junit.Assert.assertEquals(uRL69.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "archive" + "'", str73, "archive");
        org.junit.Assert.assertNotNull(entryCollection74);
        org.junit.Assert.assertEquals(uRL76.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!://:100" + "'", str79, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "archive" + "'", str87, "archive");
        org.junit.Assert.assertNotNull(entryCollection88);
        org.junit.Assert.assertNull(manifest89);
        org.junit.Assert.assertEquals(uRL91.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL92.toString(), "hi!://:100/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL93.toString(), "[/hi!://:100/archive]:0://[hi!://:100/hi!://:100]:52/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals(uRL94.toString(), "[:100]:52://[hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL95.toString(), "hi!://:100/archive");
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-1) + "'", int96 == (-1));
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + ":100" + "'", str97, ":100");
    }

    @Test
    public void test13403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13403");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        int int24 = uRL23.getPort();
        java.lang.String str25 = uRL23.getPath();
        java.lang.String str26 = uRL23.getPath();
        java.lang.String str27 = uRL23.getPath();
        java.net.URL uRL29 = new java.net.URL(uRL23, "://[archive://:10archive]:100archive://:10archive");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str32 = explodedArchive31.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection33 = explodedArchive31.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter34 = null;
        org.springframework.boot.loader.archive.Archive archive35 = explodedArchive31.getFilteredArchive(entryRenameFilter34);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry36 = explodedArchive31.new FileEntry();
        explodedArchive31.filtered = true;
        explodedArchive31.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive31.new FilteredURLStreamHandler();
        java.net.URL uRL42 = new java.net.URL(uRL23, "/archive:///archive:0hi!://:100://[hi!://:100/archive]:100/archive:///archive:0hi!://[hi!://:100/hi!]:0", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/hi!" + "'", str25, "/hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/hi!" + "'", str26, "/hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "archive" + "'", str32, "archive");
        org.junit.Assert.assertNotNull(entryCollection33);
        org.junit.Assert.assertNotNull(archive35);
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100/archive:///archive:0hi!://:100://[hi!://:100/archive]:100/archive:///archive:0hi!://[hi!://:100/hi!]:0");
    }

    @Test
    public void test13404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13404");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str29 = explodedArchive28.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive28.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL32 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.net.URL uRL33 = new java.net.URL(uRL13, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler31);
        java.lang.String str34 = uRL13.getFile();
        java.lang.String str35 = uRL13.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str41 = explodedArchive40.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive40.getEntries();
        java.util.jar.Manifest manifest43 = explodedArchive40.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler44 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL45 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler44);
        java.lang.String str46 = uRL45.getQuery();
        java.lang.String str47 = uRL45.getRef();
        java.lang.String str48 = uRL45.getRef();
        java.net.URL uRL50 = new java.net.URL(uRL45, "hi!");
        boolean boolean51 = uRL13.sameFile(uRL50);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive65 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str66 = explodedArchive65.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection67 = explodedArchive65.getEntries();
        java.util.jar.Manifest manifest68 = explodedArchive65.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler69 = explodedArchive65.new FilteredURLStreamHandler();
        java.net.URL uRL70 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler69);
        java.lang.String str71 = uRL70.getQuery();
        java.lang.String str72 = uRL70.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str79 = explodedArchive78.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection80 = explodedArchive78.getEntries();
        java.util.jar.Manifest manifest81 = explodedArchive78.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler82 = explodedArchive78.new FilteredURLStreamHandler();
        java.net.URL uRL83 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler82);
        java.net.URL uRL84 = new java.net.URL(uRL70, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler82);
        java.net.URL uRL85 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler82);
        java.net.URL uRL86 = new java.net.URL("/archive:///archive:0hi!://:100", "hi!://:100/archive", (int) (short) 100, "/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler82);
        java.net.URL uRL87 = new java.net.URL(uRL50, "hi!://:100/hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler82);
        java.net.URL uRL88 = new java.net.URL("hi!:1", "hi!://:100/hi!:1", 52, "archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive", (java.net.URLStreamHandler) filteredURLStreamHandler82);
        java.lang.String str89 = uRL88.getHost();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "archive" + "'", str41, "archive");
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "archive" + "'", str66, "archive");
        org.junit.Assert.assertNotNull(entryCollection67);
        org.junit.Assert.assertNull(manifest68);
        org.junit.Assert.assertEquals(uRL70.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "archive" + "'", str79, "archive");
        org.junit.Assert.assertNotNull(entryCollection80);
        org.junit.Assert.assertNull(manifest81);
        org.junit.Assert.assertEquals(uRL83.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL84.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL85.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL86.toString(), "/archive:///archive:0hi!://:100://[hi!://:100/archive]:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals(uRL87.toString(), "hi!://:100/hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL88.toString(), "hi!:1://[hi!://:100/hi!:1]:52archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[hi!://:100/hi!:1]" + "'", str89, "[hi!://:100/hi!:1]");
    }

    @Test
    public void test13405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13405");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        int int24 = uRL23.getPort();
        java.lang.String str25 = uRL23.getPath();
        java.lang.String str26 = uRL23.getPath();
        java.lang.String str27 = uRL23.getProtocol();
        java.lang.String str28 = uRL23.getHost();
        java.lang.String str29 = uRL23.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str35 = explodedArchive34.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection36 = explodedArchive34.getEntries();
        java.util.jar.Manifest manifest37 = explodedArchive34.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str40 = uRL39.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str43 = explodedArchive42.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection44 = explodedArchive42.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive42.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL(uRL39, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.lang.String str47 = uRL39.getHost();
        java.lang.String str48 = uRL39.getProtocol();
        java.lang.String str49 = uRL39.toExternalForm();
        java.lang.String str50 = uRL39.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str57 = explodedArchive56.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection58 = explodedArchive56.getEntries();
        java.util.jar.Manifest manifest59 = explodedArchive56.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler60 = explodedArchive56.new FilteredURLStreamHandler();
        java.net.URL uRL61 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL62 = new java.net.URL(uRL39, "://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.lang.String str63 = uRL62.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str69 = explodedArchive68.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap70 = null;
        explodedArchive68.entries = asciiBytesMap70;
        java.util.jar.Manifest manifest72 = null;
        explodedArchive68.manifest = manifest72;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler74 = explodedArchive68.new FilteredURLStreamHandler();
        java.net.URL uRL75 = new java.net.URL("hi!", ":100", (int) '4', "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler74);
        int int76 = uRL75.getDefaultPort();
        boolean boolean77 = uRL62.sameFile(uRL75);
        java.lang.String str78 = uRL75.getQuery();
        boolean boolean79 = uRL23.sameFile(uRL75);
        java.lang.String str80 = uRL23.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/hi!" + "'", str25, "/hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/hi!" + "'", str26, "/hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "/hi!" + "'", str29, "/hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "archive" + "'", str35, "archive");
        org.junit.Assert.assertNotNull(entryCollection36);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "archive" + "'", str43, "archive");
        org.junit.Assert.assertNotNull(entryCollection44);
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!://:100" + "'", str49, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "archive" + "'", str57, "archive");
        org.junit.Assert.assertNotNull(entryCollection58);
        org.junit.Assert.assertNull(manifest59);
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "/://[archive://:10archive]:100archive://:10archive" + "'", str63, "/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "archive" + "'", str69, "archive");
        org.junit.Assert.assertEquals(uRL75.toString(), "hi!://[:100]:52hi!");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!://:100/hi!" + "'", str80, "hi!://:100/hi!");
    }

    @Test
    public void test13406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13406");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.getQuery();
        java.net.URL uRL15 = new java.net.URL(uRL9, "");
        java.lang.String str16 = uRL15.getPath();
        java.lang.String str17 = uRL15.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str27 = explodedArchive26.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection28 = explodedArchive26.getEntries();
        java.util.jar.Manifest manifest29 = explodedArchive26.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler30 = explodedArchive26.new FilteredURLStreamHandler();
        java.net.URL uRL31 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler30);
        java.lang.String str32 = uRL31.getQuery();
        java.lang.String str33 = uRL31.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str40 = explodedArchive39.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection41 = explodedArchive39.getEntries();
        java.util.jar.Manifest manifest42 = explodedArchive39.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler43 = explodedArchive39.new FilteredURLStreamHandler();
        java.net.URL uRL44 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        java.net.URL uRL45 = new java.net.URL(uRL31, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        java.net.URL uRL46 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        java.lang.String str47 = uRL46.getUserInfo();
        boolean boolean48 = uRL15.sameFile(uRL46);
        java.lang.String str49 = uRL15.getProtocol();
        java.lang.String str50 = uRL15.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "archive" + "'", str27, "archive");
        org.junit.Assert.assertNotNull(entryCollection28);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertEquals(uRL31.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "archive" + "'", str40, "archive");
        org.junit.Assert.assertNotNull(entryCollection41);
        org.junit.Assert.assertNull(manifest42);
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL46.toString(), "archive://:10archive");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNull(str50);
    }

    @Test
    public void test13407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13407");
        java.io.File file4 = null;
        java.io.File file5 = null;
        java.io.File file6 = null;
        java.io.File file7 = null;
        java.io.File file8 = null;
        java.io.File file9 = null;
        java.io.File file10 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive11.getNestedArchives(entryFilter13);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive11.getNestedArchives(entryFilter15);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive11.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap17);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap20);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file7, asciiBytesMap20);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file6, asciiBytesMap20);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file5, asciiBytesMap20);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap20);
        java.util.jar.Manifest manifest26 = explodedArchive25.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive25.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL("hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", "[hi!://[hi!://:100/hi!]:0archive://:10:100]:10", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.lang.String str29 = uRL28.toString();
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(asciiBytesMap17);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNull(manifest26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://[hi!://:100/hi!]:0archive://:10:100]:10:100");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://[hi!://:100/hi!]:0archive://:10:100]:10:100" + "'", str29, "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://[hi!://:100/hi!]:0archive://:10:100]:10:100");
    }

    @Test
    public void test13408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13408");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str42 = uRL9.getQuery();
        java.lang.String str43 = uRL9.getRef();
        java.net.URL uRL45 = new java.net.URL(uRL9, "/hi!");
        java.lang.String str46 = uRL9.getFile();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
    }

    @Test
    public void test13409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13409");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getQuery();
        java.lang.String str23 = uRL21.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive29 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str30 = explodedArchive29.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection31 = explodedArchive29.getEntries();
        java.util.jar.Manifest manifest32 = explodedArchive29.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler33 = explodedArchive29.new FilteredURLStreamHandler();
        java.net.URL uRL34 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL35 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL36 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        java.net.URL uRL37 = new java.net.URL("hi!://hi!:1hi!", "hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", 32, "/archive", (java.net.URLStreamHandler) filteredURLStreamHandler33);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str40 = explodedArchive39.toString();
        boolean boolean41 = explodedArchive39.filtered;
        java.io.File file42 = explodedArchive39.root;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler43 = explodedArchive39.new FilteredURLStreamHandler();
        java.net.URL uRL44 = new java.net.URL(uRL37, "hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        java.net.URL uRL45 = new java.net.URL("hi!://:100/archive:///archive:0hi!://:100", "/hi!://:100/archive:///archive:0hi!://:100", (int) (byte) 0, "hi!://:100/[://[archive://:10archive]:100archive://:10archive]:0", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        java.lang.String str46 = uRL45.getQuery();
        int int47 = uRL45.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "archive" + "'", str30, "archive");
        org.junit.Assert.assertNotNull(entryCollection31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertEquals(uRL34.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL36.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/archive");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "archive" + "'", str40, "archive");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]");
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100/archive:///archive:0hi!://:100://[/hi!://:100/archive:///archive:0hi!://:100]:0hi!://:100/[://[archive://:10archive]:100archive://:10archive]:0");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
    }

    @Test
    public void test13410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13410");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL37.getUserInfo();
        java.io.File file40 = null;
        java.io.File file41 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file43 = explodedArchive42.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter44 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList45 = explodedArchive42.getNestedArchives(entryFilter44);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive42.getNestedArchives(entryFilter46);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap48 = explodedArchive42.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive(file41, asciiBytesMap48);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive(file40, asciiBytesMap48);
        boolean boolean51 = explodedArchive50.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler52 = explodedArchive50.new FilteredURLStreamHandler();
        java.net.URL uRL53 = new java.net.URL(uRL37, "/archive:///archive:0hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler52);
        java.lang.String str54 = uRL53.toExternalForm();
        java.lang.String str55 = uRL53.getHost();
        java.lang.String str56 = uRL53.getRef();
        java.net.URL uRL58 = new java.net.URL(uRL53, "/archive:///archive:0/:100");
        java.lang.String str59 = uRL58.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(file43);
        org.junit.Assert.assertNotNull(archiveList45);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertNotNull(asciiBytesMap48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals(uRL53.toString(), "hi!://:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!://:100/archive:///archive:0hi!://:100" + "'", str54, "hi!://:100/archive:///archive:0hi!://:100");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertEquals(uRL58.toString(), "hi!://:100/archive:///archive:0/:100");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!://:100/archive:///archive:0/:100" + "'", str59, "hi!://:100/archive:///archive:0/:100");
    }

    @Test
    public void test13411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13411");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        java.util.jar.Manifest manifest15 = explodedArchive12.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL17 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler16);
        java.lang.String str18 = uRL17.getQuery();
        java.lang.String str19 = uRL17.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str26 = explodedArchive25.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection27 = explodedArchive25.getEntries();
        java.util.jar.Manifest manifest28 = explodedArchive25.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive25.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.net.URL uRL31 = new java.net.URL(uRL17, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.net.URL uRL32 = new java.net.URL("/hi!://:100", "archive", (int) (short) 1, "/archive", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.net.URL uRL33 = new java.net.URL(":100", "[hi!://:100/hi!]", (int) (short) 100, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.lang.String str34 = uRL33.toExternalForm();
        java.lang.String str35 = uRL33.getRef();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "archive" + "'", str26, "archive");
        org.junit.Assert.assertNotNull(entryCollection27);
        org.junit.Assert.assertNull(manifest28);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL31.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL32.toString(), "/hi!://:100://archive:1/archive");
        org.junit.Assert.assertEquals(uRL33.toString(), ":100://[hi!://:100/hi!]:100hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + ":100://[hi!://:100/hi!]:100hi!://:100/archive" + "'", str34, ":100://[hi!://:100/hi!]:100hi!://:100/archive");
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test13412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13412");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        java.util.jar.Manifest manifest15 = explodedArchive12.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL17 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler16);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str23 = explodedArchive22.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection24 = explodedArchive22.getEntries();
        java.util.jar.Manifest manifest25 = explodedArchive22.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler26 = explodedArchive22.new FilteredURLStreamHandler();
        java.net.URL uRL27 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler26);
        java.lang.String str28 = uRL27.getQuery();
        java.lang.String str29 = uRL27.getPath();
        boolean boolean30 = uRL17.sameFile(uRL27);
        java.net.URLStreamHandler uRLStreamHandler32 = null;
        java.net.URL uRL33 = new java.net.URL(uRL27, "", uRLStreamHandler32);
        int int34 = uRL33.getPort();
        java.lang.String str35 = uRL33.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap47 = null;
        explodedArchive45.entries = asciiBytesMap47;
        java.util.jar.Manifest manifest49 = null;
        explodedArchive45.manifest = manifest49;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL("hi!", ":100", (int) '4', "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.net.URL uRL53 = new java.net.URL("hi!://:100/hi!://:100/hi!", "/hi!://:100/archive", (-1), "", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.net.URL uRL54 = new java.net.URL(uRL33, "hi!://hi!:1hi!", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.net.URL uRL55 = new java.net.URL("hi!://:100/hi!://:100/archive", "hi!://:100/:100", (int) (byte) 10, "", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.net.URL uRL56 = new java.net.URL("hi!://:100/hi!://:100/archive", "archive", 100, "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!://hi!:1hi!", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "archive" + "'", str23, "archive");
        org.junit.Assert.assertNotNull(entryCollection24);
        org.junit.Assert.assertNull(manifest25);
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 100 + "'", int34 == 100);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://[:100]:52hi!");
        org.junit.Assert.assertEquals(uRL53.toString(), "hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]");
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100/hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL55.toString(), "hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10");
        org.junit.Assert.assertEquals(uRL56.toString(), "hi!://:100/hi!://:100/archive://archive:100hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!://hi!:1hi!");
    }

    @Test
    public void test13413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13413");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.net.URL uRL29 = new java.net.URL(uRL9, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.lang.String str30 = uRL9.getFile();
        java.lang.String str31 = uRL9.getRef();
        java.lang.String str32 = uRL9.toExternalForm();
        java.lang.String str33 = uRL9.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter37 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList38 = explodedArchive35.getNestedArchives(entryFilter37);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry39 = explodedArchive35.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler40 = explodedArchive35.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive35.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry42 = explodedArchive35.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler43 = explodedArchive35.new FilteredURLStreamHandler();
        java.net.URL uRL44 = new java.net.URL(uRL9, "[hi!://:100]:97", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        java.lang.String str45 = uRL44.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!://:100" + "'", str32, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(archiveList38);
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100/[hi!://:100]:97");
        org.junit.Assert.assertNull(str45);
    }

    @Test
    public void test13414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13414");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive4.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive4.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive4.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry11 = explodedArchive4.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", "archive://:10:100", 1, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getPath();
        java.lang.String str15 = uRL13.getAuthority();
        int int16 = uRL13.getPort();
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[archive://:10:100]:1:100");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + ":100" + "'", str14, ":100");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[archive://:10:100]:1" + "'", str15, "[archive://:10:100]:1");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
    }

    @Test
    public void test13415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13415");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler5 = explodedArchive0.new FilteredURLStreamHandler();
        boolean boolean6 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.util.jar.Manifest manifest9 = null;
        explodedArchive0.manifest = manifest9;
        explodedArchive0.filtered = true;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(archiveList8);
    }

    @Test
    public void test13416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13416");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.net.URL uRL29 = new java.net.URL(uRL9, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.lang.String str30 = uRL9.getProtocol();
        int int31 = uRL9.getPort();
        java.lang.String str32 = uRL9.getAuthority();
        java.net.URL uRL34 = new java.net.URL(uRL9, "[hi!://:100/:100]:100");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str40 = explodedArchive39.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection41 = explodedArchive39.getEntries();
        java.util.jar.Manifest manifest42 = explodedArchive39.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler43 = explodedArchive39.new FilteredURLStreamHandler();
        java.net.URL uRL44 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler43);
        java.lang.String str45 = uRL44.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str48 = explodedArchive47.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection49 = explodedArchive47.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler50 = explodedArchive47.new FilteredURLStreamHandler();
        java.net.URL uRL51 = new java.net.URL(uRL44, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler50);
        java.lang.String str52 = uRL51.getAuthority();
        int int53 = uRL51.getDefaultPort();
        java.lang.String str54 = uRL51.getQuery();
        int int55 = uRL51.getPort();
        java.lang.String str56 = uRL51.getFile();
        java.lang.String str57 = uRL51.getQuery();
        java.lang.String str58 = uRL51.getUserInfo();
        boolean boolean59 = uRL34.sameFile(uRL51);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + ":100" + "'", str32, ":100");
        org.junit.Assert.assertEquals(uRL34.toString(), "hi!://:100/[hi!://:100/:100]:100");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "archive" + "'", str40, "archive");
        org.junit.Assert.assertNotNull(entryCollection41);
        org.junit.Assert.assertNull(manifest42);
        org.junit.Assert.assertEquals(uRL44.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "archive" + "'", str48, "archive");
        org.junit.Assert.assertNotNull(entryCollection49);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + ":100" + "'", str52, ":100");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 100 + "'", int55 == 100);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "/hi!" + "'", str56, "/hi!");
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test13417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13417");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getQuery();
        java.lang.String str27 = uRL25.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL39 = new java.net.URL(uRL25, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL40 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.net.URL uRL41 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str42 = uRL9.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str48 = explodedArchive47.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection49 = explodedArchive47.getEntries();
        java.util.jar.Manifest manifest50 = explodedArchive47.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive47.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.lang.String str53 = uRL52.getQuery();
        java.lang.String str54 = uRL52.getRef();
        java.lang.String str55 = uRL52.getRef();
        java.lang.String str56 = uRL52.toExternalForm();
        int int57 = uRL52.getDefaultPort();
        boolean boolean58 = uRL9.sameFile(uRL52);
        java.lang.String str59 = uRL9.getQuery();
        java.net.URL uRL61 = new java.net.URL(uRL9, "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        java.net.URL uRL63 = new java.net.URL(uRL61, "[hi!://:100/archive]:100://[/hi!://:100/archive]:0:1hi!://:100/hi!://:100/hi!");
        java.lang.String str64 = uRL61.getUserInfo();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL40.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "archive" + "'", str48, "archive");
        org.junit.Assert.assertNotNull(entryCollection49);
        org.junit.Assert.assertNull(manifest50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!://:100" + "'", str56, "hi!://:100");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/hi!://[://[archive://:10archive]:100archive://[hi!://:100/archive]:100://[/hi!://:100/archive]:0:1hi!://:100/hi!://:100/hi!");
        org.junit.Assert.assertNull(str64);
    }

    @Test
    public void test13418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13418");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection4 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive0.getNestedArchives(entryFilter5);
        java.io.File file7 = explodedArchive0.root;
        java.io.File file8 = explodedArchive0.root;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(entryCollection4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
    }

    @Test
    public void test13419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13419");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("[hi!://:100/hi!]:1://[archive://:10archive]:100hi!://:100/hi!://hi!:1hi!", "/hi!://:100/hi!://:100://[/hi!:1]:52[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0://[hi!://:100/archive://[://[archive://:10archive]:100archive://:10archive]:0:32hi!://:100]:10/hi!://:100/archive:///archive:0hi!://[archive://:10archive]:100", "/[://[archive://:10archive]:100archive://:10archive]:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: [hi!://:100/hi!]:1://[archive://:10archive]:100hi!://:100/hi!://hi!:1hi!");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13420");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        java.io.File file3 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive4.getNestedArchives(entryFilter8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive4.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file3, asciiBytesMap10);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = explodedArchive11.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap12);
        boolean boolean14 = explodedArchive13.filtered;
        explodedArchive13.filtered = false;
        boolean boolean17 = explodedArchive13.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap18);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap18);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(asciiBytesMap12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
    }

    @Test
    public void test13421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13421");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive1.getNestedArchives(entryFilter8);
        java.io.File file10 = null;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap21);
        explodedArchive1.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap21);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive25.entries;
        explodedArchive25.filtered = true;
        explodedArchive25.filtered = true;
        java.io.File file31 = null;
        java.io.File file32 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file34 = explodedArchive33.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive33.getNestedArchives(entryFilter35);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter37 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList38 = explodedArchive33.getNestedArchives(entryFilter37);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive33.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive(file32, asciiBytesMap39);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap41 = explodedArchive40.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file31, asciiBytesMap41);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry43 = explodedArchive42.new FileEntry();
        explodedArchive42.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler46 = explodedArchive42.new FilteredURLStreamHandler();
        boolean boolean47 = explodedArchive42.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap48 = explodedArchive42.entries;
        explodedArchive25.entries = asciiBytesMap48;
        java.util.jar.Manifest manifest50 = explodedArchive25.manifest;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertNotNull(archiveList38);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertNotNull(asciiBytesMap41);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap48);
        org.junit.Assert.assertNull(manifest50);
    }

    @Test
    public void test13422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13422");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        java.io.File file6 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry4.name;
        java.io.File file9 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = fileEntry4.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes12 = null;
        fileEntry4.name = asciiBytes12;
        java.io.File file14 = fileEntry4.file;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(asciiBytes7);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(asciiBytes10);
        org.junit.Assert.assertNull(asciiBytes11);
        org.junit.Assert.assertNull(file14);
    }

    @Test
    public void test13423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13423");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        java.lang.String str13 = uRL9.getRef();
        java.net.URL uRL15 = new java.net.URL(uRL9, "hi!:1");
        int int16 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getFile();
        int int28 = uRL26.getDefaultPort();
        java.lang.String str29 = uRL26.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str35 = explodedArchive34.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection36 = explodedArchive34.getEntries();
        java.util.jar.Manifest manifest37 = explodedArchive34.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str40 = uRL39.getQuery();
        java.lang.String str41 = uRL39.getRef();
        java.lang.String str42 = uRL39.getRef();
        java.lang.String str43 = uRL39.toExternalForm();
        boolean boolean44 = uRL26.sameFile(uRL39);
        java.lang.String str45 = uRL39.getUserInfo();
        java.lang.String str46 = uRL39.getHost();
        java.lang.String str47 = uRL39.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive49 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file50 = explodedArchive49.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter51 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList52 = explodedArchive49.getNestedArchives(entryFilter51);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter53 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList54 = explodedArchive49.getNestedArchives(entryFilter53);
        java.lang.String str55 = explodedArchive49.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler56 = explodedArchive49.new FilteredURLStreamHandler();
        java.net.URL uRL57 = new java.net.URL(uRL39, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler56);
        java.lang.String str58 = uRL57.toExternalForm();
        boolean boolean59 = uRL9.sameFile(uRL57);
        java.lang.String str60 = uRL57.getAuthority();
        java.lang.String str61 = uRL57.getFile();
        java.lang.String str62 = uRL57.getAuthority();
        int int63 = uRL57.getPort();
        java.lang.String str64 = uRL57.getProtocol();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals(uRL15.toString(), "hi!://:100/hi!:1");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "archive" + "'", str35, "archive");
        org.junit.Assert.assertNotNull(entryCollection36);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!://:100" + "'", str43, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNotNull(archiveList52);
        org.junit.Assert.assertNotNull(archiveList54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "archive" + "'", str55, "archive");
        org.junit.Assert.assertEquals(uRL57.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!://:100/hi!" + "'", str58, "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + ":100" + "'", str60, ":100");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "/hi!" + "'", str61, "/hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + ":100" + "'", str62, ":100");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 100 + "'", int63 == 100);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
    }

    @Test
    public void test13424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13424");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        java.io.File file6 = fileEntry4.file;
        java.io.File file7 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry4.name;
        java.io.File file9 = fileEntry4.file;
        java.io.File file10 = null;
        fileEntry4.file = file10;
        java.lang.Class<?> wildcardClass12 = fileEntry4.getClass();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test13425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13425");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        java.io.File file6 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = fileEntry4.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = fileEntry4.name;
        java.io.File file9 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = null;
        fileEntry4.name = asciiBytes10;
        java.io.File file12 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry4.name;
        java.io.File file14 = fileEntry4.getFile();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(asciiBytes7);
        org.junit.Assert.assertNull(asciiBytes8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNull(asciiBytes13);
        org.junit.Assert.assertNull(file14);
    }

    @Test
    public void test13426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13426");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        java.io.File file3 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = null;
        explodedArchive4.entries = asciiBytesMap8;
        java.io.File file10 = explodedArchive4.root;
        java.io.File file11 = explodedArchive4.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        explodedArchive4.entries = asciiBytesMap18;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file3, asciiBytesMap18);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap18);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap18);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap18);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive23.new FilteredURLStreamHandler();
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
    }

    @Test
    public void test13427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13427");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        java.io.File file6 = fileEntry4.file;
        java.io.File file7 = fileEntry4.file;
        java.io.File file8 = null;
        fileEntry4.file = file8;
        java.io.File file10 = fileEntry4.getFile();
        java.io.File file11 = fileEntry4.getFile();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(file11);
    }

    @Test
    public void test13428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13428");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.lang.String str17 = uRL16.getUserInfo();
        java.lang.String str18 = uRL16.getAuthority();
        int int19 = uRL16.getPort();
        java.lang.String str20 = uRL16.getProtocol();
        java.io.File file26 = null;
        java.io.File file27 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file29 = explodedArchive28.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive28.getNestedArchives(entryFilter30);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive28.getNestedArchives(entryFilter32);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive28.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive(file27, asciiBytesMap34);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap36 = explodedArchive35.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive(file26, asciiBytesMap36);
        explodedArchive37.filtered = true;
        java.io.File file40 = null;
        explodedArchive37.root = file40;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive37.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive37.getEntries();
        java.util.jar.Manifest manifest44 = null;
        explodedArchive37.manifest = manifest44;
        java.io.File file46 = explodedArchive37.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap47 = explodedArchive37.entries;
        java.util.jar.Manifest manifest48 = explodedArchive37.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive37.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL("hi!://:100/hi!://:100/hi!://:100/hi!", "[hi!://:100/hi!]", (int) (byte) 1, "archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.net.URL uRL51 = new java.net.URL(uRL16, "/://[archive://:10archive]:100archive://:10archive://[/hi!://:100]:32archive://:0hi!://:100/hi!", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file57 = explodedArchive56.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter58 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList59 = explodedArchive56.getNestedArchives(entryFilter58);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter60 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList61 = explodedArchive56.getNestedArchives(entryFilter60);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap62 = explodedArchive56.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter63 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList64 = explodedArchive56.getNestedArchives(entryFilter63);
        java.io.File file65 = null;
        explodedArchive56.root = file65;
        java.io.File file67 = null;
        explodedArchive56.root = file67;
        java.util.jar.Manifest manifest69 = explodedArchive56.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter70 = null;
        org.springframework.boot.loader.archive.Archive archive71 = explodedArchive56.getFilteredArchive(entryRenameFilter70);
        java.io.File file72 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive73 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file74 = explodedArchive73.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter75 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList76 = explodedArchive73.getNestedArchives(entryFilter75);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap77 = null;
        explodedArchive73.entries = asciiBytesMap77;
        java.io.File file79 = explodedArchive73.root;
        java.io.File file80 = explodedArchive73.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive81 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file82 = explodedArchive81.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter83 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList84 = explodedArchive81.getNestedArchives(entryFilter83);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter85 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList86 = explodedArchive81.getNestedArchives(entryFilter85);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap87 = explodedArchive81.entries;
        explodedArchive73.entries = asciiBytesMap87;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive89 = new org.springframework.boot.loader.archive.ExplodedArchive(file72, asciiBytesMap87);
        java.io.File file90 = null;
        explodedArchive89.root = file90;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler92 = explodedArchive89.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest93 = null;
        explodedArchive89.manifest = manifest93;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap95 = explodedArchive89.entries;
        explodedArchive56.entries = asciiBytesMap95;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler97 = explodedArchive56.new FilteredURLStreamHandler();
        java.net.URL uRL98 = new java.net.URL("[hi!://:100/archive]", "hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", (int) '#', "hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/[/:100]:0", (java.net.URLStreamHandler) filteredURLStreamHandler97);
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection99 = filteredURLStreamHandler49.openConnection(uRL98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + ":100" + "'", str18, ":100");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertNotNull(asciiBytesMap36);
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(asciiBytesMap47);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100/hi!://:100/hi!://:100/hi!://[hi!://:100/hi!]:1archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive");
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100/://[archive://:10archive]:100archive://:10archive://[/hi!://:100]:32archive://:0hi!://:100/hi!");
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(archiveList59);
        org.junit.Assert.assertNotNull(archiveList61);
        org.junit.Assert.assertNotNull(asciiBytesMap62);
        org.junit.Assert.assertNotNull(archiveList64);
        org.junit.Assert.assertNull(manifest69);
        org.junit.Assert.assertNotNull(archive71);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNotNull(archiveList76);
        org.junit.Assert.assertNull(file79);
        org.junit.Assert.assertNull(file80);
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertNotNull(archiveList84);
        org.junit.Assert.assertNotNull(archiveList86);
        org.junit.Assert.assertNotNull(asciiBytesMap87);
        org.junit.Assert.assertNotNull(asciiBytesMap95);
        org.junit.Assert.assertEquals(uRL98.toString(), "[hi!://:100/archive]://[hi!://:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1]:35hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/[/:100]:0");
    }

    @Test
    public void test13429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13429");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        boolean boolean9 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = explodedArchive0.new FileEntry();
        java.io.File file11 = fileEntry10.getFile();
        java.io.File file12 = null;
        fileEntry10.file = file12;
        java.lang.Class<?> wildcardClass14 = fileEntry10.getClass();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test13430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13430");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.jar.Manifest manifest2 = null;
        explodedArchive0.manifest = manifest2;
        java.util.jar.Manifest manifest4 = explodedArchive0.getManifest();
        boolean boolean5 = explodedArchive0.filtered;
        java.util.jar.Manifest manifest6 = explodedArchive0.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive0.entries;
        java.io.File file8 = null;
        java.io.File file9 = null;
        java.io.File file10 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file12 = explodedArchive11.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive11.getNestedArchives(entryFilter13);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive11.getNestedArchives(entryFilter15);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive11.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive18.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file9, asciiBytesMap19);
        explodedArchive20.filtered = true;
        java.io.File file23 = null;
        explodedArchive20.root = file23;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection25 = explodedArchive20.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap26 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive27 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap26);
        explodedArchive0.entries = asciiBytesMap26;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive0.getNestedArchives(entryFilter29);
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter31 = null;
        org.springframework.boot.loader.archive.Archive archive32 = explodedArchive0.getFilteredArchive(entryRenameFilter31);
        java.lang.String str33 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter34 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList35 = explodedArchive0.getNestedArchives(entryFilter34);
        java.util.jar.Manifest manifest36 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection38 = explodedArchive0.getEntries();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNull(file12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(asciiBytesMap17);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(entryCollection25);
        org.junit.Assert.assertNotNull(asciiBytesMap26);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNotNull(archive32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(archiveList35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertNotNull(entryCollection38);
    }

    @Test
    public void test13431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13431");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive1.new FileEntry();
        java.lang.String str6 = explodedArchive1.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.jar.Manifest manifest9 = explodedArchive8.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler10 = explodedArchive8.new FilteredURLStreamHandler();
        explodedArchive8.filtered = true;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection13 = explodedArchive8.getEntries();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNotNull(entryCollection13);
    }

    @Test
    public void test13432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13432");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter3 = null;
        org.springframework.boot.loader.archive.Archive archive4 = explodedArchive0.getFilteredArchive(entryRenameFilter3);
        java.io.File file5 = explodedArchive0.root;
        java.util.jar.Manifest manifest6 = explodedArchive0.getManifest();
        java.io.File file7 = explodedArchive0.root;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertNotNull(archive4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(manifest6);
        org.junit.Assert.assertNull(file7);
    }

    @Test
    public void test13433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13433");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str34 = explodedArchive33.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection35 = explodedArchive33.getEntries();
        java.util.jar.Manifest manifest36 = explodedArchive33.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler37 = explodedArchive33.new FilteredURLStreamHandler();
        java.net.URL uRL38 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler37);
        java.lang.String str39 = uRL38.getFile();
        int int40 = uRL38.getDefaultPort();
        java.lang.String str41 = uRL38.getRef();
        boolean boolean42 = uRL21.sameFile(uRL38);
        java.lang.String str43 = uRL21.getHost();
        java.lang.String str44 = uRL21.getQuery();
        java.lang.String str45 = uRL21.getAuthority();
        java.io.File file59 = null;
        java.io.File file60 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file62 = explodedArchive61.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter63 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList64 = explodedArchive61.getNestedArchives(entryFilter63);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter65 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList66 = explodedArchive61.getNestedArchives(entryFilter65);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap67 = explodedArchive61.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive68 = new org.springframework.boot.loader.archive.ExplodedArchive(file60, asciiBytesMap67);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap69 = explodedArchive68.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive70 = new org.springframework.boot.loader.archive.ExplodedArchive(file59, asciiBytesMap69);
        explodedArchive70.filtered = true;
        java.io.File file73 = null;
        explodedArchive70.root = file73;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection75 = explodedArchive70.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection76 = explodedArchive70.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler77 = explodedArchive70.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler78 = explodedArchive70.new FilteredURLStreamHandler();
        java.net.URL uRL79 = new java.net.URL("[/:100]:0", "hi!://:100/hi!:1", 0, "/:100", (java.net.URLStreamHandler) filteredURLStreamHandler78);
        java.net.URL uRL80 = new java.net.URL("[://[archive://:10archive]:100archive://:10archive]:0", "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", 1, "/:100", (java.net.URLStreamHandler) filteredURLStreamHandler78);
        java.net.URL uRL81 = new java.net.URL("hi!://:100/hi!://hi!:1hi!", "hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", (int) (byte) 10, "hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]", (java.net.URLStreamHandler) filteredURLStreamHandler78);
        java.net.URL uRL82 = new java.net.URL(uRL21, "/://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler78);
        java.net.URL uRL83 = new java.net.URL("hi!://:100/hi!://hi!:1hi!", "hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", (int) (byte) 100, "hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10", (java.net.URLStreamHandler) filteredURLStreamHandler78);
        java.net.URL uRL84 = new java.net.URL("hi!://:100/://[hi!://:100/:100]:100/hi!://:100", "hi!://:100/hi!", (-1), "hi!://:100/hi!://:100/hi!://:100/hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler78);
        java.net.URL uRL85 = new java.net.URL("hi!://:100/hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:100hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10", "[hi!://:100/hi!://:100/:100]:100", (int) (short) 1, "hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/archive", (java.net.URLStreamHandler) filteredURLStreamHandler78);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "archive" + "'", str34, "archive");
        org.junit.Assert.assertNotNull(entryCollection35);
        org.junit.Assert.assertNull(manifest36);
        org.junit.Assert.assertEquals(uRL38.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + ":100" + "'", str45, ":100");
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNotNull(archiveList64);
        org.junit.Assert.assertNotNull(archiveList66);
        org.junit.Assert.assertNotNull(asciiBytesMap67);
        org.junit.Assert.assertNotNull(asciiBytesMap69);
        org.junit.Assert.assertNotNull(entryCollection75);
        org.junit.Assert.assertNotNull(entryCollection76);
        org.junit.Assert.assertEquals(uRL79.toString(), "[/:100]:0://[hi!://:100/hi!:1]:0/:100");
        org.junit.Assert.assertEquals(uRL80.toString(), "[://[archive://:10archive]:100archive://:10archive]:0://[hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1]:1/:100");
        org.junit.Assert.assertEquals(uRL81.toString(), "hi!://:100/hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:10hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]");
        org.junit.Assert.assertEquals(uRL82.toString(), "hi!://:100/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL83.toString(), "hi!://:100/hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:100hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10");
        org.junit.Assert.assertEquals(uRL84.toString(), "hi!://:100/://[hi!://:100/:100]:100/hi!://:100://[hi!://:100/hi!]hi!://:100/hi!://:100/hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL85.toString(), "hi!://:100/hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:100hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10://[hi!://:100/hi!://:100/:100]:100:1hi!://hi!:1hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:32/archive");
    }

    @Test
    public void test13434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13434");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive11.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive11.new FilteredURLStreamHandler();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive11.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive16.getNestedArchives(entryFilter18);
        explodedArchive16.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter22 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList23 = explodedArchive16.getNestedArchives(entryFilter22);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter24 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList25 = explodedArchive16.getNestedArchives(entryFilter24);
        java.util.jar.Manifest manifest26 = explodedArchive16.getManifest();
        java.io.File file27 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file29 = explodedArchive28.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive28.getNestedArchives(entryFilter30);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter32 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList33 = explodedArchive28.getNestedArchives(entryFilter32);
        explodedArchive28.filtered = false;
        java.util.jar.Manifest manifest36 = null;
        explodedArchive28.manifest = manifest36;
        java.io.File file38 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive39 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file40 = explodedArchive39.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter41 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList42 = explodedArchive39.getNestedArchives(entryFilter41);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter43 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList44 = explodedArchive39.getNestedArchives(entryFilter43);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap45 = explodedArchive39.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive39.getNestedArchives(entryFilter46);
        java.io.File file48 = null;
        java.io.File file49 = null;
        java.io.File file50 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file52 = explodedArchive51.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter53 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList54 = explodedArchive51.getNestedArchives(entryFilter53);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter55 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList56 = explodedArchive51.getNestedArchives(entryFilter55);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap57 = explodedArchive51.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive58 = new org.springframework.boot.loader.archive.ExplodedArchive(file50, asciiBytesMap57);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap59 = explodedArchive58.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive(file49, asciiBytesMap59);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive61 = new org.springframework.boot.loader.archive.ExplodedArchive(file48, asciiBytesMap59);
        explodedArchive39.entries = asciiBytesMap59;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive(file38, asciiBytesMap59);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap64 = explodedArchive63.entries;
        explodedArchive28.entries = asciiBytesMap64;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive(file27, asciiBytesMap64);
        explodedArchive16.entries = asciiBytesMap64;
        explodedArchive11.entries = asciiBytesMap64;
        explodedArchive11.filtered = true;
        java.util.jar.Manifest manifest71 = explodedArchive11.getManifest();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter72 = null;
        org.springframework.boot.loader.archive.Archive archive73 = explodedArchive11.getFilteredArchive(entryRenameFilter72);
        java.io.File file74 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive11.buildEntries(file74, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(archiveList23);
        org.junit.Assert.assertNotNull(archiveList25);
        org.junit.Assert.assertNull(manifest26);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNotNull(archiveList33);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(archiveList42);
        org.junit.Assert.assertNotNull(archiveList44);
        org.junit.Assert.assertNotNull(asciiBytesMap45);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNotNull(archiveList54);
        org.junit.Assert.assertNotNull(archiveList56);
        org.junit.Assert.assertNotNull(asciiBytesMap57);
        org.junit.Assert.assertNotNull(asciiBytesMap59);
        org.junit.Assert.assertNotNull(asciiBytesMap64);
        org.junit.Assert.assertNull(manifest71);
        org.junit.Assert.assertNotNull(archive73);
    }

    @Test
    public void test13435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13435");
        java.io.File file0 = null;
        java.io.File file1 = null;
        java.io.File file2 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive3 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file4 = explodedArchive3.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive3.getNestedArchives(entryFilter5);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive3.getNestedArchives(entryFilter7);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive3.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive10 = new org.springframework.boot.loader.archive.ExplodedArchive(file2, asciiBytesMap9);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = explodedArchive11.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap12);
        java.io.File file14 = null;
        java.io.File file15 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive16.getNestedArchives(entryFilter18);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive16.getNestedArchives(entryFilter20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive16.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file15, asciiBytesMap22);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = explodedArchive23.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file14, asciiBytesMap24);
        boolean boolean26 = explodedArchive25.filtered;
        explodedArchive25.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter29 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList30 = explodedArchive25.getNestedArchives(entryFilter29);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive31.getNestedArchives(entryFilter33);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry35 = explodedArchive31.new FileEntry();
        java.lang.String str36 = explodedArchive31.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap37 = explodedArchive31.entries;
        java.util.jar.Manifest manifest38 = null;
        explodedArchive31.manifest = manifest38;
        java.io.File file40 = null;
        explodedArchive31.root = file40;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive31.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap43 = explodedArchive31.entries;
        explodedArchive25.entries = asciiBytesMap43;
        explodedArchive13.entries = asciiBytesMap43;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str46 = explodedArchive13.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNotNull(asciiBytesMap12);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNotNull(asciiBytesMap24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(archiveList30);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "archive" + "'", str36, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap37);
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertNotNull(asciiBytesMap43);
    }

    @Test
    public void test13436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13436");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.toExternalForm();
        java.lang.String str14 = uRL9.getRef();
        java.lang.String str15 = uRL9.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection22 = explodedArchive20.getEntries();
        java.util.jar.Manifest manifest23 = explodedArchive20.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler24 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL25 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler24);
        java.lang.String str26 = uRL25.getFile();
        int int27 = uRL25.getDefaultPort();
        java.lang.String str28 = uRL25.getRef();
        java.lang.String str29 = uRL25.getRef();
        java.net.URL uRL31 = new java.net.URL(uRL25, "hi!:1");
        int int32 = uRL25.getDefaultPort();
        java.lang.String str33 = uRL25.getPath();
        boolean boolean34 = uRL9.sameFile(uRL25);
        int int35 = uRL9.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100" + "'", str13, "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertNotNull(entryCollection22);
        org.junit.Assert.assertNull(manifest23);
        org.junit.Assert.assertEquals(uRL25.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals(uRL31.toString(), "hi!://:100/hi!:1");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test13437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13437");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive1.new FileEntry();
        java.lang.String str6 = explodedArchive1.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry7 = explodedArchive1.new FileEntry();
        java.util.jar.Manifest manifest8 = null;
        explodedArchive1.manifest = manifest8;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        boolean boolean12 = explodedArchive11.filtered;
        java.io.File file13 = explodedArchive11.root;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(file13);
    }

    @Test
    public void test13438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13438");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getAuthority();
        java.lang.String str25 = uRL9.getRef();
        java.lang.String str26 = uRL9.getProtocol();
        java.lang.String str27 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive32 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str33 = explodedArchive32.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection34 = explodedArchive32.getEntries();
        java.util.jar.Manifest manifest35 = explodedArchive32.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler36 = explodedArchive32.new FilteredURLStreamHandler();
        java.net.URL uRL37 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler36);
        java.lang.String str38 = uRL37.getFile();
        int int39 = uRL37.getDefaultPort();
        java.lang.String str40 = uRL37.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str46 = explodedArchive45.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection47 = explodedArchive45.getEntries();
        java.util.jar.Manifest manifest48 = explodedArchive45.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler49 = explodedArchive45.new FilteredURLStreamHandler();
        java.net.URL uRL50 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler49);
        java.lang.String str51 = uRL50.getQuery();
        java.lang.String str52 = uRL50.getRef();
        java.lang.String str53 = uRL50.getRef();
        java.lang.String str54 = uRL50.toExternalForm();
        boolean boolean55 = uRL37.sameFile(uRL50);
        java.lang.String str56 = uRL50.getUserInfo();
        java.lang.String str57 = uRL50.getHost();
        java.lang.String str58 = uRL50.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file61 = explodedArchive60.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter62 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList63 = explodedArchive60.getNestedArchives(entryFilter62);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter64 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList65 = explodedArchive60.getNestedArchives(entryFilter64);
        java.lang.String str66 = explodedArchive60.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler67 = explodedArchive60.new FilteredURLStreamHandler();
        java.net.URL uRL68 = new java.net.URL(uRL50, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler67);
        boolean boolean69 = uRL9.sameFile(uRL50);
        java.lang.String str70 = uRL9.getPath();
        java.lang.String str71 = uRL9.toExternalForm();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "archive" + "'", str33, "archive");
        org.junit.Assert.assertNotNull(entryCollection34);
        org.junit.Assert.assertNull(manifest35);
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertNotNull(entryCollection47);
        org.junit.Assert.assertNull(manifest48);
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!://:100" + "'", str54, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertNotNull(archiveList63);
        org.junit.Assert.assertNotNull(archiveList65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "archive" + "'", str66, "archive");
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!://:100" + "'", str71, "hi!://:100");
    }

    @Test
    public void test13439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13439");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = null;
        fileEntry4.file = file5;
        java.io.File file7 = fileEntry4.getFile();
        java.io.File file8 = fileEntry4.getFile();
        java.io.File file9 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = fileEntry4.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes11 = null;
        fileEntry4.name = asciiBytes11;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(asciiBytes10);
    }

    @Test
    public void test13440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13440");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive11.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry16 = explodedArchive11.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes17 = fileEntry16.name;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = fileEntry16.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNull(asciiBytes17);
    }

    @Test
    public void test13441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13441");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        boolean boolean8 = explodedArchive0.filtered;
        java.io.File file9 = explodedArchive0.root;
        boolean boolean10 = explodedArchive0.filtered;
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler13 = explodedArchive0.new FilteredURLStreamHandler();
        boolean boolean14 = explodedArchive0.filtered;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test13442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13442");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str17 = explodedArchive16.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection18 = explodedArchive16.getEntries();
        java.util.jar.Manifest manifest19 = explodedArchive16.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler20 = explodedArchive16.new FilteredURLStreamHandler();
        java.net.URL uRL21 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler20);
        java.lang.String str22 = uRL21.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str25 = explodedArchive24.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection26 = explodedArchive24.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler27 = explodedArchive24.new FilteredURLStreamHandler();
        java.net.URL uRL28 = new java.net.URL(uRL21, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.net.URL uRL29 = new java.net.URL(uRL9, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler27);
        java.lang.String str30 = uRL9.getFile();
        java.lang.String str31 = uRL9.getHost();
        java.lang.String str32 = uRL9.getProtocol();
        int int33 = uRL9.getPort();
        java.lang.String str34 = uRL9.getRef();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "archive" + "'", str17, "archive");
        org.junit.Assert.assertNotNull(entryCollection18);
        org.junit.Assert.assertNull(manifest19);
        org.junit.Assert.assertEquals(uRL21.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "archive" + "'", str25, "archive");
        org.junit.Assert.assertNotNull(entryCollection26);
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 100 + "'", int33 == 100);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test13443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13443");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getQuery();
        java.lang.String str15 = uRL13.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL27 = new java.net.URL(uRL13, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL28 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str38 = explodedArchive37.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection39 = explodedArchive37.getEntries();
        java.util.jar.Manifest manifest40 = explodedArchive37.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive37.new FilteredURLStreamHandler();
        java.net.URL uRL42 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.lang.String str43 = uRL42.getQuery();
        java.lang.String str44 = uRL42.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive50 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str51 = explodedArchive50.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection52 = explodedArchive50.getEntries();
        java.util.jar.Manifest manifest53 = explodedArchive50.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler54 = explodedArchive50.new FilteredURLStreamHandler();
        java.net.URL uRL55 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler54);
        java.net.URL uRL56 = new java.net.URL(uRL42, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler54);
        java.net.URL uRL57 = new java.net.URL("/archive", "/archive", (int) (byte) 0, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler54);
        int int58 = uRL57.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive63 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str64 = explodedArchive63.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection65 = explodedArchive63.getEntries();
        java.util.jar.Manifest manifest66 = explodedArchive63.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler67 = explodedArchive63.new FilteredURLStreamHandler();
        java.net.URL uRL68 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler67);
        java.lang.String str69 = uRL68.getFile();
        java.lang.String str70 = uRL68.getQuery();
        java.lang.String str71 = uRL68.getRef();
        java.lang.String str72 = uRL68.toExternalForm();
        java.lang.String str73 = uRL68.getPath();
        java.lang.String str74 = uRL68.getAuthority();
        boolean boolean75 = uRL57.sameFile(uRL68);
        boolean boolean76 = uRL28.sameFile(uRL57);
        java.lang.String str77 = uRL28.toString();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL28.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertNotNull(entryCollection39);
        org.junit.Assert.assertNull(manifest40);
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "archive" + "'", str51, "archive");
        org.junit.Assert.assertNotNull(entryCollection52);
        org.junit.Assert.assertNull(manifest53);
        org.junit.Assert.assertEquals(uRL55.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL56.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL57.toString(), "/archive:///archive:0hi!://:100");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "archive" + "'", str64, "archive");
        org.junit.Assert.assertNotNull(entryCollection65);
        org.junit.Assert.assertNull(manifest66);
        org.junit.Assert.assertEquals(uRL68.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!://:100" + "'", str72, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + ":100" + "'", str74, ":100");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "archive://:10archive" + "'", str77, "archive://:10archive");
    }

    @Test
    public void test13444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13444");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        java.io.File file2 = explodedArchive0.root;
        java.io.File file3 = explodedArchive0.root;
        java.util.jar.Manifest manifest4 = explodedArchive0.manifest;
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive0.getNestedArchives(entryFilter7);
        java.util.jar.Manifest manifest9 = null;
        explodedArchive0.manifest = manifest9;
        boolean boolean11 = explodedArchive0.filtered;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test13445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13445");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        java.util.jar.Manifest manifest15 = explodedArchive12.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler16 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL17 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler16);
        java.lang.String str18 = uRL17.getFile();
        int int19 = uRL17.getDefaultPort();
        java.lang.String str20 = uRL17.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str26 = explodedArchive25.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection27 = explodedArchive25.getEntries();
        java.util.jar.Manifest manifest28 = explodedArchive25.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler29 = explodedArchive25.new FilteredURLStreamHandler();
        java.net.URL uRL30 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler29);
        java.lang.String str31 = uRL30.getQuery();
        java.lang.String str32 = uRL30.getRef();
        java.lang.String str33 = uRL30.getRef();
        java.lang.String str34 = uRL30.toExternalForm();
        boolean boolean35 = uRL17.sameFile(uRL30);
        java.lang.String str36 = uRL30.getUserInfo();
        java.lang.String str37 = uRL30.getHost();
        java.lang.String str38 = uRL30.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive40.getNestedArchives(entryFilter42);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter44 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList45 = explodedArchive40.getNestedArchives(entryFilter44);
        java.lang.String str46 = explodedArchive40.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL(uRL30, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.lang.String str49 = uRL30.getPath();
        java.net.URL uRL51 = new java.net.URL(uRL30, "[hi!://:100/hi!]");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive57 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str58 = explodedArchive57.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection59 = explodedArchive57.getEntries();
        java.util.jar.Manifest manifest60 = explodedArchive57.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler61 = explodedArchive57.new FilteredURLStreamHandler();
        java.net.URL uRL62 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler61);
        java.lang.String str63 = uRL62.getQuery();
        java.lang.String str64 = uRL62.getPath();
        java.lang.String str65 = uRL62.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file68 = explodedArchive67.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter69 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList70 = explodedArchive67.getNestedArchives(entryFilter69);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter71 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList72 = explodedArchive67.getNestedArchives(entryFilter71);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap73 = explodedArchive67.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler74 = explodedArchive67.new FilteredURLStreamHandler();
        java.net.URL uRL75 = new java.net.URL(uRL62, "", (java.net.URLStreamHandler) filteredURLStreamHandler74);
        java.net.URL uRL76 = new java.net.URL(uRL51, "hi!://:100/hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler74);
        java.net.URL uRL77 = new java.net.URL("[hi!://:100/archive]:100", "", (-1), "", (java.net.URLStreamHandler) filteredURLStreamHandler74);
        java.net.URL uRL78 = new java.net.URL("[hi!://:100/hi!://:100/:100]", "archive://:0hi!://:100/hi!://:100/hi!://:100/hi!://:100", (int) (byte) 0, "/hi!://:100/hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0hi!://[:100]:52hi!", (java.net.URLStreamHandler) filteredURLStreamHandler74);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertEquals(uRL17.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "archive" + "'", str26, "archive");
        org.junit.Assert.assertNotNull(entryCollection27);
        org.junit.Assert.assertNull(manifest28);
        org.junit.Assert.assertEquals(uRL30.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!://:100" + "'", str34, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertNotNull(archiveList45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "archive" + "'", str46, "archive");
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100/[hi!://:100/hi!]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "archive" + "'", str58, "archive");
        org.junit.Assert.assertNotNull(entryCollection59);
        org.junit.Assert.assertNull(manifest60);
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNotNull(archiveList70);
        org.junit.Assert.assertNotNull(archiveList72);
        org.junit.Assert.assertNotNull(asciiBytesMap73);
        org.junit.Assert.assertEquals(uRL75.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL76.toString(), "hi!://:100/[hi!://:100/hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL77.toString(), "[hi!://:100/archive]:100:");
        org.junit.Assert.assertEquals(uRL78.toString(), "[hi!://:100/hi!://:100/:100]://[archive://:0hi!://:100/hi!://:100/hi!://:100/hi!://:100]:0/hi!://:100/hi!://[hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]]:0hi!://[:100]:52hi!");
    }

    @Test
    public void test13446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13446");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.lang.String str13 = uRL9.toExternalForm();
        java.lang.String str14 = uRL9.getRef();
        java.lang.String str15 = uRL9.getPath();
        java.lang.String str16 = uRL9.getRef();
        int int17 = uRL9.getDefaultPort();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!://:100" + "'", str13, "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test13447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13447");
        java.net.URLConnection.setDefaultRequestProperty("hi!://:100/archive:///archive:0hi!://:100", "hi!://:100/hi!://[hi!://:100/:100]:100/archive://[hi!://:100/hi!]:1/hi!://[/:100]:0:32hi!://:100/hi!://:100");
    }

    @Test
    public void test13448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13448");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
        java.lang.String str8 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive0.getEntries();
        java.util.jar.Manifest manifest10 = null;
        explodedArchive0.manifest = manifest10;
        java.util.jar.Manifest manifest12 = explodedArchive0.manifest;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNull(manifest12);
    }

    @Test
    public void test13449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13449");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getPath();
        java.lang.String str11 = uRL9.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str24 = uRL9.getAuthority();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str36 = uRL35.getFile();
        int int37 = uRL35.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive43 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str44 = explodedArchive43.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection45 = explodedArchive43.getEntries();
        java.util.jar.Manifest manifest46 = explodedArchive43.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive43.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.lang.String str49 = uRL48.getQuery();
        java.lang.String str50 = uRL48.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str57 = explodedArchive56.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection58 = explodedArchive56.getEntries();
        java.util.jar.Manifest manifest59 = explodedArchive56.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler60 = explodedArchive56.new FilteredURLStreamHandler();
        java.net.URL uRL61 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL62 = new java.net.URL(uRL48, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL63 = new java.net.URL(uRL35, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.net.URL uRL64 = new java.net.URL(uRL9, "", (java.net.URLStreamHandler) filteredURLStreamHandler60);
        java.io.File file66 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive67 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file68 = explodedArchive67.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter69 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList70 = explodedArchive67.getNestedArchives(entryFilter69);
        explodedArchive67.filtered = false;
        java.util.jar.Manifest manifest73 = explodedArchive67.manifest;
        java.io.File file74 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file76 = explodedArchive75.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter77 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList78 = explodedArchive75.getNestedArchives(entryFilter77);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter79 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList80 = explodedArchive75.getNestedArchives(entryFilter79);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap81 = explodedArchive75.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive(file74, asciiBytesMap81);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap83 = explodedArchive82.entries;
        explodedArchive67.entries = asciiBytesMap83;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive85 = new org.springframework.boot.loader.archive.ExplodedArchive(file66, asciiBytesMap83);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap86 = explodedArchive85.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler87 = explodedArchive85.new FilteredURLStreamHandler();
        java.net.URL uRL88 = new java.net.URL(uRL64, "hi!://:100/:100", (java.net.URLStreamHandler) filteredURLStreamHandler87);
        java.lang.String str89 = uRL88.getRef();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + ":100" + "'", str24, ":100");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "archive" + "'", str44, "archive");
        org.junit.Assert.assertNotNull(entryCollection45);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "archive" + "'", str57, "archive");
        org.junit.Assert.assertNotNull(entryCollection58);
        org.junit.Assert.assertNull(manifest59);
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL63.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL64.toString(), "hi!://:100");
        org.junit.Assert.assertNull(file68);
        org.junit.Assert.assertNotNull(archiveList70);
        org.junit.Assert.assertNull(manifest73);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertNotNull(archiveList78);
        org.junit.Assert.assertNotNull(archiveList80);
        org.junit.Assert.assertNotNull(asciiBytesMap81);
        org.junit.Assert.assertNotNull(asciiBytesMap83);
        org.junit.Assert.assertNotNull(asciiBytesMap86);
        org.junit.Assert.assertEquals(uRL88.toString(), "hi!://:100/hi!://:100/:100");
        org.junit.Assert.assertNull(str89);
    }

    @Test
    public void test13450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13450");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.jar.Manifest manifest4 = null;
        explodedArchive0.manifest = manifest4;
        explodedArchive0.filtered = true;
        java.lang.String str8 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive0.getNestedArchives(entryFilter9);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive0.entries;
        java.lang.String str12 = explodedArchive0.toString();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "archive" + "'", str12, "archive");
    }

    @Test
    public void test13451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13451");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL37.getUserInfo();
        java.net.URL uRL40 = new java.net.URL(uRL37, "hi!");
        java.lang.String str41 = uRL40.getHost();
        int int42 = uRL40.getPort();
        java.lang.String str43 = uRL40.getRef();
        java.lang.String str44 = uRL40.getRef();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals(uRL40.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
    }

    @Test
    public void test13452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13452");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive1.getNestedArchives(entryFilter8);
        java.io.File file10 = null;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap21);
        explodedArchive1.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap21);
        java.util.jar.Manifest manifest26 = null;
        explodedArchive25.manifest = manifest26;
        boolean boolean28 = explodedArchive25.filtered;
        java.util.jar.Manifest manifest29 = null;
        explodedArchive25.manifest = manifest29;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test13453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13453");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str2 = explodedArchive1.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection3 = explodedArchive1.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter4 = null;
        org.springframework.boot.loader.archive.Archive archive5 = explodedArchive1.getFilteredArchive(entryRenameFilter4);
        java.io.File file6 = explodedArchive1.root;
        java.lang.String str7 = explodedArchive1.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap8);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive9.getNestedArchives(entryFilter10);
        java.util.jar.Manifest manifest12 = null;
        explodedArchive9.manifest = manifest12;
        java.io.File file14 = null;
        java.io.File file15 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive16.getNestedArchives(entryFilter18);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive16.getNestedArchives(entryFilter20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive16.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file15, asciiBytesMap22);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = explodedArchive23.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file14, asciiBytesMap24);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry26 = explodedArchive25.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes27 = fileEntry26.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes28 = null;
        fileEntry26.name = asciiBytes28;
        java.io.File file30 = fileEntry26.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes31 = null;
        fileEntry26.name = asciiBytes31;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes33 = fileEntry26.getName();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes34 = null;
        fileEntry26.name = asciiBytes34;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.loader.archive.Archive archive36 = explodedArchive9.getNestedArchive((org.springframework.boot.loader.archive.Archive.Entry) fileEntry26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "archive" + "'", str2, "archive");
        org.junit.Assert.assertNotNull(entryCollection3);
        org.junit.Assert.assertNotNull(archive5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNotNull(asciiBytesMap24);
        org.junit.Assert.assertNull(asciiBytes27);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertNull(asciiBytes33);
    }

    @Test
    public void test13454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13454");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getRef();
        java.lang.String str13 = uRL9.getFile();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test13455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13455");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file13 = explodedArchive12.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter14 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList15 = explodedArchive12.getNestedArchives(entryFilter14);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive12.getNestedArchives(entryFilter16);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap18 = explodedArchive12.entries;
        java.util.jar.Manifest manifest19 = null;
        explodedArchive12.manifest = manifest19;
        boolean boolean21 = explodedArchive12.filtered;
        java.util.jar.Manifest manifest22 = explodedArchive12.manifest;
        java.lang.String str23 = explodedArchive12.toString();
        java.lang.String str24 = explodedArchive12.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("://[archive://:10archive]:100archive://:10archive", "[hi!://:100/hi!]:1", (int) (short) 100, "[hi!://:100/hi!]:1", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL27 = new java.net.URL("/hi!://:100/hi!://:100", "hi!://:100/hi!:1", (int) (byte) 1, "hi!://:100/://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.net.URL uRL28 = new java.net.URL("hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://:100/hi!://:100]:100hi!://:100/hi!:1", "/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!://:100/hi!://:100/:100", 100, "hi!://:100/[/hi!:1]", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(archiveList15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(asciiBytesMap18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(manifest22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "archive" + "'", str23, "archive");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "archive" + "'", str24, "archive");
        org.junit.Assert.assertEquals(uRL26.toString(), "://[archive://:10archive]:100archive://:10archive://[hi!://:100/hi!]:1:100[hi!://:100/hi!]:1");
        org.junit.Assert.assertEquals(uRL27.toString(), "/hi!://:100/hi!://:100://[hi!://:100/hi!:1]:1hi!://:100/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals(uRL28.toString(), "hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[hi!://:100/hi!://:100]:100hi!://:100/hi!:1://[/hi!://:100/hi!://[hi!://:100/hi!]:0hi!://:100/hi!://:100/hi!://:100/:100]:100hi!://:100/[/hi!:1]");
    }

    @Test
    public void test13456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13456");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL4 = new java.net.URL("hi!://[hi!://:100/hi!]:0archive://:10:100", ":1", 35, "/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[archive://:10archive]hi!://:100/hi!://:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://[hi!://:100/hi!]:0archive://:10:100");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13457");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry5 = explodedArchive1.new FileEntry();
        java.lang.String str6 = explodedArchive1.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap7);
        java.util.jar.Manifest manifest9 = explodedArchive8.getManifest();
        java.io.File file10 = null;
        explodedArchive8.root = file10;
        java.util.jar.Manifest manifest12 = null;
        explodedArchive8.manifest = manifest12;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNull(manifest9);
    }

    @Test
    public void test13458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13458");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive11.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = fileEntry12.name;
        java.io.File file14 = fileEntry12.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes15 = fileEntry12.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes16 = fileEntry12.getName();
        java.io.File file17 = fileEntry12.getFile();
        java.io.File file18 = fileEntry12.file;
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(asciiBytes13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNull(asciiBytes15);
        org.junit.Assert.assertNull(asciiBytes16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(file18);
    }

    @Test
    public void test13459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13459");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        int int12 = uRL9.getPort();
        java.net.URL uRL14 = new java.net.URL(uRL9, "hi!://:100/archive");
        int int15 = uRL14.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str21 = explodedArchive20.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = null;
        explodedArchive20.entries = asciiBytesMap22;
        java.util.jar.Manifest manifest24 = null;
        explodedArchive20.manifest = manifest24;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler26 = explodedArchive20.new FilteredURLStreamHandler();
        java.net.URL uRL27 = new java.net.URL("hi!", ":100", (int) '4', "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler26);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str37 = explodedArchive36.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection38 = explodedArchive36.getEntries();
        java.util.jar.Manifest manifest39 = explodedArchive36.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler40 = explodedArchive36.new FilteredURLStreamHandler();
        java.net.URL uRL41 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler40);
        java.lang.String str42 = uRL41.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str49 = explodedArchive48.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection50 = explodedArchive48.getEntries();
        java.util.jar.Manifest manifest51 = explodedArchive48.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler52 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL53 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler52);
        java.lang.String str54 = uRL53.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str57 = explodedArchive56.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection58 = explodedArchive56.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler59 = explodedArchive56.new FilteredURLStreamHandler();
        java.net.URL uRL60 = new java.net.URL(uRL53, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.net.URL uRL61 = new java.net.URL(uRL41, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        java.net.URL uRL62 = new java.net.URL("hi!:1", "/archive", (int) (short) 0, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler59);
        boolean boolean63 = uRL27.sameFile(uRL62);
        java.lang.String str64 = uRL27.getQuery();
        int int65 = uRL27.getDefaultPort();
        boolean boolean66 = uRL14.sameFile(uRL27);
        java.lang.String str67 = uRL27.getPath();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertEquals(uRL14.toString(), "hi!://:100/hi!://:100/archive");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive" + "'", str21, "archive");
        org.junit.Assert.assertEquals(uRL27.toString(), "hi!://[:100]:52hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "archive" + "'", str37, "archive");
        org.junit.Assert.assertNotNull(entryCollection38);
        org.junit.Assert.assertNull(manifest39);
        org.junit.Assert.assertEquals(uRL41.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "archive" + "'", str49, "archive");
        org.junit.Assert.assertNotNull(entryCollection50);
        org.junit.Assert.assertNull(manifest51);
        org.junit.Assert.assertEquals(uRL53.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "archive" + "'", str57, "archive");
        org.junit.Assert.assertNotNull(entryCollection58);
        org.junit.Assert.assertEquals(uRL60.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL61.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL62.toString(), "hi!:1:///archive:0archive");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
    }

    @Test
    public void test13460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13460");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        java.util.jar.Manifest manifest14 = explodedArchive11.getManifest();
        java.util.jar.Manifest manifest15 = explodedArchive11.manifest;
        java.io.File file16 = null;
        explodedArchive11.root = file16;
        java.io.File file18 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive19.getNestedArchives(entryFilter21);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive19.getNestedArchives(entryFilter23);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive26.entries;
        explodedArchive11.entries = asciiBytesMap27;
        java.io.File file29 = null;
        explodedArchive11.root = file29;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler31 = explodedArchive11.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest32 = null;
        explodedArchive11.manifest = manifest32;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter34 = null;
        org.springframework.boot.loader.archive.Archive archive35 = explodedArchive11.getFilteredArchive(entryRenameFilter34);
        java.lang.Class<?> wildcardClass36 = archive35.getClass();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(manifest14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertNotNull(archive35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test13461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13461");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive1.getNestedArchives(entryFilter8);
        java.io.File file10 = null;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap21);
        explodedArchive1.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry26 = explodedArchive25.new FileEntry();
        explodedArchive25.filtered = true;
        explodedArchive25.filtered = true;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter31 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList32 = explodedArchive25.getNestedArchives(entryFilter31);
        java.util.jar.Manifest manifest33 = null;
        explodedArchive25.manifest = manifest33;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter35 = null;
        org.springframework.boot.loader.archive.Archive archive36 = explodedArchive25.getFilteredArchive(entryRenameFilter35);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNotNull(archiveList32);
        org.junit.Assert.assertNotNull(archive36);
    }

    @Test
    public void test13462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13462");
        java.lang.String str1 = java.net.URLConnection.guessContentTypeFromName("hi!://:100/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test13463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13463");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter9 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList10 = explodedArchive2.getNestedArchives(entryFilter9);
        java.io.File file11 = null;
        java.io.File file12 = null;
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive21.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap22);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap22);
        explodedArchive2.entries = asciiBytesMap22;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap22);
        java.util.jar.Manifest manifest27 = null;
        explodedArchive26.manifest = manifest27;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter29 = null;
        org.springframework.boot.loader.archive.Archive archive30 = explodedArchive26.getFilteredArchive(entryRenameFilter29);
        java.io.File file31 = null;
        explodedArchive26.root = file31;
        java.io.File file33 = null;
        java.io.File file34 = null;
        java.io.File file35 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file37 = explodedArchive36.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter38 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList39 = explodedArchive36.getNestedArchives(entryFilter38);
        explodedArchive36.filtered = false;
        java.util.jar.Manifest manifest42 = explodedArchive36.manifest;
        java.io.File file43 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file45 = explodedArchive44.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive44.getNestedArchives(entryFilter46);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter48 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList49 = explodedArchive44.getNestedArchives(entryFilter48);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap50 = explodedArchive44.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive51 = new org.springframework.boot.loader.archive.ExplodedArchive(file43, asciiBytesMap50);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap52 = explodedArchive51.entries;
        explodedArchive36.entries = asciiBytesMap52;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file35, asciiBytesMap52);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive55 = new org.springframework.boot.loader.archive.ExplodedArchive(file34, asciiBytesMap52);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive56 = new org.springframework.boot.loader.archive.ExplodedArchive(file33, asciiBytesMap52);
        explodedArchive26.entries = asciiBytesMap52;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap58 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive59 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap58);
        boolean boolean60 = explodedArchive59.filtered;
        boolean boolean61 = explodedArchive59.filtered;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter62 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList63 = explodedArchive59.getNestedArchives(entryFilter62);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(archiveList10);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNotNull(archive30);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(archiveList39);
        org.junit.Assert.assertNull(manifest42);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertNotNull(archiveList49);
        org.junit.Assert.assertNotNull(asciiBytesMap50);
        org.junit.Assert.assertNotNull(asciiBytesMap52);
        org.junit.Assert.assertNotNull(asciiBytesMap58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(archiveList63);
    }

    @Test
    public void test13464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13464");
        java.io.File file4 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str6 = explodedArchive5.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection7 = explodedArchive5.getEntries();
        java.io.File file8 = explodedArchive5.root;
        java.util.jar.Manifest manifest9 = explodedArchive5.getManifest();
        java.io.File file10 = null;
        explodedArchive5.root = file10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive5.new FileEntry();
        java.lang.String str13 = explodedArchive5.toString();
        java.io.File file14 = null;
        explodedArchive5.root = file14;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive5.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive(file4, asciiBytesMap16);
        java.util.jar.Manifest manifest18 = explodedArchive17.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL("[archive://:10:100]:1", "", (int) 'a', "archive://:10:100", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        java.lang.String str21 = uRL20.getPath();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNotNull(entryCollection7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertEquals(uRL20.toString(), "[archive://:10:100]:1://:97archive://:10:100");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "archive://:10:100" + "'", str21, "archive://:10:100");
    }

    @Test
    public void test13465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13465");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap7 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive1.getNestedArchives(entryFilter8);
        java.io.File file10 = null;
        java.io.File file11 = null;
        java.io.File file12 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file14 = explodedArchive13.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter15 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList16 = explodedArchive13.getNestedArchives(entryFilter15);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive13.getNestedArchives(entryFilter17);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive13.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive20 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive20.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file11, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file10, asciiBytesMap21);
        explodedArchive1.entries = asciiBytesMap21;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap21);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry26 = explodedArchive25.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes27 = null;
        fileEntry26.name = asciiBytes27;
        java.io.File file29 = fileEntry26.getFile();
        java.io.File file30 = null;
        fileEntry26.file = file30;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes32 = fileEntry26.getName();
        java.io.File file33 = null;
        fileEntry26.file = file33;
        java.lang.Class<?> wildcardClass35 = fileEntry26.getClass();
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap7);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(archiveList16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNull(asciiBytes32);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test13466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13466");
        java.net.URL uRL0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL2 = new java.net.URL(uRL0, "hi!://:100/[/hi!://:100/archive]");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: no protocol: hi!://:100/[/hi!://:100/archive]");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13467");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive0.entries;
        java.util.jar.Manifest manifest9 = explodedArchive0.getManifest();
        boolean boolean10 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter11 = null;
        org.springframework.boot.loader.archive.Archive archive12 = explodedArchive0.getFilteredArchive(entryRenameFilter11);
        java.lang.String str13 = explodedArchive0.toString();
        java.io.File file14 = null;
        // The following exception was thrown during execution in test generation
        try {
            explodedArchive0.buildEntries(file14, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(archive12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
    }

    @Test
    public void test13468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13468");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file5 = explodedArchive4.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive4.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry8 = explodedArchive4.new FileEntry();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler9 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL10 = new java.net.URL("archive://:10archive", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler9);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str16 = explodedArchive15.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection17 = explodedArchive15.getEntries();
        java.util.jar.Manifest manifest18 = explodedArchive15.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler19 = explodedArchive15.new FilteredURLStreamHandler();
        java.net.URL uRL20 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler19);
        java.lang.String str21 = uRL20.getQuery();
        java.lang.String str22 = uRL20.getRef();
        int int23 = uRL20.getPort();
        java.lang.String str24 = uRL20.getProtocol();
        java.lang.String str25 = uRL20.getPath();
        java.lang.String str26 = uRL20.getPath();
        java.lang.String str27 = uRL20.getUserInfo();
        java.lang.String str28 = uRL20.getProtocol();
        boolean boolean29 = uRL10.sameFile(uRL20);
        java.net.URL uRL31 = new java.net.URL(uRL20, ":100");
        java.lang.String str32 = uRL20.getRef();
        java.lang.String str33 = uRL20.toExternalForm();
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertEquals(uRL10.toString(), "archive://:10archive://:100");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "archive" + "'", str16, "archive");
        org.junit.Assert.assertNotNull(entryCollection17);
        org.junit.Assert.assertNull(manifest18);
        org.junit.Assert.assertEquals(uRL20.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals(uRL31.toString(), "hi!://:100/:100");
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!://:100" + "'", str33, "hi!://:100");
    }

    @Test
    public void test13469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13469");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str19 = explodedArchive18.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection20 = explodedArchive18.getEntries();
        java.util.jar.Manifest manifest21 = explodedArchive18.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler22 = explodedArchive18.new FilteredURLStreamHandler();
        java.net.URL uRL23 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler22);
        java.lang.String str24 = uRL23.getQuery();
        java.lang.String str25 = uRL23.getPath();
        boolean boolean26 = uRL13.sameFile(uRL23);
        java.net.URLStreamHandler uRLStreamHandler28 = null;
        java.net.URL uRL29 = new java.net.URL(uRL23, "", uRLStreamHandler28);
        int int30 = uRL29.getPort();
        java.lang.String str31 = uRL29.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str42 = explodedArchive41.toString();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap43 = null;
        explodedArchive41.entries = asciiBytesMap43;
        java.util.jar.Manifest manifest45 = null;
        explodedArchive41.manifest = manifest45;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler47 = explodedArchive41.new FilteredURLStreamHandler();
        java.net.URL uRL48 = new java.net.URL("hi!", ":100", (int) '4', "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.net.URL uRL49 = new java.net.URL("hi!://:100/hi!://:100/hi!", "/hi!://:100/archive", (-1), "", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.net.URL uRL50 = new java.net.URL(uRL29, "hi!://hi!:1hi!", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.net.URL uRL51 = new java.net.URL("hi!://:100/hi!://:100/archive", "hi!://:100/:100", (int) (byte) 10, "", (java.net.URLStreamHandler) filteredURLStreamHandler47);
        java.lang.String str52 = uRL51.getPath();
        java.lang.String str53 = uRL51.getFile();
        java.lang.String str54 = uRL51.getPath();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection55 = uRL51.openConnection();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "archive" + "'", str19, "archive");
        org.junit.Assert.assertNotNull(entryCollection20);
        org.junit.Assert.assertNull(manifest21);
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals(uRL29.toString(), "hi!://:100");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "archive" + "'", str42, "archive");
        org.junit.Assert.assertEquals(uRL48.toString(), "hi!://[:100]:52hi!");
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100/hi!://:100/hi!://[/hi!://:100/archive]");
        org.junit.Assert.assertEquals(uRL50.toString(), "hi!://:100/hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
    }

    @Test
    public void test13470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13470");
        java.net.URLConnection.setDefaultRequestProperty("/[/hi!://:100/archive]", "archive://:10:100://[/archive:///archive:0hi!://:100]:1/archive");
    }

    @Test
    public void test13471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13471");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection5 = explodedArchive1.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive1.getNestedArchives(entryFilter6);
        java.util.jar.Manifest manifest8 = null;
        explodedArchive1.manifest = manifest8;
        explodedArchive1.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap12 = explodedArchive1.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive13 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap12);
        java.util.jar.Manifest manifest14 = explodedArchive13.manifest;
        java.util.jar.Manifest manifest15 = null;
        explodedArchive13.manifest = manifest15;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter17 = null;
        org.springframework.boot.loader.archive.Archive archive18 = explodedArchive13.getFilteredArchive(entryRenameFilter17);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(entryCollection5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap12);
        org.junit.Assert.assertNull(manifest14);
        org.junit.Assert.assertNotNull(archive18);
    }

    @Test
    public void test13472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13472");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        boolean boolean1 = explodedArchive0.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter2 = null;
        org.springframework.boot.loader.archive.Archive archive3 = explodedArchive0.getFilteredArchive(entryRenameFilter2);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(archive3);
    }

    @Test
    public void test13473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13473");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.lang.String str6 = explodedArchive0.toString();
        java.util.jar.Manifest manifest7 = explodedArchive0.manifest;
        java.io.File file8 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter9 = null;
        org.springframework.boot.loader.archive.Archive archive10 = explodedArchive0.getFilteredArchive(entryRenameFilter9);
        java.util.jar.Manifest manifest11 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest12 = null;
        explodedArchive0.manifest = manifest12;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry14 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest15 = explodedArchive0.getManifest();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(archive10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertNull(manifest15);
    }

    @Test
    public void test13474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13474");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getHost();
        java.lang.String str12 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str29 = explodedArchive28.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive28.getEntries();
        java.util.jar.Manifest manifest31 = explodedArchive28.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL33 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.lang.String str34 = uRL33.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str41 = explodedArchive40.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection42 = explodedArchive40.getEntries();
        java.util.jar.Manifest manifest43 = explodedArchive40.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler44 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL45 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler44);
        java.lang.String str46 = uRL45.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive48 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str49 = explodedArchive48.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection50 = explodedArchive48.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive48.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL(uRL45, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.net.URL uRL53 = new java.net.URL(uRL33, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.net.URL uRL54 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        boolean boolean55 = uRL9.sameFile(uRL54);
        java.lang.String str56 = uRL54.getAuthority();
        java.lang.String str57 = uRL54.getQuery();
        int int58 = uRL54.getPort();
        java.lang.String str59 = uRL54.getPath();
        java.lang.String str60 = uRL54.getFile();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "archive" + "'", str41, "archive");
        org.junit.Assert.assertNotNull(entryCollection42);
        org.junit.Assert.assertNull(manifest43);
        org.junit.Assert.assertEquals(uRL45.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "archive" + "'", str49, "archive");
        org.junit.Assert.assertNotNull(entryCollection50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL53.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + ":100" + "'", str56, ":100");
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "/hi!" + "'", str59, "/hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "/hi!" + "'", str60, "/hi!");
    }

    @Test
    public void test13475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13475");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.lang.String str17 = uRL9.getHost();
        java.lang.String str18 = uRL9.getProtocol();
        java.lang.String str19 = uRL9.toExternalForm();
        java.lang.String str20 = uRL9.getProtocol();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str27 = explodedArchive26.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection28 = explodedArchive26.getEntries();
        java.util.jar.Manifest manifest29 = explodedArchive26.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler30 = explodedArchive26.new FilteredURLStreamHandler();
        java.net.URL uRL31 = new java.net.URL("hi!", "hi!", (int) (byte) 1, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler30);
        java.net.URL uRL32 = new java.net.URL(uRL9, "://[archive://:10archive]:100archive://:10archive", (java.net.URLStreamHandler) filteredURLStreamHandler30);
        java.lang.String str33 = uRL32.getPath();
        java.lang.String str34 = uRL32.getHost();
        java.lang.String str35 = uRL32.getPath();
        java.lang.String str36 = uRL32.getHost();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!://:100" + "'", str19, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "archive" + "'", str27, "archive");
        org.junit.Assert.assertNotNull(entryCollection28);
        org.junit.Assert.assertNull(manifest29);
        org.junit.Assert.assertEquals(uRL31.toString(), "hi!://hi!:1hi!");
        org.junit.Assert.assertEquals(uRL32.toString(), "hi!://:100/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "/://[archive://:10archive]:100archive://:10archive" + "'", str33, "/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "/://[archive://:10archive]:100archive://:10archive" + "'", str35, "/://[archive://:10archive]:100archive://:10archive");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
    }

    @Test
    public void test13476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13476");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection10 = explodedArchive8.getEntries();
        java.util.jar.Manifest manifest11 = explodedArchive8.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler12 = explodedArchive8.new FilteredURLStreamHandler();
        java.net.URL uRL13 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler12);
        java.lang.String str14 = uRL13.getQuery();
        java.lang.String str15 = uRL13.getHost();
        int int16 = uRL13.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getFile();
        int int28 = uRL26.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive34 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str35 = explodedArchive34.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection36 = explodedArchive34.getEntries();
        java.util.jar.Manifest manifest37 = explodedArchive34.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler38 = explodedArchive34.new FilteredURLStreamHandler();
        java.net.URL uRL39 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler38);
        java.lang.String str40 = uRL39.getQuery();
        java.lang.String str41 = uRL39.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str48 = explodedArchive47.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection49 = explodedArchive47.getEntries();
        java.util.jar.Manifest manifest50 = explodedArchive47.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler51 = explodedArchive47.new FilteredURLStreamHandler();
        java.net.URL uRL52 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.net.URL uRL53 = new java.net.URL(uRL39, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.net.URL uRL54 = new java.net.URL(uRL26, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler51);
        java.lang.String str55 = uRL26.toExternalForm();
        boolean boolean56 = uRL13.sameFile(uRL26);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file63 = explodedArchive62.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter64 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList65 = explodedArchive62.getNestedArchives(entryFilter64);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection66 = explodedArchive62.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap67 = explodedArchive62.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler68 = explodedArchive62.new FilteredURLStreamHandler();
        java.net.URL uRL69 = new java.net.URL("/archive", "hi!://:100/hi!", (int) (byte) 1, "hi!://:100/archive", (java.net.URLStreamHandler) filteredURLStreamHandler68);
        java.net.URL uRL70 = new java.net.URL(uRL26, "hi!://:100", (java.net.URLStreamHandler) filteredURLStreamHandler68);
        java.net.URL uRL71 = new java.net.URL(":10", "", (int) '#', "/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]", (java.net.URLStreamHandler) filteredURLStreamHandler68);
        java.lang.String str72 = uRL71.toString();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNotNull(entryCollection10);
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertEquals(uRL13.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "archive" + "'", str35, "archive");
        org.junit.Assert.assertNotNull(entryCollection36);
        org.junit.Assert.assertNull(manifest37);
        org.junit.Assert.assertEquals(uRL39.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "archive" + "'", str48, "archive");
        org.junit.Assert.assertNotNull(entryCollection49);
        org.junit.Assert.assertNull(manifest50);
        org.junit.Assert.assertEquals(uRL52.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL53.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL54.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!://:100" + "'", str55, "hi!://:100");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(archiveList65);
        org.junit.Assert.assertNotNull(entryCollection66);
        org.junit.Assert.assertNotNull(asciiBytesMap67);
        org.junit.Assert.assertEquals(uRL69.toString(), "/archive://[hi!://:100/hi!]:1hi!://:100/archive");
        org.junit.Assert.assertEquals(uRL70.toString(), "hi!://:100/hi!://:100");
        org.junit.Assert.assertEquals(uRL71.toString(), ":10://:35/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + ":10://:35/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]" + "'", str72, ":10://:35/hi!://:100/archive://[hi!://:100]:0[hi!://:100/hi!]");
    }

    @Test
    public void test13477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13477");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        java.io.File file12 = null;
        explodedArchive11.root = file12;
        boolean boolean14 = explodedArchive11.filtered;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter15 = null;
        org.springframework.boot.loader.archive.Archive archive16 = explodedArchive11.getFilteredArchive(entryRenameFilter15);
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(archive16);
    }

    @Test
    public void test13478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13478");
        java.lang.String str1 = java.net.URLConnection.getDefaultRequestProperty("[/archive:///archive:0hi!://:100]:10");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test13479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13479");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection4 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive0.getNestedArchives(entryFilter5);
        java.util.jar.Manifest manifest7 = null;
        explodedArchive0.manifest = manifest7;
        explodedArchive0.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap11 = explodedArchive0.entries;
        java.io.File file12 = null;
        java.io.File file13 = null;
        java.io.File file14 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive15 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file16 = explodedArchive15.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter17 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList18 = explodedArchive15.getNestedArchives(entryFilter17);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive15.getNestedArchives(entryFilter19);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap21 = explodedArchive15.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive22 = new org.springframework.boot.loader.archive.ExplodedArchive(file14, asciiBytesMap21);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = explodedArchive22.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive24 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap23);
        explodedArchive24.filtered = true;
        java.io.File file27 = null;
        explodedArchive24.root = file27;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection29 = explodedArchive24.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap30 = explodedArchive24.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive31.entries;
        explodedArchive0.entries = asciiBytesMap32;
        boolean boolean34 = explodedArchive0.filtered;
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(entryCollection4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertNotNull(asciiBytesMap11);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(archiveList18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNotNull(asciiBytesMap21);
        org.junit.Assert.assertNotNull(asciiBytesMap23);
        org.junit.Assert.assertNotNull(entryCollection29);
        org.junit.Assert.assertNotNull(asciiBytesMap30);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test13480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13480");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        java.lang.String str17 = uRL16.getAuthority();
        java.lang.String str18 = uRL16.getAuthority();
        java.lang.String str19 = uRL16.getPath();
        int int20 = uRL16.getPort();
        java.lang.String str21 = uRL16.getAuthority();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URI uRI22 = uRL16.toURI();
            org.junit.Assert.fail("Expected exception of type java.net.URISyntaxException; message: Illegal character in scheme name at index 2: hi!://:100/hi!");
        } catch (java.net.URISyntaxException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + ":100" + "'", str17, ":100");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + ":100" + "'", str18, ":100");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + ":100" + "'", str21, ":100");
    }

    @Test
    public void test13481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13481");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes5 = fileEntry4.getName();
        java.io.File file6 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes7 = null;
        fileEntry4.name = asciiBytes7;
        java.io.File file9 = fileEntry4.getFile();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes10 = fileEntry4.name;
        java.io.File file11 = fileEntry4.getFile();
        java.io.File file12 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes13 = null;
        fileEntry4.name = asciiBytes13;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = fileEntry4.isDirectory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(asciiBytes5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNull(asciiBytes10);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test13482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13482");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry2 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest3 = explodedArchive0.getManifest();
        java.util.jar.Manifest manifest4 = explodedArchive0.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive5 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file6 = explodedArchive5.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter7 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList8 = explodedArchive5.getNestedArchives(entryFilter7);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection9 = explodedArchive5.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive5.getNestedArchives(entryFilter10);
        java.util.jar.Manifest manifest12 = null;
        explodedArchive5.manifest = manifest12;
        explodedArchive5.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap16 = explodedArchive5.entries;
        explodedArchive0.entries = asciiBytesMap16;
        boolean boolean18 = explodedArchive0.filtered;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap19 = explodedArchive0.entries;
        explodedArchive0.filtered = false;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNull(manifest3);
        org.junit.Assert.assertNull(manifest4);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(archiveList8);
        org.junit.Assert.assertNotNull(entryCollection9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNotNull(asciiBytesMap16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(asciiBytesMap19);
    }

    @Test
    public void test13483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13483");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter5 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList6 = explodedArchive1.getNestedArchives(entryFilter5);
        java.lang.String str7 = explodedArchive1.toString();
        java.util.jar.Manifest manifest8 = explodedArchive1.manifest;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap9 = explodedArchive1.entries;
        java.io.File file10 = null;
        explodedArchive1.root = file10;
        java.io.File file12 = null;
        java.io.File file13 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive14 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file15 = explodedArchive14.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter16 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList17 = explodedArchive14.getNestedArchives(entryFilter16);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive14.getNestedArchives(entryFilter18);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap20 = explodedArchive14.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive(file13, asciiBytesMap20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive21.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file12, asciiBytesMap22);
        explodedArchive23.filtered = true;
        java.util.jar.Manifest manifest26 = explodedArchive23.getManifest();
        java.util.jar.Manifest manifest27 = explodedArchive23.manifest;
        java.io.File file28 = null;
        explodedArchive23.root = file28;
        java.io.File file30 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive31 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file32 = explodedArchive31.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter33 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList34 = explodedArchive31.getNestedArchives(entryFilter33);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter35 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList36 = explodedArchive31.getNestedArchives(entryFilter35);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap37 = explodedArchive31.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive38 = new org.springframework.boot.loader.archive.ExplodedArchive(file30, asciiBytesMap37);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive38.entries;
        explodedArchive23.entries = asciiBytesMap39;
        explodedArchive1.entries = asciiBytesMap39;
        boolean boolean42 = explodedArchive1.filtered;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive1.getEntries();
        java.util.jar.Manifest manifest44 = explodedArchive1.getManifest();
        boolean boolean45 = explodedArchive1.filtered;
        java.util.jar.Manifest manifest46 = explodedArchive1.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file48 = explodedArchive47.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter49 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList50 = explodedArchive47.getNestedArchives(entryFilter49);
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection51 = explodedArchive47.getEntries();
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter52 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList53 = explodedArchive47.getNestedArchives(entryFilter52);
        java.util.jar.Manifest manifest54 = null;
        explodedArchive47.manifest = manifest54;
        explodedArchive47.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap58 = explodedArchive47.entries;
        java.io.File file59 = null;
        java.io.File file60 = null;
        java.io.File file61 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file63 = explodedArchive62.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter64 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList65 = explodedArchive62.getNestedArchives(entryFilter64);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter66 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList67 = explodedArchive62.getNestedArchives(entryFilter66);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap68 = explodedArchive62.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive69 = new org.springframework.boot.loader.archive.ExplodedArchive(file61, asciiBytesMap68);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap70 = explodedArchive69.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive71 = new org.springframework.boot.loader.archive.ExplodedArchive(file60, asciiBytesMap70);
        explodedArchive71.filtered = true;
        java.io.File file74 = null;
        explodedArchive71.root = file74;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection76 = explodedArchive71.getEntries();
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap77 = explodedArchive71.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive78 = new org.springframework.boot.loader.archive.ExplodedArchive(file59, asciiBytesMap77);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap79 = explodedArchive78.entries;
        explodedArchive47.entries = asciiBytesMap79;
        explodedArchive1.entries = asciiBytesMap79;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive82 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap79);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str83 = explodedArchive82.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNotNull(archiveList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertNull(manifest8);
        org.junit.Assert.assertNotNull(asciiBytesMap9);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(archiveList17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(asciiBytesMap20);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNull(manifest26);
        org.junit.Assert.assertNull(manifest27);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(archiveList34);
        org.junit.Assert.assertNotNull(archiveList36);
        org.junit.Assert.assertNotNull(asciiBytesMap37);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertNull(manifest44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(manifest46);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(archiveList50);
        org.junit.Assert.assertNotNull(entryCollection51);
        org.junit.Assert.assertNotNull(archiveList53);
        org.junit.Assert.assertNotNull(asciiBytesMap58);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(archiveList65);
        org.junit.Assert.assertNotNull(archiveList67);
        org.junit.Assert.assertNotNull(asciiBytesMap68);
        org.junit.Assert.assertNotNull(asciiBytesMap70);
        org.junit.Assert.assertNotNull(entryCollection76);
        org.junit.Assert.assertNotNull(asciiBytesMap77);
        org.junit.Assert.assertNotNull(asciiBytesMap79);
    }

    @Test
    public void test13484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13484");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler7 = explodedArchive0.new FilteredURLStreamHandler();
        java.lang.String str8 = explodedArchive0.toString();
        java.io.File file9 = explodedArchive0.root;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "archive" + "'", str8, "archive");
        org.junit.Assert.assertNull(file9);
    }

    @Test
    public void test13485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13485");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap6 = explodedArchive0.entries;
        java.lang.String str7 = explodedArchive0.toString();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file9 = explodedArchive8.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter10 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList11 = explodedArchive8.getNestedArchives(entryFilter10);
        explodedArchive8.filtered = false;
        java.util.jar.Manifest manifest14 = explodedArchive8.manifest;
        java.io.File file15 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file17 = explodedArchive16.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter18 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList19 = explodedArchive16.getNestedArchives(entryFilter18);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive16.getNestedArchives(entryFilter20);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap22 = explodedArchive16.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive(file15, asciiBytesMap22);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap24 = explodedArchive23.entries;
        explodedArchive8.entries = asciiBytesMap24;
        explodedArchive0.entries = asciiBytesMap24;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection27 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry28 = explodedArchive0.new FileEntry();
        java.util.jar.Manifest manifest29 = null;
        explodedArchive0.manifest = manifest29;
        java.io.File file31 = explodedArchive0.root;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL32 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(asciiBytesMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "archive" + "'", str7, "archive");
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(archiveList11);
        org.junit.Assert.assertNull(manifest14);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(archiveList19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNotNull(asciiBytesMap22);
        org.junit.Assert.assertNotNull(asciiBytesMap24);
        org.junit.Assert.assertNotNull(entryCollection27);
        org.junit.Assert.assertNull(file31);
    }

    @Test
    public void test13486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13486");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive12 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str13 = explodedArchive12.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection14 = explodedArchive12.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler15 = explodedArchive12.new FilteredURLStreamHandler();
        java.net.URL uRL16 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler15);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive21 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str22 = explodedArchive21.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection23 = explodedArchive21.getEntries();
        java.util.jar.Manifest manifest24 = explodedArchive21.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler25 = explodedArchive21.new FilteredURLStreamHandler();
        java.net.URL uRL26 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler25);
        java.lang.String str27 = uRL26.getFile();
        int int28 = uRL26.getDefaultPort();
        java.lang.String str29 = uRL26.getRef();
        boolean boolean30 = uRL9.sameFile(uRL26);
        java.lang.String str31 = uRL9.getHost();
        int int32 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive37 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str38 = explodedArchive37.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection39 = explodedArchive37.getEntries();
        java.util.jar.Manifest manifest40 = explodedArchive37.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler41 = explodedArchive37.new FilteredURLStreamHandler();
        java.net.URL uRL42 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler41);
        java.lang.String str43 = uRL42.getQuery();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str54 = explodedArchive53.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection55 = explodedArchive53.getEntries();
        java.util.jar.Manifest manifest56 = explodedArchive53.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler57 = explodedArchive53.new FilteredURLStreamHandler();
        java.net.URL uRL58 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler57);
        java.lang.String str59 = uRL58.getQuery();
        java.lang.String str60 = uRL58.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive66 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str67 = explodedArchive66.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection68 = explodedArchive66.getEntries();
        java.util.jar.Manifest manifest69 = explodedArchive66.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler70 = explodedArchive66.new FilteredURLStreamHandler();
        java.net.URL uRL71 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler70);
        java.net.URL uRL72 = new java.net.URL(uRL58, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler70);
        java.net.URL uRL73 = new java.net.URL("archive", "", 10, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler70);
        java.net.URL uRL74 = new java.net.URL(uRL42, "", (java.net.URLStreamHandler) filteredURLStreamHandler70);
        java.lang.String str75 = uRL74.getProtocol();
        java.lang.String str76 = uRL74.getFile();
        boolean boolean77 = uRL9.sameFile(uRL74);
        java.lang.String str78 = uRL74.getProtocol();
        java.lang.String str79 = uRL74.toExternalForm();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "archive" + "'", str13, "archive");
        org.junit.Assert.assertNotNull(entryCollection14);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "archive" + "'", str22, "archive");
        org.junit.Assert.assertNotNull(entryCollection23);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertEquals(uRL26.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "archive" + "'", str38, "archive");
        org.junit.Assert.assertNotNull(entryCollection39);
        org.junit.Assert.assertNull(manifest40);
        org.junit.Assert.assertEquals(uRL42.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "archive" + "'", str54, "archive");
        org.junit.Assert.assertNotNull(entryCollection55);
        org.junit.Assert.assertNull(manifest56);
        org.junit.Assert.assertEquals(uRL58.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "archive" + "'", str67, "archive");
        org.junit.Assert.assertNotNull(entryCollection68);
        org.junit.Assert.assertNull(manifest69);
        org.junit.Assert.assertEquals(uRL71.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL72.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL73.toString(), "archive://:10archive");
        org.junit.Assert.assertEquals(uRL74.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!://:100" + "'", str79, "hi!://:100");
    }

    @Test
    public void test13487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13487");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("/:52", "/hi!://:100/hi!://:100/hi!://hi!", "hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1://[://[archive://:10archive]:100archive://:10archive]:100:35hi!://:100/:100");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: /:52");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13488");
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL3 = new java.net.URL("hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10", "hi!://:100/:100://[hi!://:100/:100]:0/archive://[hi!://:100/hi!]:1/hi!", "[archive://:10:100]");
            org.junit.Assert.fail("Expected exception of type java.net.MalformedURLException; message: unknown protocol: hi!://:100/hi!://:100/archive://[hi!://:100/:100]:10");
        } catch (java.net.MalformedURLException e) {
        // Expected exception.
        }
    }

    @Test
    public void test13489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13489");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive0.getNestedArchives(entryFilter6);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest9 = explodedArchive0.manifest;
        java.util.jar.Manifest manifest10 = explodedArchive0.manifest;
        java.io.File file11 = explodedArchive0.root;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = explodedArchive0.getMainClass();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: No 'Start-Class' manifest entry specified in archive");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNull(manifest9);
        org.junit.Assert.assertNull(manifest10);
        org.junit.Assert.assertNull(file11);
    }

    @Test
    public void test13490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13490");
        java.io.File file0 = null;
        java.io.File file1 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive2 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file3 = explodedArchive2.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive2.getNestedArchives(entryFilter4);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter6 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList7 = explodedArchive2.getNestedArchives(entryFilter6);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap8 = explodedArchive2.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive(file1, asciiBytesMap8);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap10 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive11 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap10);
        explodedArchive11.filtered = true;
        java.util.jar.Manifest manifest14 = explodedArchive11.getManifest();
        java.util.jar.Manifest manifest15 = explodedArchive11.manifest;
        java.io.File file16 = null;
        explodedArchive11.root = file16;
        java.io.File file18 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file20 = explodedArchive19.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive19.getNestedArchives(entryFilter21);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter23 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList24 = explodedArchive19.getNestedArchives(entryFilter23);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap25 = explodedArchive19.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive(file18, asciiBytesMap25);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap27 = explodedArchive26.entries;
        explodedArchive11.entries = asciiBytesMap27;
        java.io.File file29 = null;
        explodedArchive11.root = file29;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection31 = explodedArchive11.getEntries();
        java.util.jar.Manifest manifest32 = explodedArchive11.getManifest();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry33 = explodedArchive11.new FileEntry();
        org.springframework.boot.loader.util.AsciiBytes asciiBytes34 = fileEntry33.name;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes35 = fileEntry33.getName();
        org.junit.Assert.assertNull(file3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList7);
        org.junit.Assert.assertNotNull(asciiBytesMap8);
        org.junit.Assert.assertNotNull(asciiBytesMap10);
        org.junit.Assert.assertNull(manifest14);
        org.junit.Assert.assertNull(manifest15);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(archiveList24);
        org.junit.Assert.assertNotNull(asciiBytesMap25);
        org.junit.Assert.assertNotNull(asciiBytesMap27);
        org.junit.Assert.assertNotNull(entryCollection31);
        org.junit.Assert.assertNull(manifest32);
        org.junit.Assert.assertNull(asciiBytes34);
        org.junit.Assert.assertNull(asciiBytes35);
    }

    @Test
    public void test13491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13491");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry4 = explodedArchive0.new FileEntry();
        java.io.File file5 = fileEntry4.file;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes6 = null;
        fileEntry4.name = asciiBytes6;
        org.springframework.boot.loader.util.AsciiBytes asciiBytes8 = null;
        fileEntry4.name = asciiBytes8;
        java.io.File file10 = fileEntry4.getFile();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file10);
    }

    @Test
    public void test13492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13492");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getHost();
        java.lang.String str11 = uRL9.toExternalForm();
        java.lang.String str12 = uRL9.getAuthority();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!://:100" + "'", str11, "hi!://:100");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + ":100" + "'", str12, ":100");
    }

    @Test
    public void test13493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13493");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str1 = explodedArchive0.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection2 = explodedArchive0.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler3 = explodedArchive0.new FilteredURLStreamHandler();
        java.util.jar.Manifest manifest4 = null;
        explodedArchive0.manifest = manifest4;
        java.lang.String str6 = explodedArchive0.toString();
        java.io.File file7 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive8 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str9 = explodedArchive8.toString();
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry10 = explodedArchive8.new FileEntry();
        java.util.jar.Manifest manifest11 = explodedArchive8.getManifest();
        java.util.jar.Manifest manifest12 = explodedArchive8.manifest;
        java.io.File file13 = null;
        explodedArchive8.root = file13;
        explodedArchive8.filtered = true;
        java.io.File file17 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive18 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file19 = explodedArchive18.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive18.getNestedArchives(entryFilter20);
        explodedArchive18.filtered = false;
        java.util.jar.Manifest manifest24 = explodedArchive18.manifest;
        java.io.File file25 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive26 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file27 = explodedArchive26.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter28 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList29 = explodedArchive26.getNestedArchives(entryFilter28);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive26.getNestedArchives(entryFilter30);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap32 = explodedArchive26.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive33 = new org.springframework.boot.loader.archive.ExplodedArchive(file25, asciiBytesMap32);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap34 = explodedArchive33.entries;
        explodedArchive18.entries = asciiBytesMap34;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive36 = new org.springframework.boot.loader.archive.ExplodedArchive(file17, asciiBytesMap34);
        java.util.jar.Manifest manifest37 = null;
        explodedArchive36.manifest = manifest37;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap39 = explodedArchive36.entries;
        explodedArchive8.entries = asciiBytesMap39;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive(file7, asciiBytesMap39);
        explodedArchive0.entries = asciiBytesMap39;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive0.getEntries();
        java.io.File file44 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file46 = explodedArchive45.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter47 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList48 = explodedArchive45.getNestedArchives(entryFilter47);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter49 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList50 = explodedArchive45.getNestedArchives(entryFilter49);
        explodedArchive45.filtered = false;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap53 = explodedArchive45.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive(file44, asciiBytesMap53);
        explodedArchive0.entries = asciiBytesMap53;
        org.springframework.boot.loader.archive.Archive.EntryRenameFilter entryRenameFilter56 = null;
        org.springframework.boot.loader.archive.Archive archive57 = explodedArchive0.getFilteredArchive(entryRenameFilter56);
        java.io.File file58 = null;
        explodedArchive0.root = file58;
        java.util.jar.Manifest manifest60 = explodedArchive0.manifest;
        // The following exception was thrown during execution in test generation
        try {
            java.net.URL uRL61 = explodedArchive0.getUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "archive" + "'", str1, "archive");
        org.junit.Assert.assertNotNull(entryCollection2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "archive" + "'", str6, "archive");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "archive" + "'", str9, "archive");
        org.junit.Assert.assertNull(manifest11);
        org.junit.Assert.assertNull(manifest12);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNull(manifest24);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(archiveList29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNotNull(asciiBytesMap32);
        org.junit.Assert.assertNotNull(asciiBytesMap34);
        org.junit.Assert.assertNotNull(asciiBytesMap39);
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertNotNull(archiveList48);
        org.junit.Assert.assertNotNull(archiveList50);
        org.junit.Assert.assertNotNull(asciiBytesMap53);
        org.junit.Assert.assertNotNull(archive57);
        org.junit.Assert.assertNull(manifest60);
    }

    @Test
    public void test13494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13494");
        java.io.File file8 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap13 = null;
        explodedArchive9.entries = asciiBytesMap13;
        java.io.File file15 = explodedArchive9.root;
        java.io.File file16 = explodedArchive9.root;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file18 = explodedArchive17.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter19 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList20 = explodedArchive17.getNestedArchives(entryFilter19);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter21 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList22 = explodedArchive17.getNestedArchives(entryFilter21);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap23 = explodedArchive17.entries;
        explodedArchive9.entries = asciiBytesMap23;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive25 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap23);
        java.util.jar.Manifest manifest26 = null;
        explodedArchive25.manifest = manifest26;
        explodedArchive25.filtered = true;
        java.io.File file30 = null;
        explodedArchive25.root = file30;
        java.util.jar.Manifest manifest32 = null;
        explodedArchive25.manifest = manifest32;
        java.util.jar.Manifest manifest34 = explodedArchive25.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler35 = explodedArchive25.new FilteredURLStreamHandler();
        java.net.URL uRL36 = new java.net.URL("hi!://:100", "/hi!:1", (int) (short) 1, "[://[archive://:10archive]:100archive://:10archive]", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        java.net.URL uRL37 = new java.net.URL("/[/hi!://:100/archive]://[:100]:52:100/:100", "archive://:10:100://:32/archive://[hi!://:100/hi!]:1/hi!", (int) (byte) 100, "/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1", (java.net.URLStreamHandler) filteredURLStreamHandler35);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str43 = explodedArchive42.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection44 = explodedArchive42.getEntries();
        java.util.jar.Manifest manifest45 = explodedArchive42.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler46 = explodedArchive42.new FilteredURLStreamHandler();
        java.net.URL uRL47 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler46);
        java.lang.String str48 = uRL47.getPath();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str55 = explodedArchive54.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection56 = explodedArchive54.getEntries();
        java.util.jar.Manifest manifest57 = explodedArchive54.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler58 = explodedArchive54.new FilteredURLStreamHandler();
        java.net.URL uRL59 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler58);
        java.lang.String str60 = uRL59.getHost();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str63 = explodedArchive62.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection64 = explodedArchive62.getEntries();
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler65 = explodedArchive62.new FilteredURLStreamHandler();
        java.net.URL uRL66 = new java.net.URL(uRL59, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.net.URL uRL67 = new java.net.URL(uRL47, ":100", (java.net.URLStreamHandler) filteredURLStreamHandler65);
        java.lang.String str68 = uRL47.getProtocol();
        int int69 = uRL47.getPort();
        java.lang.String str70 = uRL47.getUserInfo();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive75 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str76 = explodedArchive75.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection77 = explodedArchive75.getEntries();
        java.util.jar.Manifest manifest78 = explodedArchive75.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler79 = explodedArchive75.new FilteredURLStreamHandler();
        java.net.URL uRL80 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler79);
        java.lang.String str81 = uRL80.getQuery();
        java.lang.String str82 = uRL80.getRef();
        int int83 = uRL80.getPort();
        java.lang.String str84 = uRL80.getProtocol();
        java.lang.String str85 = uRL80.getPath();
        java.lang.String str86 = uRL80.getAuthority();
        java.lang.String str87 = uRL80.getRef();
        int int88 = uRL80.getPort();
        java.lang.String str89 = uRL80.getAuthority();
        boolean boolean90 = uRL47.sameFile(uRL80);
        java.lang.String str91 = uRL80.getProtocol();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection92 = filteredURLStreamHandler35.openConnection(uRL80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(archiveList20);
        org.junit.Assert.assertNotNull(archiveList22);
        org.junit.Assert.assertNotNull(asciiBytesMap23);
        org.junit.Assert.assertNull(manifest34);
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100://[/hi!:1]:1[://[archive://:10archive]:100archive://:10archive]");
        org.junit.Assert.assertEquals(uRL37.toString(), "/[/hi!://:100/archive]://[:100]:52:100/:100://[archive://:10:100://:32/archive://[hi!://:100/hi!]:1/hi!]:100/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "archive" + "'", str43, "archive");
        org.junit.Assert.assertNotNull(entryCollection44);
        org.junit.Assert.assertNull(manifest45);
        org.junit.Assert.assertEquals(uRL47.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "archive" + "'", str55, "archive");
        org.junit.Assert.assertNotNull(entryCollection56);
        org.junit.Assert.assertNull(manifest57);
        org.junit.Assert.assertEquals(uRL59.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "archive" + "'", str63, "archive");
        org.junit.Assert.assertNotNull(entryCollection64);
        org.junit.Assert.assertEquals(uRL66.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL67.toString(), "hi!://:100/:100");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 100 + "'", int69 == 100);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "archive" + "'", str76, "archive");
        org.junit.Assert.assertNotNull(entryCollection77);
        org.junit.Assert.assertNull(manifest78);
        org.junit.Assert.assertEquals(uRL80.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 100 + "'", int83 == 100);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!" + "'", str84, "hi!");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + ":100" + "'", str86, ":100");
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 100 + "'", int88 == 100);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + ":100" + "'", str89, ":100");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "hi!" + "'", str91, "hi!");
    }

    @Test
    public void test13495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13495");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        java.lang.String str12 = uRL9.getFile();
        java.lang.String str13 = uRL9.getProtocol();
        int int14 = uRL9.getPort();
        java.net.URL uRL16 = new java.net.URL(uRL9, "[hi!://:100/hi!]:1://[archive://:10archive]:100hi!://:100/hi!://hi!:1hi!");
        java.lang.Object obj17 = null;
        boolean boolean18 = uRL16.equals(obj17);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertEquals(uRL16.toString(), "hi!://:100/[hi!://:100/hi!]:1://[archive://:10archive]:100hi!://:100/hi!://hi!:1hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test13496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13496");
        java.lang.String str1 = java.net.URLConnection.guessContentTypeFromName("/hi!://:100/hi!://:100/hi!://[://[archive://:10archive]:100archive://:10archive]:0hi!:1");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test13497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13497");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive0 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file1 = explodedArchive0.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter2 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList3 = explodedArchive0.getNestedArchives(entryFilter2);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter4 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList5 = explodedArchive0.getNestedArchives(entryFilter4);
        explodedArchive0.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter8 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList9 = explodedArchive0.getNestedArchives(entryFilter8);
        java.io.File file10 = null;
        explodedArchive0.root = file10;
        org.springframework.boot.loader.archive.ExplodedArchive.FileEntry fileEntry12 = explodedArchive0.new FileEntry();
        java.io.File file13 = fileEntry12.getFile();
        org.junit.Assert.assertNull(file1);
        org.junit.Assert.assertNotNull(archiveList3);
        org.junit.Assert.assertNotNull(archiveList5);
        org.junit.Assert.assertNotNull(archiveList9);
        org.junit.Assert.assertNull(file13);
    }

    @Test
    public void test13498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13498");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getQuery();
        java.lang.String str11 = uRL9.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.net.URL uRL23 = new java.net.URL(uRL9, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive28 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str29 = explodedArchive28.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection30 = explodedArchive28.getEntries();
        java.util.jar.Manifest manifest31 = explodedArchive28.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler32 = explodedArchive28.new FilteredURLStreamHandler();
        java.net.URL uRL33 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler32);
        java.lang.String str34 = uRL33.getFile();
        boolean boolean35 = uRL23.sameFile(uRL33);
        int int36 = uRL33.getPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive41 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str42 = explodedArchive41.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection43 = explodedArchive41.getEntries();
        java.util.jar.Manifest manifest44 = explodedArchive41.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler45 = explodedArchive41.new FilteredURLStreamHandler();
        java.net.URL uRL46 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler45);
        java.lang.String str47 = uRL46.getQuery();
        java.lang.String str48 = uRL46.getRef();
        java.lang.String str49 = uRL46.getRef();
        java.net.URL uRL51 = new java.net.URL(uRL46, "hi!");
        boolean boolean52 = uRL33.sameFile(uRL51);
        java.lang.String str53 = uRL51.getAuthority();
        java.lang.String str54 = uRL51.getHost();
        java.lang.String str55 = uRL51.getPath();
        java.lang.String str56 = uRL51.getHost();
        java.lang.String str57 = uRL51.getFile();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL23.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "archive" + "'", str29, "archive");
        org.junit.Assert.assertNotNull(entryCollection30);
        org.junit.Assert.assertNull(manifest31);
        org.junit.Assert.assertEquals(uRL33.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "archive" + "'", str42, "archive");
        org.junit.Assert.assertNotNull(entryCollection43);
        org.junit.Assert.assertNull(manifest44);
        org.junit.Assert.assertEquals(uRL46.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals(uRL51.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + ":100" + "'", str53, ":100");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "/hi!" + "'", str55, "/hi!");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "/hi!" + "'", str57, "/hi!");
    }

    @Test
    public void test13499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13499");
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive4 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str5 = explodedArchive4.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection6 = explodedArchive4.getEntries();
        java.util.jar.Manifest manifest7 = explodedArchive4.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler8 = explodedArchive4.new FilteredURLStreamHandler();
        java.net.URL uRL9 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler8);
        java.lang.String str10 = uRL9.getFile();
        int int11 = uRL9.getDefaultPort();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive17 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str18 = explodedArchive17.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection19 = explodedArchive17.getEntries();
        java.util.jar.Manifest manifest20 = explodedArchive17.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler21 = explodedArchive17.new FilteredURLStreamHandler();
        java.net.URL uRL22 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler21);
        java.lang.String str23 = uRL22.getQuery();
        java.lang.String str24 = uRL22.getRef();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive30 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str31 = explodedArchive30.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection32 = explodedArchive30.getEntries();
        java.util.jar.Manifest manifest33 = explodedArchive30.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler34 = explodedArchive30.new FilteredURLStreamHandler();
        java.net.URL uRL35 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL36 = new java.net.URL(uRL22, "hi!", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.net.URL uRL37 = new java.net.URL(uRL9, "archive", (java.net.URLStreamHandler) filteredURLStreamHandler34);
        java.lang.String str38 = uRL37.getFile();
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive40 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file41 = explodedArchive40.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter42 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList43 = explodedArchive40.getNestedArchives(entryFilter42);
        explodedArchive40.filtered = false;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter46 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList47 = explodedArchive40.getNestedArchives(entryFilter46);
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler48 = explodedArchive40.new FilteredURLStreamHandler();
        java.net.URL uRL49 = new java.net.URL(uRL37, "", (java.net.URLStreamHandler) filteredURLStreamHandler48);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive54 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.lang.String str55 = explodedArchive54.toString();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection56 = explodedArchive54.getEntries();
        java.util.jar.Manifest manifest57 = explodedArchive54.manifest;
        org.springframework.boot.loader.archive.ExplodedArchive.FilteredURLStreamHandler filteredURLStreamHandler58 = explodedArchive54.new FilteredURLStreamHandler();
        java.net.URL uRL59 = new java.net.URL("hi!", "", 100, "", (java.net.URLStreamHandler) filteredURLStreamHandler58);
        java.lang.String str60 = uRL59.getHost();
        java.lang.String str61 = uRL59.getUserInfo();
        java.lang.String str62 = uRL59.getRef();
        boolean boolean63 = uRL37.sameFile(uRL59);
        java.lang.String str64 = uRL59.getQuery();
        java.lang.String str65 = uRL59.getFile();
        // The following exception was thrown during execution in test generation
        try {
            java.net.URLConnection uRLConnection66 = uRL59.openConnection();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "archive" + "'", str5, "archive");
        org.junit.Assert.assertNotNull(entryCollection6);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertEquals(uRL9.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "archive" + "'", str18, "archive");
        org.junit.Assert.assertNotNull(entryCollection19);
        org.junit.Assert.assertNull(manifest20);
        org.junit.Assert.assertEquals(uRL22.toString(), "hi!://:100");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "archive" + "'", str31, "archive");
        org.junit.Assert.assertNotNull(entryCollection32);
        org.junit.Assert.assertNull(manifest33);
        org.junit.Assert.assertEquals(uRL35.toString(), "hi!://:100");
        org.junit.Assert.assertEquals(uRL36.toString(), "hi!://:100/hi!");
        org.junit.Assert.assertEquals(uRL37.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/archive" + "'", str38, "/archive");
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(archiveList43);
        org.junit.Assert.assertNotNull(archiveList47);
        org.junit.Assert.assertEquals(uRL49.toString(), "hi!://:100/archive");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "archive" + "'", str55, "archive");
        org.junit.Assert.assertNotNull(entryCollection56);
        org.junit.Assert.assertNull(manifest57);
        org.junit.Assert.assertEquals(uRL59.toString(), "hi!://:100");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
    }

    @Test
    public void test13500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13500");
        java.io.File file0 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive1 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file2 = explodedArchive1.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter3 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList4 = explodedArchive1.getNestedArchives(entryFilter3);
        explodedArchive1.filtered = false;
        java.util.jar.Manifest manifest7 = explodedArchive1.manifest;
        java.io.File file8 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive9 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file10 = explodedArchive9.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter11 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList12 = explodedArchive9.getNestedArchives(entryFilter11);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter13 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList14 = explodedArchive9.getNestedArchives(entryFilter13);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap15 = explodedArchive9.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive16 = new org.springframework.boot.loader.archive.ExplodedArchive(file8, asciiBytesMap15);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap17 = explodedArchive16.entries;
        explodedArchive1.entries = asciiBytesMap17;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive19 = new org.springframework.boot.loader.archive.ExplodedArchive(file0, asciiBytesMap17);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter20 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList21 = explodedArchive19.getNestedArchives(entryFilter20);
        java.io.File file22 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive23 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file24 = explodedArchive23.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter25 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList26 = explodedArchive23.getNestedArchives(entryFilter25);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter27 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList28 = explodedArchive23.getNestedArchives(entryFilter27);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap29 = explodedArchive23.entries;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter30 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList31 = explodedArchive23.getNestedArchives(entryFilter30);
        java.io.File file32 = null;
        java.io.File file33 = null;
        java.io.File file34 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive35 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file36 = explodedArchive35.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter37 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList38 = explodedArchive35.getNestedArchives(entryFilter37);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter39 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList40 = explodedArchive35.getNestedArchives(entryFilter39);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap41 = explodedArchive35.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive42 = new org.springframework.boot.loader.archive.ExplodedArchive(file34, asciiBytesMap41);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap43 = explodedArchive42.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive44 = new org.springframework.boot.loader.archive.ExplodedArchive(file33, asciiBytesMap43);
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive45 = new org.springframework.boot.loader.archive.ExplodedArchive(file32, asciiBytesMap43);
        explodedArchive23.entries = asciiBytesMap43;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive47 = new org.springframework.boot.loader.archive.ExplodedArchive(file22, asciiBytesMap43);
        java.util.jar.Manifest manifest48 = null;
        explodedArchive47.manifest = manifest48;
        java.io.File file50 = explodedArchive47.root;
        java.io.File file51 = null;
        java.io.File file52 = null;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive53 = new org.springframework.boot.loader.archive.ExplodedArchive();
        java.io.File file54 = explodedArchive53.root;
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter55 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList56 = explodedArchive53.getNestedArchives(entryFilter55);
        org.springframework.boot.loader.archive.Archive.EntryFilter entryFilter57 = null;
        java.util.List<org.springframework.boot.loader.archive.Archive> archiveList58 = explodedArchive53.getNestedArchives(entryFilter57);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap59 = explodedArchive53.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive60 = new org.springframework.boot.loader.archive.ExplodedArchive(file52, asciiBytesMap59);
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap61 = explodedArchive60.entries;
        org.springframework.boot.loader.archive.ExplodedArchive explodedArchive62 = new org.springframework.boot.loader.archive.ExplodedArchive(file51, asciiBytesMap61);
        explodedArchive62.filtered = true;
        java.io.File file65 = null;
        explodedArchive62.root = file65;
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection67 = explodedArchive62.getEntries();
        java.util.Collection<org.springframework.boot.loader.archive.Archive.Entry> entryCollection68 = explodedArchive62.getEntries();
        java.util.jar.Manifest manifest69 = null;
        explodedArchive62.manifest = manifest69;
        java.io.File file71 = explodedArchive62.root;
        java.util.Map<org.springframework.boot.loader.util.AsciiBytes, org.springframework.boot.loader.archive.Archive.Entry> asciiBytesMap72 = explodedArchive62.entries;
        explodedArchive47.entries = asciiBytesMap72;
        explodedArchive19.entries = asciiBytesMap72;
        explodedArchive19.filtered = true;
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(archiveList4);
        org.junit.Assert.assertNull(manifest7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(archiveList12);
        org.junit.Assert.assertNotNull(archiveList14);
        org.junit.Assert.assertNotNull(asciiBytesMap15);
        org.junit.Assert.assertNotNull(asciiBytesMap17);
        org.junit.Assert.assertNotNull(archiveList21);
        org.junit.Assert.assertNull(file24);
        org.junit.Assert.assertNotNull(archiveList26);
        org.junit.Assert.assertNotNull(archiveList28);
        org.junit.Assert.assertNotNull(asciiBytesMap29);
        org.junit.Assert.assertNotNull(archiveList31);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(archiveList38);
        org.junit.Assert.assertNotNull(archiveList40);
        org.junit.Assert.assertNotNull(asciiBytesMap41);
        org.junit.Assert.assertNotNull(asciiBytesMap43);
        org.junit.Assert.assertNull(file50);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(archiveList56);
        org.junit.Assert.assertNotNull(archiveList58);
        org.junit.Assert.assertNotNull(asciiBytesMap59);
        org.junit.Assert.assertNotNull(asciiBytesMap61);
        org.junit.Assert.assertNotNull(entryCollection67);
        org.junit.Assert.assertNotNull(entryCollection68);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNotNull(asciiBytesMap72);
    }
}

